{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./jslib/src/abstractions/i18n.service.ts","webpack:///./jslib/src/abstractions/api.service.ts","webpack:///./jslib/src/abstractions/platformUtils.service.ts","webpack:///./jslib/src/abstractions/user.service.ts","webpack:///./jslib/src/angular/pipes/i18n.pipe.ts","webpack:///./jslib/src/abstractions/messaging.service.ts","webpack:///./jslib/src/angular/directives/api-action.directive.ts","webpack:///./jslib/src/angular/directives/a11y-title.directive.ts","webpack:///./jslib/src/abstractions/cipher.service.ts","webpack:///./jslib/src/abstractions/crypto.service.ts","webpack:///./jslib/src/importers/baseImporter.ts","webpack:///./jslib/src/models/domain/importResult.ts","webpack:///./jslib/src/angular/components/callout.component.ts","webpack:///./jslib/src/angular/components/callout.component.html","webpack:///./jslib/src/models/response/baseResponse.ts","webpack:///./jslib/src/enums/cipherType.ts","webpack:///./jslib/src/misc/utils.ts","webpack:///./jslib/src/abstractions/passwordGeneration.service.ts","webpack:///./jslib/src/abstractions/state.service.ts","webpack:///./jslib/src/angular/directives/stop-click.directive.ts","webpack:///./jslib/src/abstractions/collection.service.ts","webpack:///./jslib/src/abstractions/storage.service.ts","webpack:///./jslib/src/angular/directives/input-verbatim.directive.ts","webpack:///./jslib/src/abstractions/folder.service.ts","webpack:///./jslib/src/angular/directives/stop-prop.directive.ts","webpack:///./jslib/src/abstractions/auth.service.ts","webpack:///./jslib/src/abstractions/sync.service.ts","webpack:///./jslib/src/services/constants.service.ts","webpack:///./jslib/src/models/request/passwordVerificationRequest.ts","webpack:///./jslib/src/abstractions/event.service.ts","webpack:///./jslib/src/angular/directives/autofocus.directive.ts","webpack:///./jslib/src/models/view/cardView.ts","webpack:///./jslib/src/abstractions/environment.service.ts","webpack:///./jslib/src/abstractions/policy.service.ts","webpack:///./jslib/src/abstractions/search.service.ts","webpack:///./jslib/src/models/view/secureNoteView.ts","webpack:///./jslib/src/models/domain/domainBase.ts","webpack:///./src/app/modal.component.ts","webpack:///./jslib/src/abstractions/token.service.ts","webpack:///./jslib/src/abstractions/audit.service.ts","webpack:///./jslib/src/enums/secureNoteType.ts","webpack:///./jslib/src/angular/components/icon.component.ts","webpack:///./jslib/src/angular/components/icon.component.html","webpack:///./jslib/src/abstractions/cryptoFunction.service.ts","webpack:///./jslib/src/abstractions/vaultTimeout.service.ts","webpack:///./jslib/src/enums/twoFactorProviderType.ts","webpack:///./jslib/src/angular/services/broadcaster.service.ts","webpack:///./src/app/settings/payment.component.ts","webpack:///./src/app/settings/payment.component.html","webpack:///./jslib/src/models/view/folderView.ts","webpack:///./src/app/settings/tax-info.component.ts","webpack:///./src/app/settings/tax-info.component.html","webpack:///./jslib/src/models/view/cipherView.ts","webpack:///./jslib/src/models/view/identityView.ts","webpack:///./jslib/src/enums/fieldType.ts","webpack:///./src/app/components/avatar.component.ts","webpack:///./jslib/src/models/view/collectionView.ts","webpack:///./jslib/src/models/view/loginView.ts","webpack:///./jslib/src/models/data/collectionData.ts","webpack:///./jslib/src/models/domain/collection.ts","webpack:///./src/app/settings/two-factor-verify.component.ts","webpack:///./src/app/settings/two-factor-verify.component.html","webpack:///./jslib/src/abstractions/export.service.ts","webpack:///./jslib/src/models/data/cipherData.ts","webpack:///./jslib/src/models/view/fieldView.ts","webpack:///./jslib/src/models/request/cipherRequest.ts","webpack:///./src/app/services/router.service.ts","webpack:///./jslib/src/models/domain/cipherString.ts","webpack:///./jslib/src/enums/organizationUserStatusType.ts","webpack:///./jslib/src/enums/organizationUserType.ts","webpack:///./jslib/src/angular/pipes/search.pipe.ts","webpack:///./src/app/services/event.service.ts","webpack:///./jslib/src/enums/eventType.ts","webpack:///./jslib/src/enums/policyType.ts","webpack:///./jslib/src/enums/paymentMethodType.ts","webpack:///./src/app/settings/two-factor-base.component.ts","webpack:///./src/app/tools/cipher-report.component.ts","webpack:///./jslib/src/abstractions/totp.service.ts","webpack:///./jslib/src/models/domain/cipher.ts","webpack:///./jslib/src/models/view/loginUriView.ts","webpack:///./jslib/src/abstractions/import.service.ts","webpack:///./src/app/vault/ciphers.component.ts","webpack:///./src/app/vault/ciphers.component.html","webpack:///./jslib/src/enums/kdfType.ts","webpack:///./src/app/components/password-strength.component.ts","webpack:///./src/app/components/password-strength.component.html","webpack:///./jslib/src/services/auth.service.ts","webpack:///./jslib/src/models/request/selectionReadOnlyRequest.ts","webpack:///./jslib/src/enums/deviceType.ts","webpack:///./src/app/settings/organization-plans.component.ts","webpack:///./src/app/settings/organization-plans.component.html","webpack:///./jslib/src/enums/uriMatchType.ts","webpack:///./src/app/vault/add-edit.component.ts","webpack:///./src/app/vault/add-edit.component.html","webpack:///./src/app/vault/groupings.component.ts","webpack:///./src/app/vault/groupings.component.html","webpack:///./jslib/src/models/domain/organization.ts","webpack:///./src/app/settings/organizations.component.ts","webpack:///./src/app/settings/organizations.component.html","webpack:///./jslib/src/models/response/selectionReadOnlyResponse.ts","webpack:///./src/app/layouts/navbar.component.ts","webpack:///./src/app/layouts/navbar.component.html","webpack:///./src/app/layouts/footer.component.ts","webpack:///./src/app/layouts/footer.component.html","webpack:///./jslib/src/angular/services/validation.service.ts","webpack:///./jslib/src/enums/encryptionType.ts","webpack:///./jslib/src/models/request/keysRequest.ts","webpack:///./src/app/organizations/manage/entity-users.component.ts","webpack:///./src/app/organizations/manage/entity-users.component.html","webpack:///./src/app/organizations/manage/entity-events.component.ts","webpack:///./src/app/organizations/manage/entity-events.component.html","webpack:///./src/app/settings/purge-vault.component.ts","webpack:///./src/app/settings/purge-vault.component.html","webpack:///./src/app/settings/user-billing.component.ts","webpack:///./src/app/settings/user-billing.component.html","webpack:///./src/app/settings/add-credit.component.ts","webpack:///./src/app/settings/add-credit.component.html","webpack:///./src/app/settings/adjust-payment.component.ts","webpack:///./src/app/settings/adjust-payment.component.html","webpack:///./src/app/settings/update-license.component.ts","webpack:///./src/app/settings/update-license.component.html","webpack:///./src/app/settings/adjust-storage.component.ts","webpack:///./src/app/settings/adjust-storage.component.html","webpack:///./src/app/settings/two-factor-duo.component.ts","webpack:///./src/app/settings/two-factor-duo.component.html","webpack:///./src/app/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-setup.component.html","webpack:///./src/app/tools/export.component.ts","webpack:///./src/app/tools/export.component.html","webpack:///./src/app/tools/exposed-passwords-report.component.ts","webpack:///./src/app/tools/exposed-passwords-report.component.html","webpack:///./src/app/organizations/vault/add-edit.component.ts","webpack:///./jslib/src/models/view/passwordHistoryView.ts","webpack:///./jslib/src/angular/directives/true-false-value.directive.ts","webpack:///./src/app/tools/import.component.ts","webpack:///./src/app/tools/import.component.html","webpack:///./src/app/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/tools/inactive-two-factor-report.component.html","webpack:///./src/app/tools/reused-passwords-report.component.ts","webpack:///./src/app/tools/reused-passwords-report.component.html","webpack:///./src/app/tools/unsecured-websites-report.component.ts","webpack:///./src/app/tools/unsecured-websites-report.component.html","webpack:///./src/app/tools/weak-passwords-report.component.ts","webpack:///./src/app/tools/weak-passwords-report.component.html","webpack:///./src/app/vault/attachments.component.ts","webpack:///./src/app/vault/attachments.component.html","webpack:///./src/app/organizations/vault/ciphers.component.ts","webpack:///./src/app/vault/collections.component.ts","webpack:///./src/app/vault/collections.component.html","webpack:///./src/app/organizations/vault/groupings.component.ts","webpack:///./src/app/vault/bulk-actions.component.ts","webpack:///./src/app/vault/bulk-actions.component.html","webpack:///./jslib/src/models/request/cipherWithIdRequest.ts","webpack:///./jslib/src/models/request/folderRequest.ts","webpack:///./jslib/src/angular/directives/select-copy.directive.ts","webpack:///./jslib/src/angular/pipes/color-password.pipe.ts","webpack:///./jslib/src/models/response/profileResponse.ts","webpack:///./jslib/src/abstractions/notifications.service.ts","webpack:///./jslib/src/abstractions/settings.service.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/layouts/frontend-layout.component.ts","webpack:///./src/app/layouts/frontend-layout.component.html","webpack:///./src/app/layouts/organization-layout.component.ts","webpack:///./src/app/layouts/organization-layout.component.html","webpack:///./src/app/layouts/user-layout.component.ts","webpack:///./src/app/layouts/user-layout.component.html","webpack:///./src/app/accounts/accept-organization.component.ts","webpack:///./src/app/accounts/accept-organization.component.html","webpack:///./src/app/accounts/hint.component.ts","webpack:///./src/app/accounts/hint.component.html","webpack:///./src/app/accounts/lock.component.ts","webpack:///./src/app/accounts/lock.component.html","webpack:///./src/app/accounts/login.component.ts","webpack:///./src/app/accounts/login.component.html","webpack:///./src/app/accounts/recover-delete.component.ts","webpack:///./src/app/accounts/recover-delete.component.html","webpack:///./src/app/accounts/recover-two-factor.component.ts","webpack:///./src/app/accounts/recover-two-factor.component.html","webpack:///./src/app/accounts/register.component.ts","webpack:///./src/app/accounts/register.component.html","webpack:///./jslib/src/models/domain/policy.ts","webpack:///./jslib/src/models/data/policyData.ts","webpack:///./src/app/accounts/set-password.component.ts","webpack:///./src/app/accounts/set-password.component.html","webpack:///./jslib/src/angular/components/change-password.component.ts","webpack:///./src/app/accounts/sso.component.ts","webpack:///./src/app/accounts/sso.component.html","webpack:///./jslib/src/angular/components/sso.component.ts","webpack:///./src/app/accounts/two-factor.component.ts","webpack:///./src/app/accounts/two-factor.component.html","webpack:///./src/app/accounts/two-factor-options.component.ts","webpack:///./src/app/accounts/two-factor-options.component.html","webpack:///./jslib/src/models/request/twoFactorEmailRequest.ts","webpack:///./src/app/accounts/verify-email-token.component.ts","webpack:///./src/app/accounts/verify-email-token.component.html","webpack:///./src/app/accounts/verify-recover-delete.component.ts","webpack:///./src/app/accounts/verify-recover-delete.component.html","webpack:///./src/app/organizations/manage/collections.component.ts","webpack:///./src/app/organizations/manage/collections.component.html","webpack:///./src/app/organizations/manage/collection-add-edit.component.ts","webpack:///./src/app/organizations/manage/collection-add-edit.component.html","webpack:///./jslib/src/models/request/collectionRequest.ts","webpack:///./src/app/organizations/manage/events.component.ts","webpack:///./src/app/organizations/manage/events.component.html","webpack:///./src/app/organizations/manage/groups.component.ts","webpack:///./src/app/organizations/manage/groups.component.html","webpack:///./src/app/organizations/manage/group-add-edit.component.ts","webpack:///./src/app/organizations/manage/group-add-edit.component.html","webpack:///./src/app/organizations/manage/manage.component.ts","webpack:///./src/app/organizations/manage/manage.component.html","webpack:///./src/app/organizations/manage/people.component.ts","webpack:///./src/app/organizations/manage/people.component.html","webpack:///./jslib/src/models/request/organizationUserConfirmRequest.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.ts","webpack:///./src/app/organizations/manage/user-add-edit.component.html","webpack:///./src/app/organizations/manage/user-confirm.component.ts","webpack:///./src/app/organizations/manage/user-confirm.component.html","webpack:///./src/app/organizations/manage/user-groups.component.ts","webpack:///./src/app/organizations/manage/user-groups.component.html","webpack:///./src/app/organizations/manage/policies.component.ts","webpack:///./src/app/organizations/manage/policies.component.html","webpack:///./src/app/organizations/manage/policy-edit.component.ts","webpack:///./src/app/organizations/manage/policy-edit.component.html","webpack:///./src/app/organizations/settings/account.component.ts","webpack:///./src/app/organizations/settings/account.component.html","webpack:///./jslib/src/models/request/organizationTaxInfoUpdateRequest.ts","webpack:///./jslib/src/models/request/taxInfoUpdateRequest.ts","webpack:///./src/app/organizations/settings/api-key.component.ts","webpack:///./src/app/organizations/settings/api-key.component.html","webpack:///./src/app/organizations/settings/delete-organization.component.ts","webpack:///./src/app/organizations/settings/delete-organization.component.html","webpack:///./src/app/organizations/settings/rotate-api-key.component.ts","webpack:///./src/app/organizations/settings/rotate-api-key.component.html","webpack:///./src/app/organizations/settings/organization-billing.component.ts","webpack:///./src/services/webConstants.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.ts","webpack:///./src/app/organizations/settings/organization-subscription.component.html","webpack:///./jslib/src/enums/planType.ts","webpack:///./src/app/organizations/settings/change-plan.component.ts","webpack:///./src/app/organizations/settings/change-plan.component.html","webpack:///./src/app/organizations/settings/download-license.component.ts","webpack:///./src/app/organizations/settings/download-license.component.html","webpack:///./src/app/organizations/settings/adjust-seats.component.ts","webpack:///./src/app/organizations/settings/adjust-seats.component.html","webpack:///./src/app/organizations/settings/settings.component.ts","webpack:///./src/app/organizations/settings/settings.component.html","webpack:///./src/app/organizations/settings/two-factor-setup.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.ts","webpack:///./src/app/settings/two-factor-authenticator.component.html","webpack:///./src/app/settings/two-factor-email.component.ts","webpack:///./src/app/settings/two-factor-email.component.html","webpack:///./src/app/settings/two-factor-recovery.component.ts","webpack:///./src/app/settings/two-factor-recovery.component.html","webpack:///./src/app/settings/two-factor-u2f.component.ts","webpack:///./src/app/settings/two-factor-u2f.component.html","webpack:///./src/app/settings/two-factor-yubikey.component.ts","webpack:///./src/app/settings/two-factor-yubikey.component.html","webpack:///./src/app/organizations/tools/export.component.ts","webpack:///./src/app/organizations/tools/exposed-passwords-report.component.ts","webpack:///./jslib/src/models/data/attachmentData.ts","webpack:///./jslib/src/models/data/cardData.ts","webpack:///./jslib/src/models/data/fieldData.ts","webpack:///./jslib/src/models/data/identityData.ts","webpack:///./jslib/src/models/data/loginData.ts","webpack:///./jslib/src/models/data/loginUriData.ts","webpack:///./jslib/src/models/data/passwordHistoryData.ts","webpack:///./jslib/src/models/data/secureNoteData.ts","webpack:///./jslib/src/models/domain/attachment.ts","webpack:///./jslib/src/models/view/attachmentView.ts","webpack:///./jslib/src/models/domain/symmetricCryptoKey.ts","webpack:///./jslib/src/models/domain/card.ts","webpack:///./jslib/src/models/domain/field.ts","webpack:///./jslib/src/models/domain/identity.ts","webpack:///./jslib/src/models/domain/login.ts","webpack:///./jslib/src/models/domain/loginUri.ts","webpack:///./jslib/src/models/domain/password.ts","webpack:///./jslib/src/models/domain/secureNote.ts","webpack:///./jslib/src/models/request/cipherCreateRequest.ts","webpack:///./jslib/src/models/api/cardApi.ts","webpack:///./jslib/src/models/api/fieldApi.ts","webpack:///./jslib/src/models/api/identityApi.ts","webpack:///./jslib/src/models/api/loginApi.ts","webpack:///./jslib/src/models/api/loginUriApi.ts","webpack:///./jslib/src/models/api/secureNoteApi.ts","webpack:///./jslib/src/angular/directives/fallback-src.directive.ts","webpack:///./src/app/organizations/tools/import.component.ts","webpack:///./src/app/organizations/tools/inactive-two-factor-report.component.ts","webpack:///./src/app/organizations/tools/reused-passwords-report.component.ts","webpack:///./src/app/organizations/tools/tools.component.ts","webpack:///./src/app/organizations/tools/tools.component.html","webpack:///./src/app/organizations/tools/unsecured-websites-report.component.ts","webpack:///./src/app/organizations/tools/weak-passwords-report.component.ts","webpack:///./src/app/organizations/vault/vault.component.ts","webpack:///./src/app/organizations/vault/vault.component.html","webpack:///./src/app/organizations/vault/attachments.component.ts","webpack:///./src/app/organizations/vault/collections.component.ts","webpack:///./jslib/src/models/request/cipherCollectionsRequest.ts","webpack:///./src/app/vault/bulk-delete.component.ts","webpack:///./src/app/vault/bulk-delete.component.html","webpack:///./jslib/src/models/request/cipherBulkDeleteRequest.ts","webpack:///./src/app/vault/bulk-move.component.ts","webpack:///./src/app/vault/bulk-move.component.html","webpack:///./src/app/vault/bulk-restore.component.ts","webpack:///./src/app/vault/bulk-restore.component.html","webpack:///./src/app/vault/bulk-share.component.ts","webpack:///./src/app/vault/bulk-share.component.html","webpack:///./src/app/settings/account.component.ts","webpack:///./src/app/settings/account.component.html","webpack:///./src/app/settings/deauthorize-sessions.component.ts","webpack:///./src/app/settings/deauthorize-sessions.component.html","webpack:///./src/app/settings/delete-account.component.ts","webpack:///./src/app/settings/delete-account.component.html","webpack:///./src/app/settings/profile.component.ts","webpack:///./src/app/settings/profile.component.html","webpack:///./src/app/settings/change-email.component.ts","webpack:///./src/app/settings/change-email.component.html","webpack:///./jslib/src/models/request/emailTokenRequest.ts","webpack:///./src/app/settings/change-password.component.ts","webpack:///./src/app/settings/change-password.component.html","webpack:///./jslib/src/models/request/folderWithIdRequest.ts","webpack:///./jslib/src/models/request/passwordRequest.ts","webpack:///./jslib/src/models/request/updateKeyRequest.ts","webpack:///./src/app/settings/change-kdf.component.ts","webpack:///./src/app/settings/change-kdf.component.html","webpack:///./src/app/settings/create-organization.component.ts","webpack:///./src/app/settings/create-organization.component.html","webpack:///./src/app/settings/domain-rules.component.ts","webpack:///./src/app/settings/domain-rules.component.html","webpack:///./src/app/settings/options.component.ts","webpack:///./src/app/settings/options.component.html","webpack:///./src/app/settings/link-sso.component.ts","webpack:///./src/app/settings/link-sso.component.html","webpack:///./src/app/settings/premium.component.ts","webpack:///./src/app/settings/premium.component.html","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/user-subscription.component.ts","webpack:///./src/app/settings/user-subscription.component.html","webpack:///./src/app/tools/breach-report.component.ts","webpack:///./src/app/tools/breach-report.component.html","webpack:///./src/app/tools/password-generator.component.ts","webpack:///./src/app/tools/password-generator.component.html","webpack:///./src/app/tools/password-generator-history.component.ts","webpack:///./src/app/tools/password-generator-history.component.html","webpack:///./src/app/tools/tools.component.ts","webpack:///./src/app/tools/tools.component.html","webpack:///./src/app/vault/vault.component.ts","webpack:///./src/app/vault/vault.component.html","webpack:///./src/app/settings/update-key.component.ts","webpack:///./src/app/settings/update-key.component.html","webpack:///./src/app/vault/folder-add-edit.component.ts","webpack:///./src/app/vault/folder-add-edit.component.html","webpack:///./src/app/vault/share.component.ts","webpack:///./src/app/vault/share.component.html","webpack:///./src/app/settings/verify-email.component.ts","webpack:///./src/app/settings/verify-email.component.html","webpack:///./src/app/services/organization-guard.service.ts","webpack:///./src/app/services/organization-type-guard.service.ts","webpack:///./src/app/services/unauth-guard.service.ts","webpack:///./jslib/src/angular/services/auth-guard.service.ts","webpack:///./jslib/src/services/api.service.ts","webpack:///./jslib/src/models/response/cipherResponse.ts","webpack:///./jslib/src/models/response/collectionResponse.ts","webpack:///./jslib/src/models/response/domainsResponse.ts","webpack:///./jslib/src/models/response/folderResponse.ts","webpack:///./jslib/src/models/response/organizationResponse.ts","webpack:///./jslib/src/models/response/planResponse.ts","webpack:///./jslib/src/models/response/subscriptionResponse.ts","webpack:///./jslib/src/models/response/policyResponse.ts","webpack:///./jslib/src/services/appId.service.ts","webpack:///./jslib/src/services/audit.service.ts","webpack:///./jslib/src/services/cipher.service.ts","webpack:///./jslib/src/misc/sequentialize.ts","webpack:///./jslib/src/services/collection.service.ts","webpack:///./jslib/src/misc/serviceUtils.ts","webpack:///./jslib/src/services/container.service.ts","webpack:///./jslib/src/services/crypto.service.ts","webpack:///./jslib/src/misc/wordlist.ts","webpack:///./jslib/src/services/environment.service.ts","webpack:///./jslib/src/services/folder.service.ts","webpack:///./jslib/src/models/data/folderData.ts","webpack:///./jslib/src/services/i18n.service.ts","webpack:///./jslib/src/services/passwordGeneration.service.ts","webpack:///./jslib/src/services/settings.service.ts","webpack:///./jslib/src/services/state.service.ts","webpack:///./jslib/src/services/sync.service.ts","webpack:///./jslib/src/services/token.service.ts","webpack:///./jslib/src/services/totp.service.ts","webpack:///./jslib/src/services/user.service.ts","webpack:///./jslib/src/services/vaultTimeout.service.ts","webpack:///./jslib/src/models/export/cipherWithIds.ts","webpack:///./jslib/src/models/export/collectionWithId.ts","webpack:///./jslib/src/models/export/folderWithId.ts","webpack:///./jslib/src/enums/notificationType.ts","webpack:///./src/app/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./jslib/src/services/broadcaster.service.ts","webpack:///./jslib/src/misc/tldjs.noop.ts","webpack:///./jslib/src/models/request/organizationUserAcceptRequest.ts","webpack:///./jslib/src/angular/components/hint.component.ts","webpack:///./jslib/src/models/request/passwordHintRequest.ts","webpack:///./jslib/src/angular/components/lock.component.ts","webpack:///./jslib/src/angular/components/login.component.ts","webpack:///./jslib/src/models/request/deleteRecoverRequest.ts","webpack:///./jslib/src/models/request/twoFactorRecoveryRequest.ts","webpack:///./jslib/src/angular/components/register.component.ts","webpack:///./jslib/src/models/request/registerRequest.ts","webpack:///./jslib/src/models/request/referenceEventRequest.ts","webpack:///./jslib/src/angular/components/set-password.component.ts","webpack:///./jslib/src/models/request/setPasswordRequest.ts","webpack:///./jslib/src/angular/components/two-factor-options.component.ts","webpack:///./jslib/src/angular/components/modal.component.ts","webpack:///./jslib/src/angular/components/two-factor.component.ts","webpack:///./jslib/src/models/domain/authResult.ts","webpack:///./jslib/src/models/request/deviceRequest.ts","webpack:///./jslib/src/models/request/preloginRequest.ts","webpack:///./jslib/src/models/request/tokenRequest.ts","webpack:///./jslib/src/misc/u2f.ts","webpack:///./jslib/src/models/request/verifyEmailRequest.ts","webpack:///./jslib/src/models/request/verifyDeleteRecoverRequest.ts","webpack:///./jslib/src/models/request/groupRequest.ts","webpack:///./jslib/src/models/request/organizationUserInviteRequest.ts","webpack:///./jslib/src/models/request/organizationUserUpdateRequest.ts","webpack:///./jslib/src/models/request/organizationUserUpdateGroupsRequest.ts","webpack:///./jslib/src/models/request/policyRequest.ts","webpack:///./jslib/src/models/request/organizationUpdateRequest.ts","webpack:///./jslib/src/enums/transactionType.ts","webpack:///./jslib/src/models/request/verifyBankRequest.ts","webpack:///./jslib/src/models/request/bitPayInvoiceRequest.ts","webpack:///./jslib/src/models/request/paymentRequest.ts","webpack:///./jslib/src/enums/productType.ts","webpack:///./jslib/src/models/request/organizationCreateRequest.ts","webpack:///./jslib/src/models/request/organizationUpgradeRequest.ts","webpack:///./jslib/src/models/request/seatRequest.ts","webpack:///./jslib/src/models/request/storageRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorDuoRequest.ts","webpack:///./jslib/src/models/request/twoFactorProviderRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorAuthenticatorRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorEmailRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorU2fDeleteRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorU2fRequest.ts","webpack:///./jslib/src/models/request/updateTwoFactorYubioOtpRequest.ts","webpack:///./jslib/src/angular/components/export.component.ts","webpack:///./jslib/src/models/request/attachmentRequest.ts","webpack:///./jslib/src/angular/components/add-edit.component.ts","webpack:///./jslib/src/angular/components/attachments.component.ts","webpack:///./jslib/src/angular/components/ciphers.component.ts","webpack:///./jslib/src/angular/components/collections.component.ts","webpack:///./jslib/src/angular/components/groupings.component.ts","webpack:///./jslib/src/models/request/updateProfileRequest.ts","webpack:///./jslib/src/models/request/emailRequest.ts","webpack:///./jslib/src/models/request/kdfRequest.ts","webpack:///./jslib/src/models/request/updateDomainsRequest.ts","webpack:///./jslib/src/angular/components/password-generator.component.ts","webpack:///./jslib/src/angular/components/password-generator-history.component.ts","webpack:///./jslib/src/angular/components/folder-add-edit.component.ts","webpack:///./jslib/src/angular/components/share.component.ts","webpack:///./src/app/services/services.module.ts","webpack:///./src/services/broadcasterMessaging.service.ts","webpack:///./src/services/htmlStorage.service.ts","webpack:///./jslib/src/services/index.ts","webpack:///./jslib/src/models/response/apiKeyResponse.ts","webpack:///./jslib/src/models/response/billingResponse.ts","webpack:///./jslib/src/models/response/breachAccountResponse.ts","webpack:///./jslib/src/models/response/attachmentResponse.ts","webpack:///./jslib/src/models/response/passwordHistoryResponse.ts","webpack:///./jslib/src/models/response/globalDomainResponse.ts","webpack:///./jslib/src/models/response/errorResponse.ts","webpack:///./jslib/src/models/response/eventResponse.ts","webpack:///./jslib/src/models/response/groupResponse.ts","webpack:///./jslib/src/models/response/identityTokenResponse.ts","webpack:///./jslib/src/models/response/identityTwoFactorResponse.ts","webpack:///./jslib/src/models/response/listResponse.ts","webpack:///./jslib/src/models/response/organizationSubscriptionResponse.ts","webpack:///./jslib/src/models/response/organizationUserResponse.ts","webpack:///./jslib/src/models/response/paymentResponse.ts","webpack:///./jslib/src/models/response/profileOrganizationResponse.ts","webpack:///./jslib/src/models/response/preloginResponse.ts","webpack:///./jslib/src/models/response/syncResponse.ts","webpack:///./jslib/src/models/response/taxInfoResponse.ts","webpack:///./jslib/src/models/response/twoFactorAuthenticatorResponse.ts","webpack:///./jslib/src/models/response/twoFactorDuoResponse.ts","webpack:///./jslib/src/models/response/twoFactorEmailResponse.ts","webpack:///./jslib/src/models/response/twoFactorProviderResponse.ts","webpack:///./jslib/src/models/response/twoFactorRescoverResponse.ts","webpack:///./jslib/src/models/response/twoFactorU2fResponse.ts","webpack:///./jslib/src/models/response/twoFactorYubiKeyResponse.ts","webpack:///./jslib/src/models/response/userKeyResponse.ts","webpack:///./jslib/src/misc/throttle.ts","webpack:///./jslib/src/models/request/cipherBulkMoveRequest.ts","webpack:///./jslib/src/models/request/cipherBulkRestoreRequest.ts","webpack:///./jslib/src/models/request/cipherBulkShareRequest.ts","webpack:///./jslib/src/models/request/cipherShareRequest.ts","webpack:///./jslib/src/models/domain/sortedCiphersCache.ts","webpack:///./jslib/src/models/domain/treeNode.ts","webpack:///./jslib/src/models/domain/encryptedObject.ts","webpack:///./jslib/src/models/domain/environmentUrls.ts","webpack:///./jslib/src/models/domain/folder.ts","webpack:///./jslib/src/models/domain/generatedPasswordHistory.ts","webpack:///./jslib/src/models/domain/passwordGeneratorPolicyOptions.ts","webpack:///./jslib/src/models/data/organizationData.ts","webpack:///./src/services/i18n.service.ts","webpack:///./src/services/memoryStorage.service.ts","webpack:///./src/services/webPlatformUtils.service.ts","webpack:///./jslib/src/misc/analytics.ts","webpack:///./jslib/src/services/event.service.ts","webpack:///./jslib/src/models/data/eventData.ts","webpack:///./jslib/src/models/request/eventRequest.ts","webpack:///./jslib/src/services/export.service.ts","webpack:///./jslib/src/models/export/cipher.ts","webpack:///./jslib/src/models/export/card.ts","webpack:///./jslib/src/models/export/field.ts","webpack:///./jslib/src/models/export/identity.ts","webpack:///./jslib/src/models/export/login.ts","webpack:///./jslib/src/models/export/loginUri.ts","webpack:///./jslib/src/models/export/secureNote.ts","webpack:///./jslib/src/models/export/collection.ts","webpack:///./jslib/src/models/export/folder.ts","webpack:///./jslib/src/services/import.service.ts","webpack:///./jslib/src/models/request/importCiphersRequest.ts","webpack:///./jslib/src/models/request/importOrganizationCiphersRequest.ts","webpack:///./jslib/src/models/request/kvpRequest.ts","webpack:///./jslib/src/importers/ascendoCsvImporter.ts","webpack:///./jslib/src/importers/avastCsvImporter.ts","webpack:///./jslib/src/importers/avastJsonImporter.ts","webpack:///./jslib/src/importers/aviraCsvImporter.ts","webpack:///./jslib/src/importers/bitwardenCsvImporter.ts","webpack:///./jslib/src/importers/bitwardenJsonImporter.ts","webpack:///./jslib/src/importers/blackBerryCsvImporter.ts","webpack:///./jslib/src/importers/blurCsvImporter.ts","webpack:///./jslib/src/importers/buttercupCsvImporter.ts","webpack:///./jslib/src/importers/chromeCsvImporter.ts","webpack:///./jslib/src/importers/clipperzHtmlImporter.ts","webpack:///./jslib/src/importers/codebookCsvImporter.ts","webpack:///./jslib/src/importers/dashlaneJsonImporter.ts","webpack:///./jslib/src/importers/encryptrCsvImporter.ts","webpack:///./jslib/src/importers/enpassCsvImporter.ts","webpack:///./jslib/src/importers/enpassJsonImporter.ts","webpack:///./jslib/src/importers/firefoxCsvImporter.ts","webpack:///./jslib/src/importers/fsecureFskImporter.ts","webpack:///./jslib/src/importers/gnomeJsonImporter.ts","webpack:///./jslib/src/importers/kasperskyTxtImporter.ts","webpack:///./jslib/src/importers/keepass2XmlImporter.ts","webpack:///./jslib/src/importers/keepassxCsvImporter.ts","webpack:///./jslib/src/importers/keeperCsvImporter.ts","webpack:///./jslib/src/importers/lastpassCsvImporter.ts","webpack:///./jslib/src/importers/logMeOnceCsvImporter.ts","webpack:///./jslib/src/importers/meldiumCsvImporter.ts","webpack:///./jslib/src/importers/msecureCsvImporter.ts","webpack:///./jslib/src/importers/mykiCsvImporter.ts","webpack:///./jslib/src/importers/onepassword1PifImporter.ts","webpack:///./jslib/src/importers/onepasswordWinCsvImporter.ts","webpack:///./jslib/src/models/view/index.ts","webpack:///./jslib/src/models/view/view.ts","webpack:///./jslib/src/importers/padlockCsvImporter.ts","webpack:///./jslib/src/importers/passkeepCsvImporter.ts","webpack:///./jslib/src/importers/passmanJsonImporter.ts","webpack:///./jslib/src/importers/passpackCsvImporter.ts","webpack:///./jslib/src/importers/passwordAgentCsvImporter.ts","webpack:///./jslib/src/importers/passwordBossJsonImporter.ts","webpack:///./jslib/src/importers/passwordDragonXmlImporter.ts","webpack:///./jslib/src/importers/passwordSafeXmlImporter.ts","webpack:///./jslib/src/importers/passwordWalletTxtImporter.ts","webpack:///./jslib/src/importers/rememBearCsvImporter.ts","webpack:///./jslib/src/importers/roboformCsvImporter.ts","webpack:///./jslib/src/importers/safeInCloudXmlImporter.ts","webpack:///./jslib/src/importers/saferpassCsvImport.ts","webpack:///./jslib/src/importers/secureSafeCsvImporter.ts","webpack:///./jslib/src/importers/splashIdCsvImporter.ts","webpack:///./jslib/src/importers/stickyPasswordXmlImporter.ts","webpack:///./jslib/src/importers/truekeyCsvImporter.ts","webpack:///./jslib/src/importers/upmCsvImporter.ts","webpack:///./jslib/src/importers/yotiCsvImporter.ts","webpack:///./jslib/src/importers/zohoVaultCsvImporter.ts","webpack:///./jslib/src/services/notifications.service.ts","webpack:///./jslib/src/models/response/notificationResponse.ts","webpack:///./jslib/src/services/policy.service.ts","webpack:///./jslib/src/models/domain/masterPasswordPolicyOptions.ts","webpack:///./jslib/src/services/search.service.ts","webpack:///./jslib/src/services/webCryptoFunction.service.ts","webpack:///./jslib/src/models/domain/decryptParameters.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.component.html","webpack:///./jslib/src/angular/directives/blur-click.directive.ts","webpack:///./jslib/src/angular/directives/box-row.directive.ts","webpack:///./jslib/src/angular/pipes/search-ciphers.pipe.ts"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","jsonpArray","webpackJsonpCallback","I18nService","ApiService","PlatformUtilsService","UserService","i18nService","transform","id","p1","p2","p3","this","t","I18nPipe","MessagingService","el","validationService","ngOnChanges","changes","appApiAction","then","nativeElement","loading","response","e","showError","ApiActionDirective","renderer","title","ngOnInit","hasAttribute","setAttribute","A11yTitleDirective","CipherService","CryptoService","organization","newLineRegex","passwordFieldNames","usernameFieldNames","notesFieldNames","uriFieldNames","parseXml","data","doc","DOMParser","parseFromString","querySelector","parseCsv","header","splitNewLine","join","trim","result","papa","parse","encoding","skipEmptyLines","errors","forEach","row","console","warn","message","parseSingleRowCsv","rowData","isNullOrWhitespace","parsedRow","makeUriArray","uri","loginUri","LoginUriView","fixUri","match","u","push","indexOf","substring","nameFromUrl","url","hostname","Utils","getHostname","startsWith","replace","str","getValueOrDefault","defaultValue","split","getCardBrand","cardNum","re","RegExp","test","setCardExpiration","cipher","expiration","parts","month","year","substr","card","expMonth","expYear","moveFoldersToCollections","folderRelationships","r","collectionRelationships","collections","folders","map","f","collection","CollectionView","name","querySelectorDirectChild","parentEl","query","els","querySelectorAllDirectChild","Array","from","querySelectorAll","filter","parentNode","initLoginCipher","CipherView","favorite","notes","fields","login","LoginView","type","CipherType","Login","cleanupCipher","processKvp","FieldType","Text","search","field","FieldView","processFolder","folderName","folderIndex","hasFolder","addFolder","FolderView","ciphers","convertToNoteIfNeeded","username","password","uris","SecureNote","secureNote","SecureNoteView","SecureNoteType","Generic","BaseImporter","success","ImportResult","calloutStyle","undefined","icon","CalloutComponent","getResponseProperty","propertyName","exactName","Error","otherCasePropertyName","charAt","toUpperCase","toLowerCase","slice","BaseResponse","nodeURL","window","init","inited","isNode","process","release","isBrowser","isNativeScript","isMobileBrowser","isMobile","isAppleMobileBrowser","isAppleMobile","global","fromB64ToArray","Uint8Array","Buffer","binaryString","atob","bytes","charCodeAt","fromHexToArray","parseInt","fromUtf8ToArray","strUtf8","unescape","encodeURIComponent","arr","fromByteStringToArray","fromBufferToB64","buffer","toString","binary","byteLength","String","fromCharCode","btoa","fromBufferToUrlB64","fromBufferToUtf8","encodedString","apply","decodeURIComponent","escape","fromBufferToByteString","fromBufferToHex","x","fromUrlB64ToUtf8","b64Str","output","fromB64ToUtf8","newGuid","c","Math","random","isGuid","uriString","getUrl","getHost","host","getDomain","httpUrl","tldEndingRegex","getUrlObject","validIpAddress","urlDomain","tldjs","domain","getQueryParams","Map","pair","set","getSortFunction","prop","a","b","collator","compare","localeCompare","ipString","win","mobile","navigator","userAgent","vendor","opera","URL","hasProtocol","anchor","document","createElement","href","PasswordGenerationService","StateService","onClick","$event","preventDefault","StopClickDirective","CollectionService","StorageService","condition","disableComplete","InputVerbatimDirective","FolderService","stopPropagation","StopPropDirective","AuthService","SyncService","environmentUrlsKey","ConstantsService","disableGaKey","disableAddLoginNotificationKey","disableContextMenuItemKey","disableFaviconKey","disableAutoTotpCopyKey","enableAutoFillOnPageLoadKey","vaultTimeoutKey","vaultTimeoutActionKey","lastActiveKey","neverDomainsKey","installedVersionKey","localeKey","themeKey","collapsedGroupingsKey","autoConfirmFingerprints","dontShowCardsCurrentTab","dontShowIdentitiesCurrentTab","defaultUriMatch","pinProtectedKey","protectedPin","clearClipboardKey","eventCollectionKey","ssoCodeVerifierKey","ssoStateKey","biometricUnlockKey","biometricText","disableChangedPasswordNotificationKey","PasswordVerificationRequest","EventService","autofocus","focus","AutofocusDirective","cardholderName","code","_brand","_number","_subTitle","repeat","brand","number","count","exp","formatYear","CardView","EnvironmentService","PolicyService","SearchService","n","buildDomainModel","dataObj","alreadyEncrypted","notEncList","objProp","CipherString","buildDataModel","notCipherStringList","encryptedString","decryptObj","viewModel","orgId","promises","self","theProp","p","Promise","resolve","mapProp","decrypt","val","all","componentFactoryResolver","messagingService","ngOnDestroy","show","parentContainer","fade","setComponentParameters","factory","resolveComponentFactory","componentRef","container","createComponent","instance","modals","jq","modal","on","onShow","emit","send","onShown","find","onClose","onClosed","clear","close","ModalComponent","TokenService","AuditService","IconMap","environmentService","stateService","iconsUrl","baseUrl","imageEnabled","load","setLoginIcon","Card","Identity","hostnameUri","isWebsite","image","fallbackImage","IconComponent","CryptoFunctionService","VaultTimeoutService","TwoFactorProviderType","BroadcasterService","StripeElementStyle","base","color","fontFamily","fontSize","fontSmoothing","invalid","StripeElementClasses","empty","platformUtilsService","apiService","showMethods","showOptions","method","PaymentMethodType","hideBank","hidePaypal","hideCredit","bank","routing_number","account_number","account_holder_name","account_holder_type","currency","country","paymentMethodType","btInstance","stripe","stripeElements","stripeCardNumberElement","stripeCardExpiryElement","stripeCardCvcElement","stripeScript","src","async","onload","Stripe","isDev","WebConstants","stripeTestKey","stripeLiveKey","elements","setStripeElement","btScript","PayPal","BankAccount","Credit","head","appendChild","removeChild","setTimeout","body","btStylesheet","changeMethod","braintree","dropin","create","authorization","btSandboxKey","btProductionKey","paymentOptionPriority","paypal","flow","buttonStyle","label","size","shape","createErr","error","createPaymentToken","reject","requestPaymentMethod","payload","nonce","catch","err","postSetupPayment","clientSecret","handleCardSetup","setupIntent","status","payment_method","createToken","token","handleStripeCardPayment","successCallback","paymentIntent","style","classes","placeholder","mount","PaymentComponent","revisionDate","route","onCountryChanged","EventEmitter","taxInfo","taxId","line1","line2","city","state","postalCode","includeTaxId","pristine","parent","params","subscribe","organizationId","getOrganizationTaxInfo","getTaxInfo","assign","getTaxInfoRequest","request","OrganizationTaxInfoUpdateRequest","TaxInfoUpdateRequest","submitTaxInfo","hasChanged","putOrganizationTaxInfo","putTaxInfo","changeCountry","TaxInfoComponent","folderId","organizationUseTotp","edit","viewPassword","identity","IdentityView","attachments","passwordHistory","collectionIds","deletedDate","localData","subTitle","hasAttachments","passwordRevisionDate","middleName","address1","address2","address3","company","email","phone","ssn","passportNumber","licenseNumber","_firstName","_lastName","firstName","lastName","address","addressPart2","sanitizer","cryptoFunctionService","charCount","textColor","fontWeight","dynamic","circle","generate","hash","hashBytes","chars","upperData","getFirstLetters","charObj","getCharText","stringToColor","svg","getSvg","html","outerHTML","svgHtml","text","svgTag","backgroundColor","width","height","character","textTag","textContent","AvatarComponent","externalId","readOnly","hidePasswords","Collection","l","totp","hasUris","some","canLaunch","launchUri","CollectionData","obj","toasterService","cryptoService","onAuthed","submit","masterPassword","popAsync","hashPassword","masterPasswordHash","formPromise","getTwoFactorRecover","Duo","OrganizationDuo","getTwoFactorOrganizationDuo","getTwoFactorDuo","Email","getTwoFactorEmail","U2f","getTwoFactorU2f","Authenticator","getTwoFactorAuthenticator","Yubikey","getTwoFactorYubiKey","TwoFactorVerifyComponent","ExportService","userId","LoginData","SecureNoteData","CardData","IdentityData","FieldData","AttachmentData","ph","PasswordHistoryData","CipherData","newField","LoginApi","toISOString","LoginUriApi","SecureNoteApi","CardApi","IdentityApi","FieldApi","lastUsedDate","attachments2","attachment","fileName","attachmentRequest","AttachmentRequest","CipherRequest","router","activatedRoute","titleService","previousUrl","currentUrl","events","event","NavigationEnd","titleId","rawTitle","child","firstChild","snapshot","newTitle","setTitle","getPreviousUrl","setPreviousUrl","RouterService","encryptedStringOrType","iv","mac","encType","encryptionType","headerPieces","encPieces","EncryptionType","AesCbc128_HmacSha256_B64","AesCbc256_B64","AesCbc256_HmacSha256_B64","Rsa2048_OaepSha256_B64","Rsa2048_OaepSha1_B64","decryptedValue","containerService","bitwardenContainerService","getCryptoService","getOrgKey","orgKey","decryptToUtf8","OrganizationUserStatusType","OrganizationUserType","items","searchText","prop1","prop2","prop3","SearchPipe","getDefaultDateFilters","d","Date","end","getFullYear","getMonth","getDate","setDate","start","toDateTimeLocalString","formatDateFilters","filterStart","filterEnd","isNaN","getTime","getEventInfo","ev","options","EventOptions","appInfo","getAppInfo","deviceType","getEventMessage","appIcon","appName","msg","EventType","User_LoggedIn","User_ChangedPassword","User_Updated2fa","User_Disabled2fa","User_Recovered2fa","User_FailedLogIn","User_FailedLogIn2fa","User_ClientExportedVault","Cipher_Created","formatCipherId","Cipher_Updated","Cipher_Deleted","Cipher_SoftDeleted","Cipher_Restored","Cipher_AttachmentCreated","Cipher_AttachmentDeleted","Cipher_Shared","Cipher_ClientViewed","Cipher_ClientToggledPasswordVisible","Cipher_ClientToggledHiddenFieldVisible","Cipher_ClientToggledCardCodeVisible","Cipher_ClientCopiedHiddenField","Cipher_ClientCopiedPassword","Cipher_ClientCopiedCardCode","Cipher_ClientAutofilled","Cipher_UpdatedCollections","Collection_Created","formatCollectionId","Collection_Updated","Collection_Deleted","Group_Created","formatGroupId","Group_Updated","Group_Deleted","OrganizationUser_Invited","formatOrgUserId","OrganizationUser_Confirmed","OrganizationUser_Updated","OrganizationUser_Removed","OrganizationUser_UpdatedGroups","Organization_Updated","Organization_PurgedVault","DeviceType","Android","iOS","UWP","ChromeExtension","FirefoxExtension","OperaExtension","EdgeExtension","VivaldiExtension","SafariExtension","WindowsDesktop","MacOsDesktop","LinuxDesktop","ChromeBrowser","FirefoxBrowser","OperaBrowser","SafariBrowser","VivaldiBrowser","EdgeBrowser","IEBrowser","UnknownBrowser","shortId","getShortId","cipherId","cipherInfo","makeAnchor","groupId","collectionId","organizationUserId","innerHTML","date","pad","getHours","getMinutes","num","norm","floor","abs","EventInfo","PolicyType","analytics","onUpdated","twoFactorProviderType","enabled","authed","auth","authResponse","enable","enableFunction","eventTrack","next","action","disable","promise","showDialog","TwoFactorProviderRequest","putTwoFactorOrganizationDisable","putTwoFactorDisable","TwoFactorBaseComponent","userService","requiresPaid","hasLoaded","setCiphers","selectCipher","childComponent","cipherAddEditModalRef","AddEditComponent","onSavedCipher","onDeletedCipher","onRestoredCipher","checkAccess","useTotp","canAccessPremium","accessPremium","CipherReportComponent","ViewContainerRef","TotpService","Attachment","Field","Password","model","reduce","decAttachment","decField","decPh","toCipherData","toLoginData","toSecureNoteData","toCardData","toIdentityData","toFieldData","toAttachmentData","toPasswordHistoryData","Cipher","CanLaunchWhitelist","_uri","_domain","_hostname","_host","_canLaunch","UriMatchType","RegularExpression","ImportService","searchService","cipherService","eventService","showAddNew","onAttachmentsClicked","onShareClicked","onCollectionsClicked","onCloneClicked","cipherType","pageSize","selectAll","launch","share","clone","delete","actionPromise","permanent","isDeleted","deleteCipher","refresh","restore","restoreWithServer","copy","typeI18nKey","aType","copyToClipboard","collect","select","selectCount","checkCipher","checked","getSelected","getSelectedIds","deleteWithServer","softDeleteWithServer","showFixOldAttachments","hasOldAttachments","CiphersComponent","KdfType","showText","scoreWidth","score","PasswordStrengthComponent","TwoFactorProviders","description","priority","sort","premium","tokenService","appIdService","vaultTimeoutService","setCryptoKeys","selectedTwoFactorProviderType","logIn","makePreloginKey","hashedPassword","logInHelper","logInSso","codeVerifier","redirectUrl","logInTwoFactor","twoFactorProvider","twoFactorToken","remember","ssoRedirectUrl","logInComplete","logInSsoComplete","logOut","callback","getSupportedTwoFactorProviders","providers","twoFactorProvidersData","has","supportsDuo","supportsU2f","getDefaultTwoFactorProvider","u2fSupported","providerType","providerPriority","provider","kdf","kdfIterations","postPrelogin","PreloginRequest","preloginResponse","statusCode","makeKey","authingWithSso","authingWithPassword","getTwoFactorToken","storedTwoFactorToken","getAppId","appId","deviceRequest","DeviceRequest","emailPassword","codeCodeVerifier","TokenRequest","Remember","postIdentityToken","clearState","AuthResult","twoFactor","accessToken","twoFactorResponse","twoFactorProviders2","twoFactorProviders","tokenResponse","resetMasterPassword","setTwoFactorToken","setTokens","refreshToken","setInformation","getUserId","getEmail","setKey","setKeyHash","setEncKey","privateKey","makeKeyPair","keyPair","postAccountKeys","KeysRequest","setEncPrivateKey","biometricLocked","SelectionReadOnlyRequest","syncService","showFree","showCancel","product","ProductType","Free","plan","PlanType","onSuccess","onCanceled","selfHosted","ownedBusiness","premiumAccessAddon","additionalStorage","additionalSeats","productTypes","isSelfHost","getPlans","plans","selectedPlan","isAnnual","validPlans","Custom","canBeUsedByBusiness","legacyYear","disabled","additionalStoragePriceMonthly","additionalStoragePricePerGb","seatPriceMonthly","seatPrice","additionalStorageTotal","hasAdditionalStorageOption","seatTotal","hasAdditionalSeatsOption","subTotal","basePrice","hasPremiumAccessOption","premiumAccessOptionPrice","changedProduct","selectablePlans","baseSeats","changedOwnedBusiness","TeamsMonthly","changedCountry","paymentComponent","taxComponent","cancel","files","createOrganization","fileEl","getElementById","doSubmit","tokenResult","makeShareKey","shareKey","encrypt","collectionCt","fd","FormData","append","postOrganizationLicense","OrganizationCreateRequest","collectionName","billingEmail","planType","paymentToken","businessName","additionalStorageGb","billingAddressPostalCode","billingAddressCountry","taxIdNumber","billingAddressLine1","billingAddressLine2","billingAddressCity","billingAddressState","postOrganization","OrganizationUpgradeRequest","postOrganizationUpgrade","paymentIntentClientSecret","refreshIdentityToken","fullSync","navigate","OrganizationPlansComponent","folderService","auditService","collectionService","totpService","passwordGenerationService","showRevisionDate","hasPasswordHistory","viewingPasswordHistory","passwordRevisionDisplayDate","cleanUp","totpUpdateCode","getTimeInterval","totpTick","totpInterval","setInterval","toggleFavorite","showToast","editMode","generatePassword","confirmed","getOptions","premiumRequired","upgradeOrganization","viewHistory","clearInterval","getCode","totpCode","half","totpCodeFormatted","allowOwnershipAssignment","cloneMode","ownershipOptions","intervalSeconds","epoch","round","mod","totpSec","totpDash","totpLow","storageService","onSearchTextChanged","searchPlaceholder","searchTextChanged","GroupingsComponent","selectType","usePolicies","useGroups","useDirectory","useEvents","use2fa","useApi","useBusinessPortal","useSso","selfHost","usersGetPremium","seats","maxCollections","maxStorageGb","ssoBound","identifier","Owner","Confirmed","Manager","Admin","Organization","vault","loaded","getAllOrganizations","orgs","organizations","unlinkSso","org","deleteSsoUser","leave","postLeaveOrganization","OrganizationsComponent","SelectionReadOnlyResponse","getName","lock","NavbarComponent","version","getApplicationVersion","FooterComponent","defaultErrorMessage","validationErrors","concat","getAllMessages","timeout","ValidationService","publicKey","encryptedPrivateKey","onEditedUsers","organizationUserType","organizationUserStatusType","showSelected","selectedCount","allUsers","loadUsers","getOrganizationUsers","users","entity","getGroupUsers","entityId","s","user","getCollectionUsers","accessAll","check","selectedChanged","filterSelected","selections","putGroupUsers","putCollectionUsers","EntityUsersComponent","showUser","orgUsersUserIdMap","orgUsersIdMap","defaultDates","loadEvents","clearExisting","refreshPromise","morePromise","dates","getEventsOrganizationUser","continuationToken","getEventsCipher","actingUserId","eventInfo","userName","userEmail","ip","ipAddress","EntityEventsComponent","postPurgeCiphers","PurgeVaultComponent","firstLoaded","showAdjustPayment","showAddCredit","transactionType","TransactionType","getOrganizationBilling","billing","getUserBilling","verifyBank","VerifyBankRequest","amount1","verifyAmount1","amount2","verifyAmount2","verifyBankPromise","postOrganizationVerifyBank","addCredit","paymentSourceInApp","closeAddCredit","changePayment","closePayment","balance","paymentSource","AppleInApp","GoogleInApp","invoices","transactions","UserBillingComponent","onAdded","ppButtonFormAction","buttonActionProduction","ppButtonBusinessId","businessIdProduction","ppLoading","buttonActionSandbox","businessIdSandbox","creditAmount","ppButtonCustomField","getOrganization","subject","returnUrl","location","ppButtonFormRef","BitPay","req","BitPayInvoiceRequest","credit","amount","creditAmountNumber","postBitPayInvoice","bitPayUrl","formatAmount","floatAmount","parseFloat","toFixed","AddCreditComponent","ElementRef","onAdjusted","PaymentRequest","taxInfoComponent","postAccountPayment","postOrganizationPayment","currentType","AdjustPaymentComponent","updatePromise","postAccountLicense","postOrganizationLicenseUpdate","UpdateLicenseComponent","storageGbPrice","add","interval","storageAdjustment","StorageRequest","storageGbAdjustment","postAccountStorage","postOrganizationStorage","relativeTo","AdjustStorageComponent","processResponse","UpdateTwoFactorDuoRequest","integrationKey","ikey","secretKey","skey","putTwoFactorOrganizationDuo","putTwoFactorDuo","TwoFactorDuoComponent","policyService","showPolicyWarning","filterProvider","getTwoFactorProviders","evaluatePolicies","manage","openModal","authenticatorModalRef","TwoFactorAuthenticatorComponent","updateStatus","yubikeyModalRef","TwoFactorYubiKeyComponent","duoModalRef","emailModalRef","TwoFactorEmailComponent","u2fModalRef","TwoFactorU2fComponent","recoveryCode","recoveryModalRef","TwoFactorRecoveryComponent","ref","getAll","TwoFactorAuthentication","policies","TwoFactorSetupComponent","exportService","saved","ExportComponent","exposedPasswordMap","getAllCiphers","allCiphers","exposedPasswordCiphers","passwordLeaked","exposedCount","getAllDecrypted","ExposedPasswordsReportComponent","originalCipher","isAdmin","loadCollections","loadCipher","getCipherAdmin","encryptCipher","saveCipher","putCipherAdmin","CipherCreateRequest","postCipherAdmin","deleteCipherAdmin","putDeleteCipherAdmin","PasswordHistoryView","elementRef","trueValue","falseValue","propagateChange","_","onHostChange","target","writeValue","setProperty","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","TrueFalseValueDirective","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","importService","format","successNavigate","setImportOptions","importOptions","importer","getImporter","fileContents","getFileContents","content","import","properties","getFormatInstructionTitle","results","featuredImportOptions","o","regularImportOptions","file","reader","FileReader","readAsText","evt","pre","onerror","ImportComponent","services","cipherDocs","load2fa","fetch","Request","json","categoryName","responseJson","serviceName","category","service","tfa","software","InactiveTwoFactorReportComponent","ciphersWithPasswords","passwordUseMap","reusedPasswordCiphers","ReusedPasswordsReportComponent","unsecuredCiphers","UnsecuredWebsitesReportComponent","passwordStrengthMap","passwordStrengthCache","weakPasswordCiphers","hasUsername","cacheKey","userInput","atPosition","passwordStrength","scoreKey","WeakPasswordsReportComponent","reupload","reuploadCipherAttachment","AttachmentsComponent","onEventsClicked","accessEvents","deleted","getAllFromApiForOrganization","applyFilter","searchPending","filteredCiphers","searchCiphersBasic","resetPaging","CollectionsComponent","getCollections","collectionDomains","decryptMany","unassignedCollection","getAllNested","nestedCollections","collapse","grouping","isCollapsed","bulkDelete","selectedIds","ciphersComponent","bulkDeleteModalRef","BulkDeleteComponent","cipherIds","onDeleted","bulkRestore","bulkRestoreModalRef","BulkRestoreComponent","onRestored","bulkShare","selectedCiphers","bulkShareModalRef","BulkShareComponent","onShared","bulkMove","bulkMoveModalRef","BulkMoveComponent","onMoved","BulkActionsComponent","CipherWithIdRequest","folder","FolderRequest","onCopy","copyText","selection","getSelection","rangeCount","getRangeAt","stringEndPos","newLinePos","SelectCopyDirective","colorizedPassword","isSpecial","ColorPasswordPipe","emailVerified","masterPasswordHint","culture","twoFactorEnabled","securityStamp","ProfileOrganizationResponse","ProfileResponse","NotificationsService","SettingsService","webpackEmptyAsyncContext","keys","exports","classList","remove","FrontendLayoutComponent","broadcasterService","ngZone","enterpriseUrl","run","command","unsubscribe","goToEnterprisePortal","enterpriseTokenPromise","getEnterprisePortalSignInToken","OrganizationLayoutComponent","UserLayoutComponent","fired","queryParams","qParams","errorMessage","isAuthenticated","OrganizationUserAcceptRequest","postOrganizationUserAccept","toast","save","orgName","organizationName","AcceptOrganizationComponent","HintComponent","routerService","hasKey","onSuccessfulSubmit","successRoute","LockComponent","togglePassword","authService","onSuccessfulLoginNavigate","goAfterLogIn","queryParamsSub","invite","loginRedirect","LoginComponent","DeleteRecoverRequest","postAccountRecoverDelete","RecoverDeleteComponent","TwoFactorRecoveryRequest","postTwoFactorRecover","RecoverTwoFactorComponent","showCreateOrgMessage","showTerms","layout","getPasswordScoreAlertDisplay","enforcedPolicyOptions","minComplexity","referenceData","ReferenceEventRequest","reference","cookie","pop","shift","getPoliciesByToken","policiesData","PolicyData","Policy","getMasterPasswordPolicyOptions","evaluateMasterPassword","masterPasswordScore","RegisterComponent","updatePasswordStrength","SetPasswordComponent","masterPasswordRetype","strengthResult","getPasswordStrengthUserInput","setupSubmitActions","getKdf","getKdfIterations","encKey","getEncKey","makeEncKey","remakeEncKey","performSubmitActions","masterPasswordStrengthTimeout","clearTimeout","ChangePasswordComponent","redirectUri","origin","clientId","storedIdentifier","SsoComponent","loggingIn","twoFactorRoute","changePasswordRoute","codeChallenge","returnUri","includeUserIdentifier","initiateSsoFormPromise","preValidate","buildAuthorizeUrl","authorizeUrl","sameWindow","preValidateSso","passwordOptions","uppercase","lowercase","numbers","special","codeVerifierHash","identityBaseUrl","getSsoUserIdentifier","userIdentifier","onSuccessfulLoginTwoFactorNavigate","onSuccessfulLoginChangePasswordNavigate","disableFavicon","onSuccessfulLogin","anotherMethod","twoFactorOptionsModal","TwoFactorOptionsComponent","onProviderSelected","selectedProviderType","onRecoverSelected","TwoFactorComponent","recover","TwoFactorEmailRequest","postAccountVerifyEmailToken","VerifyEmailRequest","VerifyEmailTokenComponent","VerifyDeleteRecoverRequest","postAccountRecoverDeleteToken","VerifyRecoverDeleteComponent","didScroll","pagedCollectionsCount","getUserCollections","loadMore","pagedLength","pagedCollections","pagedSize","addEditModalRef","CollectionAddEditComponent","onSavedCollection","onDeletedCollection","removeCollection","deleteCollection","usersModalRef","entityName","isSearching","isSearchable","isPaging","searching","index","splice","accessGroups","groups","getGroups","groupsResponse","getCollectionDetails","group","g","CollectionRequest","putCollection","postCollection","deletePromise","getEventsOrganization","EventsComponent","pagedGroupsCount","pagedGroups","GroupAddEditComponent","onSavedGroup","onDeletedGroup","removeGroup","deleteGroup","GroupsComponent","access","getGroupDetails","GroupRequest","putGroup","postGroup","accessPolicies","ManageComponent","statusMap","pagedUsersCount","viewEvents","pagedUsers","Invited","Accepted","confirmedCount","acceptedCount","UserAddEditComponent","onSavedUser","onDeletedUser","removeUser","groupsModalRef","UserGroupsComponent","deleteOrganizationUser","reinvite","postOrganizationUserReinvite","confirm","updateUser","mapIndex","autoConfirm","doConfirmation","confirmModalRef","UserConfirmComponent","onConfirmedUser","eventsModalRef","getUserPublicKey","publicKeyResponse","log","getFingerprint","rsaEncrypt","OrganizationUserConfirmRequest","postOrganizationUserConfirm","PeopleComponent","User","getOrganizationUser","OrganizationUserUpdateRequest","putOrganizationUser","OrganizationUserInviteRequest","emails","postOrganizationUserInvite","dontAskAgain","fingerprint","getOrganizationUserGroups","userGroups","ug","OrganizationUserUpdateGroupsRequest","groupIds","putOrganizationUserGroups","policiesEnabledMap","MasterPassword","PasswordGenerator","getPolicies","orgPolicies","op","editModalRef","PolicyEditComponent","onSavedPolicy","PoliciesComponent","policyType","masterPassMinComplexity","passwordScores","defaultTypes","getPolicy","policy","passGenDefaultType","defaultType","passGenMinLength","minLength","passGenUseUpper","useUpper","passGenUseLower","useLower","passGenUseNumbers","useNumbers","passGenUseSpecial","useSpecial","passGenMinNumbers","minNumbers","passGenMinSpecial","minSpecial","passGenMinNumberWords","minNumberWords","passGenCapitalize","capitalize","passGenIncludeNumber","includeNumber","masterPassMinLength","masterPassRequireUpper","requireUpper","masterPassRequireLower","requireLower","masterPassRequireNumbers","requireNumbers","masterPassRequireSpecial","requireSpecial","PolicyRequest","putPolicy","canUseApi","OrganizationUpdateRequest","putOrganization","taxFormPromise","deleteOrganization","deleteModalRef","DeleteOrganizationComponent","purgeVault","purgeModalRef","viewApiKey","apiKeyModalRef","ApiKeyComponent","rotateApiKey","rotateApiKeyModalRef","RotateApiKeyComponent","AccountComponent","postOrganizationApiKey","apiKey","scope","postOrganizationRotateApiKey","OrganizationBillingComponent","adjustSeatsAdd","showAdjustSeats","adjustStorageAdd","showAdjustStorage","showUpdateLicense","showDownloadLicense","showChangePlan","getOrganizationSubscription","sub","reinstate","reinstatePromise","postOrganizationReinstate","cancelPromise","postOrganizationCancel","changePlan","subscription","closeChangePlan","changed","downloadLicense","closeDownloadLicense","updateLicense","closeUpdateLicense","updated","adjustSeats","closeSeats","adjustStorage","closeStorage","cancelled","cancelAtEndDate","upcomingInvoice","storageGb","storagePercentage","OrganizationSubscriptionComponent","onChanged","ChangePlanComponent","onDownloaded","installationId","getOrganizationLicense","license","licenseString","JSON","stringify","saveFile","DownloadLicenseComponent","seatAdjustment","SeatRequest","postOrganizationSeat","AdjustSeatsComponent","access2fa","SettingsComponent","duoComp","getTwoFactorOrganizationProviders","qrScript","UpdateTwoFactorAuthenticatorRequest","putTwoFactorAuthenticator","QRious","element","sendEmail","emailPromise","postTwoFactorEmailSetup","sentEmail","UpdateTwoFactorEmailRequest","putTwoFactorEmail","print","w","open","write","formatString","keyIdAvailable","keysConfiguredCount","u2fScript","u2fResponse","UpdateTwoFactorU2fRequest","deviceResponse","putTwoFactorU2f","removePromise","UpdateTwoFactorU2fDeleteRequest","deleteTwoFactorU2f","readKey","challengePromise","getTwoFactorU2fChallenge","challenge","readDevice","u2fChallenge","resetU2f","u2f","register","attestation","u2fListening","errorCode","u2fError","listening","k","configured","compromised","nfc","UpdateTwoFactorYubioOtpRequest","key1","key2","key3","key4","key5","putTwoFactorYubiKey","disablePromise","existingKey","padRight","max","getExportData","getOrganizationExport","getFileName","collectEvent","sizeName","LoginUriData","AttachmentView","view","decryptToBytes","decValue","SymmetricCryptoKey","macKey","keyB64","encKeyB64","macKeyB64","LoginUri","toLoginUriData","onError","appFallbackSrc","FallbackSrcDirective","accessReports","ToolsComponent","changeDetectorRef","groupingsComponent","successfully","detectChanges","selectedAll","reload","selectedTrash","filterDeleted","selectedType","filterCipherType","selectedCollectionId","filterCollection","clearGroupingFilters","clearFilters","go","filterSearchText","editCipherAttachments","attachmentsModalRef","madeAttachmentChanges","onUploadedAttachment","onDeletedAttachment","editCipherCollections","collectionsModalRef","onSavedCollections","addCipher","component","editCipher","cloneCipher","replaceUrl","VaultComponent","saveCipherAttachment","saveAttachmentWithServer","cipherDomain","deleteCipherAttachment","attachmentId","deleteCipherAttachmentAdmin","allowSelectNone","loadCipherCollections","saveCollections","CipherCollectionsRequest","putCipherCollectionsAdmin","deleteCiphers","deleteCiphersAdmin","deleteManyWithServer","softDeleteManyWithServer","deleteRequest","CipherBulkDeleteRequest","deleteManyCiphersAdmin","putDeleteManyCiphersAdmin","ids","moveManyWithServer","restoreManyWithServer","nonShareableCount","shareableCiphers","writeableCollections","allCollections","filterCollections","checkedCollectionIds","shareManyWithServer","deauthorizeSessions","deauthModalRef","DeauthorizeSessionsComponent","deleteAccount","DeleteAccountComponent","postSecurityStamp","getProfile","profile","UpdateProfileRequest","putProfile","ProfileComponent","tokenSent","hasEncKey","newEmail","EmailTokenRequest","postEmailToken","EmailRequest","newKey","newMasterPasswordHash","newEncKey","postEmail","reset","ChangeEmailComponent","rotateEncKey","rotateEncKeyClicked","currentMasterPassword","PasswordRequest","postPassword","updateKey","getPrivateKey","encPrivateKey","UpdateKeyRequest","FolderWithIdRequest","postAccountKey","PBKDF2_SHA256","kdfOptions","KdfRequest","postAccountKdf","ChangeKdfComponent","orgPlansComponent","CreateOrganizationComponent","custom","getSettingsDomains","equivalentDomains","globalEquivalentDomains","domains","excluded","toggleExcluded","globalDomain","customize","UpdateDomainsRequest","excludedGlobalEquivalentDomains","d2","putSettingsDomains","indexTrackBy","DomainRulesComponent","vaultTimeout","vaultTimeoutAction","vaultTimeouts","localeOptions","supportedTranslationLocales","locale","localeNames","disableIcons","enableGravatars","enableFullWidth","startingLocale","setVaultTimeoutOptions","vaultTimeoutActionChanged","newValue","OptionsComponent","ngAfterContentInit","LinkSsoComponent","premiumPrice","getPremium","getEmailVerified","finalizePremium","postPremium","paymentResponse","PremiumComponent","getUserSubscription","usingInAppPurchase","postReinstatePremium","postCancelPremium","UserSubscriptionComponent","breachedAccounts","checkedUsername","BreachReportComponent","history","historyModalRef","PasswordGeneratorHistoryComponent","lengthChanged","minNumberChanged","minSpecialChanged","PasswordGeneratorComponent","saveOptions","regenerate","favorites","showVerifyEmail","showBrowserOutdated","showUpdateKey","showPremiumCallout","organizationsComponent","selectedFavorites","filterFavorites","selectedFolder","selectedFolderId","filterFolder","onReuploadedAttachment","shareCipher","shareModalRef","ShareComponent","onSharedCipher","folderAddEditModalRef","FolderAddEditComponent","onSavedFolder","loadFolders","editFolder","onDeletedFolder","updateKeyModalRef","UpdateKeyComponent","makeRequest","getKey","postAccountVerifyEmail","VerifyEmailComponent","canActivate","isOwner","OrganizationGuardService","allowedTypes","OrganizationTypeGuardService","isLocked","UnauthGuardService","routerState","promptBiometric","AuthGuardService","logoutCallback","customUserAgent","urlsSet","isWebClient","isDesktopClient","usingBaseUrl","device","getDevice","setUrls","urls","apiBaseUrl","eventsBaseUrl","api","headers","Headers","qsStringify","toIdentityToken","identityClientId","credentials","getCredentials","cache","isJsonResponse","IdentityTokenResponse","TwoFactorProviders2","clearTwoFactorToken","IdentityTwoFactorResponse","ErrorResponse","doRefreshToken","BillingResponse","SubscriptionResponse","TaxInfoResponse","PreloginResponse","setPassword","getAccountRevisionDate","postPasswordHint","postRegister","PaymentResponse","postIapCheck","postAccountVerifyPassword","getFolder","FolderResponse","postFolder","putFolder","deleteFolder","getCipher","CipherResponse","getCiphersOrganization","ListResponse","postCipher","postCipherCreate","putCipher","deleteManyCiphers","putMoveCiphers","putShareCipher","putShareCiphers","putCipherCollections","path","postImportCiphers","postImportOrganizationCiphers","putDeleteCipher","putDeleteManyCiphers","putRestoreCipher","putRestoreCipherAdmin","putRestoreManyCiphers","postCipherAttachment","postCipherAttachmentAdmin","postShareCipherAttachment","CollectionGroupDetailsResponse","CollectionResponse","dr","deleteCollectionUser","GroupDetailsResponse","GroupResponse","deleteGroupUser","PolicyResponse","OrganizationUserDetailsResponse","OrganizationUserUserDetailsResponse","PlanResponse","postImportDirectory","DomainsResponse","getSync","SyncResponse","TwoFactorProviderResponse","TwoFactorAuthenticatorResponse","TwoFactorEmailResponse","TwoFactorDuoResponse","TwoFactorYubiKeyResponse","TwoFactorU2fResponse","ChallengeResponse","TwoFactorRecoverResponse","postTwoFactorEmail","OrganizationResponse","OrganizationSubscriptionResponse","ApiKeyResponse","getEvents","addEventParameters","EventResponse","postEventsCollect","getActiveBearerToken","authHeader","UserKeyResponse","getHibpBreach","BreachAccountResponse","getToken","tokenNeedsRefresh","nativeFetch","handleError","hasResponse","requestInit","tokenError","getRefreshToken","decodedToken","decodeToken","grant_type","client_id","refresh_token","typeHeader","AttachmentResponse","h","PasswordHistoryResponse","CollectionDetailsResponse","GlobalDomainResponse","businessAddress1","businessAddress2","businessAddress3","businessCountry","businessTaxNumber","nameLocalizationKey","descriptionLocalizationKey","baseStorageGb","maxUsers","maxAdditionalSeats","maxAdditionalStorage","trialPeriodDays","hasSelfHost","hasPolicies","hasGroups","hasDirectory","hasEvents","hasTotp","has2fa","hasApi","hasSso","upgradeSortOrder","displaySortOrder","stripePlanId","stripeSeatPlanId","stripeStoragePlanId","stripePremiumAccessPlanId","storageName","BillingSubscriptionResponse","BillingSubscriptionUpcomingInvoiceResponse","trialEndDate","periodStartDate","periodEndDate","cancelledDate","BillingSubscriptionItemResponse","quantity","makeAndGetAppId","getAnonymousAppId","existingId","guid","AppIdService","hashStart","hashEnding","leakedHashes","v","throttle","Keys","DomainMatchBlacklist","Set","settingsService","sortedCiphersCache","SortedCiphersCache","sortCiphersByLastUsed","_decryptedCipherCache","clearIndex","indexCiphers","clearCache","decryptedCipherCache","existingCipher","hasFields","existingHiddenFields","Hidden","ef","matchedField","encryptObjProperty","encryptCipherData","encryptFields","encryptPasswordHistories","encryptAttachments","attachmentsModel","encAttachments","fieldsModel","encFields","encryptField","encField","fieldModel","Boolean","phModels","encPhs","encryptPasswordHistory","encPh","phModel","decCiphers","getLocaleSortingFunction","getAllDecryptedForGrouping","groupingId","getAllDecryptedForUrl","includeOtherTypes","eqDomainsPromise","getEquivalentDomains","eqDomains","matches","eqDomain","matchingDomains","defaultMatch","Domain","domainUrlHost","Host","urlHost","Exact","StartsWith","Never","getLastUsedForUrl","getCipherForUrl","getNextCipherForUrl","updateLastUsedDate","ciphersLocalData","cached","saveNeverDomain","saveWithServer","upsert","shareWithServer","attachmentPromises","shareAttachmentWithServer","encCipher","CipherShareRequest","encCiphers","CipherBulkShareRequest","unencryptedFile","admin","readAsArrayBuffer","saveAttachmentRawWithServer","cData","filename","encFileName","dataEncKey","encryptToBytes","encData","blob","Blob","filepath","contentType","getSingleMessage","saveCollectionsWithServer","CipherBulkMoveRequest","deleteAttachment","deleteAttachmentWithServer","aLastUsed","bLastUsed","bothNotNull","sortCiphersByLastUsedThenName","aName","bName","softDelete","setDeletedDate","clearDeletedDate","CipherBulkRestoreRequest","attachmentView","attachmentResponse","arrayBuffer","buf","decryptFromBytes","decBuf","theObj","modelProp","lastUsed","isCached","addCiphers","getLastUsed","getNext","sequentialize","propertyKey","descriptor","originalMethod","caches","getCache","argsCacheKey","args","onFinally","decryptedCollectionCache","decCollections","nodes","collectionCopy","ServiceUtils","nestedTraverse","getNested","getTreeNodeObject","nodeTree","partIndex","delimiter","partName","node","TreeNode","children","newPartName","attachToWindow","attachToGlobal","ContainerService","secureStorageService","option","biometric","keyHash","setOrgKeys","orgKeys","getKeyHash","encKeyCipher","decEncKey","stretchKey","getPublicKey","rsaExtractPublicKey","keyFingerprint","hkdfExpand","userFingerprint","hashPhrase","getOrgKeys","encOrgKeys","rsaDecrypt","clearKey","legacyEtmKey","clearKeyHash","clearEncKey","memoryOnly","clearKeyPair","clearOrgKeys","clearPinProtectedKey","clearKeys","toggleKey","salt","pbkdf2","makeKeyFromPin","pin","protectedKeyCs","makePinKey","pinKey","decKey","randomBytes","rsaGenerateKeyPair","publicB64","privateEnc","getKeyForEncryption","theKey","buildEncKey","plainValue","plainBuf","aesEncrypt","encObj","encValue","macLen","encBytes","cipherString","aesDecryptToBytes","decipher","aesDecryptToUtf8","encBuf","ctBytes","ivBytes","macBytes","randomNumber","min","rval","range","bitsNeeded","ceil","log2","bytesNeeded","mask","pow","byteArray","EncryptedObject","macData","hmac","keyForEnc","resolveLegacyKey","fastParams","aesDecryptFastParameters","hmacFast","computedMac","compareFast","aesDecryptFast","aesDecrypt","Rsa2048_OaepSha256_HmacSha256_B64","Rsa2048_OaepSha1_HmacSha256_B64","alg","prk","info","hashLen","okm","previousT","minimumEntropy","entropyPerWord","EEFLongWordList","numWords","hashArr","entropyAvailable","phrase","hashNumber","bigInt","fromArray","remainder","divide","encKeyEnc","notificationsService","getWebVaultUrl","webVaultUrl","setUrlsFromStorage","urlsObj","icons","notifications","webVault","enterprise","envUrls","EnvironmentUrls","apiUrl","identityUrl","notificationsUrl","eventsUrl","formatUrl","decryptedFolderCache","Folder","decFolders","noneFolder","folderCopy","FolderData","cId","updates","systemLanguage","localesDirectory","getLocalesJson","defaultMessages","localeMessages","translationLocale","Intl","Collator","numeric","sensitivity","loadMessages","translate","messagesObj","formattedLocale","locales","placeholders","placeProp","replaceToken","replaceContent","DefaultOptions","ambiguous","minNumber","minUppercase","minLowercase","wordSeparator","generatePassphrase","sanitizePasswordLength","positions","shuffleArray","allCharSet","lowercaseCharSet","uppercaseCharSet","numberCharSet","specialCharSet","positionChars","randomCharIndex","listLength","wordList","wordIndex","appendRandomNumberToRandomWord","optionsCache","enforcePasswordGeneratorPoliciesOnOptions","enforcedOptions","getPasswordGeneratorPolicyOptions","useUppercase","useLowercase","numberCount","specialCount","PasswordGeneratorPolicyOptions","currentPolicy","getHistory","encrypted","decryptHistory","addHistory","currentHistory","matchesPrevious","unshift","GeneratedPasswordHistory","now","encryptHistory","newHistory","userInputs","globalUserInputs","finalUserInputs","zxcvbn","normalizeOptions","item","decrypted","array","forGeneration","minUppercaseCalc","minLowercaseCalc","minNumberCalc","minSpecialCalc","settingsCache","getSettingsKey","setEquivalentDomains","setSettingsKey","getSettings","settings","purge","syncInProgress","getLastSync","lastSync","setLastSync","toJSON","forceSync","allowThrowOnError","syncStarted","needsSyncing","syncCompleted","needsSyncResult","needsSync","syncProfile","syncFolders","syncCollections","syncCiphers","syncSettings","syncPolicies","syncUpsertFolder","notification","isEdit","localFolder","remoteFolder","syncDeleteFolder","syncUpsertCipher","shouldUpdate","localCipher","checkCollections","remoteCipher","syncDeleteCipher","getSecurityStamp","stamp","setSecurityStamp","OrganizationData","replaceOrganizations","setToken","setRefreshToken","skipTokenStorage","toggleTokens","clearToken","decoded","getTokenExpirationDate","setUTCSeconds","tokenSecondsRemaining","offsetSeconds","msRemaining","valueOf","minutes","email_verified","getIssuer","iss","B32Chars","SteamChars","period","digits","keyB32","isOtpAuth","isSteamAuth","digitParams","periodParam","algParam","timeHex","leftPad","decToHex","timeBytes","keyBytes","b32ToBytes","sign","offset","otp","fullCode","trunc","isAutoCopyEnabled","b32ToHex","cleanedInput","bits","hex","byteIndex","chunk","signature","clearOrganizations","lockedCallback","loggedOutCallback","checkOnInterval","checkVaultTimeout","isBiometricLockSet","isViewOpen","lockTimeout","lastActive","vaultTimeoutSeconds","allowSoftLock","isPinLockSet","build","CipherWithIds","CollectionWithId","FolderWithId","NotificationType","enableProdMode","platformBrowser","bootstrapModule","preserveWhitespaces","registerLocaleData","AppModule","AppComponent","BrowserModule","BrowserAnimationsModule","FormsModule","AppRoutingModule","ServicesModule","Angulartics2Module","forRoot","pageTracking","clearQueryParams","ToasterModule","InfiniteScrollModule","DragDropModule","BlurClickDirective","BoxRowDirective","SearchCiphersPipe","routes","pathMatch","redirectTo","RouterModule","useHash","subscribers","messageCallback","PasswordHintRequest","showPassword","pinLock","webVaultHostname","invalidPinAttempts","pinSet","supportsBiometric","biometricLock","vaultUrl","failed","decPin","setKeyAndContinue","passwordValid","storedKeyHash","unlockBiometric","authenticateBiometric","doContinue","rememberEmail","launchSsoBrowser","ssoRedirectUri","ssoCodeVerifier","webUrl","confirmMasterPassword","hint","useLowerKdf","isIE","RegisterRequest","orgInvite","confirmField","syncLoading","SetPasswordRequest","onSuccessfulChangePassword","choose","Window","backdrop","className","addEventListener","u2fReady","initU2f","twoFactorEmail","loginRoute","customWebVaultUrl","cleanupU2f","providerData","Challenge","challenges","Challenges","keyHandle","DuoWebSDK","iframe","sig_request","Signature","submit_callback","sig","stop","doToast","cleanup","getDeviceString","pushToken","codes","code_verifier","redirect_uri","deviceIdentifier","deviceName","twoFactorRemember","errorCallback","infoCallback","parseFunction","parseMessage","connectorLink","base64Encode","sendMessage","contentWindow","postMessage","removeEventListener","validMessage","onSaved","downloadFile","getExport","prefix","csv","onCancelled","onEditAttachments","onShareCipher","onEditCollections","onGeneratePassword","showCardCode","fieldType","addFieldType","currentDate","typeOptions","cardBrandOptions","cardExpMonthOptions","identityTitleOptions","addFieldTypeOptions","uriMatchOptions","myEmail","addEditCipherInfo","organizationChanged","previousCipherId","addUri","removeUri","addField","removeField","trackByFunction","editCollections","restorePromise","restoreCipher","toggleCardCode","toggleFieldValue","showValue","toggleUriOptions","loginUriMatchChanged","drop","moveItemInArray","previousIndex","currentIndex","checkPassword","checkPasswordPromise","deletePromises","reuploadPromises","hasUpdatedKey","download","downloading","canAccessAttachments","foundAttachment","a2","activeCipherId","onCipherClicked","onCipherRightClicked","onAddCipher","onAddCipherOptions","pagedCiphers","searchTimeout","pagedCiphersCount","refreshing","deletedFilter","searchCiphers","rightClickCipher","addCipherOptions","selectedCollectionIds","showFolders","showCollections","showFavorites","showTrash","onAllClicked","onFavoritesClicked","onTrashClicked","onCipherTypeClicked","onFolderClicked","onAddFolder","onEditFolder","onCollectionClicked","setLoaded","collapsedGroupings","nestedFolders","clearSelections","selectFavorites","selectTrash","selectFolder","selectCollection","idPrefix","showSelect","onSelected","avoidAmbiguous","optionsResponse","sliderChanged","sliderInput","copyOptions","toggleOptions","cipherView","language","BroadcasterMessagingService","WebPlatformUtilsService","HtmlStorageService","MemoryStorageService","WebCryptoFunctionService","expired","eventLoggingService","Analytics","initFactory","htmlEl","documentElement","theme","useValue","APP_INITIALIZER","useFactory","deps","LOCALE_ID","subscriber","arg","localStorageKeys","localStorageStartsWithKeys","memoryStorageStartsWithKeys","memoryStorage","isLocalStorage","localStorage","getItem","isMemoryStorage","sessionStorage","setItem","removeItem","swKey","BillingSourceResponse","BillingTransactionResponse","BillingInvoiceResponse","cardBrand","needsVerification","pdfUrl","paid","createdDate","refunded","partiallyRefunded","refundedAmount","details","addedDate","breachDate","dataClasses","isActive","isVerified","logoPath","modifiedDate","pwnCount","identityResponse","errorModel","responseErrorModel","messages","lastSep","lastIndexOf","access_token","expiresIn","expires_in","tokenType","token_type","OrganizationUserResponse","userProfile","taxIdType","KeyResponse","limit","throttleKey","allThrottles","getThrottles","throttles","argsThrottleKey","queue","exec","comparator","sortedCiphersByUrl","timeouts","Ciphers","resetTimer","lastUsedIndex","nextIndex","inEffect","filePath","store","browserCache","chrome","isFirefox","isChrome","isEdge","isOpera","isVivaldi","isSafari","isMacAppStore","analyticsId","rel","click","blobData","blobOptions","fileNameLower","doDownload","endsWith","msSaveOrOpenBlob","msSaveBlob","createObjectURL","position","confirmText","cancelText","iconClasses","iconHtmlStr","fire","heightAuto","buttonsStyling","iconHtml","showCancelButton","cancelButtonText","showConfirmButton","confirmButtonText","clipboardData","setData","queryCommandSupported","textarea","copyEl","contains","execCommand","readFromClipboard","AnalyticsIds","gaFilter","dependencyResolver","gaTrackingId","defaultDisabled","appVersion","GoogleAnalyticsObject","param1","param2","ga","gaAnonAppId","gaTrackPageView","hitType","page","gaTrackEvent","XMLHttpRequest","eventCategory","eventAction","eventLabel","eventValue","cleanPagePath","pagePath","paramIndex","pathParts","newPathParts","uploadEvents","eventType","uploadImmediately","orgIds","eventCollection","EventData","EventRequest","clearEvents","buildCommonCipher","unparse","collectionPromises","decCol","cipherPromises","decCipher","extension","padNumber","getSeconds","padCharacter","numString","login_uri","login_username","login_password","login_totp","template","toView","getImportOptions","importResult","halfway","last","badData","postImport","getImporterInstance","BitwardenCsvImporter","BitwardenJsonImporter","LastPassCsvImporter","KeePassXCsvImporter","AviraCsvImporter","BlurCsvImporter","SafeInCloudXmlImporter","PadlockCsvImporter","KeePass2XmlImporter","ChromeCsvImporter","FirefoxCsvImporter","UpmCsvImporter","SaferPassCsvImporter","MeldiumCsvImporter","OnePassword1PifImporter","OnePasswordWinCsvImporter","KeeperCsvImporter","PasswordDragonXmlImporter","EnpassCsvImporter","EnpassJsonImporter","PasswordSafeXmlImporter","DashlaneJsonImporter","MSecureCsvImporter","StickyPasswordXmlImporter","TrueKeyCsvImporter","ClipperzHtmlImporter","RoboFormCsvImporter","AscendoCsvImporter","PasswordBossJsonImporter","ZohoVaultCsvImporter","SplashIdCsvImporter","PassKeepCsvImporter","GnomeJsonImporter","PasswordAgentCsvImporter","PasspackCsvImporter","PassmanJsonImporter","AvastCsvImporter","AvastJsonImporter","FSecureFskImporter","KasperskyTxtImporter","RememBearCsvImporter","PasswordWalletTxtImporter","MykiCsvImporter","SecureSafeCsvImporter","LogMeOnceCsvImporter","BlackBerryCsvImporter","ButtercupCsvImporter","CodebookCsvImporter","EncryptrCsvImporter","YotiCsvImporter","ImportCiphersRequest","KvpRequest","ImportOrganizationCiphersRequest","fieldLower","web","logins","custName","note","pwd","loginName","cards","holderName","cardNumber","cvv","expirationDate","website","secondary_username","col","addCollection","collectionIndex","delimPosition","groupingsMap","fav","extra","OfficialProps","processingCustomFields","entry","currentVersion","actionType","labelLower","Category","Favorite","Entry","Note","Username","TOTP","Website","Phone","PIN","Account","HandledResults","ADDRESS","processAddress","AUTHENTIFIANT","processAuth","BANKSTATEMENT","processNote","IDCARD","PAYMENTMEANS_CREDITCARD","processCard","IDENTITY","processIdentity","credential","secondaryLogin","fullName","nameParts","pseudo","addressName","addressFull","zipcode","owner","nameProperty","Label","Notes","CVV","expiry","Expiry","expParts","firstRow","containsField","fieldValue","fieldName","fieldNameLower","foldersMap","foldersIndexMap","folderTree","buildFolderTree","flattenFolderTree","template_type","processLogin","sensitive","uuid","parent_uuid","titlePrefix","tree","creditNumber","creditCvv","creditExpiry","keyRing","display_name","secret","attributes","attr","username_value","notesData","applicationsData","websitesData","workingData","parseDataCategory","applications","websites","nameKey","itemComment","itemCommentKey","colonIndex","rootGroup","traverse","isRootNode","groupPrefixName","groupName","nameEl","cipherIndex","entryString","valueEl","keyEl","attrs","ProtectInMemory","Title","Group","buildBaseCipher","parseSecureNote","parseCard","parseIdentity","ccnum","cardCipher","profilename","firstname","lastname","ccname","cccsc","ccexp","ccexpParts","middlename","zip","extraParts","processedNote","typeParts","mappedData","parseSecureNoteMapping","monthString","processingNotes","extraPart","DisplayName","UserName","Url","nickname","additionalInfo","twoFactAuthToken","cardName","exp_month","exp_year","firstAddressLine","secondAddressLine","zipCode","line","trashed","processStandardItem","processWinOpVaultItem","overview","URLs","parsePasswordHistory","notesPlain","parseFields","sections","section","openContents","faveIndex","typeName","secureContents","maxSize","time","designationKey","valueKey","fieldDesignation","street","IgnoredProperties","getProp","altUsername","lowerProp","View","tags","tag","getValue","custom_fields","customField","field_type","tagsJson","Tags","tagJson","__parsed_extra","fieldsJson","extraFields","fieldJson","newVersion","altFormat","login_url","identifiers","valObj","expDate","cf","records","record","categoryText","accountName","tagName","passwordSafe","notesDelimiter","getAttribute","entries","groupText","trash","cardholder","verification","expiryMonth","expMonthNumber","expiryYear","expYearNumber","Name","Pwd","Rf_fields","labelEl","cardEl","labelIdEl","labelId","fieldEl","notesEl","Comment","parseFieldsToNotes","startIndex","loginNodes","loginNode","accountId","usernameText","passwordText","titleText","linkText","notesText","accountLogin","account","parentElement","buildGroupText","PropertiesToIgnore","memo","kind","expiryDate","document_content","ChamberName","parseData","SecretData","CustomData","connected","inactive","reconnectTimer","signalrConnection","off","signalR","HubConnectionBuilder","withUrl","accessTokenFactory","skipNegotiation","transport","HttpTransportType","WebSockets","withHubProtocol","signalRMsgPack","MessagePackHubProtocol","processNotification","NotificationResponse","onclose","reconnect","isAuthedAndUnlocked","updateConnection","sync","reconnectFromActivity","disconnectFromInactivity","contextId","payloadUserId","UserId","myUserId","SyncCipherCreate","SyncCipherUpdate","SyncCipherDelete","SyncLoginDelete","SyncFolderCreate","SyncFolderUpdate","SyncFolderDelete","SyncVault","SyncCiphers","SyncSettings","SyncOrgKeys","LogOut","SyncCipherNotification","SyncFolderNotification","UserNotification","policyCache","MasterPasswordPolicyOptions","newPassword","toLocaleLowerCase","toLocaleUpperCase","indexing","builder","lunr","Builder","boost","extractor","uriExtractor","fieldExtractor","attachmentExtractor","timeEnd","isArray","every","getIndexForSearch","ciphersMap","searchResults","Query","wildcard","LEADING","TRAILING","q","tokenizer","term","joined","protocolIndex","queryIndex","crypto","subtle","ua","isOldSafari","algorithm","iterations","forgeLen","passwordBytes","toByteString","saltBytes","derivedKeyBytes","forge","wcLen","passwordBuf","toBuf","saltBuf","pbkdf2Params","toWebCryptoAlgorithm","importKey","impKey","deriveBits","md","md5","sha1","valueBytes","update","digest","valueBuf","signingAlgorithm","mac1","mac2","arr1","arr2","getBytes","rand","Uint32Array","util","createBuffer","putInt32","DecryptParameters","meta","encKeyByteString","macKeyByteString","decode64","parameters","dataBuffer","createDecipher","finish","rsaParams","impPrivateKey","exportKey","jwkPrivateKey","jwkPublicKeyParams","kty","ext","impPublicKey","modulusLength","publicExponent","generateKey","getRandomValues","encodeUtf8","angulartics2GoogleAnalytics","toasterConfig","ToasterConfig","showCloseButton","mouseoverTimerStop","animation","lastActivity","idleTimer","isIdle","runOutsideAngular","onmousemove","recordActivity","onmousedown","ontouchstart","onclick","onscroll","onkeypress","setFullWidth","idleStateChanged","sanitize","SecurityContext","HTML","bodyOutputType","BodyOutputType","TrustedHtml","trustedHtml","blur","elRef","formEls","formEl","inputEl"],"mappings":"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MopF,MAAK,UAAC1zC,IAEpB,EARA,CAJA,OAIsCvxB,YAAzB,EAAAmlE,oB,8ZCJb,IAIA,2B,+CAQA,OARkC,OAI9B,YAAAF,MAAA,SAAM1zC,GACFt1C,KAAKJ,GAAK01C,EAAE11C,GACZ,YAAMopF,MAAK,UAAC1zC,IAEpB,EARA,CAJA,OAIkCsoC,QAArB,EAAAuL,gB,8ECJb,SAAYC,GACR,2CACA,2CACA,yCACA,2CACA,iCAEA,6BACA,iCACA,2CACA,2CACA,2CACA,oCAEA,wBAdJ,CAAY,EAAAA,mBAAA,EAAAA,iBAAgB,M,0HCA5B,WAGA,OACA,OACA,OAGA,EAAQ,K,qBAKJ,EAAAC,iBAGJ,EAAAC,kBAAyBC,gBAAgB,EAAD,UAAY,CAAEC,qBAAqB,K,iGChB3E,OAEA,WACA,QAEA,SAEA,SAEA,SAEA,GADA,KACA,OACA,QACA,SAEA,SAEA,SACA,QAEA,SACA,SAEA,SACA,SACA,SACA,SACA,SAEA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,SAGA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SAEA,SACA,SACA,SACA,SACA,SACA,SACA,UACA,UACA,UACA,UACA,UAIA,UACA,UAGA,UACA,UAGA,UAGA,UACA,UAGA,UAIA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UAEA,SACA,UAEA,SACA,SACA,SACA,WACA,WACA,UACA,SACA,UACA,SACA,SACA,UAEA,UACA,SACA,WACA,UAEA,QACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,W,yBAEA,GAAAC,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAY,SAC/B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAY,SAC/B,GAAAA,mBAAmB,WAAY,SAC/B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAU,MAC7B,GAAAA,mBAAmB,WAAY,SAC/B,GAAAA,mBAAmB,WAAY,SAE/B,gC,wCAoMaC,EAAS,WAFN,EAAAC,gB,8DAEHD,IAAS,UAHP,GAAE,SAhMJ,CACL,EAAAE,cACA,EAAAC,wBACA,EAAAC,YACA,EAAAC,iBACA,EAAAC,eACA,EAAAC,mBAAmBC,QAAQ,CACvBC,aAAc,CACVC,kBAAkB,KAG1B,EAAAC,cAAcH,UACd,EAAAI,qBACA,EAAAC,mB,EAdR,GAoMa,EAAAb,c,iEAAAA,GAAS,eAnLd,GAAAroF,mBACA,EAAAw8C,4BACA,GAAAwQ,iBACA,EAAA9N,qBACA,GAAArS,mBACA,GAAApb,iBACA,GAAA4b,uBACA,EAAAgjB,qBACA,GAAAliB,uBACA,GAAAzuC,mBACA,EAAA4oF,aACA,GAAA3xC,qBACA,GAAAjlC,mBACA,EAAA4Q,gBACA,GAAA6mE,mBACA,GAAAC,gBACA,GAAA3qB,sBACA,GAAAtlB,qBACA,GAAAhB,oBACA,GAAAc,kBACA,GAAAT,qBACA,GAAAK,mBACA,GAAA1wC,iBACA,GAAAqyD,qBACA,GAAAgB,mBACA,GAAAxb,wBACA,EAAAwP,oBACA,GAAAr5B,iBACA,GAAAkhB,qBACA,GAAA6C,kBACA,GAAAwhB,4BACA,GAAAtC,6BACA,GAAAE,uBACA,EAAA/M,4BACA,GAAAkQ,qBACA,EAAAxM,yBACA,GAAAzf,gBACA,GAAAQ,gCACA,GAAAokB,qBACA,GAAAgL,uBACA,EAAAn6B,gBACA,EAAAgV,wBACA,GAAAvX,mBACA,EAAA+Y,cACA,GAAA59C,SACA,GAAA+X,cACA,GAAA89B,gBACA,GAAAc,iCACA,GAAArmC,uBACA,GAAAuuD,iBACA,EAAA5gB,cACA,EAAAQ,eACA,EAAA3nC,eACA,EAAAmwB,gBACA,GAAA03B,iBACA,mBACA,oBACA,kBACA,GAAAnQ,6BACA,GAAAvsB,2BACA,GAAAwuB,kCACA,wBACA,oBACA,6BACA,wBACA,wBACA,uBACA,kBACA,mBACA,mCACA,mBACA,oCACA,wBACA,sBACA,kBACA,uBACA,kBACA,kBACA,sBACA,oBACA,kCACA,yBACA,qBACA,kBACA,2BACA,uBACA,uBACA,sBACA,GAAA5pB,uBACA,EAAAiW,4BACA,oCACA,kBACA,gCACA,GAAAqjB,2BACA,GAAAJ,kCACA,EAAApoC,0BACA,GAAA5Z,iBACA,GAAAqhD,iBACA,GAAArE,iBACA,GAAAvwB,oBACA,EAAAoU,uBACA,EAAAG,0BACA,EAAAoB,kBACA,GAAApJ,+BACA,GAAAyzC,kBACA,GAAApgE,WACA,GAAA8wB,oBACA,GAAAwW,kBACA,GAAA0P,eACA,EAAA5f,aACA,GAAAvxC,mBACA,GAAAQ,kBACA,GAAAoP,iBACA,GAAA42C,eACA,GAAA1iB,wBACA,GAAAvD,gCACA,EAAAgT,mBACA,GAAAzT,sBACA,GAAAe,wBACA,EAAAsS,0BACA,GAAAjS,2BACA,GAAAK,wBACA,GAAAR,sBACA,GAAAprB,yBACA,GAAA+qB,0BACA,GAAAsG,i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","file":"app/main.cd3fdd91e1a63cf3ead5.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([703,2]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export abstract class I18nService {\n    locale: string;\n    supportedTranslationLocales: string[];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames: Map<string, string>;\n    t: (id: string, p1?: string, p2?: string, p3?: string) => string;\n    translate: (id: string, p1?: string, p2?: string, p3?: string) => string;\n}\n","import { PolicyType } from '../enums/policyType';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorU2fDeleteRequest } from '../models/request/updateTwoFactorU2fDeleteRequest';\nimport { UpdateTwoFactorU2fRequest } from '../models/request/updateTwoFactorU2fRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport {\n    ChallengeResponse,\n    TwoFactorU2fResponse,\n} from '../models/response/twoFactorU2fResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nexport abstract class ApiService {\n    urlsSet: boolean;\n    apiBaseUrl: string;\n    identityBaseUrl: string;\n    eventsBaseUrl: string;\n\n    setUrls: (urls: EnvironmentUrls) => void;\n    postIdentityToken: (request: TokenRequest) => Promise<IdentityTokenResponse | IdentityTwoFactorResponse>;\n    refreshIdentityToken: () => Promise<any>;\n\n    getProfile: () => Promise<ProfileResponse>;\n    getUserBilling: () => Promise<BillingResponse>;\n    getUserSubscription: () => Promise<SubscriptionResponse>;\n    getTaxInfo: () => Promise<TaxInfoResponse>;\n    putProfile: (request: UpdateProfileRequest) => Promise<ProfileResponse>;\n    putTaxInfo: (request: TaxInfoUpdateRequest) => Promise<any>;\n    postPrelogin: (request: PreloginRequest) => Promise<PreloginResponse>;\n    postEmailToken: (request: EmailTokenRequest) => Promise<any>;\n    postEmail: (request: EmailRequest) => Promise<any>;\n    postPassword: (request: PasswordRequest) => Promise<any>;\n    setPassword: (request: SetPasswordRequest) => Promise<any>;\n    postSecurityStamp: (request: PasswordVerificationRequest) => Promise<any>;\n    deleteAccount: (request: PasswordVerificationRequest) => Promise<any>;\n    getAccountRevisionDate: () => Promise<number>;\n    postPasswordHint: (request: PasswordHintRequest) => Promise<any>;\n    postRegister: (request: RegisterRequest) => Promise<any>;\n    postPremium: (data: FormData) => Promise<PaymentResponse>;\n    postIapCheck: (request: IapCheckRequest) => Promise<any>;\n    postReinstatePremium: () => Promise<any>;\n    postCancelPremium: () => Promise<any>;\n    postAccountStorage: (request: StorageRequest) => Promise<PaymentResponse>;\n    postAccountPayment: (request: PaymentRequest) => Promise<any>;\n    postAccountLicense: (data: FormData) => Promise<any>;\n    postAccountKey: (request: UpdateKeyRequest) => Promise<any>;\n    postAccountKeys: (request: KeysRequest) => Promise<any>;\n    postAccountVerifyEmail: () => Promise<any>;\n    postAccountVerifyEmailToken: (request: VerifyEmailRequest) => Promise<any>;\n    postAccountVerifyPassword: (request: PasswordVerificationRequest) => Promise<any>;\n    postAccountRecoverDelete: (request: DeleteRecoverRequest) => Promise<any>;\n    postAccountRecoverDeleteToken: (request: VerifyDeleteRecoverRequest) => Promise<any>;\n    postAccountKdf: (request: KdfRequest) => Promise<any>;\n    getEnterprisePortalSignInToken: () => Promise<string>;\n\n    getFolder: (id: string) => Promise<FolderResponse>;\n    postFolder: (request: FolderRequest) => Promise<FolderResponse>;\n    putFolder: (id: string, request: FolderRequest) => Promise<FolderResponse>;\n    deleteFolder: (id: string) => Promise<any>;\n\n    getCipher: (id: string) => Promise<CipherResponse>;\n    getCipherAdmin: (id: string) => Promise<CipherResponse>;\n    getCiphersOrganization: (organizationId: string) => Promise<ListResponse<CipherResponse>>;\n    postCipher: (request: CipherRequest) => Promise<CipherResponse>;\n    postCipherCreate: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    postCipherAdmin: (request: CipherCreateRequest) => Promise<CipherResponse>;\n    putCipher: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    putCipherAdmin: (id: string, request: CipherRequest) => Promise<CipherResponse>;\n    deleteCipher: (id: string) => Promise<any>;\n    deleteCipherAdmin: (id: string) => Promise<any>;\n    deleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    deleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putMoveCiphers: (request: CipherBulkMoveRequest) => Promise<any>;\n    putShareCipher: (id: string, request: CipherShareRequest) => Promise<CipherResponse>;\n    putShareCiphers: (request: CipherBulkShareRequest) => Promise<any>;\n    putCipherCollections: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    putCipherCollectionsAdmin: (id: string, request: CipherCollectionsRequest) => Promise<any>;\n    postPurgeCiphers: (request: PasswordVerificationRequest, organizationId?: string) => Promise<any>;\n    postImportCiphers: (request: ImportCiphersRequest) => Promise<any>;\n    postImportOrganizationCiphers: (organizationId: string, request: ImportOrganizationCiphersRequest) => Promise<any>;\n    putDeleteCipher: (id: string) => Promise<any>;\n    putDeleteCipherAdmin: (id: string) => Promise<any>;\n    putDeleteManyCiphers: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putDeleteManyCiphersAdmin: (request: CipherBulkDeleteRequest) => Promise<any>;\n    putRestoreCipher: (id: string) => Promise<any>;\n    putRestoreCipherAdmin: (id: string) => Promise<any>;\n    putRestoreManyCiphers: (request: CipherBulkRestoreRequest) => Promise<any>;\n\n    postCipherAttachment: (id: string, data: FormData) => Promise<CipherResponse>;\n    postCipherAttachmentAdmin: (id: string, data: FormData) => Promise<CipherResponse>;\n    deleteCipherAttachment: (id: string, attachmentId: string) => Promise<any>;\n    deleteCipherAttachmentAdmin: (id: string, attachmentId: string) => Promise<any>;\n    postShareCipherAttachment: (id: string, attachmentId: string, data: FormData,\n        organizationId: string) => Promise<any>;\n\n    getCollectionDetails: (organizationId: string, id: string) => Promise<CollectionGroupDetailsResponse>;\n    getUserCollections: () => Promise<ListResponse<CollectionResponse>>;\n    getCollections: (organizationId: string) => Promise<ListResponse<CollectionResponse>>;\n    getCollectionUsers: (organizationId: string, id: string) => Promise<SelectionReadOnlyResponse[]>;\n    postCollection: (organizationId: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    putCollectionUsers: (organizationId: string, id: string, request: SelectionReadOnlyRequest[]) => Promise<any>;\n    putCollection: (organizationId: string, id: string, request: CollectionRequest) => Promise<CollectionResponse>;\n    deleteCollection: (organizationId: string, id: string) => Promise<any>;\n    deleteCollectionUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getGroupDetails: (organizationId: string, id: string) => Promise<GroupDetailsResponse>;\n    getGroups: (organizationId: string) => Promise<ListResponse<GroupResponse>>;\n    getGroupUsers: (organizationId: string, id: string) => Promise<string[]>;\n    postGroup: (organizationId: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroup: (organizationId: string, id: string, request: GroupRequest) => Promise<GroupResponse>;\n    putGroupUsers: (organizationId: string, id: string, request: string[]) => Promise<any>;\n    deleteGroup: (organizationId: string, id: string) => Promise<any>;\n    deleteGroupUser: (organizationId: string, id: string, organizationUserId: string) => Promise<any>;\n\n    getPolicy: (organizationId: string, type: PolicyType) => Promise<PolicyResponse>;\n    getPolicies: (organizationId: string) => Promise<ListResponse<PolicyResponse>>;\n    getPoliciesByToken: (organizationId: string, token: string, email: string, organizationUserId: string) =>\n        Promise<ListResponse<PolicyResponse>>;\n    putPolicy: (organizationId: string, type: PolicyType, request: PolicyRequest) => Promise<PolicyResponse>;\n\n    getOrganizationUser: (organizationId: string, id: string) => Promise<OrganizationUserDetailsResponse>;\n    getOrganizationUserGroups: (organizationId: string, id: string) => Promise<string[]>;\n    getOrganizationUsers: (organizationId: string) => Promise<ListResponse<OrganizationUserUserDetailsResponse>>;\n    postOrganizationUserInvite: (organizationId: string, request: OrganizationUserInviteRequest) => Promise<any>;\n    postOrganizationUserReinvite: (organizationId: string, id: string) => Promise<any>;\n    postOrganizationUserAccept: (organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest) => Promise<any>;\n    postOrganizationUserConfirm: (organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest) => Promise<any>;\n    putOrganizationUser: (organizationId: string, id: string, request: OrganizationUserUpdateRequest) => Promise<any>;\n    putOrganizationUserGroups: (organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest) => Promise<any>;\n    deleteOrganizationUser: (organizationId: string, id: string) => Promise<any>;\n\n    getSync: () => Promise<SyncResponse>;\n    postImportDirectory: (organizationId: string, request: ImportDirectoryRequest) => Promise<any>;\n\n    getSettingsDomains: () => Promise<DomainsResponse>;\n    putSettingsDomains: (request: UpdateDomainsRequest) => Promise<DomainsResponse>;\n\n    getTwoFactorProviders: () => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorOrganizationProviders: (organizationId: string) => Promise<ListResponse<TwoFactorProviderResponse>>;\n    getTwoFactorAuthenticator: (request: PasswordVerificationRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    getTwoFactorEmail: (request: PasswordVerificationRequest) => Promise<TwoFactorEmailResponse>;\n    getTwoFactorDuo: (request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorOrganizationDuo: (organizationId: string,\n        request: PasswordVerificationRequest) => Promise<TwoFactorDuoResponse>;\n    getTwoFactorYubiKey: (request: PasswordVerificationRequest) => Promise<TwoFactorYubiKeyResponse>;\n    getTwoFactorU2f: (request: PasswordVerificationRequest) => Promise<TwoFactorU2fResponse>;\n    getTwoFactorU2fChallenge: (request: PasswordVerificationRequest) => Promise<ChallengeResponse>;\n    getTwoFactorRecover: (request: PasswordVerificationRequest) => Promise<TwoFactorRecoverResponse>;\n    putTwoFactorAuthenticator: (\n        request: UpdateTwoFactorAuthenticatorRequest) => Promise<TwoFactorAuthenticatorResponse>;\n    putTwoFactorEmail: (request: UpdateTwoFactorEmailRequest) => Promise<TwoFactorEmailResponse>;\n    putTwoFactorDuo: (request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorOrganizationDuo: (organizationId: string,\n        request: UpdateTwoFactorDuoRequest) => Promise<TwoFactorDuoResponse>;\n    putTwoFactorYubiKey: (request: UpdateTwoFactorYubioOtpRequest) => Promise<TwoFactorYubiKeyResponse>;\n    putTwoFactorU2f: (request: UpdateTwoFactorU2fRequest) => Promise<TwoFactorU2fResponse>;\n    deleteTwoFactorU2f: (request: UpdateTwoFactorU2fDeleteRequest) => Promise<TwoFactorU2fResponse>;\n    putTwoFactorDisable: (request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    putTwoFactorOrganizationDisable: (organizationId: string,\n        request: TwoFactorProviderRequest) => Promise<TwoFactorProviderResponse>;\n    postTwoFactorRecover: (request: TwoFactorRecoveryRequest) => Promise<any>;\n    postTwoFactorEmailSetup: (request: TwoFactorEmailRequest) => Promise<any>;\n    postTwoFactorEmail: (request: TwoFactorEmailRequest) => Promise<any>;\n\n    getOrganization: (id: string) => Promise<OrganizationResponse>;\n    getOrganizationBilling: (id: string) => Promise<BillingResponse>;\n    getOrganizationSubscription: (id: string) => Promise<OrganizationSubscriptionResponse>;\n    getOrganizationLicense: (id: string, installationId: string) => Promise<any>;\n    getOrganizationTaxInfo: (id: string) => Promise<TaxInfoResponse>;\n    postOrganization: (request: OrganizationCreateRequest) => Promise<OrganizationResponse>;\n    putOrganization: (id: string, request: OrganizationUpdateRequest) => Promise<OrganizationResponse>;\n    putOrganizationTaxInfo: (id: string, request: OrganizationTaxInfoUpdateRequest) => Promise<any>;\n    postLeaveOrganization: (id: string) => Promise<any>;\n    postOrganizationLicense: (data: FormData) => Promise<OrganizationResponse>;\n    postOrganizationLicenseUpdate: (id: string, data: FormData) => Promise<any>;\n    postOrganizationApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationRotateApiKey: (id: string, request: PasswordVerificationRequest) => Promise<ApiKeyResponse>;\n    postOrganizationUpgrade: (id: string, request: OrganizationUpgradeRequest) => Promise<PaymentResponse>;\n    postOrganizationSeat: (id: string, request: SeatRequest) => Promise<PaymentResponse>;\n    postOrganizationStorage: (id: string, request: StorageRequest) => Promise<any>;\n    postOrganizationPayment: (id: string, request: PaymentRequest) => Promise<any>;\n    postOrganizationVerifyBank: (id: string, request: VerifyBankRequest) => Promise<any>;\n    postOrganizationCancel: (id: string) => Promise<any>;\n    postOrganizationReinstate: (id: string) => Promise<any>;\n    deleteOrganization: (id: string, request: PasswordVerificationRequest) => Promise<any>;\n    getPlans: () => Promise<ListResponse<PlanResponse>>;\n\n    getEvents: (start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsCipher: (id: string, start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganization: (id: string, start: string, end: string,\n        token: string) => Promise<ListResponse<EventResponse>>;\n    getEventsOrganizationUser: (organizationId: string, id: string,\n        start: string, end: string, token: string) => Promise<ListResponse<EventResponse>>;\n    postEventsCollect: (request: EventRequest[]) => Promise<any>;\n\n    deleteSsoUser: (organizationId: string) => Promise<any>;\n    getSsoUserIdentifier: () => Promise<string>;\n\n    getUserPublicKey: (id: string) => Promise<UserKeyResponse>;\n\n    getHibpBreach: (username: string) => Promise<BreachAccountResponse[]>;\n\n    postBitPayInvoice: (request: BitPayInvoiceRequest) => Promise<string>;\n    postSetupPayment: () => Promise<string>;\n\n    getActiveBearerToken: () => Promise<string>;\n    fetch: (request: Request) => Promise<Response>;\n    nativeFetch: (request: Request) => Promise<Response>;\n\n    preValidateSso: (identifier: string) => Promise<boolean>;\n}\n","import { DeviceType } from '../enums/deviceType';\n\nexport abstract class PlatformUtilsService {\n    identityClientId: string;\n    getDevice: () => DeviceType;\n    getDeviceString: () => string;\n    isFirefox: () => boolean;\n    isChrome: () => boolean;\n    isEdge: () => boolean;\n    isOpera: () => boolean;\n    isVivaldi: () => boolean;\n    isSafari: () => boolean;\n    isIE: () => boolean;\n    isMacAppStore: () => boolean;\n    analyticsId: () => string;\n    isViewOpen: () => Promise<boolean>;\n    /**\n     * @deprecated This only ever returns null. Pull from your platform's storage using ConstantsService.vaultTimeoutKey\n     */\n    lockTimeout: () => number;\n    launchUri: (uri: string, options?: any) => void;\n    saveFile: (win: Window, blobData: any, blobOptions: any, fileName: string) => void;\n    getApplicationVersion: () => string;\n    supportsU2f: (win: Window) => boolean;\n    supportsDuo: () => boolean;\n    showToast: (type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any) => void;\n    showDialog: (text: string, title?: string, confirmText?: string, cancelText?: string,\n        type?: string) => Promise<boolean>;\n    eventTrack: (action: string, label?: string, options?: any) => void;\n    isDev: () => boolean;\n    isSelfHost: () => boolean;\n    copyToClipboard: (text: string, options?: any) => void;\n    readFromClipboard: (options?: any) => Promise<string>;\n    supportsBiometric: () => Promise<boolean>;\n    authenticateBiometric: () => Promise<boolean>;\n}\n","import { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\n\nexport abstract class UserService {\n    setInformation: (userId: string, email: string, kdf: KdfType, kdfIterations: number) => Promise<any>;\n    setSecurityStamp: (stamp: string) => Promise<any>;\n    getUserId: () => Promise<string>;\n    getEmail: () => Promise<string>;\n    getSecurityStamp: () => Promise<string>;\n    getKdf: () => Promise<KdfType>;\n    getKdfIterations: () => Promise<number>;\n    clear: () => Promise<any>;\n    isAuthenticated: () => Promise<boolean>;\n    canAccessPremium: () => Promise<boolean>;\n    getOrganization: (id: string) => Promise<Organization>;\n    getAllOrganizations: () => Promise<Organization[]>;\n    replaceOrganizations: (organizations: { [id: string]: OrganizationData; }) => Promise<any>;\n    clearOrganizations: (userId: string) => Promise<any>;\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\n\n@Pipe({\n    name: 'i18n',\n})\nexport class I18nPipe implements PipeTransform {\n    constructor(private i18nService: I18nService) { }\n\n    transform(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.i18nService.t(id, p1, p2, p3);\n    }\n}\n","export abstract class MessagingService {\n    send: (subscriber: string, arg?: any) => void;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { ValidationService } from '../services/validation.service';\n\n@Directive({\n    selector: '[appApiAction]',\n})\nexport class ApiActionDirective implements OnChanges {\n    @Input() appApiAction: Promise<any>;\n\n    constructor(private el: ElementRef, private validationService: ValidationService) { }\n\n    ngOnChanges(changes: any) {\n        if (this.appApiAction == null || this.appApiAction.then == null) {\n            return;\n        }\n\n        this.el.nativeElement.loading = true;\n\n        this.appApiAction.then((response: any) => {\n            this.el.nativeElement.loading = false;\n        }, (e: any) => {\n            this.el.nativeElement.loading = false;\n            this.validationService.showError(e);\n        });\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appA11yTitle]',\n})\nexport class A11yTitleDirective {\n    @Input() set appA11yTitle(title: string) {\n        this.title = title;\n    }\n\n    private title: string;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (!this.el.nativeElement.hasAttribute('title')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'title', this.title);\n        }\n        if (!this.el.nativeElement.hasAttribute('aria-label')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'aria-label', this.title);\n        }\n    }\n}\n","import { CipherType } from '../enums/cipherType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Field } from '../models/domain/field';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\n\nexport abstract class CipherService {\n    decryptedCipherCache: CipherView[];\n\n    clearCache: () => void;\n    encrypt: (model: CipherView, key?: SymmetricCryptoKey, originalCipher?: Cipher) => Promise<Cipher>;\n    encryptFields: (fieldsModel: FieldView[], key: SymmetricCryptoKey) => Promise<Field[]>;\n    encryptField: (fieldModel: FieldView, key: SymmetricCryptoKey) => Promise<Field>;\n    get: (id: string) => Promise<Cipher>;\n    getAll: () => Promise<Cipher[]>;\n    getAllDecrypted: () => Promise<CipherView[]>;\n    getAllDecryptedForGrouping: (groupingId: string, folder?: boolean) => Promise<CipherView[]>;\n    getAllDecryptedForUrl: (url: string, includeOtherTypes?: CipherType[]) => Promise<CipherView[]>;\n    getAllFromApiForOrganization: (organizationId: string) => Promise<CipherView[]>;\n    getLastUsedForUrl: (url: string) => Promise<CipherView>;\n    getNextCipherForUrl: (url: string) => Promise<CipherView>;\n    updateLastUsedDate: (id: string) => Promise<void>;\n    saveNeverDomain: (domain: string) => Promise<void>;\n    saveWithServer: (cipher: Cipher) => Promise<any>;\n    shareWithServer: (cipher: CipherView, organizationId: string, collectionIds: string[]) => Promise<any>;\n    shareManyWithServer: (ciphers: CipherView[], organizationId: string, collectionIds: string[]) => Promise<any>;\n    saveAttachmentWithServer: (cipher: Cipher, unencryptedFile: any, admin?: boolean) => Promise<Cipher>;\n    saveAttachmentRawWithServer: (cipher: Cipher, filename: string, data: ArrayBuffer,\n        admin?: boolean) => Promise<Cipher>;\n    saveCollectionsWithServer: (cipher: Cipher) => Promise<any>;\n    upsert: (cipher: CipherData | CipherData[]) => Promise<any>;\n    replace: (ciphers: { [id: string]: CipherData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    moveManyWithServer: (ids: string[], folderId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n    deleteManyWithServer: (ids: string[]) => Promise<any>;\n    deleteAttachment: (id: string, attachmentId: string) => Promise<void>;\n    deleteAttachmentWithServer: (id: string, attachmentId: string) => Promise<void>;\n    sortCiphersByLastUsed: (a: any, b: any) => number;\n    sortCiphersByLastUsedThenName: (a: any, b: any) => number;\n    getLocaleSortingFunction: () => (a: CipherView, b: CipherView) => number;\n    softDelete: (id: string | string[]) => Promise<any>;\n    softDeleteWithServer: (id: string) => Promise<any>;\n    softDeleteManyWithServer: (ids: string[]) => Promise<any>;\n    restore: (id: string | string[]) => Promise<any>;\n    restoreWithServer: (id: string) => Promise<any>;\n    restoreManyWithServer: (ids: string[]) => Promise<any>;\n}\n","import { CipherString } from '../models/domain/cipherString';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { KdfType } from '../enums/kdfType';\n\nexport abstract class CryptoService {\n    setKey: (key: SymmetricCryptoKey) => Promise<any>;\n    setKeyHash: (keyHash: string) => Promise<{}>;\n    setEncKey: (encKey: string) => Promise<{}>;\n    setEncPrivateKey: (encPrivateKey: string) => Promise<{}>;\n    setOrgKeys: (orgs: ProfileOrganizationResponse[]) => Promise<{}>;\n    getKey: () => Promise<SymmetricCryptoKey>;\n    getKeyHash: () => Promise<string>;\n    getEncKey: (key?: SymmetricCryptoKey) => Promise<SymmetricCryptoKey>;\n    getPublicKey: () => Promise<ArrayBuffer>;\n    getPrivateKey: () => Promise<ArrayBuffer>;\n    getFingerprint: (userId: string, publicKey?: ArrayBuffer) => Promise<string[]>;\n    getOrgKeys: () => Promise<Map<string, SymmetricCryptoKey>>;\n    getOrgKey: (orgId: string) => Promise<SymmetricCryptoKey>;\n    hasKey: () => Promise<boolean>;\n    hasEncKey: () => Promise<boolean>;\n    clearKey: () => Promise<any>;\n    clearKeyHash: () => Promise<any>;\n    clearEncKey: (memoryOnly?: boolean) => Promise<any>;\n    clearKeyPair: (memoryOnly?: boolean) => Promise<any>;\n    clearOrgKeys: (memoryOnly?: boolean) => Promise<any>;\n    clearPinProtectedKey: () => Promise<any>;\n    clearKeys: () => Promise<any>;\n    toggleKey: () => Promise<any>;\n    makeKey: (password: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    makeKeyFromPin: (pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs?: CipherString) => Promise<SymmetricCryptoKey>;\n    makeShareKey: () => Promise<[CipherString, SymmetricCryptoKey]>;\n    makeKeyPair: (key?: SymmetricCryptoKey) => Promise<[string, CipherString]>;\n    makePinKey: (pin: string, salt: string, kdf: KdfType, kdfIterations: number) => Promise<SymmetricCryptoKey>;\n    hashPassword: (password: string, key: SymmetricCryptoKey) => Promise<string>;\n    makeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, CipherString]>;\n    remakeEncKey: (key: SymmetricCryptoKey) => Promise<[SymmetricCryptoKey, CipherString]>;\n    encrypt: (plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey) => Promise<CipherString>;\n    encryptToBytes: (plainValue: ArrayBuffer, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey?: ArrayBuffer) => Promise<CipherString>;\n    decryptToBytes: (cipherString: CipherString, key?: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    decryptToUtf8: (cipherString: CipherString, key?: SymmetricCryptoKey) => Promise<string>;\n    decryptFromBytes: (encBuf: ArrayBuffer, key: SymmetricCryptoKey) => Promise<ArrayBuffer>;\n    randomNumber: (min: number, max: number) => Promise<number>;\n}\n","import * as papa from 'papaparse';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { LoginUriView } from '../models/view/loginUriView';\n\nimport { Utils } from '../misc/utils';\n\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport abstract class BaseImporter {\n    organization = false;\n\n    protected newLineRegex = /(?:\\r\\n|\\r|\\n)/;\n\n    protected passwordFieldNames = [\n        'password', 'pass word', 'passphrase', 'pass phrase',\n        'pass', 'code', 'code word', 'codeword',\n        'secret', 'secret word', 'personpwd',\n        'key', 'keyword', 'key word', 'keyphrase', 'key phrase',\n        'form_pw', 'wppassword', 'pin', 'pwd', 'pw', 'pword', 'passwd',\n        'p', 'serial', 'serial#', 'license key', 'reg #',\n\n        // Non-English names\n        'passwort',\n    ];\n\n    protected usernameFieldNames = [\n        'user', 'name', 'user name', 'username', 'login name',\n        'email', 'e-mail', 'id', 'userid', 'user id',\n        'login', 'form_loginname', 'wpname', 'mail',\n        'loginid', 'login id', 'log', 'personlogin',\n        'first name', 'last name', 'card#', 'account #',\n        'member', 'member #',\n\n        // Non-English names\n        'nom', 'benutzername',\n    ];\n\n    protected notesFieldNames = [\n        'note', 'notes', 'comment', 'comments', 'memo',\n        'description', 'free form', 'freeform',\n        'free text', 'freetext', 'free',\n\n        // Non-English names\n        'kommentar',\n    ];\n\n    protected uriFieldNames: string[] = [\n        'url', 'hyper link', 'hyperlink', 'link',\n        'host', 'hostname', 'host name', 'server', 'address',\n        'hyper ref', 'href', 'web', 'website', 'web site', 'site',\n        'web-site', 'uri',\n\n        // Non-English names\n        'ort', 'adresse',\n    ];\n\n    protected parseXml(data: string): Document {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(data, 'application/xml');\n        return doc != null && doc.querySelector('parsererror') == null ? doc : null;\n    }\n\n    protected parseCsv(data: string, header: boolean): any[] {\n        data = this.splitNewLine(data).join('\\n').trim();\n        const result = papa.parse(data, {\n            header: header,\n            encoding: 'UTF-8',\n            skipEmptyLines: false,\n        });\n        if (result.errors != null && result.errors.length > 0) {\n            result.errors.forEach((e) => {\n                if (e.row != null) {\n                    // tslint:disable-next-line\n                    console.warn('Error parsing row ' + e.row + ': ' + e.message);\n                }\n            });\n        }\n        return result.data && result.data.length > 0 ? result.data : null;\n    }\n\n    protected parseSingleRowCsv(rowData: string) {\n        if (this.isNullOrWhitespace(rowData)) {\n            return null;\n        }\n        const parsedRow = this.parseCsv(rowData, false);\n        if (parsedRow != null && parsedRow.length > 0 && parsedRow[0].length > 0) {\n            return parsedRow[0];\n        }\n        return null;\n    }\n\n    protected makeUriArray(uri: string | string[]): LoginUriView[] {\n        if (uri == null) {\n            return null;\n        }\n\n        if (typeof uri === 'string') {\n            const loginUri = new LoginUriView();\n            loginUri.uri = this.fixUri(uri);\n            if (this.isNullOrWhitespace(loginUri.uri)) {\n                return null;\n            }\n            loginUri.match = null;\n            return [loginUri];\n        }\n\n        if (uri.length > 0) {\n            const returnArr: LoginUriView[] = [];\n            uri.forEach((u) => {\n                const loginUri = new LoginUriView();\n                loginUri.uri = this.fixUri(u);\n                if (this.isNullOrWhitespace(loginUri.uri)) {\n                    return;\n                }\n                loginUri.match = null;\n                returnArr.push(loginUri);\n            });\n            return returnArr.length === 0 ? null : returnArr;\n        }\n\n        return null;\n    }\n\n    protected fixUri(uri: string) {\n        if (uri == null) {\n            return null;\n        }\n        uri = uri.trim();\n        if (uri.indexOf('://') === -1 && uri.indexOf('.') >= 0) {\n            uri = 'http://' + uri;\n        }\n        if (uri.length > 1000) {\n            return uri.substring(0, 1000);\n        }\n        return uri;\n    }\n\n    protected nameFromUrl(url: string) {\n        const hostname = Utils.getHostname(url);\n        if (this.isNullOrWhitespace(hostname)) {\n            return null;\n        }\n        return hostname.startsWith('www.') ? hostname.replace('www.', '') : hostname;\n    }\n\n    protected isNullOrWhitespace(str: string): boolean {\n        return Utils.isNullOrWhitespace(str);\n    }\n\n    protected getValueOrDefault(str: string, defaultValue: string = null): string {\n        if (this.isNullOrWhitespace(str)) {\n            return defaultValue;\n        }\n        return str;\n    }\n\n    protected splitNewLine(str: string): string[] {\n        return str.split(this.newLineRegex);\n    }\n\n    // ref https://stackoverflow.com/a/5911300\n    protected getCardBrand(cardNum: string) {\n        if (this.isNullOrWhitespace(cardNum)) {\n            return null;\n        }\n\n        // Visa\n        let re = new RegExp('^4');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        // Mastercard\n        // Updated for Mastercard 2017 BINs expansion\n        if (/^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/\n            .test(cardNum)) {\n            return 'Mastercard';\n        }\n\n        // AMEX\n        re = new RegExp('^3[47]');\n        if (cardNum.match(re) != null) {\n            return 'Amex';\n        }\n\n        // Discover\n        re = new RegExp('^(6011|622(12[6-9]|1[3-9][0-9]|[2-8][0-9]{2}|9[0-1][0-9]|92[0-5]|64[4-9])|65)');\n        if (cardNum.match(re) != null) {\n            return 'Discover';\n        }\n\n        // Diners\n        re = new RegExp('^36');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // Diners - Carte Blanche\n        re = new RegExp('^30[0-5]');\n        if (cardNum.match(re) != null) {\n            return 'Diners Club';\n        }\n\n        // JCB\n        re = new RegExp('^35(2[89]|[3-8][0-9])');\n        if (cardNum.match(re) != null) {\n            return 'JCB';\n        }\n\n        // Visa Electron\n        re = new RegExp('^(4026|417500|4508|4844|491(3|7))');\n        if (cardNum.match(re) != null) {\n            return 'Visa';\n        }\n\n        return null;\n    }\n\n    protected setCardExpiration(cipher: CipherView, expiration: string): boolean {\n        if (!this.isNullOrWhitespace(expiration)) {\n            const parts = expiration.split('/');\n            if (parts.length === 2) {\n                let month: string = null;\n                let year: string = null;\n                if (parts[0].length === 1 || parts[0].length === 2) {\n                    month = parts[0];\n                    if (month.length === 2 && month[0] === '0') {\n                        month = month.substr(1, 1);\n                    }\n                }\n                if (parts[1].length === 2 || parts[1].length === 4) {\n                    year = month.length === 2 ? '20' + parts[1] : parts[1];\n                }\n                if (month != null && year != null) {\n                    cipher.card.expMonth = month;\n                    cipher.card.expYear = year;\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    protected moveFoldersToCollections(result: ImportResult) {\n        result.folderRelationships.forEach((r) => result.collectionRelationships.push(r));\n        result.collections = result.folders.map((f) => {\n            const collection = new CollectionView();\n            collection.name = f.name;\n            return collection;\n        });\n        result.folderRelationships = [];\n        result.folders = [];\n    }\n\n    protected querySelectorDirectChild(parentEl: Element, query: string) {\n        const els = this.querySelectorAllDirectChild(parentEl, query);\n        return els.length === 0 ? null : els[0];\n    }\n\n    protected querySelectorAllDirectChild(parentEl: Element, query: string) {\n        return Array.from(parentEl.querySelectorAll(query)).filter((el) => el.parentNode === parentEl);\n    }\n\n    protected initLoginCipher() {\n        const cipher = new CipherView();\n        cipher.favorite = false;\n        cipher.notes = '';\n        cipher.fields = [];\n        cipher.login = new LoginView();\n        cipher.type = CipherType.Login;\n        return cipher;\n    }\n\n    protected cleanupCipher(cipher: CipherView) {\n        if (cipher == null) {\n            return;\n        }\n        if (cipher.type !== CipherType.Login) {\n            cipher.login = null;\n        }\n        if (this.isNullOrWhitespace(cipher.name)) {\n            cipher.name = '--';\n        }\n        if (this.isNullOrWhitespace(cipher.notes)) {\n            cipher.notes = null;\n        } else {\n            cipher.notes = cipher.notes.trim();\n        }\n        if (cipher.fields != null && cipher.fields.length === 0) {\n            cipher.fields = null;\n        }\n    }\n\n    protected processKvp(cipher: CipherView, key: string, value: string, type: FieldType = FieldType.Text) {\n        if (this.isNullOrWhitespace(value)) {\n            return;\n        }\n        if (this.isNullOrWhitespace(key)) {\n            key = '';\n        }\n        if (value.length > 200 || value.trim().search(this.newLineRegex) > -1) {\n            if (cipher.notes == null) {\n                cipher.notes = '';\n            }\n            cipher.notes += (key + ': ' + this.splitNewLine(value).join('\\n') + '\\n');\n        } else {\n            if (cipher.fields == null) {\n                cipher.fields = [];\n            }\n            const field = new FieldView();\n            field.type = type;\n            field.name = key;\n            field.value = value;\n            cipher.fields.push(field);\n        }\n    }\n\n    protected processFolder(result: ImportResult, folderName: string) {\n        let folderIndex = result.folders.length;\n        const hasFolder = !this.isNullOrWhitespace(folderName);\n        let addFolder = hasFolder;\n\n        if (hasFolder) {\n            for (let i = 0; i < result.folders.length; i++) {\n                if (result.folders[i].name === folderName) {\n                    addFolder = false;\n                    folderIndex = i;\n                    break;\n                }\n            }\n        }\n\n        if (addFolder) {\n            const f = new FolderView();\n            f.name = folderName;\n            result.folders.push(f);\n        }\n        if (hasFolder) {\n            result.folderRelationships.push([result.ciphers.length, folderIndex]);\n        }\n    }\n\n    protected convertToNoteIfNeeded(cipher: CipherView) {\n        if (cipher.type === CipherType.Login && this.isNullOrWhitespace(cipher.login.username) &&\n            this.isNullOrWhitespace(cipher.login.password) &&\n            (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        }\n    }\n}\n","import { CipherView } from '../view/cipherView';\nimport { CollectionView } from '../view/collectionView';\nimport { FolderView } from '../view/folderView';\n\nexport class ImportResult {\n    success = false;\n    errorMessage: string;\n    ciphers: CipherView[] = [];\n    folders: FolderView[] = [];\n    folderRelationships: [number, number][] = [];\n    collections: CollectionView[] = [];\n    collectionRelationships: [number, number][] = [];\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\n\n@Component({\n    selector: 'app-callout',\n    templateUrl: 'callout.component.html',\n})\nexport class CalloutComponent implements OnInit {\n    @Input() type = 'info';\n    @Input() icon: string;\n    @Input() title: string;\n\n    calloutStyle: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnInit() {\n        this.calloutStyle = this.type;\n\n        if (this.type === 'warning' || this.type === 'danger') {\n            if (this.type === 'danger') {\n                this.calloutStyle = 'danger';\n            }\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('warning');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-warning';\n            }\n        } else if (this.type === 'error') {\n            this.calloutStyle = 'danger';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('error');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-bolt';\n            }\n        } else if (this.type === 'tip') {\n            this.calloutStyle = 'success';\n            if (this.title === undefined) {\n                this.title = this.i18nService.t('tip');\n            }\n            if (this.icon === undefined) {\n                this.icon = 'fa-lightbulb-o';\n            }\n        }\n    }\n}\n","<div class=\"callout callout-{{calloutStyle}}\" role=\"alert\">\n    <h3 class=\"callout-heading\" *ngIf=\"title\">\n        <i class=\"fa {{icon}}\" *ngIf=\"icon\" aria-hidden=\"true\"></i>\n        {{title}}\n    </h3>\n    <ng-content></ng-content>\n</div>\n","export abstract class BaseResponse {\n    protected response: any;\n\n    constructor(response: any) {\n        this.response = response;\n    }\n\n    protected getResponseProperty(propertyName: string, response: any = null, exactName = false): any {\n        if (propertyName == null || propertyName === '') {\n            throw new Error('propertyName must not be null/empty.');\n        }\n        if (response == null && this.response != null) {\n            response = this.response;\n        }\n        if (response == null) {\n            return null;\n        }\n        if (!exactName && response[propertyName] === undefined) {\n            let otherCasePropertyName: string = null;\n            if (propertyName.charAt(0) === propertyName.charAt(0).toUpperCase()) {\n                otherCasePropertyName = propertyName.charAt(0).toLowerCase();\n            } else {\n                otherCasePropertyName = propertyName.charAt(0).toUpperCase();\n            }\n            if (propertyName.length > 1) {\n                otherCasePropertyName += propertyName.slice(1);\n            }\n\n            propertyName = otherCasePropertyName;\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toLowerCase();\n            }\n            if (response[propertyName] === undefined) {\n                propertyName = propertyName.toUpperCase();\n            }\n        }\n        return response[propertyName];\n    }\n}\n","export enum CipherType {\n    Login = 1,\n    SecureNote = 2,\n    Card = 3,\n    Identity = 4,\n}\n","import * as tldjs from 'tldjs';\n\nimport { I18nService } from '../abstractions/i18n.service';\n\n// tslint:disable-next-line\nconst nodeURL = typeof window === 'undefined' ? require('url') : null;\n\nexport class Utils {\n    static inited = false;\n    static isNativeScript = false;\n    static isNode = false;\n    static isBrowser = true;\n    static isMobileBrowser = false;\n    static isAppleMobileBrowser = false;\n    static global: any = null;\n    static tldEndingRegex = /.*\\.(com|net|org|edu|uk|gov|ca|de|jp|fr|au|ru|ch|io|es|us|co|xyz|info|ly|mil)$/;\n\n    static init() {\n        if (Utils.inited) {\n            return;\n        }\n\n        Utils.inited = true;\n        Utils.isNode = typeof process !== 'undefined' && (process as any).release != null &&\n            (process as any).release.name === 'node';\n        Utils.isBrowser = typeof window !== 'undefined';\n        Utils.isNativeScript = !Utils.isNode && !Utils.isBrowser;\n        Utils.isMobileBrowser = Utils.isBrowser && this.isMobile(window);\n        Utils.isAppleMobileBrowser = Utils.isBrowser && this.isAppleMobile(window);\n        Utils.global = Utils.isNativeScript ? global : (Utils.isNode && !Utils.isBrowser ? global : window);\n    }\n\n    static fromB64ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'base64'));\n        } else {\n            const binaryString = window.atob(str);\n            const bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n            return bytes;\n        }\n    }\n\n    static fromHexToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'hex'));\n        } else {\n            const bytes = new Uint8Array(str.length / 2);\n            for (let i = 0; i < str.length; i += 2) {\n                bytes[i / 2] = parseInt(str.substr(i, 2), 16);\n            }\n            return bytes;\n        }\n    }\n\n    static fromUtf8ToArray(str: string): Uint8Array {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return new Uint8Array(Buffer.from(str, 'utf8'));\n        } else {\n            const strUtf8 = unescape(encodeURIComponent(str));\n            const arr = new Uint8Array(strUtf8.length);\n            for (let i = 0; i < strUtf8.length; i++) {\n                arr[i] = strUtf8.charCodeAt(i);\n            }\n            return arr;\n        }\n    }\n\n    static fromByteStringToArray(str: string): Uint8Array {\n        const arr = new Uint8Array(str.length);\n        for (let i = 0; i < str.length; i++) {\n            arr[i] = str.charCodeAt(i);\n        }\n        return arr;\n    }\n\n    static fromBufferToB64(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('base64');\n        } else {\n            let binary = '';\n            const bytes = new Uint8Array(buffer);\n            for (let i = 0; i < bytes.byteLength; i++) {\n                binary += String.fromCharCode(bytes[i]);\n            }\n            return window.btoa(binary);\n        }\n    }\n\n    static fromBufferToUrlB64(buffer: ArrayBuffer): string {\n        const output = this.fromBufferToB64(buffer)\n            .replace(/\\+/g, '-')\n            .replace(/\\//g, '_')\n            .replace(/=/g, '');\n        return output;\n    }\n\n    static fromBufferToUtf8(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('utf8');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            const encodedString = String.fromCharCode.apply(null, bytes);\n            return decodeURIComponent(escape(encodedString));\n        }\n    }\n\n    static fromBufferToByteString(buffer: ArrayBuffer): string {\n        return String.fromCharCode.apply(null, new Uint8Array(buffer));\n    }\n\n    // ref: https://stackoverflow.com/a/40031979/1090359\n    static fromBufferToHex(buffer: ArrayBuffer): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(buffer).toString('hex');\n        } else {\n            const bytes = new Uint8Array(buffer);\n            return Array.prototype.map.call(bytes, (x: number) => ('00' + x.toString(16)).slice(-2)).join('');\n        }\n    }\n\n    static fromUrlB64ToUtf8(b64Str: string): string {\n        let output = b64Str.replace(/-/g, '+').replace(/_/g, '/');\n        switch (output.length % 4) {\n            case 0:\n                break;\n            case 2:\n                output += '==';\n                break;\n            case 3:\n                output += '=';\n                break;\n            default:\n                throw new Error('Illegal base64url string!');\n        }\n\n        return Utils.fromB64ToUtf8(output);\n    }\n\n    static fromB64ToUtf8(b64Str: string): string {\n        if (Utils.isNode || Utils.isNativeScript) {\n            return Buffer.from(b64Str, 'base64').toString('utf8');\n        } else {\n            return decodeURIComponent(escape(window.atob(b64Str)));\n        }\n    }\n\n    // ref: http://stackoverflow.com/a/2117523/1090359\n    static newGuid(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n            // tslint:disable-next-line\n            const r = Math.random() * 16 | 0;\n            // tslint:disable-next-line\n            const v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    static isGuid(id: string) {\n        return RegExp(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/, 'i').test(id);\n    }\n\n    static getHostname(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.hostname !== '' ? url.hostname : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getHost(uriString: string): string {\n        const url = Utils.getUrl(uriString);\n        try {\n            return url != null && url.host !== '' ? url.host : null;\n        } catch {\n            return null;\n        }\n    }\n\n    static getDomain(uriString: string): string {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        if (uriString.startsWith('data:')) {\n            return null;\n        }\n\n        let httpUrl = uriString.startsWith('http://') || uriString.startsWith('https://');\n        if (!httpUrl && uriString.indexOf('://') < 0 && Utils.tldEndingRegex.test(uriString)) {\n            uriString = 'http://' + uriString;\n            httpUrl = true;\n        }\n\n        if (httpUrl) {\n            try {\n                const url = Utils.getUrlObject(uriString);\n                if (url.hostname === 'localhost' || Utils.validIpAddress(url.hostname)) {\n                    return url.hostname;\n                }\n\n                const urlDomain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(url.hostname) : null;\n                return urlDomain != null ? urlDomain : url.hostname;\n            } catch (e) { }\n        }\n\n        try {\n            const domain = tldjs != null && tldjs.getDomain != null ? tldjs.getDomain(uriString) : null;\n\n            if (domain != null) {\n                return domain;\n            }\n        } catch {\n            return null;\n        }\n\n        return null;\n    }\n\n    static getQueryParams(uriString: string): Map<string, string> {\n        const url = Utils.getUrl(uriString);\n        if (url == null || url.search == null || url.search === '') {\n            return null;\n        }\n        const map = new Map<string, string>();\n        const pairs = (url.search[0] === '?' ? url.search.substr(1) : url.search).split('&');\n        pairs.forEach((pair) => {\n            const parts = pair.split('=');\n            if (parts.length < 1) {\n                return;\n            }\n            map.set(decodeURIComponent(parts[0]).toLowerCase(), parts[1] == null ? '' : decodeURIComponent(parts[1]));\n        });\n        return map;\n    }\n\n    static getSortFunction(i18nService: I18nService, prop: string) {\n        return (a: any, b: any) => {\n            if (a[prop] == null && b[prop] != null) {\n                return -1;\n            }\n            if (a[prop] != null && b[prop] == null) {\n                return 1;\n            }\n            if (a[prop] == null && b[prop] == null) {\n                return 0;\n            }\n\n            return i18nService.collator ? i18nService.collator.compare(a[prop], b[prop]) :\n                a[prop].localeCompare(b[prop]);\n        };\n    }\n\n    static isNullOrWhitespace(str: string): boolean {\n        return str == null || typeof str !== 'string' || str.trim() === '';\n    }\n\n    private static validIpAddress(ipString: string): boolean {\n        // tslint:disable-next-line\n        const ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n        return ipRegex.test(ipString);\n    }\n\n    private static isMobile(win: Window) {\n        let mobile = false;\n        ((a) => {\n            // tslint:disable-next-line\n            if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) {\n                mobile = true;\n            }\n        })(win.navigator.userAgent || win.navigator.vendor || (win as any).opera);\n        return mobile || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static isAppleMobile(win: Window) {\n        return win.navigator.userAgent.match(/iPhone/i) != null || win.navigator.userAgent.match(/iPad/i) != null;\n    }\n\n    private static getUrl(uriString: string): URL {\n        if (uriString == null) {\n            return null;\n        }\n\n        uriString = uriString.trim();\n        if (uriString === '') {\n            return null;\n        }\n\n        let url = Utils.getUrlObject(uriString);\n        if (url == null) {\n            const hasHttpProtocol = uriString.indexOf('http://') === 0 || uriString.indexOf('https://') === 0;\n            if (!hasHttpProtocol && uriString.indexOf('.') > -1) {\n                url = Utils.getUrlObject('http://' + uriString);\n            }\n        }\n        return url;\n    }\n\n    private static getUrlObject(uriString: string): URL {\n        try {\n            if (nodeURL != null) {\n                return nodeURL.URL ? new nodeURL.URL(uriString) : nodeURL.parse(uriString);\n            } else if (typeof URL === 'function') {\n                return new URL(uriString);\n            } else if (window != null) {\n                const hasProtocol = uriString.indexOf('://') > -1;\n                if (!hasProtocol && uriString.indexOf('.') > -1) {\n                    uriString = 'http://' + uriString;\n                } else if (!hasProtocol) {\n                    return null;\n                }\n                const anchor = window.document.createElement('a');\n                anchor.href = uriString;\n                return anchor as any;\n            }\n        } catch (e) { }\n\n        return null;\n    }\n}\n\nUtils.init();\n","import { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\n\nexport abstract class PasswordGenerationService {\n    generatePassword: (options: any) => Promise<string>;\n    generatePassphrase: (options: any) => Promise<string>;\n    getOptions: () => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    enforcePasswordGeneratorPoliciesOnOptions: (options: any) => Promise<[any, PasswordGeneratorPolicyOptions]>;\n    getPasswordGeneratorPolicyOptions: () => Promise<PasswordGeneratorPolicyOptions>;\n    saveOptions: (options: any) => Promise<any>;\n    getHistory: () => Promise<GeneratedPasswordHistory[]>;\n    addHistory: (password: string) => Promise<any>;\n    clear: () => Promise<any>;\n    passwordStrength: (password: string, userInputs?: string[]) => zxcvbn.ZXCVBNResult;\n    normalizeOptions: (options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) => void;\n}\n","export abstract class StateService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n    purge: () => Promise<any>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopClick]',\n})\nexport class StopClickDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.preventDefault();\n    }\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport abstract class CollectionService {\n    decryptedCollectionCache: CollectionView[];\n\n    clearCache: () => void;\n    encrypt: (model: CollectionView) => Promise<Collection>;\n    decryptMany: (collections: Collection[]) => Promise<CollectionView[]>;\n    get: (id: string) => Promise<Collection>;\n    getAll: () => Promise<Collection[]>;\n    getAllDecrypted: () => Promise<CollectionView[]>;\n    getAllNested: (collections?: CollectionView[]) => Promise<TreeNode<CollectionView>[]>;\n    getNested: (id: string) => Promise<TreeNode<CollectionView>>;\n    upsert: (collection: CollectionData | CollectionData[]) => Promise<any>;\n    replace: (collections: { [id: string]: CollectionData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n}\n","export abstract class StorageService {\n    get: <T>(key: string) => Promise<T>;\n    save: (key: string, obj: any) => Promise<any>;\n    remove: (key: string) => Promise<any>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n    Renderer2,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appInputVerbatim]',\n})\nexport class InputVerbatimDirective {\n    @Input() set appInputVerbatim(condition: boolean | string) {\n        this.disableComplete = condition === '' || condition === true;\n    }\n\n    private disableComplete: boolean;\n\n    constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n    ngOnInit() {\n        if (this.disableComplete && !this.el.nativeElement.hasAttribute('autocomplete')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocomplete', 'off');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocapitalize')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocapitalize', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('autocorrect')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'autocorrect', 'none');\n        }\n        if (!this.el.nativeElement.hasAttribute('spellcheck')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'spellcheck', 'false');\n        }\n        if (!this.el.nativeElement.hasAttribute('inputmode')) {\n            this.renderer.setAttribute(this.el.nativeElement, 'inputmode', 'verbatim');\n        }\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport abstract class FolderService {\n    decryptedFolderCache: FolderView[];\n\n    clearCache: () => void;\n    encrypt: (model: FolderView, key?: SymmetricCryptoKey) => Promise<Folder>;\n    get: (id: string) => Promise<Folder>;\n    getAll: () => Promise<Folder[]>;\n    getAllDecrypted: () => Promise<FolderView[]>;\n    getAllNested: () => Promise<TreeNode<FolderView>[]>;\n    getNested: (id: string) => Promise<TreeNode<FolderView>>;\n    saveWithServer: (folder: Folder) => Promise<any>;\n    upsert: (folder: FolderData | FolderData[]) => Promise<any>;\n    replace: (folders: { [id: string]: FolderData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    delete: (id: string | string[]) => Promise<any>;\n    deleteWithServer: (id: string) => Promise<any>;\n}\n","import {\n    Directive,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appStopProp]',\n})\nexport class StopPropDirective {\n    @HostListener('click', ['$event']) onClick($event: MouseEvent) {\n        $event.stopPropagation();\n    }\n}\n","import { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class AuthService {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType;\n\n    logIn: (email: string, masterPassword: string) => Promise<AuthResult>;\n    logInSso: (code: string, codeVerifier: string, redirectUrl: string) => Promise<AuthResult>;\n    logInTwoFactor: (twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean) => Promise<AuthResult>;\n    logInComplete: (email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logInSsoComplete: (code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean) => Promise<AuthResult>;\n    logOut: (callback: Function) => void;\n    getSupportedTwoFactorProviders: (win: Window) => any[];\n    getDefaultTwoFactorProvider: (u2fSupported: boolean) => TwoFactorProviderType;\n    makePreloginKey: (masterPassword: string, email: string) => Promise<SymmetricCryptoKey>;\n    authingWithSso: () => boolean;\n    authingWithPassword: () => boolean;\n}\n","import {\n    SyncCipherNotification,\n    SyncFolderNotification,\n} from '../models/response/notificationResponse';\n\nexport abstract class SyncService {\n    syncInProgress: boolean;\n\n    getLastSync: () => Promise<Date>;\n    setLastSync: (date: Date) => Promise<any>;\n    fullSync: (forceSync: boolean, allowThrowOnError?: boolean) => Promise<boolean>;\n    syncUpsertFolder: (notification: SyncFolderNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteFolder: (notification: SyncFolderNotification) => Promise<boolean>;\n    syncUpsertCipher: (notification: SyncCipherNotification, isEdit: boolean) => Promise<boolean>;\n    syncDeleteCipher: (notification: SyncFolderNotification) => Promise<boolean>;\n}\n","export class ConstantsService {\n    static readonly environmentUrlsKey: string = 'environmentUrls';\n    static readonly disableGaKey: string = 'disableGa';\n    static readonly disableAddLoginNotificationKey: string = 'disableAddLoginNotification';\n    static readonly disableChangedPasswordNotificationKey: string = 'disableChangedPasswordNotification';\n    static readonly disableContextMenuItemKey: string = 'disableContextMenuItem';\n    static readonly disableFaviconKey: string = 'disableFavicon';\n    static readonly disableAutoTotpCopyKey: string = 'disableAutoTotpCopy';\n    static readonly enableAutoFillOnPageLoadKey: string = 'enableAutoFillOnPageLoad';\n    static readonly vaultTimeoutKey: string = 'lockOption';\n    static readonly vaultTimeoutActionKey: string = 'vaultTimeoutAction';\n    static readonly lastActiveKey: string = 'lastActive';\n    static readonly neverDomainsKey: string = 'neverDomains';\n    static readonly installedVersionKey: string = 'installedVersion';\n    static readonly localeKey: string = 'locale';\n    static readonly themeKey: string = 'theme';\n    static readonly collapsedGroupingsKey: string = 'collapsedGroupings';\n    static readonly autoConfirmFingerprints: string = 'autoConfirmFingerprints';\n    static readonly dontShowCardsCurrentTab: string = 'dontShowCardsCurrentTab';\n    static readonly dontShowIdentitiesCurrentTab: string = 'dontShowIdentitiesCurrentTab';\n    static readonly defaultUriMatch: string = 'defaultUriMatch';\n    static readonly pinProtectedKey: string = 'pinProtectedKey';\n    static readonly protectedPin: string = 'protectedPin';\n    static readonly clearClipboardKey: string = 'clearClipboardKey';\n    static readonly eventCollectionKey: string = 'eventCollection';\n    static readonly ssoCodeVerifierKey: string = 'ssoCodeVerifier';\n    static readonly ssoStateKey: string = 'ssoState';\n    static readonly biometricUnlockKey: string = 'biometric';\n    static readonly biometricText: string = 'biometricText';\n\n    readonly environmentUrlsKey: string = ConstantsService.environmentUrlsKey;\n    readonly disableGaKey: string = ConstantsService.disableGaKey;\n    readonly disableAddLoginNotificationKey: string = ConstantsService.disableAddLoginNotificationKey;\n    readonly disableContextMenuItemKey: string = ConstantsService.disableContextMenuItemKey;\n    readonly disableFaviconKey: string = ConstantsService.disableFaviconKey;\n    readonly disableAutoTotpCopyKey: string = ConstantsService.disableAutoTotpCopyKey;\n    readonly enableAutoFillOnPageLoadKey: string = ConstantsService.enableAutoFillOnPageLoadKey;\n    readonly vaultTimeoutKey: string = ConstantsService.vaultTimeoutKey;\n    readonly vaultTimeoutActionKey: string = ConstantsService.vaultTimeoutActionKey;\n    readonly lastActiveKey: string = ConstantsService.lastActiveKey;\n    readonly neverDomainsKey: string = ConstantsService.neverDomainsKey;\n    readonly installedVersionKey: string = ConstantsService.installedVersionKey;\n    readonly localeKey: string = ConstantsService.localeKey;\n    readonly themeKey: string = ConstantsService.themeKey;\n    readonly collapsedGroupingsKey: string = ConstantsService.collapsedGroupingsKey;\n    readonly autoConfirmFingerprints: string = ConstantsService.autoConfirmFingerprints;\n    readonly dontShowCardsCurrentTab: string = ConstantsService.dontShowCardsCurrentTab;\n    readonly dontShowIdentitiesCurrentTab: string = ConstantsService.dontShowIdentitiesCurrentTab;\n    readonly defaultUriMatch: string = ConstantsService.defaultUriMatch;\n    readonly pinProtectedKey: string = ConstantsService.pinProtectedKey;\n    readonly protectedPin: string = ConstantsService.protectedPin;\n    readonly clearClipboardKey: string = ConstantsService.clearClipboardKey;\n    readonly eventCollectionKey: string = ConstantsService.eventCollectionKey;\n    readonly ssoCodeVerifierKey: string = ConstantsService.ssoCodeVerifierKey;\n    readonly ssoStateKey: string = ConstantsService.ssoStateKey;\n    readonly biometricUnlockKey: string = ConstantsService.biometricUnlockKey;\n    readonly biometricText: string = ConstantsService.biometricText;\n}\n","export class PasswordVerificationRequest {\n    masterPasswordHash: string;\n}\n","import { EventType } from '../enums/eventType';\n\nexport abstract class EventService {\n    collect: (eventType: EventType, cipherId?: string, uploadImmediately?: boolean) => Promise<any>;\n    uploadEvents: () => Promise<any>;\n    clearEvents: () => Promise<any>;\n}\n","import {\n    Directive,\n    ElementRef,\n    Input,\n} from '@angular/core';\n\nimport { Utils } from '../../misc/utils';\n\n@Directive({\n    selector: '[appAutofocus]',\n})\nexport class AutofocusDirective {\n    @Input() set appAutofocus(condition: boolean | string) {\n        this.autofocus = condition === '' || condition === true;\n    }\n\n    private autofocus: boolean;\n\n    constructor(private el: ElementRef) { }\n\n    ngOnInit() {\n        if (!Utils.isMobileBrowser && this.autofocus) {\n            this.el.nativeElement.focus();\n        }\n    }\n}\n","import { View } from './view';\n\nimport { Card } from '../domain/card';\n\nexport class CardView implements View {\n    cardholderName: string = null;\n    expMonth: string = null;\n    expYear: string = null;\n    code: string = null;\n\n    // tslint:disable\n    private _brand: string = null;\n    private _number: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(c?: Card) {\n        // ctor\n    }\n\n    get maskedCode(): string {\n        return this.code != null ? '•'.repeat(this.code.length) : null;\n    }\n\n    get brand(): string {\n        return this._brand;\n    }\n    set brand(value: string) {\n        this._brand = value;\n        this._subTitle = null;\n    }\n\n    get number(): string {\n        return this._number;\n    }\n    set number(value: string) {\n        this._number = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null) {\n            this._subTitle = this.brand;\n            if (this.number != null && this.number.length >= 4) {\n                if (this._subTitle != null && this._subTitle !== '') {\n                    this._subTitle += ', ';\n                } else {\n                    this._subTitle = '';\n                }\n\n                // Show last 5 on amex, last 4 for all others\n                const count = this.number.length >= 5 && this.number.match(new RegExp('^3[47]')) != null ? 5 : 4;\n                this._subTitle += ('*' + this.number.substr(this.number.length - count));\n            }\n        }\n        return this._subTitle;\n    }\n\n    get expiration(): string {\n        if (!this.expMonth && !this.expYear) {\n            return null;\n        }\n\n        let exp = this.expMonth != null ? ('0' + this.expMonth).slice(-2) : '__';\n        exp += (' / ' + (this.expYear != null ? this.formatYear(this.expYear) : '____'));\n        return exp;\n    }\n\n    private formatYear(year: string): string {\n        return year.length === 2 ? '20' + year : year;\n    }\n}\n","export abstract class EnvironmentService {\n    baseUrl: string;\n    webVaultUrl: string;\n    apiUrl: string;\n    identityUrl: string;\n    iconsUrl: string;\n    notificationsUrl: string;\n    eventsUrl: string;\n    enterpriseUrl: string;\n\n    getWebVaultUrl: () => string;\n    setUrlsFromStorage: () => Promise<void>;\n    setUrls: (urls: any) => Promise<any>;\n}\n","import { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Policy } from '../models/domain/policy';\n\nimport { PolicyType } from '../enums/policyType';\n\nexport abstract class PolicyService {\n    policyCache: Policy[];\n\n    clearCache: () => void;\n    getAll: (type?: PolicyType) => Promise<Policy[]>;\n    replace: (policies: { [id: string]: PolicyData; }) => Promise<any>;\n    clear: (userId: string) => Promise<any>;\n    getMasterPasswordPolicyOptions: (policies?: Policy[]) => Promise<MasterPasswordPolicyOptions>;\n    evaluateMasterPassword: (passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions?: MasterPasswordPolicyOptions) => boolean;\n}\n","import { CipherView } from '../models/view/cipherView';\n\nexport abstract class SearchService {\n    clearIndex: () => void;\n    isSearchable: (query: string) => boolean;\n    indexCiphers: () => Promise<void>;\n    searchCiphers: (query: string,\n        filter?: ((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[]),\n        ciphers?: CipherView[]) => Promise<CipherView[]>;\n    searchCiphersBasic: (ciphers: CipherView[], query: string, deleted?: boolean) => CipherView[];\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { View } from './view';\n\nimport { SecureNote } from '../domain/secureNote';\n\nexport class SecureNoteView implements View {\n    type: SecureNoteType = null;\n\n    constructor(n?: SecureNote) {\n        if (!n) {\n            return;\n        }\n\n        this.type = n.type;\n    }\n\n    get subTitle(): string {\n        return null;\n    }\n}\n","import { CipherString } from './cipherString';\n\nimport { View } from '../view/view';\n\nexport default class Domain {\n    protected buildDomainModel<D extends Domain>(domain: D, dataObj: any, map: any,\n        alreadyEncrypted: boolean, notEncList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = dataObj[(map[prop] || prop)];\n            if (alreadyEncrypted === true || notEncList.indexOf(prop) > -1) {\n                (domain as any)[prop] = objProp ? objProp : null;\n            } else {\n                (domain as any)[prop] = objProp ? new CipherString(objProp) : null;\n            }\n        }\n    }\n    protected buildDataModel<D extends Domain>(domain: D, dataObj: any, map: any, notCipherStringList: any[] = []) {\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            const objProp = (domain as any)[(map[prop] || prop)];\n            if (notCipherStringList.indexOf(prop) > -1) {\n                (dataObj as any)[prop] = objProp != null ? objProp : null;\n            } else {\n                (dataObj as any)[prop] = objProp != null ? (objProp as CipherString).encryptedString : null;\n            }\n        }\n    }\n\n    protected async decryptObj<T extends View>(viewModel: T, map: any, orgId: string): Promise<T> {\n        const promises = [];\n        const self: any = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp) {\n                const p = Promise.resolve().then(() => {\n                    const mapProp = map[theProp] || theProp;\n                    if (self[mapProp]) {\n                        return self[mapProp].decrypt(orgId);\n                    }\n                    return null;\n                }).then((val: any) => {\n                    (viewModel as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop);\n        }\n\n        await Promise.all(promises);\n        return viewModel;\n    }\n}\n","import * as jq from 'jquery';\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Type,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent as BaseModalComponent } from 'jslib/angular/components/modal.component';\nimport { Utils } from 'jslib/misc/utils';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent extends BaseModalComponent {\n    el: any = null;\n\n    constructor(componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService) {\n        super(componentFactoryResolver, messagingService);\n    }\n\n    ngOnDestroy() { /* Nothing */ }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\n        setComponentParameters: (component: T) => void = null): T {\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n        if (setComponentParameters != null) {\n            setComponentParameters(componentRef.instance);\n        }\n\n        const modals = Array.from(document.querySelectorAll('.modal'));\n        if (modals.length > 0) {\n            this.el = jq(modals[0]);\n            this.el.modal('show');\n\n            this.el.on('show.bs.modal', () => {\n                this.onShow.emit();\n                this.messagingService.send('modalShow');\n            });\n            this.el.on('shown.bs.modal', () => {\n                this.onShown.emit();\n                this.messagingService.send('modalShown');\n                if (!Utils.isMobileBrowser) {\n                    this.el.find('*[appAutoFocus]').focus();\n                }\n            });\n            this.el.on('hide.bs.modal', () => {\n                this.onClose.emit();\n                this.messagingService.send('modalClose');\n            });\n            this.el.on('hidden.bs.modal', () => {\n                this.onClosed.emit();\n                this.messagingService.send('modalClosed');\n                if (this.parentContainer != null) {\n                    this.parentContainer.clear();\n                }\n            });\n        }\n\n        return componentRef.instance;\n    }\n\n    close() {\n        if (this.el != null) {\n            this.el.modal('hide');\n        }\n    }\n}\n","export abstract class TokenService {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n    setTokens: (accessToken: string, refreshToken: string) => Promise<any>;\n    setToken: (token: string) => Promise<any>;\n    getToken: () => Promise<string>;\n    setRefreshToken: (refreshToken: string) => Promise<any>;\n    getRefreshToken: () => Promise<string>;\n    toggleTokens: () => Promise<any>;\n    setTwoFactorToken: (token: string, email: string) => Promise<any>;\n    getTwoFactorToken: (email: string) => Promise<string>;\n    clearTwoFactorToken: (email: string) => Promise<any>;\n    clearToken: () => Promise<any>;\n    decodeToken: () => any;\n    getTokenExpirationDate: () => Date;\n    tokenSecondsRemaining: (offsetSeconds?: number) => number;\n    tokenNeedsRefresh: (minutes?: number) => boolean;\n    getUserId: () => string;\n    getEmail: () => string;\n    getEmailVerified: () => boolean;\n    getName: () => string;\n    getPremium: () => boolean;\n    getIssuer: () => string;\n}\n","import { BreachAccountResponse } from '../models/response/breachAccountResponse';\n\nexport abstract class AuditService {\n    passwordLeaked: (password: string) => Promise<number>;\n    breachedAccounts: (username: string) => Promise<BreachAccountResponse[]>;\n}\n","export enum SecureNoteType {\n    Generic = 0,\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CipherView } from '../../models/view/cipherView';\n\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { StateService } from '../../abstractions/state.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nimport { Utils } from '../../misc/utils';\n\nconst IconMap: any = {\n    'fa-globe': String.fromCharCode(0xf0ac),\n    'fa-sticky-note-o': String.fromCharCode(0xf24a),\n    'fa-id-card-o': String.fromCharCode(0xf2c3),\n    'fa-credit-card': String.fromCharCode(0xf09d),\n    'fa-android': String.fromCharCode(0xf17b),\n    'fa-apple': String.fromCharCode(0xf179),\n};\n\n@Component({\n    selector: 'app-vault-icon',\n    templateUrl: 'icon.component.html',\n})\nexport class IconComponent implements OnChanges {\n    @Input() cipher: CipherView;\n    icon: string;\n    image: string;\n    fallbackImage: string;\n    imageEnabled: boolean;\n\n    private iconsUrl: string;\n\n    constructor(environmentService: EnvironmentService, protected stateService: StateService) {\n        this.iconsUrl = environmentService.iconsUrl;\n        if (!this.iconsUrl) {\n            if (environmentService.baseUrl) {\n                this.iconsUrl = environmentService.baseUrl + '/icons';\n            } else {\n                this.iconsUrl = 'https://icons.bitwarden.net';\n            }\n        }\n    }\n\n    async ngOnChanges() {\n        this.imageEnabled = !(await this.stateService.get<boolean>(ConstantsService.disableFaviconKey));\n        this.load();\n    }\n\n    get iconCode(): string {\n        return IconMap[this.icon];\n    }\n\n    protected load() {\n        switch (this.cipher.type) {\n            case CipherType.Login:\n                this.icon = 'fa-globe';\n                this.setLoginIcon();\n                break;\n            case CipherType.SecureNote:\n                this.icon = 'fa-sticky-note-o';\n                break;\n            case CipherType.Card:\n                this.icon = 'fa-credit-card';\n                break;\n            case CipherType.Identity:\n                this.icon = 'fa-id-card-o';\n                break;\n            default:\n                break;\n        }\n    }\n\n    private setLoginIcon() {\n        if (this.cipher.login.uri) {\n            let hostnameUri = this.cipher.login.uri;\n            let isWebsite = false;\n\n            if (hostnameUri.indexOf('androidapp://') === 0) {\n                this.icon = 'fa-android';\n                this.image = null;\n            } else if (hostnameUri.indexOf('iosapp://') === 0) {\n                this.icon = 'fa-apple';\n                this.image = null;\n            } else if (this.imageEnabled && hostnameUri.indexOf('://') === -1 && hostnameUri.indexOf('.') > -1) {\n                hostnameUri = 'http://' + hostnameUri;\n                isWebsite = true;\n            } else if (this.imageEnabled) {\n                isWebsite = hostnameUri.indexOf('http') === 0 && hostnameUri.indexOf('.') > -1;\n            }\n\n            if (this.imageEnabled && isWebsite) {\n                try {\n                    this.image = this.iconsUrl + '/' + Utils.getHostname(hostnameUri) + '/icon.png';\n                    this.fallbackImage = 'images/fa-globe.png';\n                } catch (e) { }\n            }\n        } else {\n            this.image = null;\n        }\n    }\n}\n","<div class=\"icon\" aria-hidden=\"true\">\n    <img [src]=\"image\" appFallbackSrc=\"{{fallbackImage}}\" *ngIf=\"imageEnabled && image\" alt=\"\" />\n    <i class=\"fa fa-fw fa-lg {{icon}}\" *ngIf=\"!imageEnabled || !image\"></i>\n</div>\n","import { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport abstract class CryptoFunctionService {\n    pbkdf2: (password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number) => Promise<ArrayBuffer>;\n    hash: (value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5') => Promise<ArrayBuffer>;\n    hmac: (value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512') => Promise<ArrayBuffer>;\n    compare: (a: ArrayBuffer, b: ArrayBuffer) => Promise<boolean>;\n    hmacFast: (value: ArrayBuffer | string, key: ArrayBuffer | string, algorithm: 'sha1' | 'sha256' | 'sha512') =>\n        Promise<ArrayBuffer | string>;\n    compareFast: (a: ArrayBuffer | string, b: ArrayBuffer | string) => Promise<boolean>;\n    aesEncrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    aesDecryptFastParameters: (data: string, iv: string, mac: string, key: SymmetricCryptoKey) =>\n        DecryptParameters<ArrayBuffer | string>;\n    aesDecryptFast: (parameters: DecryptParameters<ArrayBuffer | string>) => Promise<string>;\n    aesDecrypt: (data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaEncrypt: (data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaDecrypt: (data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256') => Promise<ArrayBuffer>;\n    rsaExtractPublicKey: (privateKey: ArrayBuffer) => Promise<ArrayBuffer>;\n    rsaGenerateKeyPair: (length: 1024 | 2048 | 4096) => Promise<[ArrayBuffer, ArrayBuffer]>;\n    randomBytes: (length: number) => Promise<ArrayBuffer>;\n}\n","import { CipherString } from '../models/domain/cipherString';\n\nexport abstract class VaultTimeoutService {\n    biometricLocked: boolean;\n    pinProtectedKey: CipherString;\n    isLocked: () => Promise<boolean>;\n    checkVaultTimeout: () => Promise<void>;\n    lock: (allowSoftLock?: boolean) => Promise<void>;\n    logOut: () => Promise<void>;\n    setVaultTimeoutOptions: (vaultTimeout: number, vaultTimeoutAction: string) => Promise<void>;\n    isPinLockSet: () => Promise<[boolean, boolean]>;\n    isBiometricLockSet: () => Promise<boolean>;\n    clear: () => Promise<any>;\n}\n","export enum TwoFactorProviderType {\n    Authenticator = 0,\n    Email = 1,\n    Duo = 2,\n    Yubikey = 3,\n    U2f = 4,\n    Remember = 5,\n    OrganizationDuo = 6,\n}\n","import { Injectable } from '@angular/core';\n\nimport { BroadcasterService as BaseBroadcasterService } from '../../services/broadcaster.service';\n\n@Injectable()\nexport class BroadcasterService extends BaseBroadcasterService {\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { WebConstants } from '../../services/webConstants';\n\nconst StripeElementStyle = {\n    base: {\n        color: '#333333',\n        fontFamily: '\"Open Sans\", \"Helvetica Neue\", Helvetica, Arial, sans-serif, ' +\n            '\"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n        fontSize: '14px',\n        fontSmoothing: 'antialiased',\n    },\n    invalid: {\n        color: '#333333',\n    },\n};\n\nconst StripeElementClasses = {\n    focus: 'is-focused',\n    empty: 'is-empty',\n    invalid: 'is-invalid',\n};\n\n@Component({\n    selector: 'app-payment',\n    templateUrl: 'payment.component.html',\n})\nexport class PaymentComponent implements OnInit {\n    @Input() showMethods = true;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.Card;\n    @Input() hideBank = false;\n    @Input() hidePaypal = false;\n    @Input() hideCredit = false;\n\n    bank: any = {\n        routing_number: null,\n        account_number: null,\n        account_holder_name: null,\n        account_holder_type: '',\n        currency: 'USD',\n        country: 'US',\n    };\n\n    paymentMethodType = PaymentMethodType;\n\n    private btScript: HTMLScriptElement;\n    private btInstance: any = null;\n    private stripeScript: HTMLScriptElement;\n    private stripe: any = null;\n    private stripeElements: any = null;\n    private stripeCardNumberElement: any = null;\n    private stripeCardExpiryElement: any = null;\n    private stripeCardCvcElement: any = null;\n\n    constructor(private platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        this.stripeScript = window.document.createElement('script');\n        this.stripeScript.src = 'https://js.stripe.com/v3/';\n        this.stripeScript.async = true;\n        this.stripeScript.onload = () => {\n            this.stripe = (window as any).Stripe(this.platformUtilsService.isDev() ?\n                WebConstants.stripeTestKey : WebConstants.stripeLiveKey);\n            this.stripeElements = this.stripe.elements();\n            this.setStripeElement();\n        };\n        this.btScript = window.document.createElement('script');\n        this.btScript.src = 'scripts/dropin.js';\n        this.btScript.async = true;\n    }\n\n    ngOnInit() {\n        if (!this.showOptions) {\n            this.hidePaypal = this.method !== PaymentMethodType.PayPal;\n            this.hideBank = this.method !== PaymentMethodType.BankAccount;\n            this.hideCredit = this.method !== PaymentMethodType.Credit;\n        }\n        window.document.head.appendChild(this.stripeScript);\n        if (!this.hidePaypal) {\n            window.document.head.appendChild(this.btScript);\n        }\n    }\n\n    ngOnDestroy() {\n        window.document.head.removeChild(this.stripeScript);\n        window.setTimeout(() => {\n            Array.from(window.document.querySelectorAll('iframe')).forEach((el) => {\n                if (el.src != null && el.src.indexOf('stripe') > -1) {\n                    try {\n                        window.document.body.removeChild(el);\n                    } catch { }\n                }\n            });\n        }, 500);\n        if (!this.hidePaypal) {\n            window.document.head.removeChild(this.btScript);\n            window.setTimeout(() => {\n                Array.from(window.document.head.querySelectorAll('script')).forEach((el) => {\n                    if (el.src != null && el.src.indexOf('paypal') > -1) {\n                        try {\n                            window.document.head.removeChild(el);\n                        } catch { }\n                    }\n                });\n                const btStylesheet = window.document.head.querySelector('#braintree-dropin-stylesheet');\n                if (btStylesheet != null) {\n                    try {\n                        window.document.head.removeChild(btStylesheet);\n                    } catch { }\n                }\n            }, 500);\n        }\n    }\n\n    changeMethod() {\n        this.btInstance = null;\n\n        if (this.method === PaymentMethodType.PayPal) {\n            window.setTimeout(() => {\n                (window as any).braintree.dropin.create({\n                    authorization: this.platformUtilsService.isDev() ?\n                        WebConstants.btSandboxKey : WebConstants.btProductionKey,\n                    container: '#bt-dropin-container',\n                    paymentOptionPriority: ['paypal'],\n                    paypal: {\n                        flow: 'vault',\n                        buttonStyle: {\n                            label: 'pay',\n                            size: 'medium',\n                            shape: 'pill',\n                            color: 'blue',\n                        },\n                    },\n                }, (createErr: any, instance: any) => {\n                    if (createErr != null) {\n                        // tslint:disable-next-line\n                        console.error(createErr);\n                        return;\n                    }\n                    this.btInstance = instance;\n                });\n            }, 250);\n        } else {\n            this.setStripeElement();\n        }\n    }\n\n    createPaymentToken(): Promise<[string, PaymentMethodType]> {\n        return new Promise((resolve, reject) => {\n            if (this.method === PaymentMethodType.Credit) {\n                resolve([null, this.method]);\n            } else if (this.method === PaymentMethodType.PayPal) {\n                this.btInstance.requestPaymentMethod().then((payload: any) => {\n                    resolve([payload.nonce, this.method]);\n                }).catch((err: any) => {\n                    reject(err.message);\n                });\n            } else if (this.method === PaymentMethodType.Card || this.method === PaymentMethodType.BankAccount) {\n                if (this.method === PaymentMethodType.Card) {\n                    this.apiService.postSetupPayment().then((clientSecret) =>\n                        this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement))\n                        .then((result: any) => {\n                            if (result.error) {\n                                reject(result.error.message);\n                            } else if (result.setupIntent && result.setupIntent.status === 'succeeded') {\n                                resolve([result.setupIntent.payment_method, this.method]);\n                            } else {\n                                reject();\n                            }\n                        });\n                } else {\n                    this.stripe.createToken('bank_account', this.bank).then((result: any) => {\n                        if (result.error) {\n                            reject(result.error.message);\n                        } else if (result.token && result.token.id != null) {\n                            resolve([result.token.id, this.method]);\n                        } else {\n                            reject();\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    handleStripeCardPayment(clientSecret: string, successCallback: () => Promise<any>): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (this.showMethods && this.stripeCardNumberElement == null) {\n                reject();\n                return;\n            }\n            const handleCardPayment = () => this.showMethods ?\n                this.stripe.handleCardSetup(clientSecret, this.stripeCardNumberElement) :\n                this.stripe.handleCardSetup(clientSecret);\n            return handleCardPayment().then(async (result: any) => {\n                if (result.error) {\n                    reject(result.error.message);\n                } else if (result.paymentIntent && result.paymentIntent.status === 'succeeded') {\n                    if (successCallback != null) {\n                        await successCallback();\n                    }\n                    resolve();\n                } else {\n                    reject();\n                }\n            });\n        });\n    }\n\n    private setStripeElement() {\n        window.setTimeout(() => {\n            if (this.showMethods && this.method === PaymentMethodType.Card) {\n                if (this.stripeCardNumberElement == null) {\n                    this.stripeCardNumberElement = this.stripeElements.create('cardNumber', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                if (this.stripeCardExpiryElement == null) {\n                    this.stripeCardExpiryElement = this.stripeElements.create('cardExpiry', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                    });\n                }\n                if (this.stripeCardCvcElement == null) {\n                    this.stripeCardCvcElement = this.stripeElements.create('cardCvc', {\n                        style: StripeElementStyle,\n                        classes: StripeElementClasses,\n                        placeholder: '',\n                    });\n                }\n                this.stripeCardNumberElement.mount('#stripe-card-number-element');\n                this.stripeCardExpiryElement.mount('#stripe-card-expiry-element');\n                this.stripeCardCvcElement.mount('#stripe-card-cvc-element');\n            }\n        }, 50);\n    }\n}\n","<div class=\"mb-4 text-lg\" *ngIf=\"showOptions && showMethods\">\n    <div class=\"form-check form-check-inline mr-4\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-card\" [value]=\"paymentMethodType.Card\"\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\n        <label class=\"form-check-label\" for=\"method-card\">\n            <i class=\"fa fa-fw fa-credit-card\" aria-hidden=\"true\"></i> {{'creditCard' | i18n}}</label>\n    </div>\n    <div class=\"form-check form-check-inline mr-4\" *ngIf=\"!hideBank\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-bank\"\n            [value]=\"paymentMethodType.BankAccount\" [(ngModel)]=\"method\" (change)=\"changeMethod()\">\n        <label class=\"form-check-label\" for=\"method-bank\">\n            <i class=\"fa fa-fw fa-university\" aria-hidden=\"true\"></i> {{'bankAccount' | i18n}}</label>\n    </div>\n    <div class=\"form-check form-check-inline\" *ngIf=\"!hidePaypal\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-paypal\" [value]=\"paymentMethodType.PayPal\"\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\n        <label class=\"form-check-label\" for=\"method-paypal\">\n            <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label>\n    </div>\n    <div class=\"form-check form-check-inline\" *ngIf=\"!hideCredit\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"method-credit\" [value]=\"paymentMethodType.Credit\"\n            [(ngModel)]=\"method\" (change)=\"changeMethod()\">\n        <label class=\"form-check-label\" for=\"method-credit\">\n            <i class=\"fa fa-fw fa-dollar\" aria-hidden=\"true\"></i> {{'accountCredit' | i18n}}</label>\n    </div>\n</div>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Card\">\n    <div class=\"row\">\n        <div class=\"form-group col-4\">\n            <label for=\"stripe-card-number-element\">{{'number' | i18n}}</label>\n            <div id=\"stripe-card-number-element\" class=\"form-control stripe-form-control\"></div>\n        </div>\n        <div class=\"form-group col-8 d-flex align-items-end\">\n            <img src=\"images/cards.png\" alt=\"Visa, MasterCard, Discover, AmEx, JCB, Diners Club, UnionPay\"\n                width=\"323\" height=\"32\">\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"stripe-card-expiry-element\">{{'expiration' | i18n}}</label>\n            <div id=\"stripe-card-expiry-element\" class=\"form-control stripe-form-control\"></div>\n        </div>\n        <div class=\"form-group col-4\">\n            <div class=\"d-flex\">\n                <label for=\"stripe-card-cvc-element\">\n                    {{'securityCode' | i18n}}\n                </label>\n                <a href=\"https://www.cvvnumber.com/cvv.html\" tabindex=\"-1\" target=\"_blank\" rel=\"noopener noreferrer\"\n                    class=\"ml-auto\" appA11yTitle=\"{{'learnMore' | i18n}}\">\n                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                </a>\n            </div>\n            <div id=\"stripe-card-cvc-element\" class=\"form-control stripe-form-control\"></div>\n        </div>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.BankAccount\">\n    <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\">\n        {{'verifyBankAccountInitialDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}\n    </app-callout>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"routing_number\">{{'routingNumber' | i18n}}</label>\n            <input id=\"routing_number\" class=\"form-control\" type=\"text\" name=\"routing_number\"\n                [(ngModel)]=\"bank.routing_number\" required appInputVerbatim>\n        </div>\n        <div class=\"form-group col-6\">\n            <label for=\"account_number\">{{'accountNumber' | i18n}}</label>\n            <input id=\"account_number\" class=\"form-control\" type=\"text\" name=\"account_number\"\n                [(ngModel)]=\"bank.account_number\" required appInputVerbatim>\n        </div>\n        <div class=\"form-group col-6\">\n            <label for=\"account_holder_name\">{{'accountHolderName' | i18n}}</label>\n            <input id=\"account_holder_name\" class=\"form-control\" type=\"text\" name=\"account_holder_name\"\n                [(ngModel)]=\"bank.account_holder_name\" required>\n        </div>\n        <div class=\"form-group col-6\">\n            <label for=\"account_holder_type\">{{'bankAccountType' | i18n}}</label>\n            <select id=\"account_holder_type\" class=\"form-control\" name=\"account_holder_type\"\n                [(ngModel)]=\"bank.account_holder_type\" required>\n                <option value=\"\">-- {{'select' | i18n}} --</option>\n                <option value=\"company\">{{'bankAccountTypeCompany' | i18n}}</option>\n                <option value=\"individual\">{{'bankAccountTypeIndividual' | i18n}}</option>\n            </select>\n        </div>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.PayPal\">\n    <div class=\"mb-3\">\n        <div id=\"bt-dropin-container\" class=\"mb-1\"></div>\n        <small class=\"text-muted\">{{'paypalClickSubmit' | i18n}}</small>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"showMethods && method === paymentMethodType.Credit\">\n    <app-callout type=\"note\">\n        {{'makeSureEnoughCredit' | i18n}}\n    </app-callout>\n</ng-container>\n","import { View } from './view';\n\nimport { Folder } from '../domain/folder';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nexport class FolderView implements View, ITreeNodeObject {\n    id: string = null;\n    name: string = null;\n    revisionDate: Date = null;\n\n    constructor(f?: Folder) {\n        if (!f) {\n            return;\n        }\n\n        this.id = f.id;\n        this.revisionDate = f.revisionDate;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { OrganizationTaxInfoUpdateRequest } from 'jslib/models/request/organizationTaxInfoUpdateRequest';\nimport { TaxInfoUpdateRequest } from 'jslib/models/request/taxInfoUpdateRequest';\n\n@Component({\n    selector: 'app-tax-info',\n    templateUrl: 'tax-info.component.html',\n})\nexport class TaxInfoComponent {\n    @Output() onCountryChanged = new EventEmitter();\n\n    loading: boolean = true;\n    organizationId: string;\n    taxInfo: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    private pristine: any = {\n        taxId: null,\n        line1: null,\n        line2: null,\n        city: null,\n        state: null,\n        postalCode: null,\n        country: 'US',\n        includeTaxId: false,\n    };\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            if (this.organizationId) {\n                try {\n                    const taxInfo = await this.apiService.getOrganizationTaxInfo(this.organizationId);\n                    if (taxInfo) {\n                        this.taxInfo.taxId = taxInfo.taxId;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.line1 = taxInfo.line1;\n                        this.taxInfo.line2 = taxInfo.line2;\n                        this.taxInfo.city = taxInfo.city;\n                        this.taxInfo.state = taxInfo.state;\n                        this.taxInfo.postalCode = taxInfo.postalCode;\n                        this.taxInfo.country = taxInfo.country || 'US';\n                        this.taxInfo.includeTaxId = this.taxInfo.country !== 'US' && (\n                            !!taxInfo.taxId\n                            || !!taxInfo.line1\n                            || !!taxInfo.line2\n                            || !!taxInfo.city\n                            || !!taxInfo.state);\n                    }\n                } catch { }\n            } else {\n                const taxInfo = await this.apiService.getTaxInfo();\n                if (taxInfo) {\n                    this.taxInfo.postalCode = taxInfo.postalCode;\n                    this.taxInfo.country = taxInfo.country || 'US';\n                }\n            }\n            this.pristine = Object.assign({}, this.taxInfo);\n            // If not the default (US) then trigger onCountryChanged\n            if (this.taxInfo.country !== 'US') {\n                this.onCountryChanged.emit();\n            }\n        });\n        this.loading = false;\n    }\n\n    getTaxInfoRequest(): TaxInfoUpdateRequest {\n        if (this.organizationId) {\n            const request = new OrganizationTaxInfoUpdateRequest();\n            request.taxId = this.taxInfo.taxId;\n            request.state = this.taxInfo.state;\n            request.line1 = this.taxInfo.line1;\n            request.line2 = this.taxInfo.line2;\n            request.city = this.taxInfo.city;\n            request.state = this.taxInfo.state;\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        } else {\n            const request = new TaxInfoUpdateRequest();\n            request.postalCode = this.taxInfo.postalCode;\n            request.country = this.taxInfo.country;\n            return request;\n        }\n    }\n\n    submitTaxInfo(): Promise<any> {\n        if (!this.hasChanged()) {\n            return new Promise((resolve) => { resolve(); });\n        }\n        const request = this.getTaxInfoRequest();\n        return this.organizationId ? this.apiService.putOrganizationTaxInfo(this.organizationId,\n            request as OrganizationTaxInfoUpdateRequest) : this.apiService.putTaxInfo(request);\n    }\n\n    changeCountry() {\n        if (this.taxInfo.country === 'US') {\n            this.taxInfo.includeTaxId = false;\n            this.taxInfo.taxId = null;\n            this.taxInfo.line1 = null;\n            this.taxInfo.line2 = null;\n            this.taxInfo.city = null;\n            this.taxInfo.state = null;\n        }\n        this.onCountryChanged.emit();\n    }\n\n    private hasChanged(): boolean {\n        for (const key in this.taxInfo) {\n            if (this.pristine.hasOwnProperty(key) && this.pristine[key] !== this.taxInfo[key]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"row\">\n    <div class=\"col-6\">\n        <div class=\"form-group\">\n            <label for=\"addressCountry\">{{'country' | i18n}}</label>\n            <select id=\"addressCountry\" class=\"form-control\" [(ngModel)]=\"taxInfo.country\" required name=\"addressCountry\" \n                autocomplete=\"country\" (change)=\"changeCountry()\">\n                <option value=\"\">-- Select --</option>\n                <option value=\"US\">United States</option>\n                <option value=\"CN\">China</option>\n                <option value=\"FR\">France</option>\n                <option value=\"DE\">Germany</option>\n                <option value=\"CA\">Canada</option>\n                <option value=\"GB\">United Kingdom</option>\n                <option value=\"AU\">Australia</option>\n                <option value=\"IN\">India</option>\n                <option value=\"-\" disabled></option>\n                <option value=\"AF\">Afghanistan</option>\n                <option value=\"AX\">Åland Islands</option>\n                <option value=\"AL\">Albania</option>\n                <option value=\"DZ\">Algeria</option>\n                <option value=\"AS\">American Samoa</option>\n                <option value=\"AD\">Andorra</option>\n                <option value=\"AO\">Angola</option>\n                <option value=\"AI\">Anguilla</option>\n                <option value=\"AQ\">Antarctica</option>\n                <option value=\"AG\">Antigua and Barbuda</option>\n                <option value=\"AR\">Argentina</option>\n                <option value=\"AM\">Armenia</option>\n                <option value=\"AW\">Aruba</option>\n                <option value=\"AT\">Austria</option>\n                <option value=\"AZ\">Azerbaijan</option>\n                <option value=\"BS\">Bahamas</option>\n                <option value=\"BH\">Bahrain</option>\n                <option value=\"BD\">Bangladesh</option>\n                <option value=\"BB\">Barbados</option>\n                <option value=\"BY\">Belarus</option>\n                <option value=\"BE\">Belgium</option>\n                <option value=\"BZ\">Belize</option>\n                <option value=\"BJ\">Benin</option>\n                <option value=\"BM\">Bermuda</option>\n                <option value=\"BT\">Bhutan</option>\n                <option value=\"BO\">Bolivia, Plurinational State of</option>\n                <option value=\"BQ\">Bonaire, Sint Eustatius and Saba</option>\n                <option value=\"BA\">Bosnia and Herzegovina</option>\n                <option value=\"BW\">Botswana</option>\n                <option value=\"BV\">Bouvet Island</option>\n                <option value=\"BR\">Brazil</option>\n                <option value=\"IO\">British Indian Ocean Territory</option>\n                <option value=\"BN\">Brunei Darussalam</option>\n                <option value=\"BG\">Bulgaria</option>\n                <option value=\"BF\">Burkina Faso</option>\n                <option value=\"BI\">Burundi</option>\n                <option value=\"KH\">Cambodia</option>\n                <option value=\"CM\">Cameroon</option>\n                <option value=\"CV\">Cape Verde</option>\n                <option value=\"KY\">Cayman Islands</option>\n                <option value=\"CF\">Central African Republic</option>\n                <option value=\"TD\">Chad</option>\n                <option value=\"CL\">Chile</option>\n                <option value=\"CX\">Christmas Island</option>\n                <option value=\"CC\">Cocos (Keeling) Islands</option>\n                <option value=\"CO\">Colombia</option>\n                <option value=\"KM\">Comoros</option>\n                <option value=\"CG\">Congo</option>\n                <option value=\"CD\">Congo, the Democratic Republic of the</option>\n                <option value=\"CK\">Cook Islands</option>\n                <option value=\"CR\">Costa Rica</option>\n                <option value=\"CI\">Côte d'Ivoire</option>\n                <option value=\"HR\">Croatia</option>\n                <option value=\"CU\">Cuba</option>\n                <option value=\"CW\">Curaçao</option>\n                <option value=\"CY\">Cyprus</option>\n                <option value=\"CZ\">Czech Republic</option>\n                <option value=\"DK\">Denmark</option>\n                <option value=\"DJ\">Djibouti</option>\n                <option value=\"DM\">Dominica</option>\n                <option value=\"DO\">Dominican Republic</option>\n                <option value=\"EC\">Ecuador</option>\n                <option value=\"EG\">Egypt</option>\n                <option value=\"SV\">El Salvador</option>\n                <option value=\"GQ\">Equatorial Guinea</option>\n                <option value=\"ER\">Eritrea</option>\n                <option value=\"EE\">Estonia</option>\n                <option value=\"ET\">Ethiopia</option>\n                <option value=\"FK\">Falkland Islands (Malvinas)</option>\n                <option value=\"FO\">Faroe Islands</option>\n                <option value=\"FJ\">Fiji</option>\n                <option value=\"FI\">Finland</option>\n                <option value=\"GF\">French Guiana</option>\n                <option value=\"PF\">French Polynesia</option>\n                <option value=\"TF\">French Southern Territories</option>\n                <option value=\"GA\">Gabon</option>\n                <option value=\"GM\">Gambia</option>\n                <option value=\"GE\">Georgia</option>\n                <option value=\"GH\">Ghana</option>\n                <option value=\"GI\">Gibraltar</option>\n                <option value=\"GR\">Greece</option>\n                <option value=\"GL\">Greenland</option>\n                <option value=\"GD\">Grenada</option>\n                <option value=\"GP\">Guadeloupe</option>\n                <option value=\"GU\">Guam</option>\n                <option value=\"GT\">Guatemala</option>\n                <option value=\"GG\">Guernsey</option>\n                <option value=\"GN\">Guinea</option>\n                <option value=\"GW\">Guinea-Bissau</option>\n                <option value=\"GY\">Guyana</option>\n                <option value=\"HT\">Haiti</option>\n                <option value=\"HM\">Heard Island and McDonald Islands</option>\n                <option value=\"VA\">Holy See (Vatican City State)</option>\n                <option value=\"HN\">Honduras</option>\n                <option value=\"HK\">Hong Kong</option>\n                <option value=\"HU\">Hungary</option>\n                <option value=\"IS\">Iceland</option>\n                <option value=\"ID\">Indonesia</option>\n                <option value=\"IR\">Iran, Islamic Republic of</option>\n                <option value=\"IQ\">Iraq</option>\n                <option value=\"IE\">Ireland</option>\n                <option value=\"IM\">Isle of Man</option>\n                <option value=\"IL\">Israel</option>\n                <option value=\"IT\">Italy</option>\n                <option value=\"JM\">Jamaica</option>\n                <option value=\"JP\">Japan</option>\n                <option value=\"JE\">Jersey</option>\n                <option value=\"JO\">Jordan</option>\n                <option value=\"KZ\">Kazakhstan</option>\n                <option value=\"KE\">Kenya</option>\n                <option value=\"KI\">Kiribati</option>\n                <option value=\"KP\">Korea, Democratic People's Republic of</option>\n                <option value=\"KR\">Korea, Republic of</option>\n                <option value=\"KW\">Kuwait</option>\n                <option value=\"KG\">Kyrgyzstan</option>\n                <option value=\"LA\">Lao People's Democratic Republic</option>\n                <option value=\"LV\">Latvia</option>\n                <option value=\"LB\">Lebanon</option>\n                <option value=\"LS\">Lesotho</option>\n                <option value=\"LR\">Liberia</option>\n                <option value=\"LY\">Libya</option>\n                <option value=\"LI\">Liechtenstein</option>\n                <option value=\"LT\">Lithuania</option>\n                <option value=\"LU\">Luxembourg</option>\n                <option value=\"MO\">Macao</option>\n                <option value=\"MK\">Macedonia, the former Yugoslav Republic of</option>\n                <option value=\"MG\">Madagascar</option>\n                <option value=\"MW\">Malawi</option>\n                <option value=\"MY\">Malaysia</option>\n                <option value=\"MV\">Maldives</option>\n                <option value=\"ML\">Mali</option>\n                <option value=\"MT\">Malta</option>\n                <option value=\"MH\">Marshall Islands</option>\n                <option value=\"MQ\">Martinique</option>\n                <option value=\"MR\">Mauritania</option>\n                <option value=\"MU\">Mauritius</option>\n                <option value=\"YT\">Mayotte</option>\n                <option value=\"MX\">Mexico</option>\n                <option value=\"FM\">Micronesia, Federated States of</option>\n                <option value=\"MD\">Moldova, Republic of</option>\n                <option value=\"MC\">Monaco</option>\n                <option value=\"MN\">Mongolia</option>\n                <option value=\"ME\">Montenegro</option>\n                <option value=\"MS\">Montserrat</option>\n                <option value=\"MA\">Morocco</option>\n                <option value=\"MZ\">Mozambique</option>\n                <option value=\"MM\">Myanmar</option>\n                <option value=\"NA\">Namibia</option>\n                <option value=\"NR\">Nauru</option>\n                <option value=\"NP\">Nepal</option>\n                <option value=\"NL\">Netherlands</option>\n                <option value=\"NC\">New Caledonia</option>\n                <option value=\"NZ\">New Zealand</option>\n                <option value=\"NI\">Nicaragua</option>\n                <option value=\"NE\">Niger</option>\n                <option value=\"NG\">Nigeria</option>\n                <option value=\"NU\">Niue</option>\n                <option value=\"NF\">Norfolk Island</option>\n                <option value=\"MP\">Northern Mariana Islands</option>\n                <option value=\"NO\">Norway</option>\n                <option value=\"OM\">Oman</option>\n                <option value=\"PK\">Pakistan</option>\n                <option value=\"PW\">Palau</option>\n                <option value=\"PS\">Palestinian Territory, Occupied</option>\n                <option value=\"PA\">Panama</option>\n                <option value=\"PG\">Papua New Guinea</option>\n                <option value=\"PY\">Paraguay</option>\n                <option value=\"PE\">Peru</option>\n                <option value=\"PH\">Philippines</option>\n                <option value=\"PN\">Pitcairn</option>\n                <option value=\"PL\">Poland</option>\n                <option value=\"PT\">Portugal</option>\n                <option value=\"PR\">Puerto Rico</option>\n                <option value=\"QA\">Qatar</option>\n                <option value=\"RE\">Réunion</option>\n                <option value=\"RO\">Romania</option>\n                <option value=\"RU\">Russian Federation</option>\n                <option value=\"RW\">Rwanda</option>\n                <option value=\"BL\">Saint Barthélemy</option>\n                <option value=\"SH\">Saint Helena, Ascension and Tristan da Cunha</option>\n                <option value=\"KN\">Saint Kitts and Nevis</option>\n                <option value=\"LC\">Saint Lucia</option>\n                <option value=\"MF\">Saint Martin (French part)</option>\n                <option value=\"PM\">Saint Pierre and Miquelon</option>\n                <option value=\"VC\">Saint Vincent and the Grenadines</option>\n                <option value=\"WS\">Samoa</option>\n                <option value=\"SM\">San Marino</option>\n                <option value=\"ST\">Sao Tome and Principe</option>\n                <option value=\"SA\">Saudi Arabia</option>\n                <option value=\"SN\">Senegal</option>\n                <option value=\"RS\">Serbia</option>\n                <option value=\"SC\">Seychelles</option>\n                <option value=\"SL\">Sierra Leone</option>\n                <option value=\"SG\">Singapore</option>\n                <option value=\"SX\">Sint Maarten (Dutch part)</option>\n                <option value=\"SK\">Slovakia</option>\n                <option value=\"SI\">Slovenia</option>\n                <option value=\"SB\">Solomon Islands</option>\n                <option value=\"SO\">Somalia</option>\n                <option value=\"ZA\">South Africa</option>\n                <option value=\"GS\">South Georgia and the South Sandwich Islands</option>\n                <option value=\"SS\">South Sudan</option>\n                <option value=\"ES\">Spain</option>\n                <option value=\"LK\">Sri Lanka</option>\n                <option value=\"SD\">Sudan</option>\n                <option value=\"SR\">Suriname</option>\n                <option value=\"SJ\">Svalbard and Jan Mayen</option>\n                <option value=\"SZ\">Swaziland</option>\n                <option value=\"SE\">Sweden</option>\n                <option value=\"CH\">Switzerland</option>\n                <option value=\"SY\">Syrian Arab Republic</option>\n                <option value=\"TW\">Taiwan</option>\n                <option value=\"TJ\">Tajikistan</option>\n                <option value=\"TZ\">Tanzania, United Republic of</option>\n                <option value=\"TH\">Thailand</option>\n                <option value=\"TL\">Timor-Leste</option>\n                <option value=\"TG\">Togo</option>\n                <option value=\"TK\">Tokelau</option>\n                <option value=\"TO\">Tonga</option>\n                <option value=\"TT\">Trinidad and Tobago</option>\n                <option value=\"TN\">Tunisia</option>\n                <option value=\"TR\">Turkey</option>\n                <option value=\"TM\">Turkmenistan</option>\n                <option value=\"TC\">Turks and Caicos Islands</option>\n                <option value=\"TV\">Tuvalu</option>\n                <option value=\"UG\">Uganda</option>\n                <option value=\"UA\">Ukraine</option>\n                <option value=\"AE\">United Arab Emirates</option>\n                <option value=\"UM\">United States Minor Outlying Islands</option>\n                <option value=\"UY\">Uruguay</option>\n                <option value=\"UZ\">Uzbekistan</option>\n                <option value=\"VU\">Vanuatu</option>\n                <option value=\"VE\">Venezuela, Bolivarian Republic of</option>\n                <option value=\"VN\">Viet Nam</option>\n                <option value=\"VG\">Virgin Islands, British</option>\n                <option value=\"VI\">Virgin Islands, U.S.</option>\n                <option value=\"WF\">Wallis and Futuna</option>\n                <option value=\"EH\">Western Sahara</option>\n                <option value=\"YE\">Yemen</option>\n                <option value=\"ZM\">Zambia</option>\n                <option value=\"ZW\">Zimbabwe</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"col-3\">\n        <div class=\"form-group\">\n            <label for=\"addressPostalCode\">{{'zipPostalCode' | i18n}}</label>\n            <input id=\"addressPostalCode\" class=\"form-control\" type=\"text\" name=\"addressPostalCode\" \n                [(ngModel)]=\"taxInfo.postalCode\" [required]=\"taxInfo.country === 'US'\" autocomplete=\"postal-code\">\n        </div>\n    </div>\n    <div class=\"col-6\" *ngIf=\"organizationId && taxInfo.country !== 'US'\">\n        <div class=\"form-group form-check\">\n            <input class=\"form-check-input\" id=\"addressIncludeTaxId\" name=\"addressIncludeTaxId\" type=\"checkbox\" \n                [(ngModel)]=\"taxInfo.includeTaxId\">\n            <label class=\"form-check-label\" for=\"addressIncludeTaxId\">{{'includeVAT' | i18n}}</label>\n        </div>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n    <div class=\"col-6\">\n        <div class=\"form-group\">\n            <label for=\"taxId\">{{'taxIdNumber' | i18n}}</label>\n            <input id=\"taxId\" class=\"form-control\" type=\"text\" name=\"taxId\" [(ngModel)]=\"taxInfo.taxId\">\n        </div>\n    </div>\n</div>\n<div class=\"row\" *ngIf=\"organizationId && taxInfo.includeTaxId\">\n    <div class=\"col-6\">\n        <div class=\"form-group\">\n            <label for=\"addressLine1\">{{'address1' | i18n}}</label>\n            <input id=\"addressLine1\" class=\"form-control\" type=\"text\" name=\"addressLine1\" \n                [(ngModel)]=\"taxInfo.line1\" autocomplete=\"address-line1\">\n        </div>\n    </div>\n    <div class=\"col-6\">\n        <div class=\"form-group\">\n            <label for=\"addressLine2\">{{'address2' | i18n}}</label>\n            <input id=\"addressLine2\" class=\"form-control\" type=\"text\" name=\"addressLine2\" \n                [(ngModel)]=\"taxInfo.line2\" autocomplete=\"address-line2\">\n        </div>\n    </div>\n    <div class=\"col-6\">\n        <div class=\"form-group\">\n            <label for=\"addressCity\">{{'cityTown' | i18n}}</label>\n            <input id=\"addressCity\" class=\"form-control\" type=\"text\" name=\"addressCity\" \n                [(ngModel)]=\"taxInfo.city\" autocomplete=\"address-level2\">\n        </div>\n    </div>\n    <div class=\"col-6\">\n        <div class=\"form-group\">\n            <label for=\"addressState\">{{'stateProvince' | i18n}}</label>\n            <input id=\"addressState\" class=\"form-control\" type=\"text\" name=\"addressState\" \n                [(ngModel)]=\"taxInfo.state\" autocomplete=\"address-level1\">\n        </div>\n    </div>\n</div>\n","import { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { AttachmentView } from './attachmentView';\nimport { CardView } from './cardView';\nimport { FieldView } from './fieldView';\nimport { IdentityView } from './identityView';\nimport { LoginView } from './loginView';\nimport { PasswordHistoryView } from './passwordHistoryView';\nimport { SecureNoteView } from './secureNoteView';\nimport { View } from './view';\n\nexport class CipherView implements View {\n    id: string = null;\n    organizationId: string = null;\n    folderId: string = null;\n    name: string = null;\n    notes: string = null;\n    type: CipherType = null;\n    favorite = false;\n    organizationUseTotp = false;\n    edit = false;\n    viewPassword = true;\n    localData: any;\n    login = new LoginView();\n    identity = new IdentityView();\n    card = new CardView();\n    secureNote = new SecureNoteView();\n    attachments: AttachmentView[] = null;\n    fields: FieldView[] = null;\n    passwordHistory: PasswordHistoryView[] = null;\n    collectionIds: string[] = null;\n    revisionDate: Date = null;\n    deletedDate: Date = null;\n\n    constructor(c?: Cipher) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.folderId = c.folderId;\n        this.favorite = c.favorite;\n        this.organizationUseTotp = c.organizationUseTotp;\n        this.edit = c.edit;\n        this.viewPassword = c.viewPassword;\n        this.type = c.type;\n        this.localData = c.localData;\n        this.collectionIds = c.collectionIds;\n        this.revisionDate = c.revisionDate;\n        this.deletedDate = c.deletedDate;\n    }\n\n    get subTitle(): string {\n        switch (this.type) {\n            case CipherType.Login:\n                return this.login.subTitle;\n            case CipherType.SecureNote:\n                return this.secureNote.subTitle;\n            case CipherType.Card:\n                return this.card.subTitle;\n            case CipherType.Identity:\n                return this.identity.subTitle;\n            default:\n                break;\n        }\n\n        return null;\n    }\n\n    get hasPasswordHistory(): boolean {\n        return this.passwordHistory && this.passwordHistory.length > 0;\n    }\n\n    get hasAttachments(): boolean {\n        return this.attachments && this.attachments.length > 0;\n    }\n\n    get hasOldAttachments(): boolean {\n        if (this.hasAttachments) {\n            for (let i = 0; i < this.attachments.length; i++) {\n                if (this.attachments[i].key == null) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    get hasFields(): boolean {\n        return this.fields && this.fields.length > 0;\n    }\n\n    get passwordRevisionDisplayDate(): Date {\n        if (this.type !== CipherType.Login || this.login == null) {\n            return null;\n        } else if (this.login.password == null || this.login.password === '') {\n            return null;\n        }\n        return this.login.passwordRevisionDate;\n    }\n\n    get isDeleted(): boolean {\n        return this.deletedDate != null;\n    }\n}\n","import { View } from './view';\n\nimport { Identity } from '../domain/identity';\n\nimport { Utils } from '../../misc/utils';\n\nexport class IdentityView implements View {\n    title: string = null;\n    middleName: string = null;\n    address1: string = null;\n    address2: string = null;\n    address3: string = null;\n    city: string = null;\n    state: string = null;\n    postalCode: string = null;\n    country: string = null;\n    company: string = null;\n    email: string = null;\n    phone: string = null;\n    ssn: string = null;\n    username: string = null;\n    passportNumber: string = null;\n    licenseNumber: string = null;\n\n    // tslint:disable\n    private _firstName: string = null;\n    private _lastName: string = null;\n    private _subTitle: string = null;\n    // tslint:enable\n\n    constructor(i?: Identity) {\n        // ctor\n    }\n\n    get firstName(): string {\n        return this._firstName;\n    }\n    set firstName(value: string) {\n        this._firstName = value;\n        this._subTitle = null;\n    }\n\n    get lastName(): string {\n        return this._lastName;\n    }\n    set lastName(value: string) {\n        this._lastName = value;\n        this._subTitle = null;\n    }\n\n    get subTitle(): string {\n        if (this._subTitle == null && (this.firstName != null || this.lastName != null)) {\n            this._subTitle = '';\n            if (this.firstName != null) {\n                this._subTitle = this.firstName;\n            }\n            if (this.lastName != null) {\n                if (this._subTitle !== '') {\n                    this._subTitle += ' ';\n                }\n                this._subTitle += this.lastName;\n            }\n        }\n\n        return this._subTitle;\n    }\n\n    get fullName(): string {\n        if (this.title != null || this.firstName != null || this.middleName != null || this.lastName != null) {\n            let name = '';\n            if (this.title != null) {\n                name += (this.title + ' ');\n            }\n            if (this.firstName != null) {\n                name += (this.firstName + ' ');\n            }\n            if (this.middleName != null) {\n                name += (this.middleName + ' ');\n            }\n            if (this.lastName != null) {\n                name += this.lastName;\n            }\n            return name.trim();\n        }\n\n        return null;\n    }\n\n    get fullAddress(): string {\n        let address = this.address1;\n        if (!Utils.isNullOrWhitespace(this.address2)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address2;\n        }\n        if (!Utils.isNullOrWhitespace(this.address3)) {\n            if (!Utils.isNullOrWhitespace(address)) {\n                address += ', ';\n            }\n            address += this.address3;\n        }\n        return address;\n    }\n\n    get fullAddressPart2(): string {\n        if (this.city == null && this.state == null && this.postalCode == null) {\n            return null;\n        }\n        const city = this.city || '-';\n        const state = this.state;\n        const postalCode = this.postalCode || '-';\n        let addressPart2 = city;\n        if (!Utils.isNullOrWhitespace(state)) {\n            addressPart2 += ', ' + state;\n        }\n        addressPart2 += ', ' + postalCode;\n        return addressPart2;\n    }\n}\n","export enum FieldType {\n    Text = 0,\n    Hidden = 1,\n    Boolean = 2,\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n    OnInit,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\nimport { StateService } from 'jslib/abstractions/state.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-avatar',\n    template: '<img [src]=\"sanitizer.bypassSecurityTrustResourceUrl(src)\" title=\"{{data}}\" ' +\n        '[ngClass]=\"{\\'rounded-circle\\': circle}\">',\n})\nexport class AvatarComponent implements OnChanges, OnInit {\n    @Input() data: string;\n    @Input() email: string;\n    @Input() size = 45;\n    @Input() charCount = 2;\n    @Input() textColor = '#ffffff';\n    @Input() fontSize = 20;\n    @Input() fontWeight = 300;\n    @Input() dynamic = false;\n    @Input() circle = false;\n\n    src: string;\n\n    constructor(public sanitizer: DomSanitizer, private cryptoFunctionService: CryptoFunctionService,\n        private stateService: StateService) { }\n\n    ngOnInit() {\n        if (!this.dynamic) {\n            this.generate();\n        }\n    }\n\n    ngOnChanges() {\n        if (this.dynamic) {\n            this.generate();\n        }\n    }\n\n    private async generate() {\n        const enableGravatars = await this.stateService.get<boolean>('enableGravatars');\n        if (enableGravatars && this.email != null) {\n            const hashBytes = await this.cryptoFunctionService.hash(this.email.toLowerCase().trim(), 'md5');\n            const hash = Utils.fromBufferToHex(hashBytes).toLowerCase();\n            this.src = 'https://www.gravatar.com/avatar/' + hash + '?s=' + this.size + '&r=pg&d=retro';\n        } else {\n            let chars: string = null;\n            const upperData = this.data.toUpperCase();\n\n            if (this.charCount > 1) {\n                chars = this.getFirstLetters(upperData, this.charCount);\n            }\n            if (chars == null) {\n                chars = upperData.substr(0, this.charCount);\n            }\n\n            const charObj = this.getCharText(chars);\n            const color = this.stringToColor(upperData);\n            const svg = this.getSvg(this.size, color);\n            svg.appendChild(charObj);\n            const html = window.document.createElement('div').appendChild(svg).outerHTML;\n            const svgHtml = window.btoa(unescape(encodeURIComponent(html)));\n            this.src = 'data:image/svg+xml;base64,' + svgHtml;\n        }\n    }\n\n    private stringToColor(str: string): string {\n        let hash = 0;\n        for (let i = 0; i < str.length; i++) {\n            // tslint:disable-next-line\n            hash = str.charCodeAt(i) + ((hash << 5) - hash);\n        }\n        let color = '#';\n        for (let i = 0; i < 3; i++) {\n            // tslint:disable-next-line\n            const value = (hash >> (i * 8)) & 0xFF;\n            color += ('00' + value.toString(16)).substr(-2);\n        }\n        return color;\n    }\n\n    private getFirstLetters(data: string, count: number): string {\n        const parts = data.split(' ');\n        if (parts.length > 1) {\n            let text = '';\n            for (let i = 0; i < count; i++) {\n                text += parts[i].substr(0, 1);\n            }\n            return text;\n        }\n        return null;\n    }\n\n    private getSvg(size: number, color: string): HTMLElement {\n        const svgTag = window.document.createElement('svg');\n        svgTag.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n        svgTag.setAttribute('pointer-events', 'none');\n        svgTag.setAttribute('width', size.toString());\n        svgTag.setAttribute('height', size.toString());\n        svgTag.style.backgroundColor = color;\n        svgTag.style.width = size + 'px';\n        svgTag.style.height = size + 'px';\n        return svgTag;\n    }\n\n    private getCharText(character: string): HTMLElement {\n        const textTag = window.document.createElement('text');\n        textTag.setAttribute('text-anchor', 'middle');\n        textTag.setAttribute('y', '50%');\n        textTag.setAttribute('x', '50%');\n        textTag.setAttribute('dy', '0.35em');\n        textTag.setAttribute('pointer-events', 'auto');\n        textTag.setAttribute('fill', this.textColor);\n        textTag.setAttribute('font-family', '\"Open Sans\",\"Helvetica Neue\",Helvetica,Arial,' +\n            'sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\"');\n        textTag.textContent = character;\n        textTag.style.fontWeight = this.fontWeight.toString();\n        textTag.style.fontSize = this.fontSize + 'px';\n        return textTag;\n    }\n}\n","import { View } from './view';\n\nimport { Collection } from '../domain/collection';\nimport { ITreeNodeObject } from '../domain/treeNode';\n\nimport { CollectionGroupDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionView implements View, ITreeNodeObject {\n    id: string = null;\n    organizationId: string = null;\n    name: string = null;\n    externalId: string = null;\n    readOnly: boolean = null;\n    hidePasswords: boolean = null;\n\n    constructor(c?: Collection | CollectionGroupDetailsResponse) {\n        if (!c) {\n            return;\n        }\n\n        this.id = c.id;\n        this.organizationId = c.organizationId;\n        this.externalId = c.externalId;\n        if (c instanceof Collection) {\n            this.readOnly = c.readOnly;\n            this.hidePasswords = c.hidePasswords;\n        }\n    }\n}\n","import { LoginUriView } from './loginUriView';\nimport { View } from './view';\n\nimport { Login } from '../domain/login';\n\nexport class LoginView implements View {\n    username: string = null;\n    password: string = null;\n    passwordRevisionDate?: Date = null;\n    totp: string = null;\n    uris: LoginUriView[] = null;\n\n    constructor(l?: Login) {\n        if (!l) {\n            return;\n        }\n\n        this.passwordRevisionDate = l.passwordRevisionDate;\n    }\n\n    get uri(): string {\n        return this.hasUris ? this.uris[0].uri : null;\n    }\n\n    get maskedPassword(): string {\n        return this.password != null ? '••••••••' : null;\n    }\n\n    get subTitle(): string {\n        return this.username;\n    }\n\n    get canLaunch(): boolean {\n        return this.hasUris && this.uris.some((u) => u.canLaunch);\n    }\n\n    get launchUri(): string {\n        if (this.hasUris) {\n            const uri = this.uris.find((u) => u.canLaunch);\n            if (uri != null) {\n                return uri.launchUri;\n            }\n        }\n        return null;\n    }\n\n    get hasUris(): boolean {\n        return this.uris != null && this.uris.length > 0;\n    }\n}\n","import { CollectionDetailsResponse } from '../response/collectionResponse';\n\nexport class CollectionData {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n    readOnly: boolean;\n\n    constructor(response: CollectionDetailsResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.name = response.name;\n        this.externalId = response.externalId;\n        this.readOnly = response.readOnly;\n    }\n}\n","import { CollectionData } from '../data/collectionData';\n\nimport { CollectionView } from '../view/collectionView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nexport class Collection extends Domain {\n    id: string;\n    organizationId: string;\n    name: CipherString;\n    externalId: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(obj?: CollectionData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            organizationId: null,\n            name: null,\n            externalId: null,\n            readOnly: null,\n            hidePasswords: null,\n        }, alreadyEncrypted, ['id', 'organizationId', 'externalId', 'readOnly', 'hidePasswords']);\n    }\n\n    decrypt(): Promise<CollectionView> {\n        return this.decryptObj(new CollectionView(this), {\n            name: null,\n        }, this.organizationId);\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-two-factor-verify',\n    templateUrl: 'two-factor-verify.component.html',\n})\nexport class TwoFactorVerifyComponent {\n    @Input() type: TwoFactorProviderType;\n    @Input() organizationId: string;\n    @Output() onAuthed = new EventEmitter<any>();\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    private masterPasswordHash: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private toasterService: ToasterService, private cryptoService: CryptoService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash =\n            await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        try {\n            switch (this.type) {\n                case -1:\n                    this.formPromise = this.apiService.getTwoFactorRecover(request);\n                    break;\n                case TwoFactorProviderType.Duo:\n                case TwoFactorProviderType.OrganizationDuo:\n                    if (this.organizationId != null) {\n                        this.formPromise = this.apiService.getTwoFactorOrganizationDuo(this.organizationId, request);\n                    } else {\n                        this.formPromise = this.apiService.getTwoFactorDuo(request);\n                    }\n                    break;\n                case TwoFactorProviderType.Email:\n                    this.formPromise = this.apiService.getTwoFactorEmail(request);\n                    break;\n                case TwoFactorProviderType.U2f:\n                    this.formPromise = this.apiService.getTwoFactorU2f(request);\n                    break;\n                case TwoFactorProviderType.Authenticator:\n                    this.formPromise = this.apiService.getTwoFactorAuthenticator(request);\n                    break;\n                case TwoFactorProviderType.Yubikey:\n                    this.formPromise = this.apiService.getTwoFactorYubiKey(request);\n                    break;\n            }\n\n            const response = await this.formPromise;\n            this.onAuthed.emit({\n                response: response,\n                masterPasswordHash: this.masterPasswordHash,\n            });\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"modal-body\">\n        <p>{{'twoStepLoginAuthDesc' | i18n}}</p>\n        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n        <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n            [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'continue' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n    </div>\n</form>\n","export abstract class ExportService {\n    getExport: (format?: 'csv' | 'json') => Promise<string>;\n    getOrganizationExport: (organizationId: string, format?: 'csv' | 'json') => Promise<string>;\n    getFileName: (prefix?: string, extension?: string) => string;\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { AttachmentData } from './attachmentData';\nimport { CardData } from './cardData';\nimport { FieldData } from './fieldData';\nimport { IdentityData } from './identityData';\nimport { LoginData } from './loginData';\nimport { PasswordHistoryData } from './passwordHistoryData';\nimport { SecureNoteData } from './secureNoteData';\n\nimport { CipherResponse } from '../response/cipherResponse';\n\nexport class CipherData {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    userId: string;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    favorite: boolean;\n    revisionDate: string;\n    type: CipherType;\n    sizeName: string;\n    name: string;\n    notes: string;\n    login?: LoginData;\n    secureNote?: SecureNoteData;\n    card?: CardData;\n    identity?: IdentityData;\n    fields?: FieldData[];\n    attachments?: AttachmentData[];\n    passwordHistory?: PasswordHistoryData[];\n    collectionIds?: string[];\n    deletedDate: string;\n\n    constructor(response?: CipherResponse, userId?: string, collectionIds?: string[]) {\n        if (response == null) {\n            return;\n        }\n\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.folderId = response.folderId;\n        this.userId = userId;\n        this.edit = response.edit;\n        this.viewPassword = response.viewPassword;\n        this.organizationUseTotp = response.organizationUseTotp;\n        this.favorite = response.favorite;\n        this.revisionDate = response.revisionDate;\n        this.type = response.type;\n        this.name = response.name;\n        this.notes = response.notes;\n        this.collectionIds = collectionIds != null ? collectionIds : response.collectionIds;\n        this.deletedDate = response.deletedDate;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginData(response.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteData(response.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new CardData(response.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityData(response.identity);\n                break;\n            default:\n                break;\n        }\n\n        if (response.fields != null) {\n            this.fields = response.fields.map((f) => new FieldData(f));\n        }\n        if (response.attachments != null) {\n            this.attachments = response.attachments.map((a) => new AttachmentData(a));\n        }\n        if (response.passwordHistory != null) {\n            this.passwordHistory = response.passwordHistory.map((ph) => new PasswordHistoryData(ph));\n        }\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { View } from './view';\n\nimport { Field } from '../domain/field';\n\nexport class FieldView implements View {\n    name: string = null;\n    value: string = null;\n    type: FieldType = null;\n    newField: boolean = false; // Marks if the field is new and hasn't been saved\n\n    constructor(f?: Field) {\n        if (!f) {\n            return;\n        }\n\n        this.type = f.type;\n    }\n\n    get maskedValue(): string {\n        return this.value != null ? '••••••••' : null;\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { Cipher } from '../domain/cipher';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { LoginUriApi } from '../api/loginUriApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nimport { AttachmentRequest } from './attachmentRequest';\nimport { PasswordHistoryRequest } from './passwordHistoryRequest';\n\nexport class CipherRequest {\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    login: LoginApi;\n    secureNote: SecureNoteApi;\n    card: CardApi;\n    identity: IdentityApi;\n    fields: FieldApi[];\n    passwordHistory: PasswordHistoryRequest[];\n    // Deprecated, remove at some point and rename attachments2 to attachments\n    attachments: { [id: string]: string; };\n    attachments2: { [id: string]: AttachmentRequest; };\n\n    constructor(cipher: Cipher) {\n        this.type = cipher.type;\n        this.folderId = cipher.folderId;\n        this.organizationId = cipher.organizationId;\n        this.name = cipher.name ? cipher.name.encryptedString : null;\n        this.notes = cipher.notes ? cipher.notes.encryptedString : null;\n        this.favorite = cipher.favorite;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new LoginApi();\n                this.login.uris = null;\n                this.login.username = cipher.login.username ? cipher.login.username.encryptedString : null;\n                this.login.password = cipher.login.password ? cipher.login.password.encryptedString : null;\n                this.login.passwordRevisionDate = cipher.login.passwordRevisionDate != null ?\n                    cipher.login.passwordRevisionDate.toISOString() : null;\n                this.login.totp = cipher.login.totp ? cipher.login.totp.encryptedString : null;\n\n                if (cipher.login.uris != null) {\n                    this.login.uris = cipher.login.uris.map((u) => {\n                        const uri = new LoginUriApi();\n                        uri.uri = u.uri != null ? u.uri.encryptedString : null;\n                        uri.match = u.match != null ? u.match : null;\n                        return uri;\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNoteApi();\n                this.secureNote.type = cipher.secureNote.type;\n                break;\n            case CipherType.Card:\n                this.card = new CardApi();\n                this.card.cardholderName = cipher.card.cardholderName != null ?\n                    cipher.card.cardholderName.encryptedString : null;\n                this.card.brand = cipher.card.brand != null ? cipher.card.brand.encryptedString : null;\n                this.card.number = cipher.card.number != null ? cipher.card.number.encryptedString : null;\n                this.card.expMonth = cipher.card.expMonth != null ? cipher.card.expMonth.encryptedString : null;\n                this.card.expYear = cipher.card.expYear != null ? cipher.card.expYear.encryptedString : null;\n                this.card.code = cipher.card.code != null ? cipher.card.code.encryptedString : null;\n                break;\n            case CipherType.Identity:\n                this.identity = new IdentityApi();\n                this.identity.title = cipher.identity.title != null ? cipher.identity.title.encryptedString : null;\n                this.identity.firstName = cipher.identity.firstName != null ?\n                    cipher.identity.firstName.encryptedString : null;\n                this.identity.middleName = cipher.identity.middleName != null ?\n                    cipher.identity.middleName.encryptedString : null;\n                this.identity.lastName = cipher.identity.lastName != null ?\n                    cipher.identity.lastName.encryptedString : null;\n                this.identity.address1 = cipher.identity.address1 != null ?\n                    cipher.identity.address1.encryptedString : null;\n                this.identity.address2 = cipher.identity.address2 != null ?\n                    cipher.identity.address2.encryptedString : null;\n                this.identity.address3 = cipher.identity.address3 != null ?\n                    cipher.identity.address3.encryptedString : null;\n                this.identity.city = cipher.identity.city != null ? cipher.identity.city.encryptedString : null;\n                this.identity.state = cipher.identity.state != null ? cipher.identity.state.encryptedString : null;\n                this.identity.postalCode = cipher.identity.postalCode != null ?\n                    cipher.identity.postalCode.encryptedString : null;\n                this.identity.country = cipher.identity.country != null ?\n                    cipher.identity.country.encryptedString : null;\n                this.identity.company = cipher.identity.company != null ?\n                    cipher.identity.company.encryptedString : null;\n                this.identity.email = cipher.identity.email != null ? cipher.identity.email.encryptedString : null;\n                this.identity.phone = cipher.identity.phone != null ? cipher.identity.phone.encryptedString : null;\n                this.identity.ssn = cipher.identity.ssn != null ? cipher.identity.ssn.encryptedString : null;\n                this.identity.username = cipher.identity.username != null ?\n                    cipher.identity.username.encryptedString : null;\n                this.identity.passportNumber = cipher.identity.passportNumber != null ?\n                    cipher.identity.passportNumber.encryptedString : null;\n                this.identity.licenseNumber = cipher.identity.licenseNumber != null ?\n                    cipher.identity.licenseNumber.encryptedString : null;\n                break;\n            default:\n                break;\n        }\n\n        if (cipher.fields != null) {\n            this.fields = cipher.fields.map((f) => {\n                const field = new FieldApi();\n                field.type = f.type;\n                field.name = f.name ? f.name.encryptedString : null;\n                field.value = f.value ? f.value.encryptedString : null;\n                return field;\n            });\n        }\n\n        if (cipher.passwordHistory != null) {\n            this.passwordHistory = [];\n            cipher.passwordHistory.forEach((ph) => {\n                this.passwordHistory.push({\n                    lastUsedDate: ph.lastUsedDate,\n                    password: ph.password ? ph.password.encryptedString : null,\n                });\n            });\n        }\n\n        if (cipher.attachments != null) {\n            this.attachments = {};\n            this.attachments2 = {};\n            cipher.attachments.forEach((attachment) => {\n                const fileName = attachment.fileName ? attachment.fileName.encryptedString : null;\n                this.attachments[attachment.id] = fileName;\n                const attachmentRequest = new AttachmentRequest();\n                attachmentRequest.fileName = fileName;\n                if (attachment.key != null) {\n                    attachmentRequest.key = attachment.key.encryptedString;\n                }\n                this.attachments2[attachment.id] = attachmentRequest;\n            });\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport {\n    ActivatedRoute,\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Injectable()\nexport class RouterService {\n    private previousUrl: string = undefined;\n    private currentUrl: string = undefined;\n\n    constructor(private router: Router, private activatedRoute: ActivatedRoute,\n        private titleService: Title, i18nService: I18nService) {\n        this.currentUrl = this.router.url;\n        router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                this.previousUrl = this.currentUrl;\n                this.currentUrl = event.url;\n\n                let title = i18nService.t('pageTitle', 'Bitwarden');\n                let titleId: string = null;\n                let rawTitle: string = null;\n                let child = this.activatedRoute.firstChild;\n                while (child != null) {\n                    if (child.firstChild != null) {\n                        child = child.firstChild;\n                    } else if (child.snapshot.data != null && child.snapshot.data.title != null) {\n                        rawTitle = child.snapshot.data.title;\n                        break;\n                    } else if (child.snapshot.data != null && child.snapshot.data.titleId != null) {\n                        titleId = child.snapshot.data.titleId;\n                        break;\n                    } else {\n                        titleId = null;\n                        rawTitle = null;\n                        break;\n                    }\n                }\n\n                if (titleId != null || rawTitle != null) {\n                    const newTitle = rawTitle != null ? rawTitle : i18nService.t(titleId);\n                    if (newTitle != null && newTitle !== '') {\n                        title = (newTitle + ' | ' + title);\n                    }\n                }\n                this.titleService.setTitle(title);\n            }\n        });\n    }\n\n    getPreviousUrl() {\n        return this.previousUrl;\n    }\n\n    setPreviousUrl(url: string) {\n        this.previousUrl = url;\n    }\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class CipherString {\n    encryptedString?: string;\n    encryptionType?: EncryptionType;\n    decryptedValue?: string;\n    data?: string;\n    iv?: string;\n    mac?: string;\n\n    constructor(encryptedStringOrType: string | EncryptionType, data?: string, iv?: string, mac?: string) {\n        if (data != null) {\n            // data and header\n            const encType = encryptedStringOrType as EncryptionType;\n\n            if (iv != null) {\n                this.encryptedString = encType + '.' + iv + '|' + data;\n            } else {\n                this.encryptedString = encType + '.' + data;\n            }\n\n            // mac\n            if (mac != null) {\n                this.encryptedString += ('|' + mac);\n            }\n\n            this.encryptionType = encType;\n            this.data = data;\n            this.iv = iv;\n            this.mac = mac;\n\n            return;\n        }\n\n        this.encryptedString = encryptedStringOrType as string;\n        if (!this.encryptedString) {\n            return;\n        }\n\n        const headerPieces = this.encryptedString.split('.');\n        let encPieces: string[] = null;\n\n        if (headerPieces.length === 2) {\n            try {\n                this.encryptionType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) {\n                return;\n            }\n        } else {\n            encPieces = this.encryptedString.split('|');\n            this.encryptionType = encPieces.length === 3 ? EncryptionType.AesCbc128_HmacSha256_B64 :\n                EncryptionType.AesCbc256_B64;\n        }\n\n        switch (this.encryptionType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encPieces.length !== 3) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                this.mac = encPieces[2];\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encPieces.length !== 2) {\n                    return;\n                }\n\n                this.iv = encPieces[0];\n                this.data = encPieces[1];\n                break;\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n                if (encPieces.length !== 1) {\n                    return;\n                }\n\n                this.data = encPieces[0];\n                break;\n            default:\n                return;\n        }\n    }\n\n    async decrypt(orgId: string): Promise<string> {\n        if (this.decryptedValue != null) {\n            return this.decryptedValue;\n        }\n\n        let cryptoService: CryptoService;\n        const containerService = (Utils.global as any).bitwardenContainerService;\n        if (containerService) {\n            cryptoService = containerService.getCryptoService();\n        } else {\n            throw new Error('global bitwardenContainerService not initialized.');\n        }\n\n        try {\n            const orgKey = await cryptoService.getOrgKey(orgId);\n            this.decryptedValue = await cryptoService.decryptToUtf8(this, orgKey);\n        } catch (e) {\n            this.decryptedValue = '[error: cannot decrypt]';\n        }\n        return this.decryptedValue;\n    }\n}\n","export enum OrganizationUserStatusType {\n    Invited = 0,\n    Accepted = 1,\n    Confirmed = 2,\n}\n","export enum OrganizationUserType {\n    Owner = 0,\n    Admin = 1,\n    User = 2,\n    Manager = 3,\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n@Pipe({\n    name: 'search',\n})\nexport class SearchPipe implements PipeTransform {\n    transform(items: any[], searchText: string, prop1?: string, prop2?: string, prop3?: string): any[] {\n        if (items == null || items.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return items;\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return items.filter((i) => {\n            if (prop1 != null && i[prop1] != null && i[prop1].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop2 != null && i[prop2] != null && i[prop2].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (prop3 != null && i[prop3] != null && i[prop3].toString().toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { DeviceType } from 'jslib/enums/deviceType';\nimport { EventType } from 'jslib/enums/eventType';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\n\n@Injectable()\nexport class EventService {\n    constructor(private i18nService: I18nService) { }\n\n    getDefaultDateFilters() {\n        const d = new Date();\n        const end = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 23, 59);\n        d.setDate(d.getDate() - 30);\n        const start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), 0, 0);\n        return [this.toDateTimeLocalString(start), this.toDateTimeLocalString(end)];\n    }\n\n    formatDateFilters(filterStart: string, filterEnd: string) {\n        const start: Date = new Date(filterStart);\n        const end: Date = new Date(filterEnd + ':59.999');\n        if (isNaN(start.getTime()) || isNaN(end.getTime()) || end < start) {\n            throw new Error('Invalid date range.');\n        }\n        return [start.toISOString(), end.toISOString()];\n    }\n\n    getEventInfo(ev: EventResponse, options = new EventOptions()): EventInfo {\n        const appInfo = this.getAppInfo(ev.deviceType);\n        return {\n            message: this.getEventMessage(ev, options),\n            appIcon: appInfo[0],\n            appName: appInfo[1],\n        };\n    }\n\n    private getEventMessage(ev: EventResponse, options: EventOptions) {\n        let msg = '';\n        switch (ev.type) {\n            // User\n            case EventType.User_LoggedIn:\n                msg = this.i18nService.t('loggedIn');\n                break;\n            case EventType.User_ChangedPassword:\n                msg = this.i18nService.t('changedPassword');\n                break;\n            case EventType.User_Updated2fa:\n                msg = this.i18nService.t('enabledUpdated2fa');\n                break;\n            case EventType.User_Disabled2fa:\n                msg = this.i18nService.t('disabled2fa');\n                break;\n            case EventType.User_Recovered2fa:\n                msg = this.i18nService.t('recovered2fa');\n                break;\n            case EventType.User_FailedLogIn:\n                msg = this.i18nService.t('failedLogin');\n                break;\n            case EventType.User_FailedLogIn2fa:\n                msg = this.i18nService.t('failedLogin2fa');\n                break;\n            case EventType.User_ClientExportedVault:\n                msg = this.i18nService.t('exportedVault');\n                break;\n            // Cipher\n            case EventType.Cipher_Created:\n                msg = this.i18nService.t('createdItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Updated:\n                msg = this.i18nService.t('editedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Deleted:\n                msg = this.i18nService.t('permanentlyDeletedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_SoftDeleted:\n                msg = this.i18nService.t('deletedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Restored:\n                msg = this.i18nService.t('restoredItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentCreated:\n                msg = this.i18nService.t('createdAttachmentForItem', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_AttachmentDeleted:\n                msg = this.i18nService.t('deletedAttachmentForItem', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_Shared:\n                msg = this.i18nService.t('sharedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientViewed:\n                msg = this.i18nService.t('viewedItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientToggledPasswordVisible:\n                msg = this.i18nService.t('viewedPasswordItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientToggledHiddenFieldVisible:\n                msg = this.i18nService.t('viewedHiddenFieldItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientToggledCardCodeVisible:\n                msg = this.i18nService.t('viewedSecurityCodeItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientCopiedHiddenField:\n                msg = this.i18nService.t('copiedHiddenFieldItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientCopiedPassword:\n                msg = this.i18nService.t('copiedPasswordItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientCopiedCardCode:\n                msg = this.i18nService.t('copiedSecurityCodeItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_ClientAutofilled:\n                msg = this.i18nService.t('autofilledItemId', this.formatCipherId(ev, options));\n                break;\n            case EventType.Cipher_UpdatedCollections:\n                msg = this.i18nService.t('editedCollectionsForItem', this.formatCipherId(ev, options));\n                break;\n            // Collection\n            case EventType.Collection_Created:\n                msg = this.i18nService.t('createdCollectionId', this.formatCollectionId(ev));\n                break;\n            case EventType.Collection_Updated:\n                msg = this.i18nService.t('editedCollectionId', this.formatCollectionId(ev));\n                break;\n            case EventType.Collection_Deleted:\n                msg = this.i18nService.t('deletedCollectionId', this.formatCollectionId(ev));\n                break;\n            // Group\n            case EventType.Group_Created:\n                msg = this.i18nService.t('createdGroupId', this.formatGroupId(ev));\n                break;\n            case EventType.Group_Updated:\n                msg = this.i18nService.t('editedGroupId', this.formatGroupId(ev));\n                break;\n            case EventType.Group_Deleted:\n                msg = this.i18nService.t('deletedGroupId', this.formatGroupId(ev));\n                break;\n            // Org user\n            case EventType.OrganizationUser_Invited:\n                msg = this.i18nService.t('invitedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Confirmed:\n                msg = this.i18nService.t('confirmedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Updated:\n                msg = this.i18nService.t('editedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_Removed:\n                msg = this.i18nService.t('removedUserId', this.formatOrgUserId(ev));\n                break;\n            case EventType.OrganizationUser_UpdatedGroups:\n                msg = this.i18nService.t('editedGroupsForUser', this.formatOrgUserId(ev));\n                break;\n            // Org\n            case EventType.Organization_Updated:\n                msg = this.i18nService.t('editedOrgSettings');\n                break;\n            case EventType.Organization_PurgedVault:\n                msg = this.i18nService.t('purgedOrganizationVault');\n                break;\n            /*\n            case EventType.Organization_ClientExportedVault:\n                msg = this.i18nService.t('exportedOrganizationVault');\n                break;\n            */\n            default:\n                break;\n        }\n        return msg === '' ? null : msg;\n    }\n\n    private getAppInfo(deviceType: DeviceType): [string, string] {\n        switch (deviceType) {\n            case DeviceType.Android:\n                return ['fa-android', this.i18nService.t('mobile') + ' - Android'];\n            case DeviceType.iOS:\n                return ['fa-apple', this.i18nService.t('mobile') + ' - iOS'];\n            case DeviceType.UWP:\n                return ['fa-windows', this.i18nService.t('mobile') + ' - Windows'];\n            case DeviceType.ChromeExtension:\n                return ['fa-chrome', this.i18nService.t('extension') + ' - Chrome'];\n            case DeviceType.FirefoxExtension:\n                return ['fa-firefox', this.i18nService.t('extension') + ' - Firefox'];\n            case DeviceType.OperaExtension:\n                return ['fa-opera', this.i18nService.t('extension') + ' - Opera'];\n            case DeviceType.EdgeExtension:\n                return ['fa-edge', this.i18nService.t('extension') + ' - Edge'];\n            case DeviceType.VivaldiExtension:\n                return ['fa-puzzle-piece', this.i18nService.t('extension') + ' - Vivaldi'];\n            case DeviceType.SafariExtension:\n                return ['fa-safari', this.i18nService.t('extension') + ' - Safari'];\n            case DeviceType.WindowsDesktop:\n                return ['fa-windows', this.i18nService.t('desktop') + ' - Windows'];\n            case DeviceType.MacOsDesktop:\n                return ['fa-apple', this.i18nService.t('desktop') + ' - macOS'];\n            case DeviceType.LinuxDesktop:\n                return ['fa-linux', this.i18nService.t('desktop') + ' - Linux'];\n            case DeviceType.ChromeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Chrome'];\n            case DeviceType.FirefoxBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Firefox'];\n            case DeviceType.OperaBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Opera'];\n            case DeviceType.SafariBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Safari'];\n            case DeviceType.VivaldiBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Vivaldi'];\n            case DeviceType.EdgeBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - Edge'];\n            case DeviceType.IEBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - IE'];\n            case DeviceType.UnknownBrowser:\n                return ['fa-globe', this.i18nService.t('webVault') + ' - ' + this.i18nService.t('unknown')];\n            default:\n                return ['fa-globe', this.i18nService.t('unknown')];\n        }\n    }\n\n    private formatCipherId(ev: EventResponse, options: EventOptions) {\n        const shortId = this.getShortId(ev.cipherId);\n        if (ev.organizationId == null || !options.cipherInfo) {\n            return '<code>' + shortId + '</code>';\n        }\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/vault?search=' + shortId +\n            '&viewEvents=' + ev.cipherId);\n        return a.outerHTML;\n    }\n\n    private formatGroupId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.groupId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/groups?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatCollectionId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.collectionId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/collections?search=' + shortId);\n        return a.outerHTML;\n    }\n\n    private formatOrgUserId(ev: EventResponse) {\n        const shortId = this.getShortId(ev.organizationUserId);\n        const a = this.makeAnchor(shortId);\n        a.setAttribute('href', '#/organizations/' + ev.organizationId + '/manage/people?search=' + shortId +\n            '&viewEvents=' + ev.organizationUserId);\n        return a.outerHTML;\n    }\n\n    private makeAnchor(shortId: string) {\n        const a = document.createElement('a');\n        a.title = this.i18nService.t('view');\n        a.innerHTML = '<code>' + shortId + '</code>';\n        return a;\n    }\n\n    private getShortId(id: string) {\n        return id.substring(0, 8);\n    }\n\n    private toDateTimeLocalString(date: Date) {\n        return date.getFullYear() +\n            '-' + this.pad(date.getMonth() + 1) +\n            '-' + this.pad(date.getDate()) +\n            'T' + this.pad(date.getHours()) +\n            ':' + this.pad(date.getMinutes());\n    }\n\n    private pad(num: number) {\n        const norm = Math.floor(Math.abs(num));\n        return (norm < 10 ? '0' : '') + norm;\n    }\n}\n\nexport class EventInfo {\n    message: string;\n    appIcon: string;\n    appName: string;\n}\n\nexport class EventOptions {\n    cipherInfo = true;\n}\n","export enum EventType {\n    User_LoggedIn = 1000,\n    User_ChangedPassword = 1001,\n    User_Updated2fa = 1002,\n    User_Disabled2fa = 1003,\n    User_Recovered2fa = 1004,\n    User_FailedLogIn = 1005,\n    User_FailedLogIn2fa = 1006,\n    User_ClientExportedVault = 1007,\n\n    Cipher_Created = 1100,\n    Cipher_Updated = 1101,\n    Cipher_Deleted = 1102,\n    Cipher_AttachmentCreated = 1103,\n    Cipher_AttachmentDeleted = 1104,\n    Cipher_Shared = 1105,\n    Cipher_UpdatedCollections = 1106,\n    Cipher_ClientViewed = 1107,\n    Cipher_ClientToggledPasswordVisible = 1108,\n    Cipher_ClientToggledHiddenFieldVisible = 1109,\n    Cipher_ClientToggledCardCodeVisible = 1110,\n    Cipher_ClientCopiedPassword = 1111,\n    Cipher_ClientCopiedHiddenField = 1112,\n    Cipher_ClientCopiedCardCode = 1113,\n    Cipher_ClientAutofilled = 1114,\n    Cipher_SoftDeleted = 1115,\n    Cipher_Restored = 1116,\n\n    Collection_Created = 1300,\n    Collection_Updated = 1301,\n    Collection_Deleted = 1302,\n\n    Group_Created = 1400,\n    Group_Updated = 1401,\n    Group_Deleted = 1402,\n\n    OrganizationUser_Invited = 1500,\n    OrganizationUser_Confirmed = 1501,\n    OrganizationUser_Updated = 1502,\n    OrganizationUser_Removed = 1503,\n    OrganizationUser_UpdatedGroups = 1504,\n\n    Organization_Updated = 1600,\n    Organization_PurgedVault = 1601,\n    // Organization_ClientExportedVault = 1602,\n\n    Policy_Created = 1700,\n    Policy_Updated = 1701,\n    Policy_Deleted = 1702,\n}\n","export enum PolicyType {\n    TwoFactorAuthentication = 0,\n    MasterPassword = 1,\n    PasswordGenerator = 2,\n}\n","export enum PaymentMethodType {\n    Card = 0,\n    BankAccount = 1,\n    PayPal = 2,\n    BitPay = 3,\n    Credit = 4,\n    WireTransfer = 5,\n    AppleInApp = 6,\n    GoogleInApp = 7,\n    Check = 8,\n}\n","import {\n    Directive,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { TwoFactorProviderRequest } from 'jslib/models/request/twoFactorProviderRequest';\n\n@Directive()\nexport abstract class TwoFactorBaseComponent {\n    @Output() onUpdated = new EventEmitter<boolean>();\n\n    type: TwoFactorProviderType;\n    organizationId: string;\n    twoFactorProviderType = TwoFactorProviderType;\n    enabled = false;\n    authed = false;\n\n    protected masterPasswordHash: string;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    protected auth(authResponse: any) {\n        this.masterPasswordHash = authResponse.masterPasswordHash;\n        this.authed = true;\n    }\n\n    protected async enable(enableFunction: () => Promise<void>) {\n        try {\n            await enableFunction();\n            this.analytics.eventTrack.next({\n                action: 'Enabled Two-step ' + TwoFactorProviderType[this.type].toString(),\n            });\n            this.onUpdated.emit(true);\n        } catch { }\n    }\n\n    protected async disable(promise: Promise<any>) {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('twoStepDisableDesc'),\n            this.i18nService.t('disable'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorProviderRequest();\n            request.masterPasswordHash = this.masterPasswordHash;\n            request.type = this.type;\n            if (this.organizationId != null) {\n                promise = this.apiService.putTwoFactorOrganizationDisable(this.organizationId, request);\n            } else {\n                promise = this.apiService.putTwoFactorDisable(request);\n            }\n            await promise;\n            this.enabled = false;\n            this.analytics.eventTrack.next({\n                action: 'Disabled Two-step ' + TwoFactorProviderType[this.type].toString(),\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepDisabled'));\n            this.onUpdated.emit(false);\n        } catch { }\n    }\n}\n","import {\n    ComponentFactoryResolver,\n    Directive,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { ModalComponent } from '../modal.component';\nimport { AddEditComponent as OrgAddEditComponent } from '../organizations/vault/add-edit.component';\nimport { AddEditComponent } from '../vault/add-edit.component';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Directive()\nexport class CipherReportComponent {\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n\n    loading = false;\n    hasLoaded = false;\n    ciphers: CipherView[] = [];\n    organization: Organization;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver, protected userService: UserService,\n        protected messagingService: MessagingService, public requiresPaid: boolean) { }\n\n    async load() {\n        this.loading = true;\n        await this.setCiphers();\n        this.loading = false;\n        this.hasLoaded = true;\n    }\n\n    selectCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        let childComponent: OrgAddEditComponent | AddEditComponent;\n        if (this.organization != null) {\n            childComponent = this.modal.show<OrgAddEditComponent>(OrgAddEditComponent, this.cipherAddEditModalRef);\n            (childComponent as OrgAddEditComponent).organization = this.organization;\n        } else {\n            childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n        }\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        if (this.organization != null) {\n            childComponent.organizationId = this.organization.id;\n        }\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    protected async checkAccess(): Promise<boolean> {\n        if (this.organization != null) {\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            if (this.requiresPaid && !this.organization.useTotp) {\n                this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n                return false;\n            }\n        } else {\n            const accessPremium = await this.userService.canAccessPremium();\n            if (this.requiresPaid && !accessPremium) {\n                this.messagingService.send('premiumRequired');\n                this.loading = false;\n                return false;\n            }\n        }\n        return true;\n    }\n\n    protected async setCiphers() {\n        this.ciphers = [];\n    }\n}\n","export abstract class TotpService {\n    getCode: (key: string) => Promise<string>;\n    getTimeInterval: (key: string) => number;\n    isAutoCopyEnabled: () => Promise<boolean>;\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { CipherData } from '../data/cipherData';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Attachment } from './attachment';\nimport { Card } from './card';\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { Password } from './password';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher extends Domain {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    name: CipherString;\n    notes: CipherString;\n    type: CipherType;\n    favorite: boolean;\n    organizationUseTotp: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    revisionDate: Date;\n    localData: any;\n    login: Login;\n    identity: Identity;\n    card: Card;\n    secureNote: SecureNote;\n    attachments: Attachment[];\n    fields: Field[];\n    passwordHistory: Password[];\n    collectionIds: string[];\n    deletedDate: Date;\n\n    constructor(obj?: CipherData, alreadyEncrypted: boolean = false, localData: any = null) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            userId: null,\n            organizationId: null,\n            folderId: null,\n            name: null,\n            notes: null,\n        }, alreadyEncrypted, ['id', 'userId', 'organizationId', 'folderId']);\n\n        this.type = obj.type;\n        this.favorite = obj.favorite;\n        this.organizationUseTotp = obj.organizationUseTotp;\n        this.edit = obj.edit;\n        if (obj.viewPassword != null) {\n            this.viewPassword = obj.viewPassword;\n        } else {\n            this.viewPassword = true; // Default for already synced Ciphers without viewPassword\n        }\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n        this.collectionIds = obj.collectionIds;\n        this.localData = localData;\n        this.deletedDate = obj.deletedDate != null ? new Date(obj.deletedDate) : null;\n\n        switch (this.type) {\n            case CipherType.Login:\n                this.login = new Login(obj.login, alreadyEncrypted);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(obj.secureNote, alreadyEncrypted);\n                break;\n            case CipherType.Card:\n                this.card = new Card(obj.card, alreadyEncrypted);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(obj.identity, alreadyEncrypted);\n                break;\n            default:\n                break;\n        }\n\n        if (obj.attachments != null) {\n            this.attachments = obj.attachments.map((a) => new Attachment(a, alreadyEncrypted));\n        } else {\n            this.attachments = null;\n        }\n\n        if (obj.fields != null) {\n            this.fields = obj.fields.map((f) => new Field(f, alreadyEncrypted));\n        } else {\n            this.fields = null;\n        }\n\n        if (obj.passwordHistory != null) {\n            this.passwordHistory = obj.passwordHistory.map((ph) => new Password(ph, alreadyEncrypted));\n        } else {\n            this.passwordHistory = null;\n        }\n    }\n\n    async decrypt(): Promise<CipherView> {\n        const model = new CipherView(this);\n\n        await this.decryptObj(model, {\n            name: null,\n            notes: null,\n        }, this.organizationId);\n\n        switch (this.type) {\n            case CipherType.Login:\n                model.login = await this.login.decrypt(this.organizationId);\n                break;\n            case CipherType.SecureNote:\n                model.secureNote = await this.secureNote.decrypt(this.organizationId);\n                break;\n            case CipherType.Card:\n                model.card = await this.card.decrypt(this.organizationId);\n                break;\n            case CipherType.Identity:\n                model.identity = await this.identity.decrypt(this.organizationId);\n                break;\n            default:\n                break;\n        }\n\n        const orgId = this.organizationId;\n\n        if (this.attachments != null && this.attachments.length > 0) {\n            const attachments: any[] = [];\n            await this.attachments.reduce((promise, attachment) => {\n                return promise.then(() => {\n                    return attachment.decrypt(orgId);\n                }).then((decAttachment) => {\n                    attachments.push(decAttachment);\n                });\n            }, Promise.resolve());\n            model.attachments = attachments;\n        }\n\n        if (this.fields != null && this.fields.length > 0) {\n            const fields: any[] = [];\n            await this.fields.reduce((promise, field) => {\n                return promise.then(() => {\n                    return field.decrypt(orgId);\n                }).then((decField) => {\n                    fields.push(decField);\n                });\n            }, Promise.resolve());\n            model.fields = fields;\n        }\n\n        if (this.passwordHistory != null && this.passwordHistory.length > 0) {\n            const passwordHistory: any[] = [];\n            await this.passwordHistory.reduce((promise, ph) => {\n                return promise.then(() => {\n                    return ph.decrypt(orgId);\n                }).then((decPh) => {\n                    passwordHistory.push(decPh);\n                });\n            }, Promise.resolve());\n            model.passwordHistory = passwordHistory;\n        }\n\n        return model;\n    }\n\n    toCipherData(userId: string): CipherData {\n        const c = new CipherData();\n        c.id = this.id;\n        c.organizationId = this.organizationId;\n        c.folderId = this.folderId;\n        c.userId = this.organizationId != null ? userId : null;\n        c.edit = this.edit;\n        c.viewPassword = this.viewPassword;\n        c.organizationUseTotp = this.organizationUseTotp;\n        c.favorite = this.favorite;\n        c.revisionDate = this.revisionDate != null ? this.revisionDate.toISOString() : null;\n        c.type = this.type;\n        c.collectionIds = this.collectionIds;\n        c.deletedDate = this.deletedDate != null ? this.deletedDate.toISOString() : null;\n\n        this.buildDataModel(this, c, {\n            name: null,\n            notes: null,\n        });\n\n        switch (c.type) {\n            case CipherType.Login:\n                c.login = this.login.toLoginData();\n                break;\n            case CipherType.SecureNote:\n                c.secureNote = this.secureNote.toSecureNoteData();\n                break;\n            case CipherType.Card:\n                c.card = this.card.toCardData();\n                break;\n            case CipherType.Identity:\n                c.identity = this.identity.toIdentityData();\n                break;\n            default:\n                break;\n        }\n\n        if (this.fields != null) {\n            c.fields = this.fields.map((f) => f.toFieldData());\n        }\n        if (this.attachments != null) {\n            c.attachments = this.attachments.map((a) => a.toAttachmentData());\n        }\n        if (this.passwordHistory != null) {\n            c.passwordHistory = this.passwordHistory.map((ph) => ph.toPasswordHistoryData());\n        }\n        return c;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { View } from './view';\n\nimport { LoginUri } from '../domain/loginUri';\n\nimport { Utils } from '../../misc/utils';\n\nconst CanLaunchWhitelist = [\n    'https://',\n    'http://',\n    'ssh://',\n    'ftp://',\n    'sftp://',\n    'irc://',\n    'vnc://',\n    'chrome://',\n    'iosapp://',\n    'androidapp://',\n];\n\nexport class LoginUriView implements View {\n    match: UriMatchType = null;\n\n    // tslint:disable\n    private _uri: string = null;\n    private _domain: string = null;\n    private _hostname: string = null;\n    private _host: string = null;\n    private _canLaunch: boolean = null;\n    // tslint:enable\n\n    constructor(u?: LoginUri) {\n        if (!u) {\n            return;\n        }\n\n        this.match = u.match;\n    }\n\n    get uri(): string {\n        return this._uri;\n    }\n    set uri(value: string) {\n        this._uri = value;\n        this._domain = null;\n        this._canLaunch = null;\n    }\n\n    get domain(): string {\n        if (this._domain == null && this.uri != null) {\n            this._domain = Utils.getDomain(this.uri);\n            if (this._domain === '') {\n                this._domain = null;\n            }\n        }\n\n        return this._domain;\n    }\n\n    get hostname(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._hostname == null && this.uri != null) {\n            this._hostname = Utils.getHostname(this.uri);\n            if (this._hostname === '') {\n                this._hostname = null;\n            }\n        }\n\n        return this._hostname;\n    }\n\n    get host(): string {\n        if (this.match === UriMatchType.RegularExpression) {\n            return null;\n        }\n        if (this._host == null && this.uri != null) {\n            this._host = Utils.getHost(this.uri);\n            if (this._host === '') {\n                this._host = null;\n            }\n        }\n\n        return this._host;\n    }\n\n    get hostnameOrUri(): string {\n        return this.hostname != null ? this.hostname : this.uri;\n    }\n\n    get hostOrUri(): string {\n        return this.host != null ? this.host : this.uri;\n    }\n\n    get isWebsite(): boolean {\n        return this.uri != null && (this.uri.indexOf('http://') === 0 || this.uri.indexOf('https://') === 0 ||\n            (this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri)));\n    }\n\n    get canLaunch(): boolean {\n        if (this._canLaunch != null) {\n            return this._canLaunch;\n        }\n        if (this.uri != null && this.match !== UriMatchType.RegularExpression) {\n            const uri = this.launchUri;\n            for (let i = 0; i < CanLaunchWhitelist.length; i++) {\n                if (uri.indexOf(CanLaunchWhitelist[i]) === 0) {\n                    this._canLaunch = true;\n                    return this._canLaunch;\n                }\n            }\n        }\n        this._canLaunch = false;\n        return this._canLaunch;\n    }\n\n    get launchUri(): string {\n        return this.uri.indexOf('://') < 0 && Utils.tldEndingRegex.test(this.uri) ? ('http://' + this.uri) : this.uri;\n    }\n}\n","import { Importer } from '../importers/importer';\n\nexport interface ImportOption {\n    id: string;\n    name: string;\n}\nexport abstract class ImportService {\n    featuredImportOptions: ImportOption[];\n    regularImportOptions: ImportOption[];\n    getImportOptions: () => ImportOption[];\n    import: (importer: Importer, fileContents: string, organizationId?: string) => Promise<Error>;\n    getImporter: (format: string, organization?: boolean) => Importer;\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\n\nimport { CiphersComponent as BaseCiphersComponent } from 'jslib/angular/components/ciphers.component';\n\nimport { CipherType } from 'jslib/enums/cipherType';\nimport { EventType } from 'jslib/enums/eventType';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nconst MaxCheckedCount = 500;\n\n@Component({\n    selector: 'app-vault-ciphers',\n    templateUrl: 'ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent implements OnDestroy {\n    @Input() showAddNew = true;\n    @Output() onAttachmentsClicked = new EventEmitter<CipherView>();\n    @Output() onShareClicked = new EventEmitter<CipherView>();\n    @Output() onCollectionsClicked = new EventEmitter<CipherView>();\n    @Output() onCloneClicked = new EventEmitter<CipherView>();\n\n    cipherType = CipherType;\n    actionPromise: Promise<any>;\n\n    constructor(searchService: SearchService, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected cipherService: CipherService,\n        protected eventService: EventService) {\n        super(searchService);\n        this.pageSize = 200;\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    launch(uri: string) {\n        this.platformUtilsService.eventTrack('Launched Login URI');\n        this.platformUtilsService.launchUri(uri);\n    }\n\n    attachments(c: CipherView) {\n        this.onAttachmentsClicked.emit(c);\n    }\n\n    share(c: CipherView) {\n        this.onShareClicked.emit(c);\n    }\n\n    collections(c: CipherView) {\n        this.onCollectionsClicked.emit(c);\n    }\n\n    clone(c: CipherView) {\n        this.onCloneClicked.emit(c);\n    }\n\n    async delete(c: CipherView): Promise<boolean> {\n        if (this.actionPromise != null) {\n            return;\n        }\n        const permanent = c.isDeleted;\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(permanent ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t(permanent ? 'permanentlyDeleteItem' : 'deleteItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.deleteCipher(c.id, permanent);\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Cipher' });\n            this.toasterService.popAsync('success', null, this.i18nService.t(permanent ? 'permanentlyDeletedItem'\n                : 'deletedItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    async restore(c: CipherView): Promise<boolean> {\n        if (this.actionPromise != null || !c.isDeleted) {\n            return;\n        }\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'),\n            this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.cipherService.restoreWithServer(c.id);\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Restored Cipher' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('restoredItem'));\n            this.refresh();\n        } catch { }\n        this.actionPromise = null;\n    }\n\n    copy(cipher: CipherView, value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.analytics.eventTrack.next({ action: 'Copied ' + aType.toLowerCase() + ' from listing.' });\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.toasterService.popAsync('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (typeI18nKey === 'password') {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, cipher.id);\n        } else if (typeI18nKey === 'securityCode') {\n            this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, cipher.id);\n        }\n    }\n\n    selectAll(select: boolean) {\n        if (select) {\n            this.selectAll(false);\n        }\n        const selectCount = select && this.ciphers.length > MaxCheckedCount\n            ? MaxCheckedCount\n            : this.ciphers.length;\n        for (let i = 0; i < selectCount; i++) {\n            this.checkCipher(this.ciphers[i], select);\n        }\n    }\n\n    checkCipher(c: CipherView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    getSelected(): CipherView[] {\n        if (this.ciphers == null) {\n            return [];\n        }\n        return this.ciphers.filter((c) => !!(c as any).checked);\n    }\n\n    getSelectedIds(): string[] {\n        return this.getSelected().map((c) => c.id);\n    }\n\n    protected deleteCipher(id: string, permanent: boolean) {\n        return permanent ? this.cipherService.deleteWithServer(id) : this.cipherService.softDeleteWithServer(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return c.hasOldAttachments && c.organizationId == null;\n    }\n}\n","<ng-container *ngIf=\"(isPaging() ? pagedCiphers : ciphers) as filteredCiphers\">\n    <table class=\"table table-hover table-list table-ciphers\" *ngIf=\"filteredCiphers.length\" infiniteScroll\n        [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\n        <tbody>\n            <tr *ngFor=\"let c of filteredCiphers\">\n                <td (click)=\"checkCipher(c)\" class=\"table-list-checkbox\">\n                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" appStopProp>\n                </td>\n                <td (click)=\"checkCipher(c)\" class=\"table-list-icon\">\n                    <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                </td>\n                <td (click)=\"checkCipher(c)\" class=\"reduced-lh wrap\">\n                    <a href=\"#\" appStopClick appStopProp (click)=\"selectCipher(c)\"\n                        title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                    <ng-container *ngIf=\"!organization && c.organizationId\">\n                        <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\n                        <span class=\"sr-only\">{{'shared' | i18n}}</span>\n                    </ng-container>\n                    <ng-container *ngIf=\"c.hasAttachments\">\n                        <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\" aria-hidden=\"true\"></i>\n                        <span class=\"sr-only\">{{'attachments' | i18n}}</span>\n                        <ng-container *ngIf=\"showFixOldAttachments(c)\">\n                            <i class=\"fa fa-exclamation-triangle text-warning\" appStopProp\n                                title=\"{{'attachmentsNeedFix' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'attachmentsNeedFix' | i18n}}</span>\n                        </ng-container>\n                    </ng-container>\n                    <br>\n                    <small appStopProp>{{c.subTitle}}</small>\n                </td>\n                <td class=\"table-list-options\">\n                    <div class=\"dropdown\" appListDropdown>\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                            appA11yTitle=\"{{'options' | i18n}}\">\n                            <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"dropdownMenuButton\">\n                            <ng-container *ngIf=\"c.type === cipherType.Login && !c.isDeleted\">\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick\n                                    (click)=\"copy(c, c.login.password, 'password', 'password')\" *ngIf=\"c.viewPassword\">\n                                    <i class=\"fa fa-fw fa-clone\" aria-hidden=\"true\"></i>\n                                    {{'copyPassword' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.login.canLaunch\"\n                                    (click)=\"launch(c.login.launchUri)\">\n                                    <i class=\"fa fa-fw fa-share-square-o\" aria-hidden=\"true\"></i>\n                                    {{'launch' | i18n}}\n                                </a>\n                            </ng-container>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"attachments(c)\">\n                                <i class=\"fa fa-fw fa-paperclip\" aria-hidden=\"true\"></i>\n                                {{'attachments' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick\n                                *ngIf=\"((!organization && !c.organizationId) || organization) && !c.isDeleted\"\n                                (click)=\"clone(c)\">\n                                <i class=\"fa fa-fw fa-files-o\" aria-hidden=\"true\"></i>\n                                {{'clone' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick\n                                *ngIf=\"!organization && !c.organizationId && !c.isDeleted\" (click)=\"share(c)\">\n                                <i class=\"fa fa-fw fa-share-alt\" aria-hidden=\"true\"></i>\n                                {{'share' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && !c.isDeleted\"\n                                (click)=\"collections(c)\">\n                                <i class=\"fa fa-fw fa-cubes\" aria-hidden=\"true\"></i>\n                                {{'collections' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick *ngIf=\"c.organizationId && accessEvents\"\n                                (click)=\"events(c)\">\n                                <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i>\n                                {{'eventLogs' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"restore(c)\" *ngIf=\"c.isDeleted\">\n                                <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i>\n                                {{'restore' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\n                                <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\n                                {{(c.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <div class=\"no-items\" *ngIf=\"!filteredCiphers.length\">\n        <ng-container *ngIf=\"!loaded\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </ng-container>\n        <ng-container *ngIf=\"loaded\">\n            <p>{{'noItemsInList' | i18n}}</p>\n            <button (click)=\"addCipher()\" class=\"btn btn-outline-primary\" *ngIf=\"showAddNew\">\n                <i class=\"fa fa-plus fa-fw\"></i>{{'addItem' | i18n}}</button>\n        </ng-container>\n    </div>\n</ng-container>\n","export enum KdfType {\n    PBKDF2_SHA256 = 0,\n}\n","import {\n    Component,\n    Input,\n    OnChanges,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-password-strength',\n    templateUrl: 'password-strength.component.html',\n})\nexport class PasswordStrengthComponent implements OnChanges {\n    @Input() score?: number;\n    @Input() showText = false;\n\n    scoreWidth = 0;\n    color = 'bg-danger';\n    text: string;\n\n    constructor(private i18nService: I18nService) { }\n\n    ngOnChanges(): void {\n        this.scoreWidth = this.score == null ? 0 : (this.score + 1) * 20;\n        switch (this.score) {\n            case 4:\n                this.color = 'bg-success';\n                this.text = this.i18nService.t('strong');\n                break;\n            case 3:\n                this.color = 'bg-primary';\n                this.text = this.i18nService.t('good');\n                break;\n            case 2:\n                this.color = 'bg-warning';\n                this.text = this.i18nService.t('weak');\n                break;\n            default:\n                this.color = 'bg-danger';\n                this.text = this.score != null ? this.i18nService.t('weak') : null;\n                break;\n        }\n    }\n}\n","<div class=\"progress\">\n    <div class=\"progress-bar {{color}}\" role=\"progressbar\" [ngStyle]=\"{width: (scoreWidth + '%')}\"\n        attr.aria-valuenow=\"{{scoreWidth}}\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n        <ng-container *ngIf=\"showText && text\">\n            {{text}}\n        </ng-container>\n    </div>\n</div>\n","import { KdfType } from '../enums/kdfType';\nimport { TwoFactorProviderType } from '../enums/twoFactorProviderType';\n\nimport { AuthResult } from '../models/domain/authResult';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { DeviceRequest } from '../models/request/deviceRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\n\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { AuthService as AuthServiceAbstraction } from '../abstractions/auth.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nexport const TwoFactorProviders = {\n    [TwoFactorProviderType.Authenticator]: {\n        type: TwoFactorProviderType.Authenticator,\n        name: null as string,\n        description: null as string,\n        priority: 1,\n        sort: 1,\n        premium: false,\n    },\n    [TwoFactorProviderType.Yubikey]: {\n        type: TwoFactorProviderType.Yubikey,\n        name: null as string,\n        description: null as string,\n        priority: 3,\n        sort: 2,\n        premium: true,\n    },\n    [TwoFactorProviderType.Duo]: {\n        type: TwoFactorProviderType.Duo,\n        name: 'Duo',\n        description: null as string,\n        priority: 2,\n        sort: 3,\n        premium: true,\n    },\n    [TwoFactorProviderType.OrganizationDuo]: {\n        type: TwoFactorProviderType.OrganizationDuo,\n        name: 'Duo (Organization)',\n        description: null as string,\n        priority: 10,\n        sort: 4,\n        premium: false,\n    },\n    [TwoFactorProviderType.U2f]: {\n        type: TwoFactorProviderType.U2f,\n        name: null as string,\n        description: null as string,\n        priority: 4,\n        sort: 5,\n        premium: true,\n    },\n    [TwoFactorProviderType.Email]: {\n        type: TwoFactorProviderType.Email,\n        name: null as string,\n        description: null as string,\n        priority: 0,\n        sort: 6,\n        premium: false,\n    },\n};\n\nexport class AuthService implements AuthServiceAbstraction {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    ssoRedirectUrl: string;\n    twoFactorProvidersData: Map<TwoFactorProviderType, { [key: string]: string; }>;\n    selectedTwoFactorProviderType: TwoFactorProviderType = null;\n\n    private key: SymmetricCryptoKey;\n\n    constructor(private cryptoService: CryptoService, private apiService: ApiService,\n        private userService: UserService, private tokenService: TokenService,\n        private appIdService: AppIdService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private messagingService: MessagingService,\n        private vaultTimeoutService: VaultTimeoutService, private setCryptoKeys = true) { }\n\n    init() {\n        TwoFactorProviders[TwoFactorProviderType.Email].name = this.i18nService.t('emailTitle');\n        TwoFactorProviders[TwoFactorProviderType.Email].description = this.i18nService.t('emailDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].name = this.i18nService.t('authenticatorAppTitle');\n        TwoFactorProviders[TwoFactorProviderType.Authenticator].description =\n            this.i18nService.t('authenticatorAppDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Duo].description = this.i18nService.t('duoDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].name =\n            'Duo (' + this.i18nService.t('organization') + ')';\n        TwoFactorProviders[TwoFactorProviderType.OrganizationDuo].description =\n            this.i18nService.t('duoOrganizationDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.U2f].name = this.i18nService.t('u2fTitle');\n        TwoFactorProviders[TwoFactorProviderType.U2f].description = this.i18nService.t('u2fDesc');\n\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].name = this.i18nService.t('yubiKeyTitle');\n        TwoFactorProviders[TwoFactorProviderType.Yubikey].description = this.i18nService.t('yubiKeyDesc');\n    }\n\n    async logIn(email: string, masterPassword: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        return await this.logInHelper(email, hashedPassword, null, null, null, key,\n            null, null, null);\n    }\n\n    async logInSso(code: string, codeVerifier: string, redirectUrl: string): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, code, codeVerifier, redirectUrl, null, null, null, null);\n    }\n\n    async logInTwoFactor(twoFactorProvider: TwoFactorProviderType, twoFactorToken: string,\n        remember?: boolean): Promise<AuthResult> {\n        return await this.logInHelper(this.email, this.masterPasswordHash, this.code, this.codeVerifier,\n            this.ssoRedirectUrl, this.key, twoFactorProvider, twoFactorToken, remember);\n    }\n\n    async logInComplete(email: string, masterPassword: string, twoFactorProvider: TwoFactorProviderType,\n        twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        const key = await this.makePreloginKey(masterPassword, email);\n        const hashedPassword = await this.cryptoService.hashPassword(masterPassword, key);\n        return await this.logInHelper(email, hashedPassword, null, null, null, key, twoFactorProvider, twoFactorToken,\n            remember);\n    }\n\n    async logInSsoComplete(code: string, codeVerifier: string, redirectUrl: string,\n        twoFactorProvider: TwoFactorProviderType, twoFactorToken: string, remember?: boolean): Promise<AuthResult> {\n        this.selectedTwoFactorProviderType = null;\n        return await this.logInHelper(null, null, code, codeVerifier, redirectUrl, null,\n            twoFactorProvider, twoFactorToken, remember);\n    }\n\n    logOut(callback: Function) {\n        callback();\n        this.messagingService.send('loggedOut');\n    }\n\n    getSupportedTwoFactorProviders(win: Window): any[] {\n        const providers: any[] = [];\n        if (this.twoFactorProvidersData == null) {\n            return providers;\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.OrganizationDuo) &&\n            this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.OrganizationDuo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Authenticator)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Authenticator]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Yubikey)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Yubikey]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Duo) && this.platformUtilsService.supportsDuo()) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Duo]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.U2f) && this.platformUtilsService.supportsU2f(win)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.U2f]);\n        }\n\n        if (this.twoFactorProvidersData.has(TwoFactorProviderType.Email)) {\n            providers.push(TwoFactorProviders[TwoFactorProviderType.Email]);\n        }\n\n        return providers;\n    }\n\n    getDefaultTwoFactorProvider(u2fSupported: boolean): TwoFactorProviderType {\n        if (this.twoFactorProvidersData == null) {\n            return null;\n        }\n\n        if (this.selectedTwoFactorProviderType != null &&\n            this.twoFactorProvidersData.has(this.selectedTwoFactorProviderType)) {\n            return this.selectedTwoFactorProviderType;\n        }\n\n        let providerType: TwoFactorProviderType = null;\n        let providerPriority = -1;\n        this.twoFactorProvidersData.forEach((value, type) => {\n            const provider = (TwoFactorProviders as any)[type];\n            if (provider != null && provider.priority > providerPriority) {\n                if (type === TwoFactorProviderType.U2f && !u2fSupported) {\n                    return;\n                }\n\n                providerType = type;\n                providerPriority = provider.priority;\n            }\n        });\n\n        return providerType;\n    }\n\n    async makePreloginKey(masterPassword: string, email: string): Promise<SymmetricCryptoKey> {\n        email = email.trim().toLowerCase();\n        let kdf: KdfType = null;\n        let kdfIterations: number = null;\n        try {\n            const preloginResponse = await this.apiService.postPrelogin(new PreloginRequest(email));\n            if (preloginResponse != null) {\n                kdf = preloginResponse.kdf;\n                kdfIterations = preloginResponse.kdfIterations;\n            }\n        } catch (e) {\n            if (e == null || e.statusCode !== 404) {\n                throw e;\n            }\n        }\n        return this.cryptoService.makeKey(masterPassword, email, kdf, kdfIterations);\n    }\n\n    authingWithSso(): boolean {\n        return this.code != null && this.codeVerifier != null && this.ssoRedirectUrl != null;\n    }\n\n    authingWithPassword(): boolean {\n        return this.email != null && this.masterPasswordHash != null;\n    }\n\n    private async logInHelper(email: string, hashedPassword: string, code: string, codeVerifier: string,\n        redirectUrl: string, key: SymmetricCryptoKey, twoFactorProvider?: TwoFactorProviderType,\n        twoFactorToken?: string, remember?: boolean): Promise<AuthResult> {\n        const storedTwoFactorToken = await this.tokenService.getTwoFactorToken(email);\n        const appId = await this.appIdService.getAppId();\n        const deviceRequest = new DeviceRequest(appId, this.platformUtilsService);\n\n        let emailPassword: string[] = [];\n        let codeCodeVerifier: string[] = [];\n        if (email != null && hashedPassword != null) {\n            emailPassword = [email, hashedPassword];\n        } else {\n            emailPassword = null;\n        }\n        if (code != null && codeVerifier != null && redirectUrl != null) {\n            codeCodeVerifier = [code, codeVerifier, redirectUrl];\n        } else {\n            codeCodeVerifier = null;\n        }\n\n        let request: TokenRequest;\n        if (twoFactorToken != null && twoFactorProvider != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, twoFactorProvider, twoFactorToken, remember,\n                deviceRequest);\n        } else if (storedTwoFactorToken != null) {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, TwoFactorProviderType.Remember,\n                storedTwoFactorToken, false, deviceRequest);\n        } else {\n            request = new TokenRequest(emailPassword, codeCodeVerifier, null, null, false, deviceRequest);\n        }\n\n        const response = await this.apiService.postIdentityToken(request);\n\n        this.clearState();\n        const result = new AuthResult();\n        result.twoFactor = !(response as any).accessToken;\n\n        if (result.twoFactor) {\n            // two factor required\n            const twoFactorResponse = response as IdentityTwoFactorResponse;\n            this.email = email;\n            this.masterPasswordHash = hashedPassword;\n            this.code = code;\n            this.codeVerifier = codeVerifier;\n            this.ssoRedirectUrl = redirectUrl;\n            this.key = this.setCryptoKeys ? key : null;\n            this.twoFactorProvidersData = twoFactorResponse.twoFactorProviders2;\n            result.twoFactorProviders = twoFactorResponse.twoFactorProviders2;\n            return result;\n        }\n\n        const tokenResponse = response as IdentityTokenResponse;\n        result.resetMasterPassword = tokenResponse.resetMasterPassword;\n        if (tokenResponse.twoFactorToken != null) {\n            await this.tokenService.setTwoFactorToken(tokenResponse.twoFactorToken, email);\n        }\n\n        await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\n        await this.userService.setInformation(this.tokenService.getUserId(), this.tokenService.getEmail(),\n            tokenResponse.kdf, tokenResponse.kdfIterations);\n        if (this.setCryptoKeys) {\n            if (key != null) {\n                await this.cryptoService.setKey(key);\n            }\n            if (hashedPassword != null) {\n                await this.cryptoService.setKeyHash(hashedPassword);\n            }\n\n            // Skip this step during SSO new user flow. No key is returned from server.\n            if (code == null || tokenResponse.key != null) {\n                await this.cryptoService.setEncKey(tokenResponse.key);\n\n                // User doesn't have a key pair yet (old account), let's generate one for them\n                if (tokenResponse.privateKey == null) {\n                    try {\n                        const keyPair = await this.cryptoService.makeKeyPair();\n                        await this.apiService.postAccountKeys(new KeysRequest(keyPair[0], keyPair[1].encryptedString));\n                        tokenResponse.privateKey = keyPair[1].encryptedString;\n                    } catch (e) {\n                        // tslint:disable-next-line\n                        console.error(e);\n                    }\n                }\n\n                await this.cryptoService.setEncPrivateKey(tokenResponse.privateKey);\n            }\n        }\n\n        if (this.vaultTimeoutService != null) {\n            this.vaultTimeoutService.biometricLocked = false;\n        }\n        this.messagingService.send('loggedIn');\n        return result;\n    }\n\n    private clearState(): void {\n        this.key = null;\n        this.email = null;\n        this.masterPasswordHash = null;\n        this.code = null;\n        this.codeVerifier = null;\n        this.ssoRedirectUrl = null;\n        this.twoFactorProvidersData = null;\n        this.selectedTwoFactorProviderType = null;\n    }\n}\n","export class SelectionReadOnlyRequest {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(id: string, readOnly: boolean, hidePasswords: boolean) {\n        this.id = id;\n        this.readOnly = readOnly;\n        this.hidePasswords = hidePasswords;\n    }\n}\n","export enum DeviceType {\n    Android = 0,\n    iOS = 1,\n    ChromeExtension = 2,\n    FirefoxExtension = 3,\n    OperaExtension = 4,\n    EdgeExtension = 5,\n    WindowsDesktop = 6,\n    MacOsDesktop = 7,\n    LinuxDesktop = 8,\n    ChromeBrowser = 9,\n    FirefoxBrowser = 10,\n    OperaBrowser = 11,\n    EdgeBrowser = 12,\n    IEBrowser = 13,\n    UnknownBrowser = 14,\n    AndroidAmazon = 15,\n    UWP = 16,\n    SafariBrowser = 17,\n    VivaldiBrowser = 18,\n    VivaldiExtension = 19,\n    SafariExtension = 20,\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\nimport { PlanType } from 'jslib/enums/planType';\nimport { ProductType } from 'jslib/enums/productType';\n\nimport { OrganizationCreateRequest } from 'jslib/models/request/organizationCreateRequest';\nimport { OrganizationUpgradeRequest } from 'jslib/models/request/organizationUpgradeRequest';\nimport { PlanResponse } from 'jslib/models/response/planResponse';\n\n@Component({\n    selector: 'app-organization-plans',\n    templateUrl: 'organization-plans.component.html',\n})\nexport class OrganizationPlansComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxComponent: TaxInfoComponent;\n\n    @Input() organizationId: string;\n    @Input() showFree = true;\n    @Input() showCancel = false;\n    @Input() product: ProductType = ProductType.Free;\n    @Input() plan: PlanType = PlanType.Free;\n    @Output() onSuccess = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    loading: boolean = true;\n    selfHosted: boolean = false;\n    ownedBusiness: boolean = false;\n    premiumAccessAddon: boolean = false;\n    additionalStorage: number = 0;\n    additionalSeats: number = 0;\n    name: string;\n    billingEmail: string;\n    businessName: string;\n    productTypes = ProductType;\n    formPromise: Promise<any>;\n\n    plans: PlanResponse[];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private cryptoService: CryptoService,\n        private router: Router, private syncService: SyncService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        if (!this.selfHosted) {\n            const plans = await this.apiService.getPlans();\n            this.plans = plans.data;\n        }\n        this.loading = false;\n    }\n\n    get createOrganization() {\n        return this.organizationId == null;\n    }\n\n    get selectedPlan() {\n        return this.plans.find((plan) => plan.type === this.plan);\n    }\n\n    get selectedPlanInterval() {\n        return this.selectedPlan.isAnnual\n            ? 'year'\n            : 'month';\n    }\n\n    get selectableProducts() {\n        let validPlans = this.plans.filter((plan) => plan.type !== PlanType.Custom);\n\n        if (this.ownedBusiness) {\n            validPlans = validPlans.filter((plan) => plan.canBeUsedByBusiness);\n        }\n\n        if (!this.showFree) {\n            validPlans = validPlans.filter((plan) => plan.product !== ProductType.Free);\n        }\n\n        validPlans = validPlans\n            .filter((plan) => !plan.legacyYear\n                && !plan.disabled\n                && (plan.isAnnual || plan.product === this.productTypes.Free));\n\n        return validPlans;\n    }\n\n    get selectablePlans() {\n        return this.plans.filter((plan) => !plan.legacyYear && !plan.disabled && plan.product === this.product);\n    }\n\n    additionalStoragePriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.additionalStoragePricePerGb;\n        }\n        return selectedPlan.additionalStoragePricePerGb / 12;\n    }\n\n    seatPriceMonthly(selectedPlan: PlanResponse) {\n        if (!selectedPlan.isAnnual) {\n            return selectedPlan.seatPrice;\n        }\n        return selectedPlan.seatPrice / 12;\n    }\n\n    additionalStorageTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalStorageOption) {\n            return 0;\n        }\n\n        return plan.additionalStoragePricePerGb * Math.abs(this.additionalStorage || 0);\n    }\n\n    seatTotal(plan: PlanResponse): number {\n        if (!plan.hasAdditionalSeatsOption) {\n            return 0;\n        }\n\n        return plan.seatPrice * Math.abs(this.additionalSeats || 0);\n    }\n\n    get subtotal() {\n        let subTotal = this.selectedPlan.basePrice;\n        if (this.selectedPlan.hasAdditionalSeatsOption && this.additionalSeats) {\n            subTotal += this.seatTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasAdditionalStorageOption && this.additionalStorage) {\n            subTotal += this.additionalStorageTotal(this.selectedPlan);\n        }\n        if (this.selectedPlan.hasPremiumAccessOption && this.premiumAccessAddon) {\n            subTotal += this.selectedPlan.premiumAccessOptionPrice;\n        }\n        return subTotal;\n    }\n\n    changedProduct() {\n        this.plan = this.selectablePlans[0].type;\n        if (!this.selectedPlan.hasPremiumAccessOption) {\n            this.premiumAccessAddon = false;\n        }\n        if (!this.selectedPlan.hasAdditionalStorageOption) {\n            this.additionalStorage = 0;\n        }\n        if (!this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 0;\n        } else if (!this.additionalSeats && !this.selectedPlan.baseSeats &&\n            this.selectedPlan.hasAdditionalSeatsOption) {\n            this.additionalSeats = 1;\n        }\n    }\n\n    changedOwnedBusiness() {\n        if (!this.ownedBusiness || this.selectedPlan.canBeUsedByBusiness) {\n            return;\n        }\n        this.plan = PlanType.TeamsMonthly;\n    }\n\n    changedCountry() {\n        this.paymentComponent.hideBank = this.taxComponent.taxInfo.country !== 'US';\n        // Bank Account payments are only available for US customers\n        if (this.paymentComponent.hideBank &&\n            this.paymentComponent.method === PaymentMethodType.BankAccount) {\n            this.paymentComponent.method = PaymentMethodType.Card;\n            this.paymentComponent.changeMethod();\n        }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.createOrganization && this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            const doSubmit = async () => {\n                let orgId: string = null;\n                if (this.createOrganization) {\n                    let tokenResult: [string, PaymentMethodType] = null;\n                    if (!this.selfHosted && this.plan !== PlanType.Free) {\n                        tokenResult = await this.paymentComponent.createPaymentToken();\n                    }\n                    const shareKey = await this.cryptoService.makeShareKey();\n                    const key = shareKey[0].encryptedString;\n                    const collection = await this.cryptoService.encrypt(\n                        this.i18nService.t('defaultCollection'), shareKey[1]);\n                    const collectionCt = collection.encryptedString;\n\n                    if (this.selfHosted) {\n                        const fd = new FormData();\n                        fd.append('license', files[0]);\n                        fd.append('key', key);\n                        fd.append('collectionName', collectionCt);\n                        const response = await this.apiService.postOrganizationLicense(fd);\n                        orgId = response.id;\n                    } else {\n                        const request = new OrganizationCreateRequest();\n                        request.key = key;\n                        request.collectionName = collectionCt;\n                        request.name = this.name;\n                        request.billingEmail = this.billingEmail;\n\n                        if (this.selectedPlan.type === PlanType.Free) {\n                            request.planType = PlanType.Free;\n                        } else {\n                            request.paymentToken = tokenResult[0];\n                            request.paymentMethodType = tokenResult[1];\n                            request.businessName = this.ownedBusiness ? this.businessName : null;\n                            request.additionalSeats = this.additionalSeats;\n                            request.additionalStorageGb = this.additionalStorage;\n                            request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption &&\n                                this.premiumAccessAddon;\n                            request.planType = this.selectedPlan.type;\n                            request.billingAddressPostalCode = this.taxComponent.taxInfo.postalCode;\n                            request.billingAddressCountry = this.taxComponent.taxInfo.country;\n                            if (this.taxComponent.taxInfo.includeTaxId) {\n                                request.taxIdNumber = this.taxComponent.taxInfo.taxId;\n                                request.billingAddressLine1 = this.taxComponent.taxInfo.line1;\n                                request.billingAddressLine2 = this.taxComponent.taxInfo.line2;\n                                request.billingAddressCity = this.taxComponent.taxInfo.city;\n                                request.billingAddressState = this.taxComponent.taxInfo.state;\n                            }\n                        }\n                        const response = await this.apiService.postOrganization(request);\n                        orgId = response.id;\n                    }\n                } else {\n                    const request = new OrganizationUpgradeRequest();\n                    request.businessName = this.ownedBusiness ? this.businessName : null;\n                    request.additionalSeats = this.additionalSeats;\n                    request.additionalStorageGb = this.additionalStorage;\n                    request.premiumAccessAddon = this.selectedPlan.hasPremiumAccessOption &&\n                        this.premiumAccessAddon;\n                    request.planType = this.selectedPlan.type;\n                    const result = await this.apiService.postOrganizationUpgrade(this.organizationId, request);\n                    if (!result.success && result.paymentIntentClientSecret != null) {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    }\n                    orgId = this.organizationId;\n                }\n\n                if (orgId != null) {\n                    await this.apiService.refreshIdentityToken();\n                    await this.syncService.fullSync(true);\n                    if (this.createOrganization) {\n                        this.analytics.eventTrack.next({ action: 'Created Organization' });\n                        this.toasterService.popAsync('success',\n                            this.i18nService.t('organizationCreated'), this.i18nService.t('organizationReadyToGo'));\n                    } else {\n                        this.analytics.eventTrack.next({ action: 'Upgraded Organization' });\n                        this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpgraded'));\n                    }\n                    this.router.navigate(['/organizations/' + orgId]);\n                }\n            };\n\n            this.formPromise = doSubmit();\n            await this.formPromise;\n            this.onSuccess.emit();\n        } catch { }\n    }\n\n}\n","<ng-container *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container *ngIf=\"createOrganization && selfHosted\">\n    <p>{{'uploadLicenseFileOrg' | i18n}}</p>\n    <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n        <div class=\"form-group\">\n            <label for=\"file\">{{'licenseFile' | i18n}}</label>\n            <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\n            <small\n                class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_organization_license.json'}}</small>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n    </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate\n    *ngIf=\"!loading && !selfHosted && this.plans\">\n    <h2 class=\"mt-5\">{{'generalInformation' | i18n}}</h2>\n    <div class=\"row\" *ngIf=\"createOrganization\">\n        <div class=\"form-group col-6\">\n            <label for=\"name\">{{'organizationName' | i18n}}</label>\n            <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required>\n        </div>\n        <div class=\"form-group col-6\">\n            <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label>\n            <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\" [(ngModel)]=\"billingEmail\"\n                required>\n        </div>\n    </div>\n    <div class=\"form-group form-check\">\n        <input id=\"ownedBusiness\" class=\"form-check-input\" type=\"checkbox\" name=\"OwnedBusiness\"\n            [(ngModel)]=\"ownedBusiness\" (change)=\"changedOwnedBusiness()\">\n        <label for=\"ownedBusiness\" class=\"form-check-label\">{{'accountOwnedBusiness' | i18n}}</label>\n    </div>\n    <div class=\"row\" *ngIf=\"ownedBusiness\">\n        <div class=\"form-group col-6\">\n            <label for=\"businessName\">{{'businessName' | i18n}}</label>\n            <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\" [(ngModel)]=\"businessName\">\n        </div>\n    </div>\n    <h2 class=\"mt-5\">{{'chooseYourPlan' | i18n}}</h2>\n    <div *ngFor=\"let selectableProduct of selectableProducts\" class=\"form-check form-check-block\">\n        <input class=\"form-check-input\" type=\"radio\" name=\"product\" id=\"product{{selectableProduct.product}}\"\n            [value]=\"selectableProduct.product\" [(ngModel)]=\"product\" (change)=\"changedProduct()\">\n        <label class=\"form-check-label\" for=\"product{{selectableProduct.product}}\">\n            {{ selectableProduct.nameLocalizationKey | i18n}}\n            <small class=\"mb-1\">{{ selectableProduct.descriptionLocalizationKey | i18n : '1'}}</small>\n            <ng-container *ngIf=\"selectableProduct.product === productTypes.Enterprise; else fullFeatureList\">\n                <small>• {{'includeAllTeamsFeatures' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.hasSso\">• {{'includeSsoAuthentication' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.hasPolicies\">• {{'includeEnterprisePolicies' | i18n}}</small>\n            </ng-container>\n            <ng-template #fullFeatureList>\n                <small *ngIf=\"selectableProduct.product == productTypes.Free\">•\n                    {{'limitedUsers' | i18n : selectableProduct.maxUsers }}</small>\n                <small *ngIf=\"selectableProduct.product != productTypes.Free && selectableProduct.maxUsers\">•\n                    {{'addShareLimitedUsers' | i18n : selectableProduct.maxUsers}}</small>\n                <small *ngIf=\"!selectableProduct.maxUsers\">•\n                    {{'addShareUnlimitedUsers' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.maxCollections\">•\n                    {{'limitedCollections' | i18n : selectableProduct.maxCollections }}</small>\n                <small *ngIf=\"selectableProduct.maxAdditionalSeats\">•\n                    {{'addShareLimitedUsers' | i18n : selectableProduct.maxAdditionalSeats }}</small>\n                <small *ngIf=\"!selectableProduct.maxCollections\">• {{'createUnlimitedCollections' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.baseStorageGb\">•\n                    {{'gbEncryptedFileStorage' | i18n : selectableProduct.baseStorageGb + 'GB'}}</small>\n                <small *ngIf=\"selectableProduct.hasGroups\">• {{'controlAccessWithGroups' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.hasApi\">• {{'trackAuditLogs' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.hasDirectory\">• {{'syncUsersFromDirectory' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.hasSelfHost\">• {{'onPremHostingOptional' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.usersGetPremium\">• {{'usersGetPremium' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.product != productTypes.Free\">•\n                    {{'priorityCustomerSupport' | i18n}}</small>\n                <small *ngIf=\"selectableProduct.trialPeriodDays\">•\n                    {{'xDayFreeTrial' | i18n : selectableProduct.trialPeriodDays }}\n                </small>\n            </ng-template>\n            <span *ngIf=\"selectableProduct.product != productTypes.Free\">\n                <ng-container *ngIf=\"selectableProduct.basePrice\">\n                    {{selectableProduct.basePrice / 12 | currency:'$'}} /{{'month' | i18n}},\n                    {{'includesXUsers' | i18n : selectableProduct.baseSeats}}\n                    <ng-container *ngIf=\"selectableProduct.hasAdditionalSeatsOption\">\n                        {{('additionalUsers' | i18n).toLowerCase()}}\n                        {{selectableProduct.seatPrice  / 12 | currency:'$'}} /{{'month' | i18n}}\n                    </ng-container>\n                </ng-container>\n            </span>\n            <span *ngIf=\"!selectableProduct.basePrice && selectableProduct.hasAdditionalSeatsOption\">\n                {{'costPerUser' | i18n : (selectableProduct.seatPrice / 12 | currency:'$')}} /{{'month' | i18n}}\n            </span>\n            <span *ngIf=\"selectableProduct.product == productTypes.Free\">{{'freeForever' | i18n}}</span>\n        </label>\n    </div>\n    <div *ngIf=\"product !== productTypes.Free\">\n        <ng-container *ngIf=\"selectedPlan.hasAdditionalSeatsOption && !selectedPlan.baseSeats\">\n            <h2 class=\"mt-5\">{{'users' | i18n}}</h2>\n            <div class=\"row\">\n                <div class=\"col-6\">\n                    <label for=\"additionalSeats\">{{'userSeats' | i18n}}</label>\n                    <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\"\n                        [(ngModel)]=\"additionalSeats\" min=\"1\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\"\n                        required>\n                    <small class=\"text-muted form-text\">{{'userSeatsHowManyDesc' | i18n}}</small>\n                </div>\n            </div>\n        </ng-container>\n        <h2 class=\"mt-5\">{{'addons' | i18n}}</h2>\n        <div class=\"row\" *ngIf=\"selectedPlan.hasAdditionalSeatsOption && selectedPlan.baseSeats\">\n            <div class=\"form-group col-6\">\n                <label for=\"additionalSeats\">{{'additionalUserSeats' | i18n}}</label>\n                <input id=\"additionalSeats\" class=\"form-control\" type=\"number\" name=\"AdditionalSeats\"\n                    [(ngModel)]=\"additionalSeats\" min=\"0\" max=\"100000\" placeholder=\"{{'userSeatsDesc' | i18n}}\">\n                <small\n                    class=\"text-muted form-text\">{{'userSeatsAdditionalDesc' | i18n : selectedPlan.baseSeats : (seatPriceMonthly(selectedPlan) | currency:'$')}}</small>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label>\n                <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\"\n                    [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\"\n                    placeholder=\"{{'additionalStorageGbDesc' | i18n}}\">\n                <small\n                    class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (additionalStoragePriceMonthly(selectedPlan) | currency:'$') : ('month' | i18n)}}</small>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"form-group col-6\" *ngIf=\"selectedPlan.hasPremiumAccessOption\">\n                <div class=\"form-check\">\n                    <input id=\"premiumAccess\" class=\"form-check-input\" type=\"checkbox\" name=\"PremiumAccessAddon\"\n                        [(ngModel)]=\"premiumAccessAddon\">\n                    <label for=\"premiumAccess\" class=\"form-check-label bold\">{{'premiumAccess' | i18n}}</label>\n                </div>\n                <small\n                    class=\"text-muted form-text\">{{'premiumAccessDesc' | i18n : (3.33 | currency:'$') : ('month' | i18n)}}</small>\n            </div>\n        </div>\n        <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2>\n        <div class=\"form-check form-check-block\" *ngFor=\"let selectablePlan of selectablePlans\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"BillingInterval\" id=\"interval{{selectablePlan.type}}\"\n                [value]=\"selectablePlan.type\" [(ngModel)]=\"plan\">\n            <label class=\"form-check-label\" for=\"interval{{selectablePlan.type}}\">\n                <ng-container *ngIf=\"selectablePlan.isAnnual\">\n                    {{'annually' | i18n}}\n                    <small *ngIf=\"selectablePlan.basePrice\">\n                        {{'basePrice' | i18n}}: {{ selectablePlan.basePrice / 12 | currency:'$'}} &times; 12\n                        {{'monthAbbr' | i18n}}\n                        =\n                        {{selectablePlan.basePrice | currency:'$'}}\n                        /{{'year' | i18n}}\n                    </small>\n                    <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n                        <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span>\n                        <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span>\n                        {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice / 12 | currency:'$'}} &times; 12\n                        {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan)\n                    | currency:'$'}} /{{'year' | i18n}}\n                    </small>\n                    <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n                        {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times;\n                        {{selectablePlan.additionalStoragePricePerGb / 12 | currency:'$'}} &times; 12 {{'monthAbbr'\n                        | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}}\n                        /{{'year' | i18n}}\n                    </small>\n                    <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n                        {{'premiumAccess' | i18n}}:\n                        {{selectablePlan.premiumAccessOptionCost / 12 | currency:'$'}} &times; 12 {{'monthAbbr' | i18n}}\n                        =\n                        {{40 | currency:'$'}}\n                        /{{'year' | i18n}}\n                    </small>\n                </ng-container>\n                <ng-container *ngIf=\"!selectablePlan.isAnnual\">\n                    {{'monthly' | i18n}}\n                    <small *ngIf=\"selectablePlan.basePrice\">\n                        {{'basePrice' | i18n}}: {{selectablePlan.basePrice | currency:'$'}} {{'monthAbbr' | i18n}}\n                        =\n                        {{selectablePlan.basePrice | currency:'$'}}\n                        /{{'month' | i18n}}\n                    </small>\n                    <small *ngIf=\"selectablePlan.hasAdditionalSeatsOption\">\n                        <span *ngIf=\"selectablePlan.baseSeats\">{{'additionalUsers' | i18n}}:</span>\n                        <span *ngIf=\"!selectablePlan.baseSeats\">{{'users' | i18n}}:</span>\n                        {{additionalSeats || 0}} &times; {{selectablePlan.seatPrice | currency:'$'}}\n                        {{'monthAbbr' | i18n}} = {{seatTotal(selectablePlan)\n                    | currency:'$'}} /{{'month' | i18n}}\n                    </small>\n                    <small *ngIf=\"selectablePlan.hasAdditionalStorageOption\">\n                        {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} &times;\n                        {{selectablePlan.additionalStoragePricePerGb | currency:'$'}} {{'monthAbbr'\n                        | i18n}} = {{additionalStorageTotal(selectablePlan) | currency:'$'}}\n                        /{{'month' | i18n}}\n                    </small>\n                    <small *ngIf=\"selectablePlan.hasPremiumAccessOption && premiumAccessAddon\">\n                        {{'premiumAccess' | i18n}}:\n                        {{selectablePlan.premiumAccessOptionCost | currency:'$'}} {{'monthAbbr' | i18n}} =\n                        {{40 | currency:'$'}}\n                        /{{'month' | i18n}}\n                    </small>\n                </ng-container>\n            </label>\n        </div>\n        <hr class=\"my-3\">\n        <div class=\"text-lg\">\n            <strong>{{'total' | i18n}}:</strong> {{subtotal | currency:'USD $'}} /{{selectedPlanInterval | i18n}}\n        </div>\n        <ng-container *ngIf=\"createOrganization\">\n            <small\n                class=\"text-muted font-italic\">{{'paymentChargedWithTrial' | i18n : (selectedPlanInterval | i18n) }}</small>\n            <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2>\n            <app-payment [hideCredit]=\"true\"></app-payment>\n            <app-tax-info (onCountryChanged)=\"changedCountry()\"></app-tax-info>\n        </ng-container>\n        <ng-container *ngIf=\"!createOrganization\">\n            <app-payment [showMethods]=\"false\"></app-payment>\n        </ng-container>\n        <small class=\"text-muted font-italic mt-2 d-block\" *ngIf=\"!createOrganization\">\n            {{'paymentCharged' | i18n : (interval | i18n) }}</small>\n    </div>\n    <div class=\"mt-4\">\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\" *ngIf=\"showCancel\">\n            {{'cancel' | i18n}}\n        </button>\n    </div>\n</form>\n","export enum UriMatchType {\n    Domain = 0,\n    Host = 1,\n    StartsWith = 2,\n    Exact = 3,\n    RegularExpression = 4,\n    Never = 5,\n}\n","import { Component } from '@angular/core';\n\nimport { CipherType } from 'jslib/enums/cipherType';\nimport { EventType } from 'jslib/enums/eventType';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { TotpService } from 'jslib/abstractions/totp.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { AddEditComponent as BaseAddEditComponent } from 'jslib/angular/components/add-edit.component';\nimport { LoginUriView } from 'jslib/models/view/loginUriView';\n\n@Component({\n    selector: 'app-vault-add-edit',\n    templateUrl: 'add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    canAccessPremium: boolean;\n    totpCode: string;\n    totpCodeFormatted: string;\n    totpDash: number;\n    totpSec: number;\n    totpLow: boolean;\n    showRevisionDate = false;\n    hasPasswordHistory = false;\n    viewingPasswordHistory = false;\n\n    protected totpInterval: number;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        protected totpService: TotpService, protected passwordGenerationService: PasswordGenerationService,\n        protected messagingService: MessagingService, eventService: EventService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, messagingService, eventService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        await this.load();\n        this.showRevisionDate = this.cipher.passwordRevisionDisplayDate != null;\n        this.hasPasswordHistory = this.cipher.hasPasswordHistory;\n        this.cleanUp();\n\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        if (this.cipher.type === CipherType.Login && this.cipher.login.totp &&\n            (this.cipher.organizationUseTotp || this.canAccessPremium)) {\n            await this.totpUpdateCode();\n            const interval = this.totpService.getTimeInterval(this.cipher.login.totp);\n            await this.totpTick(interval);\n\n            this.totpInterval = window.setInterval(async () => {\n                await this.totpTick(interval);\n            }, 1000);\n        }\n    }\n\n    toggleFavorite() {\n        this.cipher.favorite = !this.cipher.favorite;\n    }\n\n    launch(uri: LoginUriView) {\n        if (!uri.canLaunch) {\n            return;\n        }\n\n        this.platformUtilsService.eventTrack('Launched Login URI');\n        this.platformUtilsService.launchUri(uri.launchUri);\n    }\n\n    copy(value: string, typeI18nKey: string, aType: string) {\n        if (value == null) {\n            return;\n        }\n\n        this.platformUtilsService.eventTrack('Copied ' + aType);\n        this.platformUtilsService.copyToClipboard(value, { window: window });\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t(typeI18nKey)));\n\n        if (this.editMode) {\n            if (typeI18nKey === 'password') {\n                this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n            } else if (typeI18nKey === 'securityCode') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedCardCode, this.cipherId);\n            } else if (aType === 'H_Field') {\n                this.eventService.collect(EventType.Cipher_ClientCopiedHiddenField, this.cipherId);\n            }\n        }\n    }\n\n    async generatePassword(): Promise<boolean> {\n        const confirmed = await super.generatePassword();\n        if (confirmed) {\n            const options = (await this.passwordGenerationService.getOptions())[0];\n            this.cipher.login.password = await this.passwordGenerationService.generatePassword(options);\n        }\n        return confirmed;\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.cipher.organizationId });\n    }\n\n    viewHistory() {\n        this.viewingPasswordHistory = !this.viewingPasswordHistory;\n    }\n\n    protected cleanUp() {\n        if (this.totpInterval) {\n            window.clearInterval(this.totpInterval);\n        }\n    }\n\n    protected async totpUpdateCode() {\n        if (this.cipher == null || this.cipher.type !== CipherType.Login || this.cipher.login.totp == null) {\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n            return;\n        }\n\n        this.totpCode = await this.totpService.getCode(this.cipher.login.totp);\n        if (this.totpCode != null) {\n            if (this.totpCode.length > 4) {\n                const half = Math.floor(this.totpCode.length / 2);\n                this.totpCodeFormatted = this.totpCode.substring(0, half) + ' ' + this.totpCode.substring(half);\n            } else {\n                this.totpCodeFormatted = this.totpCode;\n            }\n        } else {\n            this.totpCodeFormatted = null;\n            if (this.totpInterval) {\n                window.clearInterval(this.totpInterval);\n            }\n        }\n    }\n\n    protected allowOwnershipAssignment() {\n        return (!this.editMode || this.cloneMode) && this.ownershipOptions != null && this.ownershipOptions.length > 1;\n    }\n\n    private async totpTick(intervalSeconds: number) {\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const mod = epoch % intervalSeconds;\n\n        this.totpSec = intervalSeconds - mod;\n        this.totpDash = +(Math.round((((78.6 / intervalSeconds) * mod) + 'e+2') as any) + 'e-2');\n        this.totpLow = this.totpSec <= 7;\n        if (mod === 0) {\n            await this.totpUpdateCode();\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"cipherAddEditTitle\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate\n            autocomplete=\"off\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"cipherAddEditTitle\">{{title}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"cipher\">\n                <div class=\"row\" *ngIf=\"!editMode\">\n                    <div class=\"col-6 form-group\">\n                        <label for=\"type\">{{'whatTypeOfItem' | i18n}}</label>\n                        <select id=\"type\" name=\"Type\" [(ngModel)]=\"cipher.type\" class=\"form-control\" \n                            [disabled]=\"cipher.isDeleted\">\n                            <option *ngFor=\"let o of typeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-6 form-group\">\n                        <label for=\"name\">{{'name' | i18n}}</label>\n                        <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"cipher.name\"\n                            required [disabled]=\"cipher.isDeleted\">\n                    </div>\n                    <div class=\"col-6 form-group\" *ngIf=\"!organization\">\n                        <label for=\"folder\">{{'folder' | i18n}}</label>\n                        <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"cipher.folderId\" class=\"form-control\" \n                            [disabled]=\"cipher.isDeleted\">\n                            <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <!-- Login -->\n                <ng-container *ngIf=\"cipher.type === cipherType.Login\">\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"loginUsername\">{{'username' | i18n}}</label>\n                            <div class=\"input-group\">\n                                <input id=\"loginUsername\" class=\"form-control\" type=\"text\" name=\"Login.Username\"\n                                    [(ngModel)]=\"cipher.login.username\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                                <div class=\"input-group-append\" *ngIf=\"!cipher.isDeleted\">\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        appA11yTitle=\"{{'copyUsername' | i18n}}\"\n                                        (click)=\"copy(cipher.login.username, 'username', 'Username')\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <div class=\"d-flex\">\n                                <label for=\"loginPassword\">{{'password' | i18n}}</label>\n                                <div class=\"ml-auto d-flex\" *ngIf=\"!cipher.isDeleted\">\n                                    <a href=\"#\" class=\"d-block mr-2\" appStopClick\n                                        appA11yTitle=\"{{'generatePassword' | i18n}}\" (click)=\"generatePassword()\"\n                                        *ngIf=\"cipher.viewPassword\">\n                                        <i class=\"fa fa-lg fa-fw fa-refresh\" aria-hidden=\"true\"></i>\n                                    </a>\n                                    <a href=\"#\" class=\"d-block\" #checkPasswordBtn appStopClick\n                                        appA11yTitle=\"{{'checkPassword' | i18n}}\" (click)=\"checkPassword()\"\n                                        [appApiAction]=\"checkPasswordPromise\">\n                                        <i class=\"fa fa-lg fa-fw fa-check-circle\" [hidden]=\"checkPasswordBtn.loading\"\n                                            aria-hidden=\"true\"></i>\n                                        <i class=\"fa fa-lg fa-fw fa-spinner fa-spin\" aria-hidden=\"true\"\n                                            [hidden]=\"!checkPasswordBtn.loading\" title=\"{{'loading' | i18n}}\"></i>\n                                    </a>\n                                </div>\n                            </div>\n                            <div class=\"input-group\">\n                                <input id=\"loginPassword\" class=\"form-control text-monospace\"\n                                    type=\"{{showPassword ? 'text' : 'password'}}\" name=\"Login.Password\"\n                                    [(ngModel)]=\"cipher.login.password\" appInputVerbatim autocomplete=\"new-password\"\n                                    [disabled]=\"cipher.isDeleted || !cipher.viewPassword\">\n                                <div class=\"input-group-append\">\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword()\"\n                                        tabindex=\"-1\" [disabled]=\"!cipher.viewPassword\">\n                                        <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                            [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        appA11yTitle=\"{{'copyPassword' | i18n}}\"\n                                        (click)=\"copy(cipher.login.password, 'password', 'Password')\" tabindex=\"-1\"\n                                        [disabled]=\"!cipher.viewPassword\">\n                                        <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"loginTotp\">{{'authenticatorKeyTotp' | i18n}}</label>\n                            <input id=\"loginTotp\" type=\"{{cipher.viewPassword ? 'text' : 'password'}}\" name=\"Login.Totp\" class=\"form-control text-monospace\"\n                                [(ngModel)]=\"cipher.login.totp\" appInputVerbatim [disabled]=\"cipher.isDeleted || !cipher.viewPassword\">\n                        </div>\n                        <div class=\"col-6 form-group totp d-flex align-items-end\" [ngClass]=\"{'low': totpLow}\">\n                            <div *ngIf=\"!cipher.login.totp || !totpCode\">\n                                <img src=\"images/totp-countdown.png\" title=\"{{'verificationCodeTotp' | i18n}}\"\n                                    class=\"ml-2\">\n                                <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\" (click)=\"premiumRequired()\"\n                                    *ngIf=\"!organization && !cipher.organizationId && !canAccessPremium\">\n                                    {{'premium' | i18n}}\n                                </a>\n                                <a href=\"#\" appStopClick class=\"badge badge-primary ml-3\"\n                                    (click)=\"upgradeOrganization()\"\n                                    *ngIf=\"(organization && !organization.useTotp) || (!organization && !canAccessPremium && cipher.organizationId && !cipher.organizationUseTotp)\">\n                                    {{'upgrade' | i18n}}\n                                </a>\n                            </div>\n                            <div *ngIf=\"cipher.login.totp && totpCode\" class=\"d-flex align-items-center\">\n                                <span class=\"totp-countdown mr-3 ml-2\">\n                                    <span class=\"totp-sec\">{{totpSec}}</span>\n                                    <svg>\n                                        <g>\n                                            <circle class=\"totp-circle inner\" r=\"12.6\" cy=\"16\" cx=\"16\"\n                                                [ngStyle]=\"{'stroke-dashoffset.px': totpDash}\"></circle>\n                                            <circle class=\"totp-circle outer\" r=\"14\" cy=\"16\" cx=\"16\"></circle>\n                                        </g>\n                                    </svg>\n                                </span>\n                                <span class=\"totp-code mr-2\"\n                                    title=\"{{'verificationCodeTotp' | i18n}}\">{{totpCodeFormatted}}</span>\n                                <button type=\"button\" class=\"btn btn-link\"\n                                    appA11yTitle=\"{{'copyVerificationCode' | i18n}}\"\n                                    (click)=\"copy(totpCode, 'verificationCodeTotp', 'TOTP')\">\n                                    <i class=\"fa fa-clone\" aria-hidden=\"true\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <ng-container *ngIf=\"cipher.login.hasUris\">\n                        <div class=\"row\" *ngFor=\"let u of cipher.login.uris; let i = index; trackBy:trackByFunction\">\n                            <div class=\"col-7 form-group\">\n                                <label for=\"loginUri{{i}}\">{{'uriPosition' | i18n : (i + 1)}}</label>\n                                <div class=\"input-group\">\n                                    <input class=\"form-control\" id=\"loginUri{{i}}\" type=\"text\"\n                                        name=\"Login.Uris[{{i}}].Uri\" [(ngModel)]=\"u.uri\" [disabled]=\"cipher.isDeleted\"\n                                        placeholder=\"{{'ex' | i18n}} https://google.com\" appInputVerbatim>\n                                    <div class=\"input-group-append\">\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            appA11yTitle=\"{{'launch' | i18n}}\" (click)=\"launch(u)\"\n                                            [disabled]=\"!u.canLaunch\" tabindex=\"-1\">\n                                            <i class=\"fa fa-lg fa-share\" aria-hidden=\"true\"></i>\n                                        </button>\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            appA11yTitle=\"{{'copyUri' | i18n}}\" (click)=\"copy(u.uri, 'uri', 'URI')\"\n                                            tabindex=\"-1\">\n                                            <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-5 form-group\">\n                                <div class=\"d-flex\">\n                                    <label for=\"loginUriMatch{{i}}\">\n                                        {{'matchDetection' | i18n}}\n                                    </label>\n                                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/uri-match-detection/\"\n                                        target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\n                                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                                    </a>\n                                </div>\n                                <div class=\"d-flex\">\n                                    <select class=\"form-control\" id=\"loginUriMatch{{i}}\" name=\"Login.Uris[{{i}}].Match\"\n                                        [(ngModel)]=\"u.match\" (change)=\"loginUriMatchChanged(u)\" \n                                        [disabled]=\"cipher.isDeleted\">\n                                        <option *ngFor=\"let o of uriMatchOptions\" [ngValue]=\"o.value\">{{o.name}}\n                                        </option>\n                                    </select>\n                                    <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeUri(u)\"\n                                        appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted\">\n                                        <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-container>\n                    <a href=\"#\" appStopClick (click)=\"addUri()\" class=\"d-inline-block mb-3\" *ngIf=\"!cipher.isDeleted\">\n                        <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newUri' | i18n}}\n                    </a>\n                </ng-container>\n                <!-- Card -->\n                <ng-container *ngIf=\"cipher.type === cipherType.Card\">\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"cardCardholderName\">{{'cardholderName' | i18n}}</label>\n                            <input id=\"cardCardholderName\" class=\"form-control\" type=\"text\"\n                                name=\"Card.CardCardholderName\" [(ngModel)]=\"cipher.card.cardholderName\"\n                                [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"cardBrand\">{{'brand' | i18n}}</label>\n                            <select id=\"cardBrand\" class=\"form-control\" name=\"Card.Brand\"\n                                [(ngModel)]=\"cipher.card.brand\" [disabled]=\"cipher.isDeleted\">\n                                <option *ngFor=\"let o of cardBrandOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"cardNumber\">{{'number' | i18n}}</label>\n                            <div class=\"input-group\">\n                                <input id=\"cardNumber\" class=\"form-control\" type=\"text\" name=\"Card.Number\"\n                                    [(ngModel)]=\"cipher.card.number\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                                <div class=\"input-group-append\">\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        appA11yTitle=\"{{'copyNumber' | i18n}}\"\n                                        (click)=\"copy(cipher.card.number, 'number', 'Number')\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col form-group\">\n                            <label for=\"cardExpMonth\">{{'expirationMonth' | i18n}}</label>\n                            <select id=\"cardExpMonth\" class=\"form-control\" name=\"Card.ExpMonth\"\n                                [(ngModel)]=\"cipher.card.expMonth\" [disabled]=\"cipher.isDeleted\">\n                                <option *ngFor=\"let o of cardExpMonthOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"col form-group\">\n                            <label for=\"cardExpYear\">{{'expirationYear' | i18n}}</label>\n                            <input id=\"cardExpYear\" class=\"form-control\" type=\"text\" name=\"Card.ExpYear\"\n                                [(ngModel)]=\"cipher.card.expYear\" placeholder=\"{{'ex' | i18n}} 2019\" \n                                [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"cardCode\">{{'securityCode' | i18n}}</label>\n                            <div class=\"input-group\">\n                                <input id=\"cardCode\" class=\"form-control text-monospace\"\n                                    type=\"{{showCardCode ? 'text' : 'password'}}\" name=\"Card.Code\"\n                                    [(ngModel)]=\"cipher.card.code\" appInputVerbatim autocomplete=\"new-password\"\n                                    [disabled]=\"cipher.isDeleted\">\n                                <div class=\"input-group-append\">\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleCardCode()\"\n                                        tabindex=\"-1\">\n                                        <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                            [ngClass]=\"{'fa-eye': !showCardCode, 'fa-eye-slash': showCardCode}\"></i>\n                                    </button>\n                                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                        appA11yTitle=\"{{'securityCode' | i18n}}\"\n                                        (click)=\"copy(cipher.card.code, 'securityCode', 'Security Code')\" tabindex=\"-1\">\n                                        <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n                <!-- Identity -->\n                <ng-container *ngIf=\"cipher.type === cipherType.Identity\">\n                    <div class=\"row\">\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idTitle\">{{'title' | i18n}}</label>\n                            <select id=\"idTitle\" class=\"form-control\" name=\"Identity.Title\"\n                                [(ngModel)]=\"cipher.identity.title\" [disabled]=\"cipher.isDeleted\">\n                                <option *ngFor=\"let o of identityTitleOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idFirstName\">{{'firstName' | i18n}}</label>\n                            <input id=\"idFirstName\" class=\"form-control\" type=\"text\" name=\"Identity.FirstName\"\n                                [(ngModel)]=\"cipher.identity.firstName\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idMiddleName\">{{'middleName' | i18n}}</label>\n                            <input id=\"idMiddleName\" class=\"form-control\" type=\"text\" name=\"Identity.MiddleName\"\n                                [(ngModel)]=\"cipher.identity.middleName\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idLastName\">{{'lastName' | i18n}}</label>\n                            <input id=\"idLastName\" class=\"form-control\" type=\"text\" name=\"Identity.LastName\"\n                                [(ngModel)]=\"cipher.identity.lastName\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idUsername\">{{'username' | i18n}}</label>\n                            <input id=\"idUsername\" class=\"form-control\" type=\"text\" name=\"Identity.Username\"\n                                [(ngModel)]=\"cipher.identity.username\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idCompany\">{{'company' | i18n}}</label>\n                            <input id=\"idCompany\" class=\"form-control\" type=\"text\" name=\"Identity.Company\"\n                                [(ngModel)]=\"cipher.identity.company\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idSsn\">{{'ssn' | i18n}}</label>\n                            <input id=\"idSsn\" class=\"form-control\" type=\"text\" name=\"Identity.SSN\"\n                                [(ngModel)]=\"cipher.identity.ssn\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idPassportNumber\">{{'passportNumber' | i18n}}</label>\n                            <input id=\"idPassportNumber\" class=\"form-control\" type=\"text\" name=\"Identity.PassportNumber\"\n                                [(ngModel)]=\"cipher.identity.passportNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-4 form-group\">\n                            <label for=\"idLicenseNumber\">{{'licenseNumber' | i18n}}</label>\n                            <input id=\"idLicenseNumber\" class=\"form-control\" type=\"text\" name=\"Identity.LicenseNumber\"\n                                [(ngModel)]=\"cipher.identity.licenseNumber\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idEmail\">{{'email' | i18n}}</label>\n                            <input id=\"idEmail\" class=\"form-control\" type=\"text\" name=\"Identity.Email\"\n                                [(ngModel)]=\"cipher.identity.email\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idPhone\">{{'phone' | i18n}}</label>\n                            <input id=\"idPhone\" class=\"form-control\" type=\"text\" name=\"Identity.Phone\"\n                                [(ngModel)]=\"cipher.identity.phone\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idAddress1\">{{'address1' | i18n}}</label>\n                            <input id=\"idAddress1\" class=\"form-control\" type=\"text\" name=\"Identity.Address1\"\n                                [(ngModel)]=\"cipher.identity.address1\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idAddress2\">{{'address2' | i18n}}</label>\n                            <input id=\"idAddress2\" class=\"form-control\" type=\"text\" name=\"Identity.Address2\"\n                                [(ngModel)]=\"cipher.identity.address2\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idAddress3\">{{'address3' | i18n}}</label>\n                            <input id=\"idAddress3\" class=\"form-control\" type=\"text\" name=\"Identity.Address3\"\n                                [(ngModel)]=\"cipher.identity.address3\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idCity\">{{'cityTown' | i18n}}</label>\n                            <input id=\"idCity\" class=\"form-control\" type=\"text\" name=\"Identity.City\"\n                                [(ngModel)]=\"cipher.identity.city\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idState\">{{'stateProvince' | i18n}}</label>\n                            <input id=\"idState\" class=\"form-control\" type=\"text\" name=\"Identity.State\"\n                                [(ngModel)]=\"cipher.identity.state\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idPostalCode\">{{'zipPostalCode' | i18n}}</label>\n                            <input id=\"idPostalCode\" class=\"form-control\" type=\"text\" name=\"Identity.PostalCode\"\n                                [(ngModel)]=\"cipher.identity.postalCode\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"idCountry\">{{'country' | i18n}}</label>\n                            <input id=\"idCountry\" class=\"form-control\" type=\"text\" name=\"Identity.Country\"\n                                [(ngModel)]=\"cipher.identity.country\" [disabled]=\"cipher.isDeleted\">\n                        </div>\n                    </div>\n                </ng-container>\n                <div class=\"form-group\">\n                    <label for=\"notes\">{{'notes' | i18n}}</label>\n                    <textarea id=\"notes\" name=\"Notes\" rows=\"6\" [(ngModel)]=\"cipher.notes\" [disabled]=\"cipher.isDeleted\"\n                        class=\"form-control\"></textarea>\n                </div>\n                <h3 class=\"mt-4\">{{'customFields' | i18n}}</h3>\n                <div cdkDropList (cdkDropListDropped)=\"drop($event)\" *ngIf=\"cipher.hasFields\">\n                    <div class=\"row\" cdkDrag *ngFor=\"let f of cipher.fields; let i = index; trackBy:trackByFunction\">\n                        <div class=\"col-5 form-group\">\n                            <div class=\"d-flex\">\n                                <label for=\"fieldName{{i}}\">{{'name' | i18n}}</label>\n                                <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/custom-fields/\"\n                                    target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\n                                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                                </a>\n                            </div>\n                            <input id=\"fieldName{{i}}\" type=\"text\" name=\"Field.Name{{i}}\" [(ngModel)]=\"f.name\"\n                                class=\"form-control\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                        </div>\n                        <div class=\"col-7 form-group\">\n                            <label for=\"fieldValue{{i}}\">{{'value' | i18n}}</label>\n                            <div class=\"d-flex align-items-center\">\n                                <div class=\"input-group\" *ngIf=\"f.type === fieldType.Text\">\n                                    <input id=\"fieldValue{{i}}\" class=\"form-control\" type=\"text\" name=\"Field.Value{{i}}\"\n                                        [(ngModel)]=\"f.value\" appInputVerbatim [disabled]=\"cipher.isDeleted\">\n                                    <div class=\"input-group-append\">\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            appA11yTitle=\"{{'copyValue' | i18n}}\"\n                                            (click)=\"copy(f.value, 'value', 'Field')\" tabindex=\"-1\">\n                                            <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class=\"input-group\" *ngIf=\"f.type === fieldType.Hidden\">\n                                    <input id=\"fieldValue{{i}}\" type=\"{{f.showValue ? 'text' : 'password'}}\"\n                                        name=\"Field.Value{{i}}\" [(ngModel)]=\"f.value\"\n                                        class=\"form-control text-monospace\" appInputVerbatim\n                                        autocomplete=\"new-password\" [disabled]=\"cipher.isDeleted || (!cipher.viewPassword && !f.newField)\">\n                                    <div class=\"input-group-append\">\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"toggleFieldValue(f)\"\n                                            tabindex=\"-1\" [disabled]=\"!cipher.viewPassword && !f.newField\">\n                                            <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                                [ngClass]=\"{'fa-eye': !f.showValue, 'fa-eye-slash': f.showValue}\">\n                                            </i>\n                                        </button>\n                                        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                                            appA11yTitle=\"{{'copyValue' | i18n}}\"\n                                            (click)=\"copy(f.value, 'value', f.type === fieldType.Hidden ? 'H_Field' : 'Field')\"\n                                            tabindex=\"-1\" [disabled]=\"!cipher.viewPassword && !f.newField\">\n                                            <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class=\"flex-fill\">\n                                    <input id=\"fieldValue{{i}}\" name=\"Field.Value{{i}}\" type=\"checkbox\"\n                                        [(ngModel)]=\"f.value\" *ngIf=\"f.type === fieldType.Boolean\" appTrueFalseValue\n                                        trueValue=\"true\" falseValue=\"false\" [disabled]=\"cipher.isDeleted\">\n                                </div>\n                                <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"removeField(f)\"\n                                    appA11yTitle=\"{{'remove' | i18n}}\" *ngIf=\"!cipher.isDeleted\">\n                                    <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\n                                </button>\n                                <button type=\"button\" class=\"btn btn-link text-muted cursor-move\"\n                                    appA11yTitle=\"{{'dragToSort' | i18n}}\" *ngIf=\"!cipher.isDeleted\">\n                                    <i class=\"fa fa-bars fa-lg\" aria-hidden=\"true\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <a href=\"#\" appStopClick (click)=\"addField()\" class=\"d-inline-block mb-2\" *ngIf=\"!cipher.isDeleted\">\n                    <i class=\"fa fa-plus-circle fa-fw\" aria-hidden=\"true\"></i> {{'newCustomField' | i18n}}\n                </a>\n                <div class=\"row\" *ngIf=\"!cipher.isDeleted\">\n                    <div class=\"col-5\">\n                        <label for=\"addFieldType\" class=\"sr-only\">{{'type' | i18n}}</label>\n                        <select id=\"addFieldType\" class=\"form-control\" name=\"AddFieldType\" [(ngModel)]=\"addFieldType\">\n                            <option *ngFor=\"let o of addFieldTypeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                        </select>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"allowOwnershipAssignment()\">\n                    <h3 class=\"mt-4\">{{'ownership' | i18n}}</h3>\n                    <div class=\"row\">\n                        <div class=\"col-5\">\n                            <label for=\"organizationId\">{{'whoOwnsThisItem' | i18n}}</label>\n                            <select id=\"organizationId\" class=\"form-control\" name=\"OrganizationId\"\n                                [(ngModel)]=\"cipher.organizationId\" (change)=\"organizationChanged()\"\n                                [disabled]=\"cipher.isDeleted\">\n                                <option *ngFor=\"let o of ownershipOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"(!editMode || cloneMode) && cipher.organizationId\">\n                    <h3 class=\"mt-4\">{{'collections' | i18n}}</h3>\n                    <div *ngIf=\"!collections || !collections.length\">\n                        {{'noCollectionsInList' | i18n}}\n                    </div>\n                    <ng-container *ngIf=\"collections && collections.length\">\n                        <div class=\"form-check\" *ngFor=\"let c of collections; let i = index\">\n                            <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"c.checked\"\n                                id=\"collection-{{i}}\" name=\"Collection[{{i}}].Checked\" [disabled]=\"cipher.isDeleted\">\n                            <label class=\"form-check-label\" for=\"collection-{{i}}\">{{c.name}}</label>\n                        </div>\n                    </ng-container>\n                </ng-container>\n                <ng-container *ngIf=\"editMode\">\n                    <div class=\"small text-muted mt-4\">\n                        <div>\n                            <b class=\"font-weight-semibold\">{{'dateUpdated' | i18n}}:</b>\n                            {{cipher.revisionDate | date:'medium'}}\n                        </div>\n                        <div *ngIf=\"showRevisionDate\">\n                            <b class=\"font-weight-semibold\">{{'datePasswordUpdated' | i18n}}:</b>\n                            {{cipher.passwordRevisionDisplayDate | date:'medium'}}\n                        </div>\n                        <div *ngIf=\"hasPasswordHistory\">\n                            <b class=\"font-weight-semibold\">{{'passwordHistory' | i18n}}:</b>\n                            <a href=\"#\" appStopClick (click)=\"viewHistory()\" title=\"{{'view' | i18n}}\">\n                                {{cipher.passwordHistory.length}}\n                            </a>\n                        </div>\n                        <div class=\"ml-3\" *ngIf=\"viewingPasswordHistory\">\n                            <div *ngFor=\"let ph of cipher.passwordHistory\">\n                                {{ph.lastUsedDate | date:'short'}} -\n                                <span class=\"text-monospace ml-2\">{{ph.password}}</span>\n                            </div>\n                        </div>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{(cipher?.isDeleted ? 'restore' : 'save') | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n                    {{'cancel' | i18n}}\n                </button>\n                <div class=\"ml-auto\" *ngIf=\"cipher\">\n                    <button *ngIf=\"!organization && !cipher.isDeleted\" type=\"button\" (click)=\"toggleFavorite()\" class=\"btn btn-link\"\n                        appA11yTitle=\"{{(cipher.favorite ? 'unfavorite' : 'favorite') | i18n}}\">\n                        <i class=\"fa fa-lg\" [ngClass]=\"{'fa-star': cipher.favorite, 'fa-star-o': !cipher.favorite}\"\n                            aria-hidden=\"true\"></i>\n                    </button>\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        appA11yTitle=\"{{(cipher.isDeleted ? 'permanentlyDelete' : 'delete') | i18n}}\"\n                        *ngIf=\"editMode && !cloneMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from 'jslib/angular/components/groupings.component';\n\n@Component({\n    selector: 'app-vault-groupings',\n    templateUrl: 'groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    @Output() onSearchTextChanged = new EventEmitter<string>();\n\n    searchText: string = '';\n    searchPlaceholder: string = null;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    searchTextChanged() {\n        this.onSearchTextChanged.emit(this.searchText);\n    }\n}\n","<div class=\"card vault-filters\">\n    <div class=\"card-header d-flex\">\n        {{'filters' | i18n}}\n        <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/searching-vault/\" target=\"_blank\" rel=\"noopener\"\n            appA11yTitle=\"{{'learnMore' | i18n}}\">\n            <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n        </a>\n    </div>\n    <div class=\"card-body\">\n        <input type=\"search\" placeholder=\"{{searchPlaceholder || ('searchVault' | i18n)}}\" id=\"search\"\n            class=\"form-control\" [(ngModel)]=\"searchText\" (input)=\"searchTextChanged()\" autocomplete=\"off\" appAutofocus>\n        <ul class=\"fa-ul card-ul\">\n            <li [ngClass]=\"{active: selectedAll}\">\n                <a href=\"#\" appStopClick (click)=\"selectAll()\">\n                    <i class=\"fa-li fa fa-fw fa-th\"></i>{{'allItems' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedFavorites}\" *ngIf=\"showFavorites\">\n                <a href=\"#\" appStopClick (click)=\"selectFavorites()\">\n                    <i class=\"fa-li fa fa-fw fa-star\"></i>{{'favorites' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedTrash}\" *ngIf=\"showTrash\">\n                <a href=\"#\" appStopClick (click)=\"selectTrash()\">\n                    <i class=\"fa-li fa fa-fw fa-trash-o\"></i>{{'trash' | i18n}}\n                </a>\n            </li>\n        </ul>\n        <h3>{{'types' | i18n}}</h3>\n        <ul class=\"fa-ul card-ul\">\n            <li [ngClass]=\"{active: selectedType === cipherType.Login}\">\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Login)\">\n                    <i class=\"fa-li fa fa-fw fa-globe\"></i>{{'typeLogin' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedType === cipherType.Card}\">\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Card)\">\n                    <i class=\"fa-li fa fa-fw fa-credit-card\"></i>{{'typeCard' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedType === cipherType.Identity}\">\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.Identity)\">\n                    <i class=\"fa-li fa fa-fw fa-id-card-o\"></i>{{'typeIdentity' | i18n}}\n                </a>\n            </li>\n            <li [ngClass]=\"{active: selectedType === cipherType.SecureNote}\">\n                <a href=\"#\" appStopClick (click)=\"selectType(cipherType.SecureNote)\">\n                    <i class=\"fa-li fa fa-fw fa-sticky-note-o\"></i>{{'typeSecureNote' | i18n}}\n                </a>\n            </li>\n        </ul>\n        <p *ngIf=\"!loaded\" class=\"text-muted\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </p>\n        <ng-container *ngIf=\"loaded\">\n            <ng-container *ngIf=\"showFolders\">\n                <h3 class=\"d-flex\">\n                    {{'folders' | i18n}}\n                    <a href=\"#\" class=\"text-muted ml-auto\" appStopClick (click)=\"addFolder()\"\n                        appA11yTitle=\"{{'addFolder' | i18n}}\">\n                        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n                    </a>\n                </h3>\n                <ul class=\"fa-ul card-ul carets\">\n                    <ng-template #recursiveFolders let-folders>\n                        <li *ngFor=\"let f of folders\"\n                            [ngClass]=\"{active: selectedFolder && f.node.id === selectedFolderId}\">\n                            <div class=\"d-flex\">\n                                <i class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\"\n                                    [ngClass]=\"{'fa-caret-right': isCollapsed(f.node), 'fa-caret-down': !isCollapsed(f.node)}\"\n                                    (click)=\"collapse(f.node)\"></i>\n                                <a href=\"#\" appStopClick (click)=\"selectFolder(f.node)\">{{f.node.name}}</a>\n                                <a href=\"#\" class=\"text-muted ml-auto show-active\" appStopClick\n                                    (click)=\"editFolder(f.node)\" appA11yTitle=\"{{'editFolder' | i18n}}\"\n                                    *ngIf=\"f.node.id\">\n                                    <i class=\"fa fa-pencil fa-fw\" aria-hidden=\"true\"></i>\n                                </a>\n                            </div>\n                            <ul class=\"fa-ul card-ul carets\" *ngIf=\"f.children.length && !isCollapsed(f.node)\">\n                                <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: f.children }\">\n                                </ng-container>\n                            </ul>\n                        </li>\n                    </ng-template>\n                    <ng-container *ngTemplateOutlet=\"recursiveFolders; context:{ $implicit: nestedFolders }\">\n                    </ng-container>\n                </ul>\n            </ng-container>\n            <ng-container *ngIf=\"showCollections && collections && collections.length\">\n                <h3>{{'collections' | i18n}}</h3>\n                <ul class=\"fa-ul card-ul carets\">\n                    <ng-template #recursiveCollections let-collections>\n                        <li *ngFor=\"let c of collections\" [ngClass]=\"{active: c.node.id === selectedCollectionId}\">\n                            <i class=\"fa-li fa\" title=\"{{'toggleCollapse' | i18n}}\"\n                                [ngClass]=\"{'fa-caret-right': isCollapsed(c.node), 'fa-caret-down': !isCollapsed(c.node)}\"\n                                (click)=\"collapse(c.node)\"></i>\n                            <a href=\"#\" appStopClick (click)=\"selectCollection(c.node)\">{{c.node.name}}</a>\n                            <ul class=\"fa-ul card-ul carets\" *ngIf=\"c.children.length && !isCollapsed(c.node)\">\n                                <ng-container\n                                    *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: c.children }\">\n                                </ng-container>\n                            </ul>\n                        </li>\n                    </ng-template>\n                    <ng-container *ngTemplateOutlet=\"recursiveCollections; context:{ $implicit: nestedCollections }\">\n                    </ng-container>\n                </ul>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n","import { OrganizationData } from '../data/organizationData';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class Organization {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n\n    constructor(obj?: OrganizationData) {\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.name = obj.name;\n        this.status = obj.status;\n        this.type = obj.type;\n        this.enabled = obj.enabled;\n        this.usePolicies = obj.usePolicies;\n        this.useGroups = obj.useGroups;\n        this.useDirectory = obj.useDirectory;\n        this.useEvents = obj.useEvents;\n        this.useTotp = obj.useTotp;\n        this.use2fa = obj.use2fa;\n        this.useApi = obj.useApi;\n        this.useBusinessPortal = obj.useBusinessPortal;\n        this.useSso = obj.useSso;\n        this.selfHost = obj.selfHost;\n        this.usersGetPremium = obj.usersGetPremium;\n        this.seats = obj.seats;\n        this.maxCollections = obj.maxCollections;\n        this.maxStorageGb = obj.maxStorageGb;\n        this.ssoBound = obj.ssoBound;\n        this.identifier = obj.identifier;\n    }\n\n    get canAccess() {\n        if (this.type === OrganizationUserType.Owner) {\n            return true;\n        }\n        return this.enabled && this.status === OrganizationUserStatusType.Confirmed;\n    }\n\n    get isManager() {\n        return this.type === OrganizationUserType.Manager || this.type === OrganizationUserType.Owner ||\n            this.type === OrganizationUserType.Admin;\n    }\n\n    get isAdmin() {\n        return this.type === OrganizationUserType.Owner || this.type === OrganizationUserType.Admin;\n    }\n\n    get isOwner() {\n        return this.type === OrganizationUserType.Owner;\n    }\n}\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-organizations',\n    templateUrl: 'organizations.component.html',\n})\nexport class OrganizationsComponent implements OnInit {\n    @Input() vault = false;\n\n    organizations: Organization[];\n    loaded: boolean = false;\n    actionPromise: Promise<any>;\n\n    constructor(private userService: UserService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private syncService: SyncService) { }\n\n    async ngOnInit() {\n        if (!this.vault) {\n            await this.syncService.fullSync(true);\n            await this.load();\n        }\n    }\n\n    async load() {\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.organizations = orgs;\n        this.loaded = true;\n    }\n\n    async unlinkSso(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            'Are you sure you want to unlink SSO for this organization?', org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.deleteSsoUser(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Unlinked SSO' });\n            this.toasterService.popAsync('success', null, 'Unlinked SSO');\n            await this.load();\n        } catch { }\n    }\n\n    async leave(org: Organization) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('leaveOrganizationConfirmation'), org.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.actionPromise = this.apiService.postLeaveOrganization(org.id).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Left Organization' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('leftOrganization'));\n            await this.load();\n        } catch { }\n    }\n}\n","<ng-container *ngIf=\"vault\">\n    <p *ngIf=\"!loaded\" class=\"text-muted\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\n    </p>\n    <ng-container *ngIf=\"loaded\">\n        <ul class=\"fa-ul card-ul carets\" *ngIf=\"organizations && organizations.length\">\n            <li *ngFor=\"let o of organizations\">\n                <a [routerLink]=\"['/organizations', o.id]\" class=\"text-body\">\n                    <i class=\"fa-li fa fa-caret-right\" aria-hidden=\"true\"></i> {{o.name}}\n                    <ng-container *ngIf=\"!o.enabled\">\n                        <i class=\"fa fa-exclamation-triangle text-danger\" title=\"{{'organizationIsDisabled' | i18n}}\"\n                            aria-hidden=\"true\"></i>\n                        <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span>\n                    </ng-container>\n                </a>\n            </li>\n        </ul>\n        <p *ngIf=\"!organizations || !organizations.length\">{{'noOrganizationsList' | i18n}}</p>\n    </ng-container>\n    <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-block btn-outline-primary\">\n        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n        {{'newOrganization' | i18n}}\n    </a>\n</ng-container>\n<ng-container *ngIf=\"!vault\">\n    <div class=\"page-header d-flex\">\n        <h1>\n            {{'organizations' | i18n}}\n            <small [appApiAction]=\"actionPromise\" #action>\n                <ng-container *ngIf=\"action.loading\">\n                    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n                </ng-container>\n            </small>\n        </h1>\n        <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-sm btn-outline-primary ml-auto\"\n            *ngIf=\"!loaded || (organizations && organizations.length)\">\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n            {{'newOrganization' | i18n}}\n        </a>\n    </div>\n    <ng-container *ngIf=\"!loaded\">\n        <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\n    </ng-container>\n    <ng-container *ngIf=\"loaded\">\n        <ng-container *ngIf=\"!organizations || !organizations.length\">\n            <p>{{'noOrganizationsList' | i18n}}</p>\n            <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-outline-primary\">\n                <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n                {{'newOrganization' | i18n}}\n            </a>\n        </ng-container>\n        <table class=\"table table-hover table-list\" *ngIf=\"organizations && organizations.length\">\n            <tbody>\n                <tr *ngFor=\"let o of organizations\">\n                    <td width=\"30\">\n                        <app-avatar [data]=\"o.name\" size=\"25\" [circle]=\"true\" [fontSize]=\"14\"></app-avatar>\n                    </td>\n                    <td>\n                        <a href=\"#\" [routerLink]=\"['/organizations', o.id]\">{{o.name}}</a>\n                        <ng-container *ngIf=\"!o.enabled\">\n                            <i class=\"fa fa-exclamation-triangle text-danger\"\n                                title=\"{{'organizationIsDisabled' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'organizationIsDisabled' | i18n}}</span>\n                        </ng-container>\n                    </td>\n                    <td class=\"table-list-options\">\n                        <div class=\"dropdown\" appListDropdown>\n                            <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                                appA11yTitle=\"{{'options' | i18n}}\">\n                                <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                                <ng-container *ngIf=\"o.useSso && o.identifier\">\n                                    <a *ngIf=\"o.ssoBound; else linkSso\" class=\"dropdown-item\" href=\"#\" appStopClick\n                                        (click)=\"unlinkSso(o)\">\n                                        <i class=\"fa fa-fw fa-chain-broken\" aria-hidden=\"true\"></i>\n                                        {{'unlinkSso' | i18n}}\n                                    </a>\n                                    <ng-template #linkSso>\n                                        <app-link-sso [organization]=\"o\">\n                                        </app-link-sso>\n                                    </ng-template>\n                                </ng-container>\n                                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"leave(o)\">\n                                    <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i>\n                                    {{'leave' | i18n}}\n                                </a>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</ng-container>\n","import { BaseResponse } from './baseResponse';\n\nexport class SelectionReadOnlyResponse extends BaseResponse {\n    id: string;\n    readOnly: boolean;\n    hidePasswords: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.readOnly = this.getResponseProperty('ReadOnly');\n        this.hidePasswords = this.getResponseProperty('HidePasswords');\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\n@Component({\n    selector: 'app-navbar',\n    templateUrl: 'navbar.component.html',\n})\nexport class NavbarComponent implements OnInit {\n    selfHosted = false;\n    name: string;\n    email: string;\n\n    constructor(private messagingService: MessagingService, private platformUtilsService: PlatformUtilsService,\n        private tokenService: TokenService) {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.name = await this.tokenService.getName();\n        this.email = await this.tokenService.getEmail();\n        if (this.name == null || this.name.trim() === '') {\n            this.name = this.email;\n        }\n    }\n\n    lock() {\n        this.messagingService.send('lockVault');\n    }\n\n    logOut() {\n        this.messagingService.send('logout');\n    }\n}\n","<nav class=\"navbar navbar-expand navbar-dark bg-primary\" [ngClass]=\"{'bg-secondary-alt': selfHosted}\">\n    <div class=\"container\">\n        <a class=\"navbar-brand\" routerLink=\"/\" appA11yTitle=\"{{'pageTitle' | i18n : 'Bitwarden'}}\">\n            <i class=\"fa fa-shield\" aria-hidden=\"true\"></i>\n        </a>\n        <div class=\"collapse navbar-collapse\">\n            <ul class=\"navbar-nav\">\n                <li class=\"nav-item\" routerLinkActive=\"active\">\n                    <a class=\"nav-link\" routerLink=\"/vault\">{{'myVault' | i18n}}</a>\n                </li>\n                <li class=\"nav-item\" routerLinkActive=\"active\">\n                    <a class=\"nav-link\" routerLink=\"/tools\">{{'tools' | i18n}}</a>\n                </li>\n                <li class=\"nav-item\" routerLinkActive=\"active\">\n                    <a class=\"nav-link\" routerLink=\"/settings\">{{'settings' | i18n}}</a>\n                </li>\n            </ul>\n        </div>\n        <ul class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-item nav-link dropdown-toggle\" href=\"#\" id=\"nav-profile\" data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                    <i class=\"fa fa-user-circle fa-lg\" aria-hidden=\"true\"></i>\n                </a>\n                <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"nav-profile\">\n                    <div class=\"dropdown-item-text d-flex align-items-center\" *ngIf=\"name\" appStopProp>\n                        <app-avatar [data]=\"name\" [email]=\"email\" size=\"25\" fontSize=\"14\" [circle]=\"true\"></app-avatar>\n                        <div class=\"ml-2 overflow-hidden\">\n                            <span>{{'loggedInAs' | i18n}}</span>\n                            <small class=\"text-muted\">{{name}}</small>\n                        </div>\n                    </div>\n                    <div class=\"dropdown-divider\"></div>\n                    <a class=\"dropdown-item\" href=\"#\" routerLink=\"/settings/account\">\n                        <i class=\"fa fa-fw fa-user\" aria-hidden=\"true\"></i>\n                        {{'myAccount' | i18n}}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"https://help.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n                        <i class=\"fa fa-fw fa-question-circle\" aria-hidden=\"true\"></i>\n                        {{'getHelp' | i18n}}\n                    </a>\n                    <a class=\"dropdown-item\" href=\"https://bitwarden.com/download/\" target=\"_blank\" rel=\"noopener\">\n                        <i class=\"fa fa-fw fa-download\" aria-hidden=\"true\"></i>\n                        {{'getApps' | i18n}}\n                    </a>\n                    <div class=\"dropdown-divider\"></div>\n                    <button type=\"button\" class=\"dropdown-item\" (click)=\"lock()\">\n                        <i class=\"fa fa-fw fa-lock\" aria-hidden=\"true\"></i>\n                        {{'lockNow' | i18n}}\n                    </button>\n                    <button type=\"button\" class=\"dropdown-item\" (click)=\"logOut()\">\n                        <i class=\"fa fa-fw fa-sign-out\" aria-hidden=\"true\"></i>\n                        {{'logOut' | i18n}}\n                    </button>\n                </div>\n            </li>\n        </ul>\n    </div>\n</nav>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-footer',\n    templateUrl: 'footer.component.html',\n})\nexport class FooterComponent implements OnInit {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = this.platformUtilsService.getApplicationVersion();\n    }\n}\n","<div class=\"container footer text-muted\">\n    <div class=\"row\">\n        <div class=\"col\">\n            &copy; {{year}}, Bitwarden Inc.\n        </div>\n        <div class=\"col text-center\"></div>\n        <div class=\"col text-right\">\n            {{'versionNumber' | i18n : version}}\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { ErrorResponse } from '../../models/response/errorResponse';\n\n@Injectable()\nexport class ValidationService {\n    constructor(private i18nService: I18nService, private platformUtilsService: PlatformUtilsService) { }\n\n    showError(data: any): string[] {\n        const defaultErrorMessage = this.i18nService.t('unexpectedError');\n        let errors: string[] = [];\n\n        if (data != null && typeof data === 'string') {\n            errors.push(data);\n        } else if (data == null || typeof data !== 'object') {\n            errors.push(defaultErrorMessage);\n        } else if (data.validationErrors != null) {\n            errors = errors.concat((data as ErrorResponse).getAllMessages());\n        } else {\n            errors.push(data.message ? data.message : defaultErrorMessage);\n        }\n\n        if (errors.length === 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors[0]);\n        } else if (errors.length > 1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), errors, {\n                timeout: 5000 * errors.length,\n            });\n        }\n\n        return errors;\n    }\n}\n","export enum EncryptionType {\n    AesCbc256_B64 = 0,\n    AesCbc128_HmacSha256_B64 = 1,\n    AesCbc256_HmacSha256_B64 = 2,\n    Rsa2048_OaepSha256_B64 = 3,\n    Rsa2048_OaepSha1_B64 = 4,\n    Rsa2048_OaepSha256_HmacSha256_B64 = 5,\n    Rsa2048_OaepSha1_HmacSha256_B64 = 6,\n}\n","export class KeysRequest {\n    publicKey: string;\n    encryptedPrivateKey: string;\n\n    constructor(publicKey: string, encryptedPrivateKey: string) {\n        this.publicKey = publicKey;\n        this.encryptedPrivateKey = encryptedPrivateKey;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { OrganizationUserStatusType } from 'jslib/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { OrganizationUserUserDetailsResponse } from 'jslib/models/response/organizationUserResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-entity-users',\n    templateUrl: 'entity-users.component.html',\n})\nexport class EntityUsersComponent implements OnInit {\n    @Input() entity: 'group' | 'collection';\n    @Input() entityId: string;\n    @Input() entityName: string;\n    @Input() organizationId: string;\n    @Output() onEditedUsers = new EventEmitter();\n\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n\n    showSelected = false;\n    loading = true;\n    formPromise: Promise<any>;\n    selectedCount = 0;\n    searchText: string;\n\n    private allUsers: OrganizationUserUserDetailsResponse[] = [];\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        await this.loadUsers();\n        this.loading = false;\n    }\n\n    get users() {\n        if (this.showSelected) {\n            return this.allUsers.filter((u) => (u as any).checked);\n        } else {\n            return this.allUsers;\n        }\n    }\n\n    async loadUsers() {\n        const users = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.allUsers = users.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, 'email'));\n        if (this.entity === 'group') {\n            const response = await this.apiService.getGroupUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach((s) => {\n                    const user = users.data.filter((u) => u.id === s);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                    }\n                });\n            }\n        } else if (this.entity === 'collection') {\n            const response = await this.apiService.getCollectionUsers(this.organizationId, this.entityId);\n            if (response != null && users.data.length > 0) {\n                response.forEach((s) => {\n                    const user = users.data.filter((u) => !u.accessAll && u.id === s.id);\n                    if (user != null && user.length > 0) {\n                        (user[0] as any).checked = true;\n                        (user[0] as any).readOnly = s.readOnly;\n                        (user[0] as any).hidePasswords = s.hidePasswords;\n                    }\n                });\n            }\n        }\n\n        this.allUsers.forEach((u) => {\n            if (this.entity === 'collection' && u.accessAll) {\n                (u as any).checked = true;\n            }\n            if ((u as any).checked) {\n                this.selectedCount++;\n            }\n        });\n    }\n\n    check(u: OrganizationUserUserDetailsResponse) {\n        if (this.entity === 'collection' && u.accessAll) {\n            return;\n        }\n        (u as any).checked = !(u as any).checked;\n        this.selectedChanged(u);\n    }\n\n    selectedChanged(u: OrganizationUserUserDetailsResponse) {\n        if ((u as any).checked) {\n            this.selectedCount++;\n        } else {\n            if (this.entity === 'collection') {\n                (u as any).readOnly = false;\n                (u as any).hidePasswords = false;\n            }\n            this.selectedCount--;\n        }\n    }\n\n    filterSelected(showSelected: boolean) {\n        this.showSelected = showSelected;\n    }\n\n    async submit() {\n        try {\n            if (this.entity === 'group') {\n                const selections = this.users.filter((u) => (u as any).checked).map((u) => u.id);\n                this.formPromise = this.apiService.putGroupUsers(this.organizationId, this.entityId, selections);\n            } else {\n                const selections = this.users.filter((u) => (u as any).checked && !u.accessAll)\n                    .map((u) => new SelectionReadOnlyRequest(u.id, !!(u as any).readOnly, !!(u as any).hidePasswords));\n                this.formPromise = this.apiService.putCollectionUsers(this.organizationId, this.entityId, selections);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({\n                action: this.entity === 'group' ? 'Edited Group Users' : 'Edited Collection Users',\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedUsers'));\n            this.onEditedUsers.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAccessTitle\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"userAccessTitle\">\n                    {{'userAccess' | i18n}}\n                    <small>{{entityName}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading || !users\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\n            </div>\n            <div class=\"modal-body\"\n                *ngIf=\"!loading && users && (users | search:searchText:'name':'email':'id') as searchedUsers\">\n                <div class=\"d-flex\">\n                    <div class=\"mr-3\">\n                        <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\n                        <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\"\n                            placeholder=\"{{'search' | i18n}}\" name=\"SearchText\" [(ngModel)]=\"searchText\">\n                    </div>\n                    <div class=\"btn-group btn-group-sm\" role=\"group\">\n                        <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: !showSelected}\"\n                            (click)=\"filterSelected(false)\">\n                            {{'all' | i18n}}\n                        </button>\n                        <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: showSelected}\"\n                            (click)=\"filterSelected(true)\">\n                            {{'selected' | i18n}}\n                            <span class=\"badge badge-pill badge-info\" *ngIf=\"selectedCount\">{{selectedCount}}</span>\n                        </button>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"!searchedUsers.length\">\n                    <hr>\n                    {{'noUsersInList' | i18n}}\n                </ng-container>\n                <ng-container *ngIf=\"searchedUsers.length\">\n                    <table class=\"table table-hover table-list mb-0\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>&nbsp;</th>\n                                <th>{{'name' | i18n}}</th>\n                                <th *ngIf=\"entity === 'collection'\">&nbsp;</th>\n                                <th>{{'userType' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'hidePasswords' |\n                                    i18n}}</th>\n                                <th width=\"100\" class=\"text-center\" *ngIf=\"entity === 'collection'\">{{'readOnly' |\n                                    i18n}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let u of searchedUsers\">\n                                <td class=\"table-list-checkbox\" (click)=\"check(u)\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"u.checked\" name=\"{{u.id.substr(0,8)}}_Checked\"\n                                        [disabled]=\"entity === 'collection' && u.accessAll\"\n                                        (change)=\"selectedChanged(u)\" appStopProp>\n                                </td>\n                                <td width=\"30\" (click)=\"check(u)\">\n                                    <app-avatar [data]=\"u.name || u.email\" [email]=\"u.email\" size=\"25\" [circle]=\"true\"\n                                        [fontSize]=\"14\"></app-avatar>\n                                </td>\n                                <td>\n                                    {{u.email}}\n                                    <span class=\"badge badge-secondary\"\n                                        *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited'\n                                        | i18n}}</span>\n                                    <span class=\"badge badge-warning\"\n                                        *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted'\n                                        | i18n}}</span>\n                                    <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small>\n                                </td>\n                                <td *ngIf=\"entity === 'collection'\">\n                                    <ng-container *ngIf=\"u.accessAll\">\n                                        <i class=\"fa fa-th\" title=\"{{'userAccessAllItems' | i18n}}\"\n                                            aria-hidden=\"true\"></i>\n                                        <span class=\"sr-only\">{{'userAccessAllItems' | i18n}}</span>\n                                    </ng-container>\n                                </td>\n                                <td>\n                                    <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span>\n                                    <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span>\n                                    <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span>\n                                    <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span>\n                                </td>\n                                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"u.hidePasswords\"\n                                        name=\"{{u.id.substr(0,8)}}_HidePasswords\"\n                                        [disabled]=\"u.accessAll || !u.checked\">\n                                </td>\n                                <td class=\"text-center\" *ngIf=\"entity === 'collection'\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"u.readOnly\" name=\"{{u.id.substr(0,8)}}_ReadOnly\"\n                                        [disabled]=\"u.accessAll || !u.checked\">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\nimport { ListResponse } from 'jslib/models/response/listResponse';\n\n@Component({\n    selector: 'app-entity-events',\n    templateUrl: 'entity-events.component.html',\n})\nexport class EntityEventsComponent implements OnInit {\n    @Input() name: string;\n    @Input() entity: 'user' | 'cipher';\n    @Input() entityId: string;\n    @Input() organizationId: string;\n    @Input() showUser = false;\n\n    loading = true;\n    loaded = false;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private eventService: EventService, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const defaultDates = this.eventService.getDefaultDateFilters();\n        this.start = defaultDates[0];\n        this.end = defaultDates[1];\n        await this.load();\n    }\n\n    async load() {\n        if (this.showUser) {\n            const response = await this.apiService.getOrganizationUsers(this.organizationId);\n            response.data.forEach((u) => {\n                const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\n                this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n                this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n            });\n        }\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            let promise: Promise<any>;\n            if (this.entity === 'user') {\n                promise = this.apiService.getEventsOrganizationUser(this.organizationId, this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            } else {\n                promise = this.apiService.getEventsCipher(this.entityId,\n                    dates[0], dates[1], clearExisting ? null : this.continuationToken);\n            }\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = response.data.map((r) => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = this.eventService.getEventInfo(r);\n            const user = this.showUser && userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.showUser ? this.i18nService.t('unknown') : null,\n                userEmail: user != null ? user.email : this.showUser ? '' : null,\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        });\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"eventLogsTitle\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"eventLogsTitle\">\n                    {{'eventLogs' | i18n}}\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loaded\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loaded\">\n                <div class=\"d-flex\">\n                    <div class=\"form-inline\">\n                        <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label>\n                        <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\"\n                            placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\">\n                        <span class=\"mx-2\">-</span>\n                        <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label>\n                        <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\"\n                            placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\">\n                    </div>\n                    <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\"\n                        class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"loadEvents(true)\"\n                        [disabled]=\"loaded && refreshBtn.loading\">\n                        <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\"\n                            aria-hidden=\"true\"></i>\n                        {{'refresh' | i18n}}\n                    </button>\n                </div>\n                <hr>\n                <div *ngIf=\"!events || !events.length\">\n                    {{'noEventsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover mb-0\" *ngIf=\"events && events.length\">\n                    <thead>\n                        <tr>\n                            <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th>\n                            <th class=\"border-top-0\" width=\"40\">\n                                <span class=\"sr-only\">{{'device' | i18n}}</span>\n                            </th>\n                            <th class=\"border-top-0\" width=\"150\" *ngIf=\"showUser\">{{'user' | i18n}}</th>\n                            <th class=\"border-top-0\">{{'event' | i18n}}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let e of events\">\n                            <td>{{e.date | date:'medium'}}</td>\n                            <td>\n                                <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\"\n                                    aria-hidden=\"true\"></i>\n                                <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span>\n                            </td>\n                            <td *ngIf=\"showUser\">\n                                <span appA11yTitle=\"{{e.userEmail}}\">{{e.userName}}</span>\n                            </td>\n                            <td [innerHTML]=\"e.message\"></td>\n                        </tr>\n                    </tbody>\n                </table>\n                <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\"\n                    (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'loadMore' | i18n}}</span>\n                </button>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    Input,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-purge-vault',\n    templateUrl: 'purge-vault.component.html',\n})\nexport class PurgeVaultComponent {\n    @Input() organizationId?: string = null;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postPurgeCiphers(request, this.organizationId);\n            await this.formPromise;\n            this.analytics.eventTrack.next({\n                action: this.organizationId != null ? 'Purged Organization Vault' : 'Purged Vault',\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('vaultPurged'));\n            if (this.organizationId != null) {\n                this.router.navigate(['organizations', this.organizationId, 'vault']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"purgeVaultTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"purgeVaultTitle\">{{'purgeVault' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{(organizationId ? 'purgeOrgVaultDesc' : 'purgeVaultDesc') | i18n}}</p>\n                <app-callout type=\"warning\">{{'purgeVaultWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'purgeVault' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { BillingResponse } from 'jslib/models/response/billingResponse';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\nimport { TransactionType } from 'jslib/enums/transactionType';\nimport { VerifyBankRequest } from 'jslib/models/request/verifyBankRequest';\n\n@Component({\n    selector: 'app-user-billing',\n    templateUrl: 'user-billing.component.html',\n})\nexport class UserBillingComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    showAdjustPayment = false;\n    showAddCredit = false;\n    billing: BillingResponse;\n    paymentMethodType = PaymentMethodType;\n    transactionType = TransactionType;\n    organizationId: string;\n    verifyAmount1: number;\n    verifyAmount2: number;\n\n    verifyBankPromise: Promise<any>;\n\n    constructor(protected apiService: ApiService, protected i18nService: I18nService,\n        protected analytics: Angulartics2, protected toasterService: ToasterService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        if (this.organizationId != null) {\n            this.billing = await this.apiService.getOrganizationBilling(this.organizationId);\n        } else {\n            this.billing = await this.apiService.getUserBilling();\n        }\n        this.loading = false;\n    }\n\n    async verifyBank() {\n        if (this.loading) {\n            return;\n        }\n\n        try {\n            const request = new VerifyBankRequest();\n            request.amount1 = this.verifyAmount1;\n            request.amount2 = this.verifyAmount2;\n            this.verifyBankPromise = this.apiService.postOrganizationVerifyBank(this.organizationId, request);\n            await this.verifyBankPromise;\n            this.analytics.eventTrack.next({ action: 'Verified Bank Account' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('verifiedBankAccount'));\n            this.load();\n        } catch { }\n    }\n\n    addCredit() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('addCredit'), null, null, 'warning');\n            return;\n        }\n        this.showAddCredit = true;\n    }\n\n    closeAddCredit(load: boolean) {\n        this.showAddCredit = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    changePayment() {\n        if (this.paymentSourceInApp) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t('changePaymentMethod'), null, null, 'warning');\n            return;\n        }\n        this.showAdjustPayment = true;\n    }\n\n    closePayment(load: boolean) {\n        this.showAdjustPayment = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isCreditBalance() {\n        return this.billing == null || this.billing.balance <= 0;\n    }\n\n    get creditOrBalance() {\n        return Math.abs(this.billing != null ? this.billing.balance : 0);\n    }\n\n    get paymentSource() {\n        return this.billing != null ? this.billing.paymentSource : null;\n    }\n\n    get paymentSourceInApp() {\n        return this.paymentSource != null &&\n            (this.paymentSource.type === PaymentMethodType.AppleInApp ||\n                this.paymentSource.type === PaymentMethodType.GoogleInApp);\n    }\n\n    get invoices() {\n        return this.billing != null ? this.billing.invoices : null;\n    }\n\n    get transactions() {\n        return this.billing != null ? this.billing.transactions : null;\n    }\n}\n","<div class=\"page-header d-flex\">\n    <h1>\n        {{'billing' | i18n}}\n    </h1>\n    <button (click)=\"load()\" class=\"btn btn-sm btn-outline-primary ml-auto\" *ngIf=\"firstLoaded\" [disabled]=\"loading\">\n        <i class=\"fa fa-refresh fa-fw\" [ngClass]=\"{'fa-spin': loading}\" aria-hidden=\"true\"></i>\n        {{'refresh' | i18n}}\n    </button>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container *ngIf=\"billing\">\n    <h2>{{(isCreditBalance ? 'accountCredit' : 'accountBalance') | i18n}}</h2>\n    <p class=\"text-lg\"><strong>{{creditOrBalance | currency:'$'}}</strong></p>\n    <p>{{'creditAppliedDesc' | i18n}}</p>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"addCredit()\" *ngIf=\"!showAddCredit\">\n        {{'addCredit' | i18n}}\n    </button>\n    <app-add-credit [organizationId]=\"organizationId\" (onAdded)=\"closeAddCredit(true)\"\n        (onCanceled)=\"closeAddCredit(false)\" *ngIf=\"showAddCredit\">\n    </app-add-credit>\n    <h2 class=\"spaced-header\">{{'paymentMethod' | i18n}}</h2>\n    <p *ngIf=\"!paymentSource\">{{'noPaymentMethod' | i18n}}</p>\n    <ng-container *ngIf=\"paymentSource\">\n        <app-callout type=\"warning\" title=\"{{'verifyBankAccount' | i18n}}\"\n            *ngIf=\"paymentSource.type === paymentMethodType.BankAccount && paymentSource.needsVerification\">\n            <p>{{'verifyBankAccountDesc' | i18n}} {{'verifyBankAccountFailureWarning' | i18n}}</p>\n            <form #verifyForm class=\"form-inline\" (ngSubmit)=\"verifyBank()\" [appApiAction]=\"verifyBankPromise\"\n                ngNativeValidate>\n                <label class=\"sr-only\" for=\"verifyAmount1\">{{'amount' | i18n : '1'}}</label>\n                <div class=\"input-group mr-2\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">$0.</div>\n                    </div>\n                    <input type=\"number\" class=\"form-control\" id=\"verifyAmount1\" placeholder=\"xx\" name=\"Amount1\"\n                        [(ngModel)]=\"verifyAmount1\" min=\"1\" max=\"99\" step=\"1\" required>\n                </div>\n                <label class=\"sr-only\" for=\"verifyAmount2\">{{'amount' | i18n : '2'}}</label>\n                <div class=\"input-group mr-2\">\n                    <div class=\"input-group-prepend\">\n                        <div class=\"input-group-text\">$0.</div>\n                    </div>\n                    <input type=\"number\" class=\"form-control\" id=\"verifyAmount2\" placeholder=\"xx\" name=\"Amount2\"\n                        [(ngModel)]=\"verifyAmount2\" min=\"1\" max=\"99\" step=\"1\" required>\n                </div>\n                <button type=\"submit\" class=\"btn btn-outline-primary btn-submit\" [disabled]=\"verifyForm.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'verifyBankAccount' | i18n}}</span>\n                </button>\n            </form>\n        </app-callout>\n        <p>\n            <i class=\"fa fa-fw\" [ngClass]=\"{'fa-credit-card': paymentSource.type === paymentMethodType.Card,\n                    'fa-university': paymentSource.type === paymentMethodType.BankAccount,\n                    'fa-money': paymentSource.type === paymentMethodType.Check,\n                    'fa-paypal text-primary': paymentSource.type === paymentMethodType.PayPal,\n                    'fa-apple text-muted': paymentSource.type === paymentMethodType.AppleInApp,\n                    'fa-google text-muted': paymentSource.type === paymentMethodType.GoogleInApp}\"></i>\n            <span *ngIf=\"paymentSourceInApp\">{{'inAppPurchase' | i18n}}</span>\n            {{paymentSource.description}}\n        </p>\n    </ng-container>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePayment()\" *ngIf=\"!showAdjustPayment\">\n        {{(paymentSource ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}\n    </button>\n    <app-adjust-payment [currentType]=\"paymentSource != null ? paymentSource.type : null\"\n        [organizationId]=\"organizationId\" (onAdjusted)=\"closePayment(true)\" (onCanceled)=\"closePayment(false)\"\n        *ngIf=\"showAdjustPayment\">\n    </app-adjust-payment>\n    <h2 class=\"spaced-header\">{{'invoices' | i18n}}</h2>\n    <p *ngIf=\"!invoices || !invoices.length\">{{'noInvoices' | i18n}}</p>\n    <table class=\"table mb-2\" *ngIf=\"invoices && invoices.length\">\n        <tbody>\n            <tr *ngFor=\"let i of invoices\">\n                <td>{{i.date | date:'mediumDate'}}</td>\n                <td>\n                    <a href=\"{{i.pdfUrl}}\" target=\"_blank\" rel=\"noopener\" class=\"mr-2\"\n                        appA11yTitle=\"{{'downloadInvoice' | i18n}}\">\n                        <i class=\"fa fa-file-pdf-o\" aria-hidden=\"true\"></i></a>\n                    <a href=\"{{i.url}}\" target=\"_blank\" rel=\"noopener\" title=\"{{'viewInvoice' | i18n}}\">\n                        {{'invoiceNumber' | i18n : i.number}}</a>\n                </td>\n                <td>{{i.amount | currency:'$'}}</td>\n                <td>\n                    <span *ngIf=\"i.paid\">\n                        <i class=\"fa fa-check text-success\" aria-hidden=\"true\"></i>\n                        {{'paid' | i18n}}\n                    </span>\n                    <span *ngIf=\"!i.paid\">\n                        <i class=\"fa fa-exclamation-circle text-muted\" aria-hidden=\"true\"></i>\n                        {{'unpaid' | i18n}}\n                    </span>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <h2 class=\"spaced-header\">{{'transactions' | i18n}}</h2>\n    <p *ngIf=\"!transactions || !transactions.length\">{{'noTransactions' | i18n}}</p>\n    <table class=\"table mb-2\" *ngIf=\"transactions && transactions.length\">\n        <tbody>\n            <tr *ngFor=\"let t of transactions\">\n                <td>{{t.createdDate | date:'mediumDate'}}</td>\n                <td>\n                    <span *ngIf=\"t.type === transactionType.Charge || t.type === transactionType.Credit\">\n                        {{'chargeNoun' | i18n}}\n                    </span>\n                    <span *ngIf=\"t.type === transactionType.Refund\">{{'refundNoun' | i18n}}</span>\n                </td>\n                <td>\n                    <i class=\"fa fa-fw\" *ngIf=\"t.paymentMethodType\" aria-hidden=\"true\" [ngClass]=\"{\n                            'fa-credit-card': t.paymentMethodType === paymentMethodType.Card,\n                            'fa-university': t.paymentMethodType === paymentMethodType.BankAccount ||\n                                t.paymentMethodType === paymentMethodType.WireTransfer,\n                            'fa-bitcoin text-warning': t.paymentMethodType === paymentMethodType.BitPay,\n                            'fa-paypal text-primary': t.paymentMethodType === paymentMethodType.PayPal\n                        }\"></i>\n                    {{t.details}}\n                </td>\n                <td [ngClass]=\"{'text-strike': t.refunded}\" title=\"{{(t.refunded ? 'refunded' : '') | i18n}}\">\n                    {{t.amount | currency:'$'}}</td>\n            </tr>\n        </tbody>\n    </table>\n    <small class=\"text-muted\">* {{'chargesStatement' | i18n : 'BITWARDEN'}}</small>\n</ng-container>\n","import {\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { BitPayInvoiceRequest } from 'jslib/models/request/bitPayInvoiceRequest';\n\nimport { WebConstants } from '../../services/webConstants';\n\n@Component({\n    selector: 'app-add-credit',\n    templateUrl: 'add-credit.component.html',\n})\nexport class AddCreditComponent implements OnInit {\n    @Input() creditAmount: string;\n    @Input() showOptions = true;\n    @Input() method = PaymentMethodType.PayPal;\n    @Input() organizationId: string;\n    @Output() onAdded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild('ppButtonForm', { read: ElementRef, static: true }) ppButtonFormRef: ElementRef;\n\n    paymentMethodType = PaymentMethodType;\n    ppButtonFormAction = WebConstants.paypal.buttonActionProduction;\n    ppButtonBusinessId = WebConstants.paypal.businessIdProduction;\n    ppButtonCustomField: string;\n    ppLoading = false;\n    subject: string;\n    returnUrl: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private name: string;\n    private email: string;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService) {\n        if (platformUtilsService.isDev()) {\n            this.ppButtonFormAction = WebConstants.paypal.buttonActionSandbox;\n            this.ppButtonBusinessId = WebConstants.paypal.businessIdSandbox;\n        }\n    }\n\n    async ngOnInit() {\n        if (this.organizationId != null) {\n            if (this.creditAmount == null) {\n                this.creditAmount = '20.00';\n            }\n            this.ppButtonCustomField = 'organization_id:' + this.organizationId;\n            const org = await this.userService.getOrganization(this.organizationId);\n            if (org != null) {\n                this.subject = org.name;\n                this.name = org.name;\n            }\n        } else {\n            if (this.creditAmount == null) {\n                this.creditAmount = '10.00';\n            }\n            this.userId = await this.userService.getUserId();\n            this.subject = await this.userService.getEmail();\n            this.email = this.subject;\n            this.ppButtonCustomField = 'user_id:' + this.userId;\n        }\n        this.ppButtonCustomField += ',account_credit:1';\n        this.returnUrl = window.location.href;\n    }\n\n    async submit() {\n        if (this.creditAmount == null || this.creditAmount === '') {\n            return;\n        }\n\n        if (this.method === PaymentMethodType.PayPal) {\n            this.ppButtonFormRef.nativeElement.submit();\n            this.ppLoading = true;\n            return;\n        }\n        if (this.method === PaymentMethodType.BitPay) {\n            try {\n                const req = new BitPayInvoiceRequest();\n                req.email = this.email;\n                req.name = this.name;\n                req.credit = true;\n                req.amount = this.creditAmountNumber;\n                req.organizationId = this.organizationId;\n                req.userId = this.userId;\n                req.returnUrl = this.returnUrl;\n                this.formPromise = this.apiService.postBitPayInvoice(req);\n                const bitPayUrl: string = await this.formPromise;\n                this.platformUtilsService.launchUri(bitPayUrl);\n            } catch { }\n            return;\n        }\n        try {\n            this.analytics.eventTrack.next({\n                action: 'Added Credit',\n            });\n            this.onAdded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    formatAmount() {\n        try {\n            if (this.creditAmount != null && this.creditAmount !== '') {\n                const floatAmount = Math.abs(parseFloat(this.creditAmount));\n                if (floatAmount > 0) {\n                    this.creditAmount = parseFloat((Math.round(floatAmount * 100) / 100).toString())\n                        .toFixed(2).toString();\n                    return;\n                }\n            }\n        } catch { }\n        this.creditAmount = '';\n    }\n\n    get creditAmountNumber(): number {\n        if (this.creditAmount != null && this.creditAmount !== '') {\n            try {\n                return parseFloat(this.creditAmount);\n            } catch { }\n        }\n        return null;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\n                aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{'addCredit' | i18n}}</h3>\n        <div class=\"mb-4 text-lg\" *ngIf=\"showOptions\">\n            <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-paypal\"\n                    [value]=\"paymentMethodType.PayPal\" [(ngModel)]=\"method\">\n                <label class=\"form-check-label\" for=\"credit-method-paypal\">\n                    <i class=\"fa fa-fw fa-paypal\" aria-hidden=\"true\"></i> PayPal</label>\n            </div>\n            <div class=\"form-check form-check-inline\">\n                <input class=\"form-check-input\" type=\"radio\" name=\"Method\" id=\"credit-method-bitcoin\"\n                    [value]=\"paymentMethodType.BitPay\" [(ngModel)]=\"method\">\n                <label class=\"form-check-label\" for=\"credit-method-bitcoin\">\n                    <i class=\"fa fa-fw fa-bitcoin\" aria-hidden=\"true\"></i> Bitcoin</label>\n            </div>\n        </div>\n        <div class=\"form-group\">\n            <div class=\"row\">\n                <div class=\"col-4\">\n                    <label for=\"creditAmount\">{{'amount' | i18n}}</label>\n                    <div class=\"input-group\">\n                        <div class=\"input-group-prepend\"><span class=\"input-group-text\">$USD</span></div>\n                        <input id=\"creditAmount\" class=\"form-control\" type=\"text\" name=\"CreditAmount\"\n                            [(ngModel)]=\"creditAmount\" (blur)=\"formatAmount()\" required>\n                    </div>\n                </div>\n            </div>\n            <small class=\"form-text text-muted\">{{'creditDelayed' | i18n}}</small>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading || ppLoading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n    </div>\n</form>\n<form #ppButtonForm action=\"{{ppButtonFormAction}}\" method=\"post\" target=\"_top\">\n    <input type=\"hidden\" name=\"cmd\" value=\"_xclick\">\n    <input type=\"hidden\" name=\"business\" value=\"{{ppButtonBusinessId}}\">\n    <input type=\"hidden\" name=\"button_subtype\" value=\"services\">\n    <input type=\"hidden\" name=\"no_note\" value=\"1\">\n    <input type=\"hidden\" name=\"no_shipping\" value=\"1\">\n    <input type=\"hidden\" name=\"rm\" value=\"1\">\n    <input type=\"hidden\" name=\"return\" value=\"{{returnUrl}}\">\n    <input type=\"hidden\" name=\"cancel_return\" value=\"{{returnUrl}}\">\n    <input type=\"hidden\" name=\"currency_code\" value=\"USD\">\n    <input type=\"hidden\" name=\"image_url\" value=\"https://bitwarden.com/images/paypal-banner.png\">\n    <input type=\"hidden\" name=\"bn\" value=\"PP-BuyNowBF:btn_buynow_LG.gif:NonHosted\">\n    <input type=\"hidden\" name=\"amount\" value=\"{{creditAmount}}\">\n    <input type=\"hidden\" name=\"custom\" value=\"{{ppButtonCustomField}}\">\n    <input type=\"hidden\" name=\"item_name\" value=\"Bitwarden Account Credit\">\n    <input type=\"hidden\" name=\"item_number\" value=\"{{subject}}\">\n</form>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PaymentRequest } from 'jslib/models/request/paymentRequest';\n\nimport { PaymentMethodType } from 'jslib/enums/paymentMethodType';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-adjust-payment',\n    templateUrl: 'adjust-payment.component.html',\n})\nexport class AdjustPaymentComponent {\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent, { static: true }) taxInfoComponent: TaxInfoComponent;\n\n    @Input() currentType?: PaymentMethodType;\n    @Input() organizationId: string;\n    @Output() onAdjusted = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    paymentMethodType = PaymentMethodType;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async submit() {\n        try {\n            const request = new PaymentRequest();\n            this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n                request.paymentToken = result[0];\n                request.paymentMethodType = result[1];\n                request.postalCode = this.taxInfoComponent.taxInfo.postalCode;\n                request.country = this.taxInfoComponent.taxInfo.country;\n                if (this.organizationId == null) {\n                    return this.apiService.postAccountPayment(request);\n                } else {\n                    request.taxId = this.taxInfoComponent.taxInfo.taxId;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    request.line1 = this.taxInfoComponent.taxInfo.line1;\n                    request.line2 = this.taxInfoComponent.taxInfo.line2;\n                    request.city = this.taxInfoComponent.taxInfo.city;\n                    request.state = this.taxInfoComponent.taxInfo.state;\n                    return this.apiService.postOrganizationPayment(this.organizationId, request);\n                }\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({\n                action: this.currentType == null ? 'Added Payment Method' : 'Changed Payment Method',\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedPaymentMethod'));\n            this.onAdjusted.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    changeCountry() {\n        if (this.taxInfoComponent.taxInfo.country === 'US') {\n            this.paymentComponent.hideBank = !this.organizationId;\n        } else {\n            this.paymentComponent.hideBank = true;\n            if (this.paymentComponent.method === PaymentMethodType.BankAccount) {\n                this.paymentComponent.method = PaymentMethodType.Card;\n                this.paymentComponent.changeMethod();\n            }\n        }\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\n                aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{(currentType != null ? 'changePaymentMethod' : 'addPaymentMethod') | i18n}}</h3>\n        <app-payment [hideBank]=\"!organizationId\" [hideCredit]=\"true\"></app-payment>\n        <app-tax-info (onCountryChanged)=\"changeCountry()\"></app-tax-info>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n    </div>\n</form>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-update-license',\n    templateUrl: 'update-license.component.html',\n})\nexport class UpdateLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onUpdated = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async submit() {\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            const fd = new FormData();\n            fd.append('license', files[0]);\n\n            let updatePromise: Promise<any> = null;\n            if (this.organizationId == null) {\n                updatePromise = this.apiService.postAccountLicense(fd);\n            } else {\n                updatePromise = this.apiService.postOrganizationLicenseUpdate(this.organizationId, fd);\n            }\n\n            this.formPromise = updatePromise.then(() => {\n                return this.apiService.refreshIdentityToken();\n            });\n\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated License' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('updatedLicense'));\n            this.onUpdated.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"form-group\">\n        <label for=\"file\" class=\"sr-only\">{{'licenseFile' | i18n}}</label>\n        <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\n        <small\n            class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : (!organizationId ? 'bitwarden_premium_license.json' : 'bitwarden_organization_license.json')}}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'submit' | i18n}}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n        {{'cancel' | i18n}}\n    </button>\n</form>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { StorageRequest } from 'jslib/models/request/storageRequest';\n\nimport { PaymentResponse } from 'jslib/models/response/paymentResponse';\n\nimport { PaymentComponent } from './payment.component';\n\n@Component({\n    selector: 'app-adjust-storage',\n    templateUrl: 'adjust-storage.component.html',\n})\nexport class AdjustStorageComponent {\n    @Input() storageGbPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n    storageAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private router: Router, private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new StorageRequest();\n            request.storageGbAdjustment = this.storageAdjustment;\n            if (!this.add) {\n                request.storageGbAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                let response: Promise<PaymentResponse>;\n                if (this.organizationId == null) {\n                    response = this.formPromise = this.apiService.postAccountStorage(request);\n                } else {\n                    response = this.formPromise = this.apiService.postOrganizationStorage(this.organizationId, request);\n                }\n                const result = await response;\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.add ? 'Added Storage' : 'Removed Storage' });\n            this.onAdjusted.emit(this.storageAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedStorage', request.storageGbAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedStorageTotal(): number {\n        return this.storageGbPrice * this.storageAdjustment;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\n                aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{(add ? 'addStorage' : 'removeStorage') | i18n}}</h3>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <label for=\"storageAdjustment\">{{(add ? 'gbStorageAdd' : 'gbStorageRemove') | i18n}}</label>\n                <input id=\"storageAdjustment\" class=\"form-control\" type=\"number\" name=\"StroageGbAdjustment\"\n                    [(ngModel)]=\"storageAdjustment\" min=\"0\" max=\"99\" step=\"1\" required>\n            </div>\n        </div>\n        <div *ngIf=\"add\" class=\"mb-3\">\n            <strong>{{'total' | i18n}}:</strong> {{storageAdjustment || 0}} GB &times; {{storageGbPrice | currency:'$'}}\n            = {{adjustedStorageTotal\n            | currency:'$'}} /{{interval | i18n}}\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n        <small class=\"d-block text-muted mt-3\">\n            {{(add ? 'storageAddNote' : 'storageRemoveNote') | i18n}}\n        </small>\n    </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { UpdateTwoFactorDuoRequest } from 'jslib/models/request/updateTwoFactorDuoRequest';\nimport { TwoFactorDuoResponse } from 'jslib/models/response/twoFactorDuoResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-duo',\n    templateUrl: 'two-factor-duo.component.html',\n})\nexport class TwoFactorDuoComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Duo;\n    ikey: string;\n    skey: string;\n    host: string;\n    formPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorDuoRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.integrationKey = this.ikey;\n        request.secretKey = this.skey;\n        request.host = this.host;\n\n        return super.enable(async () => {\n            if (this.organizationId != null) {\n                this.formPromise = this.apiService.putTwoFactorOrganizationDuo(this.organizationId, request);\n            } else {\n                this.formPromise = this.apiService.putTwoFactorDuo(request);\n            }\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private processResponse(response: TwoFactorDuoResponse) {\n        this.ikey = response.integrationKey;\n        this.skey = response.secretKey;\n        this.host = response.host;\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faDuoTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" title=\"2faDuoTitle\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>Duo</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"\n                autocomplete=\"off\">\n                <div class=\"modal-body\">\n                    <ng-container *ngIf=\"enabled\">\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\n                            {{'twoStepLoginProviderEnabled' | i18n}}\n                        </app-callout>\n                        <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\">\n                        <strong>{{'twoFactorDuoIntegrationKey' | i18n}}:</strong> {{ikey}}\n                        <br>\n                        <strong>{{'twoFactorDuoSecretKey' | i18n}}:</strong> {{skey}}\n                        <br>\n                        <strong>{{'twoFactorDuoApiHostname' | i18n}}:</strong> {{host}}\n                    </ng-container>\n                    <ng-container *ngIf=\"!enabled\">\n                        <img src=\"images/2.png\" class=\"float-right ml-3\" alt=\"\">\n                        <p>{{'twoFactorDuoDesc' | i18n}}</p>\n                        <div class=\"form-group\">\n                            <label for=\"ikey\">{{'twoFactorDuoIntegrationKey' | i18n}}</label>\n                            <input id=\"ikey\" type=\"text\" name=\"IntegrationKey\" class=\"form-control\" [(ngModel)]=\"ikey\"\n                                required appInputVerbatim>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"skey\">{{'twoFactorDuoSecretKey' | i18n}}</label>\n                            <input id=\"skey\" type=\"password\" name=\"SecretKey\" class=\"form-control\" [(ngModel)]=\"skey\"\n                                required appInputVerbatim autocomplete=\"new-password\">\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"host\">{{'twoFactorDuoApiHostname' | i18n}}</label>\n                            <input id=\"host\" type=\"text\" name=\"Host\" class=\"form-control\" [(ngModel)]=\"host\"\n                                placeholder=\"{{'ex' | i18n}} api-xxxxxxxx.duosecurity.com\" required appInputVerbatim>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PolicyService } from 'jslib/abstractions/policy.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { TwoFactorProviders } from 'jslib/services/auth.service';\n\nimport { PolicyType } from 'jslib/enums/policyType';\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorAuthenticatorComponent } from './two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './two-factor-recovery.component';\nimport { TwoFactorU2fComponent } from './two-factor-u2f.component';\nimport { TwoFactorYubiKeyComponent } from './two-factor-yubikey.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: 'two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent implements OnInit {\n    @ViewChild('recoveryTemplate', { read: ViewContainerRef, static: true }) recoveryModalRef: ViewContainerRef;\n    @ViewChild('authenticatorTemplate', { read: ViewContainerRef, static: true }) authenticatorModalRef: ViewContainerRef;\n    @ViewChild('yubikeyTemplate', { read: ViewContainerRef, static: true }) yubikeyModalRef: ViewContainerRef;\n    @ViewChild('u2fTemplate', { read: ViewContainerRef, static: true }) u2fModalRef: ViewContainerRef;\n    @ViewChild('duoTemplate', { read: ViewContainerRef, static: true }) duoModalRef: ViewContainerRef;\n    @ViewChild('emailTemplate', { read: ViewContainerRef, static: true }) emailModalRef: ViewContainerRef;\n\n    organizationId: string;\n    providers: any[] = [];\n    canAccessPremium: boolean;\n    showPolicyWarning = false;\n    loading = true;\n\n    private modal: ModalComponent = null;\n\n    constructor(protected apiService: ApiService, protected userService: UserService,\n        protected componentFactoryResolver: ComponentFactoryResolver, protected messagingService: MessagingService,\n        protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n\n        for (const key in TwoFactorProviders) {\n            if (!TwoFactorProviders.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const p = (TwoFactorProviders as any)[key];\n            if (this.filterProvider(p.type)) {\n                continue;\n            }\n\n            this.providers.push({\n                type: p.type,\n                name: p.name,\n                description: p.description,\n                enabled: false,\n                premium: p.premium,\n                sort: p.sort,\n            });\n        }\n\n        this.providers.sort((a: any, b: any) => a.sort - b.sort);\n        await this.load();\n    }\n\n    async load() {\n        this.loading = true;\n        const providerList = await this.getTwoFactorProviders();\n        providerList.data.forEach((p) => {\n            this.providers.forEach((p2) => {\n                if (p.type === p2.type) {\n                    p2.enabled = p.enabled;\n                }\n            });\n        });\n        this.evaluatePolicies();\n        this.loading = false;\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.Authenticator:\n                const authComp = this.openModal(this.authenticatorModalRef, TwoFactorAuthenticatorComponent);\n                authComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Authenticator);\n                });\n                break;\n            case TwoFactorProviderType.Yubikey:\n                const yubiComp = this.openModal(this.yubikeyModalRef, TwoFactorYubiKeyComponent);\n                yubiComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Yubikey);\n                });\n                break;\n            case TwoFactorProviderType.Duo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Duo);\n                });\n                break;\n            case TwoFactorProviderType.Email:\n                const emailComp = this.openModal(this.emailModalRef, TwoFactorEmailComponent);\n                emailComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.Email);\n                });\n                break;\n            case TwoFactorProviderType.U2f:\n                const u2fComp = this.openModal(this.u2fModalRef, TwoFactorU2fComponent);\n                u2fComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.U2f);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    recoveryCode() {\n        this.openModal(this.recoveryModalRef, TwoFactorRecoveryComponent);\n    }\n\n    async premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorProviders();\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type === TwoFactorProviderType.OrganizationDuo;\n    }\n\n    protected openModal<T>(ref: ViewContainerRef, type: Type<T>): T {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = ref.createComponent(factory).instance;\n        const childComponent = this.modal.show<T>(type, ref);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n        return childComponent;\n    }\n\n    protected updateStatus(enabled: boolean, type: TwoFactorProviderType) {\n        if (!enabled && this.modal != null) {\n            this.modal.close();\n        }\n        this.providers.forEach((p) => {\n            if (p.type === type) {\n                p.enabled = enabled;\n            }\n        });\n        this.evaluatePolicies();\n    }\n\n    private async evaluatePolicies() {\n        if (this.organizationId == null && this.providers.filter((p) => p.enabled).length === 1) {\n            const policies = await this.policyService.getAll(PolicyType.TwoFactorAuthentication);\n            this.showPolicyWarning = policies != null && policies.some((p) => p.enabled);\n        } else {\n            this.showPolicyWarning = false;\n        }\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'twoStepLogin' | i18n}}</h1>\n</div>\n<p *ngIf=\"!organizationId\">{{'twoStepLoginDesc' | i18n}}</p>\n<p *ngIf=\"organizationId\">{{'twoStepLoginOrganizationDesc' | i18n}}</p>\n<app-callout type=\"warning\" *ngIf=\"!organizationId\">\n    <p>{{'twoStepLoginRecoveryWarning' | i18n}}</p>\n    <button type=\"button\" class=\"btn btn-outline-secondary\"\n        (click)=\"recoveryCode()\">{{'viewRecoveryCode' | i18n}}</button>\n</app-callout>\n<h2 [ngClass]=\"{'mt-5':!organizationId}\">\n    {{'providers' | i18n}}\n    <small *ngIf=\"loading\">\n        <i class=\"fa fa-spinner fa-spin fa-fw text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\n    </small>\n</h2>\n<app-callout type=\"warning\" *ngIf=\"showPolicyWarning\">\n    {{'twoStepLoginPolicyUserWarning' | i18n}}\n</app-callout>\n<ul class=\"list-group list-group-2fa\">\n    <li *ngFor=\"let p of providers\" class=\"list-group-item d-flex align-items-center\">\n        <div class=\"logo-2fa d-flex justify-content-center\">\n            <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\">\n        </div>\n        <div class=\"mx-4\">\n            <h3 class=\"mb-0\">\n                {{p.name}}\n                <ng-container *ngIf=\"p.enabled\">\n                    <i class=\"fa fa-check text-success fa-fw\" title=\"{{'enabled' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span class=\"sr-only\">{{'enabled' | i18n}}</span>\n                </ng-container>\n                <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium && p.premium\"\n                    (click)=\"premiumRequired()\">\n                    {{'premium' | i18n}}\n                </a>\n            </h3>\n            {{p.description}}\n        </div>\n        <div class=\"ml-auto\">\n            <button type=\"button\" class=\"btn btn-outline-secondary btn-sm\" [disabled]=\"!canAccessPremium && p.premium\"\n                (click)=\"manage(p.type)\">\n                {{'manage' | i18n}}\n            </button>\n        </div>\n    </li>\n</ul>\n\n<ng-template #authenticatorTemplate></ng-template>\n<ng-template #recoveryTemplate></ng-template>\n<ng-template #duoTemplate></ng-template>\n<ng-template #emailTemplate></ng-template>\n<ng-template #yubikeyTemplate></ng-template>\n<ng-template #u2fTemplate></ng-template>\n","import { Component } from '@angular/core';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { ExportService } from 'jslib/abstractions/export.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from 'jslib/angular/components/export.component';\n\n@Component({\n    selector: 'app-export',\n    templateUrl: 'export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService, window);\n    }\n\n    protected saved() {\n        super.saved();\n        this.masterPassword = null;\n        this.platformUtilsService.showToast('success', null, this.i18nService.t('exportSuccess'));\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" ngNativeValidate [appApiAction]=\"formPromise\">\n    <div class=\"page-header\">\n        <h1>{{'exportVault' | i18n}}</h1>\n    </div>\n    <p>{{'exportMasterPassword' | i18n}}</p>\n    <app-callout type=\"warning\">{{'exportWarningDesc' | i18n}}</app-callout>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"format\">{{'fileFormat' | i18n}}</label>\n            <select class=\"form-control\" id=\"format\" name=\"Format\" [(ngModel)]=\"format\">\n                <option value=\"json\">.json</option>\n                <option value=\"csv\">.csv</option>\n            </select>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n            <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\"\n                [(ngModel)]=\"masterPassword\" required appInputVerbatim>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'exportVault' | i18n}}</span>\n    </button>\n</form>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: 'exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    exposedPasswordMap = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected auditService: AuditService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    ngOnInit() {\n        this.checkAccess();\n    }\n\n    async load() {\n        if (await this.checkAccess()) {\n            super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const exposedPasswordCiphers: CipherView[] = [];\n        const promises: Promise<void>[] = [];\n        allCiphers.forEach((c) => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '') {\n                return;\n            }\n            const promise = this.auditService.passwordLeaked(c.login.password).then((exposedCount) => {\n                if (exposedCount > 0) {\n                    exposedPasswordCiphers.push(c);\n                    this.exposedPasswordMap.set(c.id, exposedCount);\n                }\n            });\n            promises.push(promise);\n        });\n        await Promise.all(promises);\n        this.ciphers = exposedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'exposedPasswordsReport' | i18n}}</h1>\n</div>\n<p>{{'exposedPasswordsReportDesc' | i18n}}</p>\n<button type=\"button\" class=\"btn btn-primary btn-submit\" [disabled]=\"loading\" (click)=\"load()\">\n    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span>{{'checkExposedPasswords' | i18n}}</span>\n</button>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noExposedPasswords' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'exposedPasswordsFound' | i18n}}\">\n            {{'exposedPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"c.hasAttachments\">\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\n                                aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\n                        </ng-container>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                    <td class=\"text-right\">\n                        <span class=\"badge badge-warning\">\n                            {{'exposedXTimes' | i18n : (exposedPasswordMap.get(c.id) | number)}}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { TotpService } from 'jslib/abstractions/totp.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherCreateRequest } from 'jslib/models/request/cipherCreateRequest';\nimport { CipherRequest } from 'jslib/models/request/cipherRequest';\n\nimport { AddEditComponent as BaseAddEditComponent } from '../../vault/add-edit.component';\n\n@Component({\n    selector: 'app-org-vault-add-edit',\n    templateUrl: '../../vault/add-edit.component.html',\n})\nexport class AddEditComponent extends BaseAddEditComponent {\n    organization: Organization;\n    originalCipher: Cipher = null;\n\n    constructor(cipherService: CipherService, folderService: FolderService,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService,\n        auditService: AuditService, stateService: StateService,\n        userService: UserService, collectionService: CollectionService,\n        totpService: TotpService, passwordGenerationService: PasswordGenerationService,\n        private apiService: ApiService, messagingService: MessagingService,\n        eventService: EventService) {\n        super(cipherService, folderService, i18nService, platformUtilsService, auditService, stateService,\n            userService, collectionService, totpService, passwordGenerationService, messagingService,\n            eventService);\n    }\n\n    protected allowOwnershipAssignment() {\n        if (this.ownershipOptions != null && this.ownershipOptions.length > 1) {\n            if (this.organization != null) {\n                return this.cloneMode && this.organization.isAdmin;\n            } else {\n                return !this.editMode || this.cloneMode;\n            }\n        }\n        return false;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.isAdmin) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        const data = new CipherData(response);\n        this.originalCipher = new Cipher(data);\n        return new Cipher(data);\n    }\n\n    protected encryptCipher() {\n        if (!this.organization.isAdmin) {\n            return super.encryptCipher();\n        }\n        return this.cipherService.encrypt(this.cipher, null, this.originalCipher);\n    }\n\n    protected async saveCipher(cipher: Cipher) {\n        if (!this.organization.isAdmin || cipher.organizationId == null) {\n            return super.saveCipher(cipher);\n        }\n        if (this.editMode && !this.cloneMode) {\n            const request = new CipherRequest(cipher);\n            return this.apiService.putCipherAdmin(this.cipherId, request);\n        } else {\n            const request = new CipherCreateRequest(cipher);\n            return this.apiService.postCipherAdmin(request);\n        }\n    }\n\n    protected async deleteCipher() {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipher();\n        }\n        return this.cipher.isDeleted ? this.apiService.deleteCipherAdmin(this.cipherId)\n            : this.apiService.putDeleteCipherAdmin(this.cipherId);\n    }\n}\n","import { View } from './view';\n\nimport { Password } from '../domain/password';\n\nexport class PasswordHistoryView implements View {\n    password: string = null;\n    lastUsedDate: Date = null;\n\n    constructor(ph?: Password) {\n        if (!ph) {\n            return;\n        }\n\n        this.lastUsedDate = ph.lastUsedDate;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    forwardRef,\n    HostListener,\n    Input,\n    Renderer2,\n} from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NgControl,\n    NG_VALUE_ACCESSOR,\n} from '@angular/forms';\n\n// ref: https://juristr.com/blog/2018/02/ng-true-value-directive/\n@Directive({\n    selector: 'input[type=checkbox][appTrueFalseValue]',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => TrueFalseValueDirective),\n            multi: true,\n        },\n    ],\n})\nexport class TrueFalseValueDirective implements ControlValueAccessor {\n    @Input() trueValue = true;\n    @Input() falseValue = false;\n\n    constructor(private elementRef: ElementRef, private renderer: Renderer2) { }\n\n    @HostListener('change', ['$event'])\n    onHostChange(ev: any) {\n        this.propagateChange(ev.target.checked ? this.trueValue : this.falseValue);\n    }\n\n    writeValue(obj: any): void {\n        if (obj === this.trueValue) {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', true);\n        } else {\n            this.renderer.setProperty(this.elementRef.nativeElement, 'checked', false);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void { /* nothing */ }\n\n    setDisabledState?(isDisabled: boolean): void { /* nothing */ }\n\n    private propagateChange = (_: any) => { /* nothing */ };\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { ImportOption, ImportService } from 'jslib/abstractions/import.service';\n\n@Component({\n    selector: 'app-import',\n    templateUrl: 'import.component.html',\n})\nexport class ImportComponent implements OnInit {\n    featuredImportOptions: ImportOption[];\n    importOptions: ImportOption[];\n    format: string = null;\n    fileContents: string;\n    formPromise: Promise<Error>;\n\n    protected organizationId: string = null;\n    protected successNavigate: any[] = ['vault'];\n\n    constructor(protected i18nService: I18nService, protected analytics: Angulartics2,\n        protected toasterService: ToasterService, protected importService: ImportService,\n        protected router: Router) { }\n\n    ngOnInit() {\n        this.setImportOptions();\n        this.importOptions.sort((a, b) => {\n            if (a.name == null && b.name != null) {\n                return -1;\n            }\n            if (a.name != null && b.name == null) {\n                return 1;\n            }\n            if (a.name == null && b.name == null) {\n                return 0;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(a.name, b.name) :\n                a.name.localeCompare(b.name);\n        });\n    }\n\n    async submit() {\n        const importer = this.importService.getImporter(this.format, this.organizationId != null);\n        if (importer === null) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFormat'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if ((files == null || files.length === 0) && (this.fileContents == null || this.fileContents === '')) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        let fileContents = this.fileContents;\n        if (files != null && files.length > 0) {\n            try {\n                const content = await this.getFileContents(files[0]);\n                if (content != null) {\n                    fileContents = content;\n                }\n            } catch { }\n        }\n\n        if (fileContents == null || fileContents === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.importService.import(importer, fileContents, this.organizationId);\n            const error = await this.formPromise;\n            if (error != null) {\n                this.error(error);\n                return;\n            }\n            this.analytics.eventTrack.next({\n                action: 'Imported Data',\n                properties: { label: this.format },\n            });\n            this.toasterService.popAsync('success', null, this.i18nService.t('importSuccess'));\n            this.router.navigate(this.successNavigate);\n        } catch { }\n    }\n\n    getFormatInstructionTitle() {\n        if (this.format == null) {\n            return null;\n        }\n\n        const results = this.featuredImportOptions.concat(this.importOptions).filter((o) => o.id === this.format);\n        if (results.length > 0) {\n            return this.i18nService.t('instructionsFor', results[0].name);\n        }\n        return null;\n    }\n\n    protected setImportOptions() {\n        this.featuredImportOptions = [{\n            id: null,\n            name: '-- ' + this.i18nService.t('select') + ' --',\n        }, ...this.importService.featuredImportOptions];\n        this.importOptions = this.importService.regularImportOptions;\n    }\n\n    private error(error: Error) {\n        this.analytics.eventTrack.next({\n            action: 'Import Data Failed',\n            properties: { label: this.format },\n        });\n        this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'), error.message);\n    }\n\n    private getFileContents(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsText(file, 'utf-8');\n            reader.onload = (evt) => {\n                if (this.format === 'lastpasscsv' && file.type === 'text/html') {\n                    const parser = new DOMParser();\n                    const doc = parser.parseFromString((evt.target as any).result, 'text/html');\n                    const pre = doc.querySelector('pre');\n                    if (pre != null) {\n                        resolve(pre.textContent);\n                        return;\n                    }\n                    reject();\n                    return;\n                }\n\n                resolve((evt.target as any).result);\n            };\n            reader.onerror = () => {\n                reject();\n            };\n        });\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'importData' | i18n}}</h1>\n</div>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"type\">1. {{'selectFormat' | i18n}}</label>\n                <select id=\"type\" name=\"Format\" [(ngModel)]=\"format\" class=\"form-control\" required>\n                    <option *ngFor=\"let o of featuredImportOptions\" [ngValue]=\"o.id\">{{o.name}}</option>\n                    <ng-container *ngIf=\"importOptions && importOptions.length\">\n                        <option value=\"-\" disabled></option>\n                        <option *ngFor=\"let o of importOptions\" [ngValue]=\"o.id\">{{o.name}}</option>\n                    </ng-container>\n                </select>\n            </div>\n        </div>\n    </div>\n    <app-callout type=\"info\" title=\"{{getFormatInstructionTitle()}}\" *ngIf=\"format\">\n        <ng-container *ngIf=\"format === 'bitwardencsv' || format === 'bitwardenjson'\">\n            See detailed instructions on our help site at\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/export-your-data/\">\n                https://help.bitwarden.com/article/export-your-data/</a>\n        </ng-container>\n        <ng-container *ngIf=\"format === 'lastpasscsv'\">\n            See detailed instructions on our help site at\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-lastpass/\">\n                https://help.bitwarden.com/article/import-from-lastpass/</a>\n        </ng-container>\n        <ng-container *ngIf=\"format === 'keepassxcsv'\">\n            Using the KeePassX desktop application, navigate to \"Database\" &rarr; \"Export to CSV file\" and save the CSV\n            file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'aviracsv'\">\n            In the Avira web vault, go to \"Settings\" &rarr; \"My Data\" &rarr; \"Export data\" and save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'blurcsv'\">\n            In the Blur web vault, click your username at the top and go to \"Settings\" &rarr; \"Export Data\", then click\n            \"Export CSV\"\n            for your \"Accounts\".\n        </ng-container>\n        <ng-container *ngIf=\"format === 'safeincloudxml'\">\n            Using the SaveInCloud desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As XML\" and save the\n            XML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'padlockcsv'\">\n            Using the Padlock desktop application, click the hamburger icon in the top left corner and navigate to\n            \"Settings\" &rarr;\n            \"Export\" button and save the file \"As CSV\".\n        </ng-container>\n        <ng-container *ngIf=\"format === 'keepass2xml'\">\n            Using the KeePass 2 desktop application, navigate to \"File\" &rarr; \"Export\" and select the \"KeePass XML\n            (2.x)\" option.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'upmcsv'\">\n            Using the Universal Password Manager desktop application, navigate to \"Database\" &rarr; \"Export\" and save\n            the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'saferpasscsv'\">\n            Using the SaferPass browser extension, click the hamburger icon in the top left corner and navigate to\n            \"Settings\". Click the \"Export accounts\" button to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'meldiumcsv'\">\n            Using the Meldium web vault, navigate to \"Settings\". Locate the \"Export data\" function and click \"Show me my\n            data\" to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'keepercsv'\">\n            Log into the Keeper web vault (keepersecurity.com/vault). Navigate to \"Backup\" (top right) and find the\n            \"Export to .csv File\" option. Click \"Export Now\" to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'chromecsv' || format === 'operacsv' || format === 'vivaldicsv'\">\n            <span *ngIf=\"format !== 'chromecsv'\">\n                The process is exactly the same as importing from Google Chrome.\n            </span>\n            See detailed instructions on our help site at\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-chrome/\">\n                https://help.bitwarden.com/article/import-from-chrome/</a>\n        </ng-container>\n        <ng-container *ngIf=\"format === 'firefoxcsv'\">\n            Use the\n            <a target=\"_blank\" rel=\"noopener\"\n                href=\"https://github.com/kspearrin/ff-password-exporter/blob/master/README.md#ff-password-exporter\">\n                FF Password Exporter</a> application to export your passwords to a CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === '1password1pif' || format === '1passwordwincsv'\">\n            See detailed instructions on our help site at\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://help.bitwarden.com/article/import-from-1password/\">\n                https://help.bitwarden.com/article/import-from-1password/</a>.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passworddragonxml'\">\n            Using the Password Dragon desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"To XML\". In the\n            dialog that pops up select \"All Rows\" and check all fields. Click the \"Export\" button and save the XML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'enpasscsv'\">\n            Using the Enpass desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"As CSV\". Select \"OK\" to the\n            warning alert and save the CSV file. Note that the importer only supports files exported while Enpass is set\n            to the English language, so adjust your settings accordingly.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'enpassjson'\">\n            Using the Enpass 6 desktop application, click the menu button and navigate to \"File\" &rarr; \"Export\".\n            Select the \".json\" file format option and save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'pwsafexml'\">\n            Using the Password Safe desktop application, navigate to \"File\" &rarr; \"Export To\" &rarr; \"XML format...\"\n            and save the XML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'dashlanejson'\">\n            Using the Dashlane desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"Unsecured archive\n            (readable) in JSON format\" and save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'msecurecsv'\">\n            Using the mSecure desktop application, navigate to \"File\" &rarr; \"Export\" &rarr; \"CSV File...\" and save the\n            CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'stickypasswordxml'\">\n            Using the Sticky Password desktop application, navigate to \"Menu\" (top right) &rarr; \"Export\" &rarr; \"Export\n            all\". Select the unencrypted format XML option and save the XML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'truekeycsv'\">\n            Using the True Key desktop application, click the gear icon (top right) and then navigate to \"App Settings\".\n            Click the \"Export\" button, enter your password and save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'clipperzhtml'\">\n            Log into the Clipperz web application (clipperz.is/app). Click the hamburger menu icon in the top right to\n            expand the navigation bar. Navigate to \"Data\" &rarr; \"Export\". Click the \"download HTML+JSON\" button to save\n            the HTML file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'roboformcsv'\">\n            Using the RoboForm Editor desktop application, navigate to \"RoboForm\" (top left) &rarr; \"Options\" &rarr;\n            \"Account &amp; Data\" and click the \"Export\" button. Select all of your data, change the \"Format\" to \"CSV\n            file\" and then click the \"Export\" button to save the CSV file. Note: RoboForm only allows you to export\n            Logins. Other items will not be exported.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passboltcsv'\">\n            Log into the Passbolt web vault and navigate to the \"Passwords\" listing. Select all of the passwords you\n            would like to export and click the \"Export\" button at the top of the listing. Choose the \"csv (lastpass)\"\n            export format and click the \"Export\" button.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'ascendocsv'\">\n            Using the Ascendo DataVault desktop application, navigate to \"Tools\" &rarr; \"Export\". In the dialog that\n            pops up, select the \"All Items (DVX, CSV)\" option. Click the \"Ok\" button to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passwordbossjson'\">\n            Using the Password Boss desktop application, navigate to \"File\" &rarr; \"Export data\" &rarr; \"Password Boss\n            JSON - not encrypted\" and save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'zohovaultcsv'\">\n            Log into the Zoho web vault (vault.zoho.com). Navigate to \"Tools\" &rarr; \"Export Secrets\". Select \"All\n            Secrets\" and click the \"Zoho Vault Format CSV\" button. Highlight and copy the data from the textarea. Open a\n            text editor like Notepad and paste the data. Save the data from the text editor as\n            <code>zoho_export.csv</code>.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'splashidcsv'\">\n            Using the SplashID Safe desktop application, click on the SplashID blue lock logo in the top right corner.\n            Navigate to \"Export\" &rarr; \"Export as CSV\" and save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passkeepcsv'\">\n            Using the PassKeep mobile app, navigate to \"Backup/Restore\". Locate the \"CSV Backup/Restore\" section and\n            click \"Backup to CSV\" to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'gnomejson'\">\n            Make sure you have python-keyring and python-gnomekeyring installed. Save the\n            <a target=\"_blank\" rel=\"noopener\" href=\"https://bit.ly/2GpOMTg\">GNOME Keyring Import/Export</a> python\n            script to your desktop as <code>pw_helper.py</code>. Open terminal and run\n            <code>chmod +rx Desktop/pw_helper.py</code> and then\n            <code>python Desktop/pw_helper.py export Desktop/my_passwords.json</code>. Then upload the resulting\n            <code>my_passwords.json</code> file here to Bitwarden.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passwordagentcsv'\">\n            Using the Password Agent desktop application navigate to \"File\" &rarr; \"Export\", select the \"Fields to\n            export\" button and check all of the fields, change the \"Output format\" to \"CSV\", and then click the \"Start\"\n            button to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passpackcsv'\">\n            Log into the Passpack website vault and navigate to \"Settings\" &rarr; \"Export\", then click the \"Download\"\n            button to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passmanjson'\">\n            Open your Passman vault and click on \"Settings\" in the bottom left corner. In the \"Settings\" window switch\n            to the \"Export credentials\" tab and choose \"JSON\" as the export type. Enter your vault's passphrase and\n            click the \"Export\" button to save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'avastcsv'\">\n            Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select\n            the \"Export\" button for the \"Export to CSV file\" option to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'avastjson'\">\n            Open the Avast Passwords desktop application and navigate to \"Settings\" &rarr; \"Import/export data\". Select\n            the \"Export\" button for the \"Export to JSON file\" option to save the JSON file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'fsecurefsk'\">\n            Open the F-Secure KEY desktop application and navigate to \"Settings\" &rarr; \"Export Passwords\". Select the\n            \"Export\" button, enter your master password, and save the FSK file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'kasperskytxt'\">\n            Open the Kaspersky Password Manager desktop application and navigate to \"Settings\" &rarr; \"Import/Export\".\n            Locate the \"Export to text file\" section and select the \"Export\" button to save the TXT file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'remembearcsv'\">\n            Open the RememBear desktop application and navigate to \"Settings\" &rarr; \"Account\" &rarr; \"Export\".\n            Enter your master password and select the \"Export Anyway\" button to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'passwordwallettxt'\">\n            Open the PasswordWallet desktop application and navigate to \"File\" &rarr; \"Export\" &rarr;\n            \"Visible entries to text file\". Enter your password and select the \"Ok\" button to save the TXT file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'mykicsv'\">\n            Open the Myki desktop browser extension and navigate to \"Advanced\" &rarr; \"Export Accounts\" and then scan\n            the QR code with your mobile device. Various CSV files will then be saved to your computer's\n            downloads folder.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'securesafecsv'\">\n            Export your SecureSafe password safe to a CSV file with a comma delimiter.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'logmeoncecsv'\">\n            Open the LogMeOnce browser extension, then navigate to \"Open Menu\" &rarr; \"Export To\" and\n            select \"CSV File\" to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'blackberrycsv'\">\n            Open the BlackBerry Password Keeper application, then navigate to \"Settings\" &rarr; \"Import/Export\".\n            Select \"Export Passwords\" and follow the instructions on screen to save the unencrypted CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'buttercupcsv'\">\n            Open the Buttercup desktop application and unlock your vault. Right click on your vault's icon and\n            select \"Export\" to save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'codebookcsv'\">\n            Open the Codebook desktop application and log in. Navigate to \"File\" &rarr; \"Export all\", then click\n            \"Yes\" on the dialog and save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'encryptrcsv'\">\n            Open the newest version of the Encryptr desktop application and allow all of your data to sync.\n            Once syncing of your data is complete, the download icon in the top right corner will turn pink. Click\n            the download icon and save the CSV file.\n        </ng-container>\n        <ng-container *ngIf=\"format === 'yoticsv'\">\n            From the Yoti browser extension, click on \"Settings\", then \"Export Saved Logins\" and save the CSV file.\n        </ng-container>\n    </app-callout>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"file\">2. {{'selectImportFile' | i18n}}</label>\n                <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\">\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"fileContents\">{{'orCopyPasteFileContents' | i18n}}</label>\n        <textarea id=\"fileContents\" class=\"form-control\" name=\"FileContents\" [(ngModel)]=\"fileContents\"></textarea>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'importData' | i18n}}</span>\n    </button>\n</form>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: 'inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends CipherReportComponent implements OnInit {\n    services = new Map<string, string>();\n    cipherDocs = new Map<string, string>();\n\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        try {\n            await this.load2fa();\n        } catch { }\n        if (this.services.size > 0) {\n            const allCiphers = await this.getAllCiphers();\n            const inactive2faCiphers: CipherView[] = [];\n            const promises: Promise<void>[] = [];\n            const docs = new Map<string, string>();\n            allCiphers.forEach((c) => {\n                if (c.type !== CipherType.Login || (c.login.totp != null && c.login.totp !== '') || !c.login.hasUris) {\n                    return;\n                }\n                for (let i = 0; i < c.login.uris.length; i++) {\n                    const u = c.login.uris[i];\n                    if (u.uri != null && u.uri !== '') {\n                        const hostname = Utils.getHostname(u.uri);\n                        if (hostname != null && this.services.has(hostname)) {\n                            if (this.services.get(hostname) != null) {\n                                docs.set(c.id, this.services.get(hostname));\n                            }\n                            inactive2faCiphers.push(c);\n                            break;\n                        }\n                    }\n                }\n            });\n            await Promise.all(promises);\n            this.ciphers = inactive2faCiphers;\n            this.cipherDocs = docs;\n        }\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    private async load2fa() {\n        if (this.services.size > 0) {\n            return;\n        }\n        const response = await fetch(new Request('https://twofactorauth.org/api/v1/data.json'));\n        if (response.status !== 200) {\n            throw new Error();\n        }\n        const responseJson = await response.json();\n        for (const categoryName in responseJson) {\n            if (responseJson.hasOwnProperty(categoryName)) {\n                const category = responseJson[categoryName];\n                for (const serviceName in category) {\n                    if (category.hasOwnProperty(serviceName)) {\n                        const service = category[serviceName];\n                        if (service.tfa && service.software && service.url != null) {\n                            const hostname = Utils.getHostname(service.url);\n                            if (hostname != null) {\n                                this.services.set(hostname, service.doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","<div class=\"page-header\">\n    <h1>\n        {{'inactive2faReport' | i18n}}\n        <small *ngIf=\"hasLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </small>\n    </h1>\n</div>\n<p>{{'inactive2faReportDesc' | i18n}}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noInactive2fa' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'inactive2faFound' | i18n}}\">\n            {{'inactive2faFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"c.hasAttachments\">\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\n                                aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\n                        </ng-container>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                    <td class=\"text-right\">\n                        <a class=\"badge badge-primary\" href=\"{{cipherDocs.get(c.id)}}\" target=\"_blank\" rel=\"noopener\"\n                            *ngIf=\"cipherDocs.has(c.id)\">\n                            {{'instructions' | i18n}}</a>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: 'reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    passwordUseMap: Map<string, number>;\n\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const ciphersWithPasswords: CipherView[] = [];\n        this.passwordUseMap = new Map<string, number>();\n        allCiphers.forEach((c) => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '') {\n                return;\n            }\n            ciphersWithPasswords.push(c);\n            if (this.passwordUseMap.has(c.login.password)) {\n                this.passwordUseMap.set(c.login.password, this.passwordUseMap.get(c.login.password) + 1);\n            } else {\n                this.passwordUseMap.set(c.login.password, 1);\n            }\n        });\n        const reusedPasswordCiphers = ciphersWithPasswords.filter((c) =>\n            this.passwordUseMap.has(c.login.password) && this.passwordUseMap.get(c.login.password) > 1);\n        this.ciphers = reusedPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","<div class=\"page-header\">\n    <h1>\n        {{'reusedPasswordsReport' | i18n}}\n        <small *ngIf=\"hasLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </small>\n    </h1>\n</div>\n<p>{{'reusedPasswordsReportDesc' | i18n}}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noReusedPasswords' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'reusedPasswordsFound' | i18n}}\">\n            {{'reusedPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"c.hasAttachments\">\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\n                                aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\n                        </ng-container>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                    <td class=\"text-right\">\n                        <span class=\"badge badge-warning\">\n                            {{'reusedXTimes' | i18n : passwordUseMap.get(c.login.password)}}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: 'unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends CipherReportComponent implements OnInit {\n    constructor(protected cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const unsecuredCiphers = allCiphers.filter((c) => {\n            if (c.type !== CipherType.Login || !c.login.hasUris) {\n                return false;\n            }\n            return c.login.uris.some((u) => u.uri != null && u.uri.indexOf('http://') === 0);\n        });\n        this.ciphers = unsecuredCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n}\n","<div class=\"page-header\">\n    <h1>\n        {{'unsecuredWebsitesReport' | i18n}}\n        <small *ngIf=\"hasLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </small>\n    </h1>\n</div>\n<p>{{'unsecuredWebsitesReportDesc' | i18n}}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noUnsecuredWebsites' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'unsecuredWebsitesFound' | i18n}}\">\n            {{'unsecuredWebsitesFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"c.hasAttachments\">\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\n                                aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\n                        </ng-container>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherReportComponent } from './cipher-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: 'weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends CipherReportComponent implements OnInit {\n    passwordStrengthMap = new Map<string, [string, string]>();\n\n    private passwordStrengthCache = new Map<string, number>();\n\n    constructor(protected cipherService: CipherService, protected passwordGenerationService: PasswordGenerationService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService) {\n        super(componentFactoryResolver, userService, messagingService, true);\n    }\n\n    async ngOnInit() {\n        if (await this.checkAccess()) {\n            await super.load();\n        }\n    }\n\n    async setCiphers() {\n        const allCiphers = await this.getAllCiphers();\n        const weakPasswordCiphers: CipherView[] = [];\n        allCiphers.forEach((c) => {\n            if (c.type !== CipherType.Login || c.login.password == null || c.login.password === '') {\n                return;\n            }\n            const hasUsername = c.login.username != null && c.login.username.trim() !== '';\n            const cacheKey = c.login.password + '_____' + (hasUsername ? c.login.username : '');\n            if (!this.passwordStrengthCache.has(cacheKey)) {\n                let userInput: string[] = [];\n                if (hasUsername) {\n                    const atPosition = c.login.username.indexOf('@');\n                    if (atPosition > -1) {\n                        userInput = userInput.concat(\n                            c.login.username.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/))\n                            .filter((i) => i.length >= 3);\n                    } else {\n                        userInput = c.login.username.trim().toLowerCase().split(/[^A-Za-z0-9]/)\n                            .filter((i) => i.length >= 3);\n                    }\n                }\n                const result = this.passwordGenerationService.passwordStrength(c.login.password,\n                    userInput.length > 0 ? userInput : null);\n                this.passwordStrengthCache.set(cacheKey, result.score);\n            }\n            const score = this.passwordStrengthCache.get(cacheKey);\n            if (score != null && score <= 2) {\n                this.passwordStrengthMap.set(c.id, this.scoreKey(score));\n                weakPasswordCiphers.push(c);\n            }\n        });\n        this.ciphers = weakPasswordCiphers;\n    }\n\n    protected getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllDecrypted();\n    }\n\n    private scoreKey(score: number): [string, string] {\n        switch (score) {\n            case 4:\n                return ['strong', 'success'];\n            case 3:\n                return ['good', 'primary'];\n            case 2:\n                return ['weak', 'warning'];\n            default:\n                return ['veryWeak', 'danger'];\n        }\n    }\n}\n","<div class=\"page-header\">\n    <h1>\n        {{'weakPasswordsReport' | i18n}}\n        <small *ngIf=\"hasLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </small>\n    </h1>\n</div>\n<p>{{'weakPasswordsReportDesc' | i18n}}</p>\n<div *ngIf=\"!hasLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</div>\n<div class=\"mt-4\" *ngIf=\"hasLoaded\">\n    <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!ciphers.length\">\n        {{'noWeakPasswords' | i18n}}\n    </app-callout>\n    <ng-container *ngIf=\"ciphers.length\">\n        <app-callout type=\"danger\" title=\"{{'weakPasswordsFound' | i18n}}\">\n            {{'weakPasswordsFoundDesc' | i18n : (ciphers.length | number)}}\n        </app-callout>\n        <table class=\"table table-hover table-list table-ciphers\">\n            <tbody>\n                <tr *ngFor=\"let c of ciphers\">\n                    <td class=\"table-list-icon\">\n                        <app-vault-icon [cipher]=\"c\"></app-vault-icon>\n                    </td>\n                    <td class=\"reduced-lh wrap\">\n                        <a href=\"#\" appStopClick (click)=\"selectCipher(c)\" title=\"{{'editItem' | i18n}}\">{{c.name}}</a>\n                        <ng-container *ngIf=\"!organization && c.organizationId\">\n                            <i class=\"fa fa-share-alt\" appStopProp title=\"{{'shared' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'shared' | i18n}}</span>\n                        </ng-container>\n                        <ng-container *ngIf=\"c.hasAttachments\">\n                            <i class=\"fa fa-paperclip\" appStopProp title=\"{{'attachments' | i18n}}\"\n                                aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'attachments' | i18n}}</span>\n                        </ng-container>\n                        <br>\n                        <small>{{c.subTitle}}</small>\n                    </td>\n                    <td class=\"text-right\">\n                        <span class=\"badge badge-{{passwordStrengthMap.get(c.id)[1]}}\">\n                            {{passwordStrengthMap.get(c.id)[0] | i18n}}\n                        </span>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</div>\n<ng-template #cipherAddEdit></ng-template>\n","import { Component } from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { AttachmentView } from 'jslib/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from 'jslib/angular/components/attachments.component';\n\n@Component({\n    selector: 'app-vault-attachments',\n    templateUrl: 'attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService, window);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.showFixOldAttachments(attachment)) {\n            await this.reuploadCipherAttachment(attachment, false);\n        }\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.cipher.organizationId == null;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"attachmentsTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"attachmentsTitle\">\n                    {{'attachments' | i18n}}\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <table class=\"table table-hover table-list\" *ngIf=\"cipher && cipher.hasAttachments\">\n                    <tbody>\n                        <tr *ngFor=\"let a of cipher.attachments\">\n                            <td class=\"table-list-icon\">\n                                <i class=\"fa fa-fw fa-lg fa-file-o\" *ngIf=\"!a.downloading\" aria-hidden=\"true\"></i>\n                                <i class=\"fa fa-spinner fa-lg fa-fw fa-spin\" *ngIf=\"a.downloading\"\n                                    aria-hidden=\"true\"></i>\n                            </td>\n                            <td>\n                                <div class=\"d-flex\">\n                                    <a href=\"#\" appStopClick (click)=\"download(a)\">{{a.fileName}}</a>\n                                    <div *ngIf=\"showFixOldAttachments(a)\" class=\"ml-2\">\n                                        <a href=\"https://help.bitwarden.com/article/attachments/#fixing-old-attachments\"\n                                            target=\"_blank\" rel=\"noopener\">\n                                            <i class=\"fa fa-exclamation-triangle text-warning\"\n                                                title=\"{{'attachmentFixDesc' | i18n}}\" aria-hidden=\"true\"></i>\n                                            <span class=\"sr-only\">{{'attachmentFixDesc' | i18n}}</span></a>\n                                        <button type=\"button\" class=\"btn btn-outline-primary btn-sm m-0 py-0 px-2\"\n                                            (click)=\"reupload(a)\" #reuploadBtn [appApiAction]=\"reuploadPromises[a.id]\"\n                                            [disabled]=\"reuploadBtn.loading\">{{'fix' | i18n}}</button>\n                                    </div>\n                                </div>\n                                <small>{{a.sizeName}}</small>\n                            </td>\n                            <td class=\"table-list-options\">\n                                <button class=\"btn btn-outline-danger\" type=\"button\" appStopClick\n                                    appA11yTitle=\"{{'delete' | i18n}}\" (click)=\"delete(a)\" #deleteBtn\n                                    [appApiAction]=\"deletePromises[a.id]\" [disabled]=\"deleteBtn.loading\">\n                                    <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\"\n                                        aria-hidden=\"true\"></i>\n                                    <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                                        title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                                </button>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                <h3>{{'newAttachment' | i18n}}</h3>\n                <label for=\"file\" class=\"sr-only\">{{'file' | i18n}}</label>\n                <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\n                <small class=\"form-text text-muted\">{{'maxFileSize' | i18n}}</small>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close'\n                    | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CiphersComponent as BaseCiphersComponent } from '../../vault/ciphers.component';\n\n@Component({\n    selector: 'app-org-vault-ciphers',\n    templateUrl: '../../vault/ciphers.component.html',\n})\nexport class CiphersComponent extends BaseCiphersComponent {\n    @Output() onEventsClicked = new EventEmitter<CipherView>();\n\n    organization: Organization;\n    accessEvents = false;\n\n    protected allCiphers: CipherView[] = [];\n\n    constructor(searchService: SearchService, analytics: Angulartics2,\n        toasterService: ToasterService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, cipherService: CipherService,\n        private apiService: ApiService, eventService: EventService) {\n        super(searchService, analytics, toasterService, i18nService, platformUtilsService,\n            cipherService, eventService);\n    }\n\n    async load(filter: (cipher: CipherView) => boolean = null) {\n        if (!this.organization.isAdmin) {\n            await super.load(filter, this.deleted);\n            return;\n        }\n        this.accessEvents = this.organization.useEvents;\n        this.allCiphers = await this.cipherService.getAllFromApiForOrganization(this.organization.id);\n        this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        if (this.organization.isAdmin) {\n            await super.applyFilter(filter);\n        } else {\n            const f = (c: CipherView) => c.organizationId === this.organization.id && (filter == null || filter(c));\n            await super.applyFilter(f);\n        }\n    }\n\n    async search(timeout: number = null) {\n        if (!this.organization.isAdmin) {\n            return super.search(timeout);\n        }\n        this.searchPending = false;\n        let filteredCiphers = this.allCiphers;\n\n        if (this.searchText == null || this.searchText.trim().length < 2) {\n            this.ciphers = filteredCiphers.filter((c) => {\n                if (c.isDeleted !== this.deleted) {\n                    return false;\n                }\n                return this.filter == null || this.filter(c);\n            });\n        } else {\n            if (this.filter != null) {\n                filteredCiphers = filteredCiphers.filter(this.filter);\n            }\n            this.ciphers = this.searchService.searchCiphersBasic(filteredCiphers, this.searchText, this.deleted);\n        }\n        await this.resetPaging();\n    }\n\n    events(c: CipherView) {\n        this.onEventsClicked.emit(c);\n    }\n\n    protected deleteCipher(id: string) {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipher(id, this.deleted);\n        }\n        return this.deleted ? this.apiService.deleteCipherAdmin(id) : this.apiService.putDeleteCipherAdmin(id);\n    }\n\n    protected showFixOldAttachments(c: CipherView) {\n        return this.organization.isAdmin && c.hasOldAttachments;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from 'jslib/angular/components/collections.component';\n\n@Component({\n    selector: 'app-vault-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionsTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"collectionsTitle\">\n                    {{'collections' | i18n}}\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'collectionsDesc' | i18n}}</p>\n                <div class=\"d-flex\">\n                    <h3>{{'collections' | i18n}}</h3>\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"!collections || !collections.length\">\n                    {{'noCollectionsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                    <tbody>\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                            <td class=\"table-list-checkbox\">\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                    appStopProp>\n                            </td>\n                            <td>\n                                {{c.name}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { GroupingsComponent as BaseGroupingsComponent } from '../../vault/groupings.component';\n\n@Component({\n    selector: 'app-org-vault-groupings',\n    templateUrl: '../../vault/groupings.component.html',\n})\nexport class GroupingsComponent extends BaseGroupingsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, folderService: FolderService,\n        storageService: StorageService, userService: UserService,\n        private apiService: ApiService, private i18nService: I18nService) {\n        super(collectionService, folderService, storageService, userService);\n    }\n\n    async loadCollections() {\n        if (!this.organization.isAdmin) {\n            await super.loadCollections(this.organization.id);\n            return;\n        }\n\n        const collections = await this.apiService.getCollections(this.organization.id);\n        if (collections != null && collections.data != null && collections.data.length) {\n            const collectionDomains = collections.data.map((r) =>\n                new Collection(new CollectionData(r as CollectionDetailsResponse)));\n            this.collections = await this.collectionService.decryptMany(collectionDomains);\n        } else {\n            this.collections = [];\n        }\n\n        const unassignedCollection = new CollectionView();\n        unassignedCollection.name = this.i18nService.t('unassigned');\n        unassignedCollection.id = 'unassigned';\n        unassignedCollection.organizationId = this.organization.id;\n        unassignedCollection.readOnly = true;\n        this.collections.push(unassignedCollection);\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    collapse(grouping: CollectionView) {\n        super.collapse(grouping, 'org_');\n    }\n\n    isCollapsed(grouping: CollectionView) {\n        return super.isCollapsed(grouping, 'org_');\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { BulkDeleteComponent } from './bulk-delete.component';\nimport { BulkMoveComponent } from './bulk-move.component';\nimport { BulkRestoreComponent } from './bulk-restore.component';\nimport { BulkShareComponent } from './bulk-share.component';\nimport { CiphersComponent } from './ciphers.component';\n\n@Component({\n    selector: 'app-vault-bulk-actions',\n    templateUrl: 'bulk-actions.component.html',\n})\nexport class BulkActionsComponent {\n    @Input() ciphersComponent: CiphersComponent;\n    @Input() modal: ModalComponent;\n    @Input() deleted: boolean;\n    @Input() organization: Organization;\n\n    @ViewChild('bulkDeleteTemplate', { read: ViewContainerRef, static: true }) bulkDeleteModalRef: ViewContainerRef;\n    @ViewChild('bulkRestoreTemplate', { read: ViewContainerRef, static: true }) bulkRestoreModalRef: ViewContainerRef;\n    @ViewChild('bulkMoveTemplate', { read: ViewContainerRef, static: true }) bulkMoveModalRef: ViewContainerRef;\n    @ViewChild('bulkShareTemplate', { read: ViewContainerRef, static: true }) bulkShareModalRef: ViewContainerRef;\n\n    constructor(private toasterService: ToasterService,\n        private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver) { }\n\n    bulkDelete() {\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkDeleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkDeleteComponent>(BulkDeleteComponent, this.bulkDeleteModalRef);\n\n        childComponent.permanent = this.deleted;\n        childComponent.cipherIds = selectedIds;\n        childComponent.organization = this.organization;\n        childComponent.onDeleted.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    bulkRestore() {\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkRestoreModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkRestoreComponent>(BulkRestoreComponent, this.bulkRestoreModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onRestored.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    bulkShare() {\n        const selectedCiphers = this.ciphersComponent.getSelected();\n        if (selectedCiphers.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkShareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkShareComponent>(BulkShareComponent, this.bulkShareModalRef);\n\n        childComponent.ciphers = selectedCiphers;\n        childComponent.onShared.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    bulkMove() {\n        const selectedIds = this.ciphersComponent.getSelectedIds();\n        if (selectedIds.length === 0) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nothingSelected'));\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.bulkMoveModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<BulkMoveComponent>(BulkMoveComponent, this.bulkMoveModalRef);\n\n        childComponent.cipherIds = selectedIds;\n        childComponent.onMoved.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    selectAll(select: boolean) {\n        this.ciphersComponent.selectAll(select);\n    }\n}\n","<div class=\"dropdown mr-2\" appListDropdown>\n    <button class=\"btn btn-sm btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"bulkActionsButton\"\n        data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\n        <i class=\"fa fa-cog\" aria-hidden=\"true\"></i>\n    </button>\n    <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"bulkActionsButton\">\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkMove()\" *ngIf=\"!deleted && !organization\">\n            <i class=\"fa fa-fw fa-share\" aria-hidden=\"true\"></i>\n            {{'moveSelected' | i18n}}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"bulkShare()\" *ngIf=\"!deleted && !organization\">\n            <i class=\"fa fa-fw fa-share-alt\" aria-hidden=\"true\"></i>\n            {{'shareSelected' | i18n}}\n        </button>\n        <button class=\"dropdown-item\" (click)=\"bulkRestore()\" *ngIf=\"deleted && !organization\">\n            <i class=\"fa fa-fw fa-undo\" aria-hidden=\"true\"></i>\n            {{'restoreSelected' | i18n}}\n        </button>\n        <button class=\"dropdown-item text-danger\" (click)=\"bulkDelete()\">\n            <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\n            {{(deleted ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}}\n        </button>\n        <div class=\"dropdown-divider\"></div>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(true)\">\n            <i class=\"fa fa-fw fa-check-square-o\" aria-hidden=\"true\"></i>\n            {{'selectAll' | i18n}}\n        </button>\n        <button class=\"dropdown-item\" appStopClick (click)=\"selectAll(false)\">\n            <i class=\"fa fa-fw fa-minus-square-o\" aria-hidden=\"true\"></i>\n            {{'unselectAll' | i18n}}\n        </button>\n    </div>\n</div>\n\n<ng-template #bulkDeleteTemplate></ng-template>\n<ng-template #bulkRestoreTemplate></ng-template>\n<ng-template #bulkMoveTemplate></ng-template>\n<ng-template #bulkShareTemplate></ng-template>\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherWithIdRequest extends CipherRequest {\n    id: string;\n\n    constructor(cipher: Cipher) {\n        super(cipher);\n        this.id = cipher.id;\n    }\n}\n","import { Folder } from '../domain/folder';\n\nexport class FolderRequest {\n    name: string;\n\n    constructor(folder: Folder) {\n        this.name = folder.name ? folder.name.encryptedString : null;\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\n@Directive({\n    selector: '[appSelectCopy]',\n})\nexport class SelectCopyDirective {\n    constructor(private el: ElementRef, private platformUtilsService: PlatformUtilsService) { }\n\n    @HostListener('copy') onCopy() {\n        if (window == null) {\n            return;\n        }\n        let copyText = '';\n        const selection = window.getSelection();\n        for (let i = 0; i < selection.rangeCount; i++) {\n            const range = selection.getRangeAt(i);\n            const text = range.toString();\n\n            // The selection should only contain one line of text. In some cases however, the\n            // selection contains newlines and space characters from the indentation of following\n            // sibling nodes. To avoid copying passwords containing trailing newlines and spaces\n            // that aren't part of the password, the selection has to be trimmed.\n            let stringEndPos = text.length;\n            const newLinePos = text.search(/(?:\\r\\n|\\r|\\n)/);\n            if (newLinePos > -1) {\n                const otherPart = text.substr(newLinePos).trim();\n                if (otherPart === '') {\n                    stringEndPos = newLinePos;\n                }\n            }\n            copyText += text.substring(0, stringEndPos);\n        }\n        this.platformUtilsService.copyToClipboard(copyText, { window: window });\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\n/**\n * A pipe that sanitizes HTML and highlights numbers and special characters (in different colors each).\n */\n@Pipe({ name: 'colorPassword' })\nexport class ColorPasswordPipe implements PipeTransform {\n    transform(password: string) {\n        let colorizedPassword = '';\n        for (let i = 0; i < password.length; i++) {\n            let character = password[i];\n            let isSpecial = false;\n            // Sanitize HTML first.\n            switch (character) {\n                case '&':\n                    character = '&amp;';\n                    isSpecial = true;\n                    break;\n                case '<':\n                    character = '&lt;';\n                    isSpecial = true;\n                    break;\n                case '>':\n                    character = '&gt;';\n                    isSpecial = true;\n                    break;\n                case ' ':\n                    character = '&nbsp;';\n                    isSpecial = true;\n                    break;\n                default:\n                    break;\n            }\n            let type = 'letter';\n            if (isSpecial || character.match(/[^\\w ]/)) {\n                type = 'special';\n            } else if (character.match(/\\d/)) {\n                type = 'number';\n            }\n            colorizedPassword += '<span class=\"password-' + type + '\">' + character + '</span>';\n        }\n        return colorizedPassword;\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileOrganizationResponse } from './profileOrganizationResponse';\n\nexport class ProfileResponse extends BaseResponse {\n    id: string;\n    name: string;\n    email: string;\n    emailVerified: boolean;\n    masterPasswordHint: string;\n    premium: boolean;\n    culture: string;\n    twoFactorEnabled: boolean;\n    key: string;\n    privateKey: string;\n    securityStamp: string;\n    organizations: ProfileOrganizationResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.emailVerified = this.getResponseProperty('EmailVerified');\n        this.masterPasswordHint = this.getResponseProperty('MasterPasswordHint');\n        this.premium = this.getResponseProperty('Premium');\n        this.culture = this.getResponseProperty('Culture');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n        this.key = this.getResponseProperty('Key');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.securityStamp = this.getResponseProperty('SecurityStamp');\n\n        const organizations = this.getResponseProperty('Organizations');\n        if (organizations != null) {\n            this.organizations = organizations.map((o: any) => new ProfileOrganizationResponse(o));\n        }\n    }\n}\n","import { EnvironmentService } from './environment.service';\n\nexport abstract class NotificationsService {\n    init: (environmentService: EnvironmentService) => Promise<void>;\n    updateConnection: (sync?: boolean) => Promise<void>;\n    reconnectFromActivity: () => Promise<void>;\n    disconnectFromInactivity: () => Promise<void>;\n}\n","export abstract class SettingsService {\n    clearCache: () => void;\n    getEquivalentDomains: () => Promise<any>;\n    setEquivalentDomains: (equivalentDomains: string[][]) => Promise<any>;\n    clear: (userId: string) => Promise<void>;\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 490;","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-frontend-layout',\n    templateUrl: 'frontend-layout.component.html',\n})\nexport class FrontendLayoutComponent implements OnInit, OnDestroy {\n    version: string;\n    year: string = '2015';\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.year = new Date().getFullYear().toString();\n        this.version = this.platformUtilsService.getApplicationVersion();\n        document.body.classList.add('layout_frontend');\n    }\n\n    ngOnDestroy() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<router-outlet></router-outlet>\n<div class=\"container my-5 text-muted text-center\">\n    &copy; {{year}}, Bitwarden Inc.\n    <br> {{'versionNumber' | i18n : version}}\n</div>\n","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nconst BroadcasterSubscriptionId = 'OrganizationLayoutComponent';\n\n@Component({\n    selector: 'app-organization-layout',\n    templateUrl: 'organization-layout.component.html',\n})\nexport class OrganizationLayoutComponent implements OnInit, OnDestroy {\n    organization: Organization;\n    enterpriseTokenPromise: Promise<any>;\n    private organizationId: string;\n    private enterpriseUrl: string;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone,\n        private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private environmentService: EnvironmentService) { }\n\n    ngOnInit() {\n        this.enterpriseUrl = 'https://portal.bitwarden.com';\n        if (this.environmentService.enterpriseUrl != null) {\n            this.enterpriseUrl = this.environmentService.enterpriseUrl;\n        } else if (this.environmentService.baseUrl != null) {\n            this.enterpriseUrl = this.environmentService.baseUrl + '/portal';\n        }\n\n        document.body.classList.remove('layout_frontend');\n        this.route.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n        });\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'updatedOrgLicense':\n                        await this.load();\n                        break;\n                }\n            });\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.organization = await this.userService.getOrganization(this.organizationId);\n    }\n\n    async goToEnterprisePortal() {\n        if (this.enterpriseTokenPromise != null) {\n            return;\n        }\n        try {\n            this.enterpriseTokenPromise = this.apiService.getEnterprisePortalSignInToken();\n            const token = await this.enterpriseTokenPromise;\n            if (token != null) {\n                const userId = await this.userService.getUserId();\n                this.platformUtilsService.launchUri(this.enterpriseUrl + '/login?userId=' + userId +\n                    '&token=' + (window as any).encodeURIComponent(token) + '&organizationId=' + this.organization.id);\n            }\n        } catch { }\n        this.enterpriseTokenPromise = null;\n    }\n}\n","<app-navbar></app-navbar>\n<div class=\"org-nav\" *ngIf=\"organization\">\n    <div class=\"container d-flex\">\n        <div class=\"d-flex flex-column\">\n            <div class=\"my-auto d-flex align-items-center pl-1\">\n                <app-avatar [data]=\"organization.name\" size=\"45\" [circle]=\"true\"></app-avatar>\n                <div class=\"org-name ml-3\">\n                    <span>{{organization.name}}</span>\n                    <small class=\"text-muted\">{{'organization' | i18n}}</small>\n                </div>\n                <div class=\"ml-3 card border-danger text-danger bg-transparent\" *ngIf=\"!organization.enabled\">\n                    <div class=\"card-body py-2\">\n                        <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n                        {{'organizationIsDisabled' | i18n}}\n                    </div>\n                </div>\n            </div>\n            <ul class=\"nav nav-tabs\" *ngIf=\"organization.isManager\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"vault\" routerLinkActive=\"active\">\n                        <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\n                        {{'vault' | i18n}}\n                    </a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"manage\" routerLinkActive=\"active\">\n                        <i class=\"fa fa-sliders\" aria-hidden=\"true\"></i>\n                        {{'manage' | i18n}}\n                    </a>\n                </li>\n                <li class=\"nav-item\" *ngIf=\"organization.isAdmin\">\n                    <a class=\"nav-link\" routerLink=\"tools\" routerLinkActive=\"active\">\n                        <i class=\"fa fa-wrench\" aria-hidden=\"true\"></i>\n                        {{'tools' | i18n}}\n                    </a>\n                </li>\n                <li class=\"nav-item\" *ngIf=\"organization.isOwner\">\n                    <a class=\"nav-link\" routerLink=\"settings\" routerLinkActive=\"active\">\n                        <i class=\"fa fa-cogs\" aria-hidden=\"true\"></i>\n                        {{'settings' | i18n}}\n                    </a>\n                </li>\n            </ul>\n        </div>\n        <div class=\"ml-auto d-flex align-items-center\">\n            <button class=\"btn btn-primary\" (click)=\"goToEnterprisePortal()\" #enterpriseBtn\n                [appApiAction]=\"enterpriseTokenPromise\" *ngIf=\"organization.useBusinessPortal\">\n                <i class=\"fa fa-bank fa-fw\" [hidden]=\"enterpriseBtn.loading\" aria-hidden=\"true\"></i>\n                <i class=\"fa fa-spinner fa-spin fa-fw\" [hidden]=\"!enterpriseBtn.loading\" title=\"{{'loading' | i18n}}\"\n                    aria-hidden=\"true\"></i>\n                {{'businessPortal' | i18n}} →\n            </button>\n        </div>\n    </div>\n</div>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\n@Component({\n    selector: 'app-user-layout',\n    templateUrl: 'user-layout.component.html',\n})\nexport class UserLayoutComponent implements OnInit {\n    ngOnInit() {\n        document.body.classList.remove('layout_frontend');\n    }\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n<app-footer></app-footer>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserAcceptRequest } from 'jslib/models/request/organizationUserAcceptRequest';\n\n@Component({\n    selector: 'app-accept-organization',\n    templateUrl: 'accept-organization.component.html',\n})\nexport class AcceptOrganizationComponent implements OnInit {\n    loading = true;\n    authed = false;\n    orgName: string;\n    email: string;\n    actionPromise: Promise<any>;\n\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService,\n        private stateService: StateService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            await this.stateService.remove('orgInvitation');\n            let error = qParams.organizationId == null || qParams.organizationUserId == null || qParams.token == null;\n            let errorMessage: string = null;\n            if (!error) {\n                this.authed = await this.userService.isAuthenticated();\n                if (this.authed) {\n                    const request = new OrganizationUserAcceptRequest();\n                    request.token = qParams.token;\n                    try {\n                        this.actionPromise = this.apiService.postOrganizationUserAccept(qParams.organizationId,\n                            qParams.organizationUserId, request);\n                        await this.actionPromise;\n                        const toast: Toast = {\n                            type: 'success',\n                            title: this.i18nService.t('inviteAccepted'),\n                            body: this.i18nService.t('inviteAcceptedDesc'),\n                            timeout: 10000,\n                        };\n                        this.toasterService.popAsync(toast);\n                        this.router.navigate(['/vault']);\n                    } catch (e) {\n                        error = true;\n                        errorMessage = e.message;\n                    }\n                } else {\n                    await this.stateService.save('orgInvitation', qParams);\n                    this.email = qParams.email;\n                    this.orgName = qParams.organizationName;\n                    if (this.orgName != null) {\n                        // Fix URL encoding of space issue with Angular\n                        this.orgName = this.orgName.replace(/\\+/g, ' ');\n                    }\n                }\n            }\n\n            if (error) {\n                const toast: Toast = {\n                    type: 'error',\n                    title: null,\n                    body: errorMessage != null ? this.i18nService.t('inviteAcceptFailedShort', errorMessage) :\n                        this.i18nService.t('inviteAcceptFailed'),\n                    timeout: 10000,\n                };\n                this.toasterService.popAsync(toast);\n                this.router.navigate(['/']);\n            }\n\n            this.loading = false;\n        });\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\" *ngIf=\"loading\">\n    <div>\n        <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\">\n        <p class=\"text-center\">\n            <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </p>\n    </div>\n</div>\n<div class=\"container\" *ngIf=\"!loading && !authed\">\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'joinOrganization' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <p class=\"text-center\">\n                        {{orgName}}\n                        <strong class=\"d-block mt-2\">{{email}}</strong>\n                    </p>\n                    <p>{{'joinOrganizationDesc' | i18n}}</p>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <a routerLink=\"/\" [queryParams]=\"{email: email}\" class=\"btn btn-primary btn-block\">\n                            {{'logIn' | i18n}}\n                        </a>\n                        <a routerLink=\"/register\" [queryParams]=\"{email: email}\"\n                            class=\"btn btn-primary btn-block ml-2 mt-0\">\n                            {{'createAccount' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { HintComponent as BaseHintComponent } from 'jslib/angular/components/hint.component';\n\n@Component({\n    selector: 'app-hint',\n    templateUrl: 'hint.component.html',\n})\nexport class HintComponent extends BaseHintComponent {\n    constructor(router: Router, i18nService: I18nService,\n        apiService: ApiService, platformUtilsService: PlatformUtilsService) {\n        super(router, i18nService, apiService, platformUtilsService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'passwordHint' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\n                        <small class=\"form-text text-muted\">{{'enterEmailToGetHint' | i18n}}</small>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span [hidden]=\"form.loading\">{{'submit' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { UserService } from 'jslib/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib/abstractions/vaultTimeout.service';\n\nimport { RouterService } from '../services/router.service';\n\nimport { LockComponent as BaseLockComponent } from 'jslib/angular/components/lock.component';\n\n@Component({\n    selector: 'app-lock',\n    templateUrl: 'lock.component.html',\n})\nexport class LockComponent extends BaseLockComponent {\n    constructor(router: Router, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, messagingService: MessagingService,\n        userService: UserService, cryptoService: CryptoService,\n        storageService: StorageService, vaultTimeoutService: VaultTimeoutService,\n        environmentService: EnvironmentService, private routerService: RouterService,\n        stateService: StateService, apiService: ApiService) {\n        super(router, i18nService, platformUtilsService, messagingService, userService, cryptoService,\n            storageService, vaultTimeoutService, environmentService, stateService, apiService);\n    }\n\n    async ngOnInit() {\n        await super.ngOnInit();\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            this.router.navigate(['/']);\n        } else if (await this.cryptoService.hasKey()) {\n            this.router.navigate(['vault']);\n        }\n\n        this.onSuccessfulSubmit = () => {\n            const previousUrl = this.routerService.getPreviousUrl();\n            if (previousUrl !== '/' && previousUrl.indexOf('lock') === -1) {\n                this.successRoute = previousUrl;\n            }\n            this.router.navigate([this.successRoute]);\n        };\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"text-center mb-4\">\n                <i class=\"fa fa-lock fa-4x text-muted\" aria-hidden=\"true\"></i>\n            </p>\n            <p class=\"lead text-center mx-4 mb-4\">{{'yourVaultIsLocked' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                        <div class=\"d-flex\">\n                            <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\"\n                                required appAutofocus appInputVerbatim>\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\"\n                                (click)=\"togglePassword()\">\n                                <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                            </button>\n                        </div>\n                        <small class=\"text-muted form-text\">\n                            {{'loggedInAsEmailOn' | i18n : email : webVaultHostname}}\n                        </small>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>\n                                <i class=\"fa fa-unlock-alt\" aria-hidden=\"true\"></i> {{'unlock' | i18n}}\n                            </span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\">\n                            {{'logOut' | i18n}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { LoginComponent as BaseLoginComponent } from 'jslib/angular/components/login.component';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: 'login.component.html',\n})\nexport class LoginComponent extends BaseLoginComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, private route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, environmentService: EnvironmentService,\n        passwordGenerationService: PasswordGenerationService, cryptoFunctionService: CryptoFunctionService) {\n        super(authService, router,\n            platformUtilsService, i18nService,\n            stateService, environmentService,\n            passwordGenerationService, cryptoFunctionService,\n            storageService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            await super.ngOnInit();\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async goAfterLogIn() {\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            this.router.navigate(['accept-organization'], { queryParams: invite });\n        } else {\n            const loginRedirect = await this.stateService.get<any>('loginRedirect');\n            if (loginRedirect != null) {\n                this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n                await this.stateService.remove('loginRedirect');\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\">\n            <p class=\"lead text-center mx-4 mb-4\">{{'loginOrCreateNewAccount' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            inputmode=\"email\" appInputVerbatim=\"false\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                        <div class=\"d-flex\">\n                            <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                name=\"MasterPassword\" class=\"text-monospace form-control\" [(ngModel)]=\"masterPassword\"\n                                required appInputVerbatim>\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\"\n                                (click)=\"togglePassword()\">\n                                <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                            </button>\n                        </div>\n                        <small class=\"form-text\">\n                            <a routerLink=\"/hint\">{{'getMasterPasswordHint' | i18n}}</a>\n                        </small>\n                    </div>\n                    <div class=\"form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"rememberEmail\" name=\"RememberEmail\"\n                            [(ngModel)]=\"rememberEmail\">\n                        <label class=\"form-check-label\" for=\"rememberEmail\">{{'rememberEmail' | i18n}}</label>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>\n                                <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}}\n                            </span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        </button>\n                        <a routerLink=\"/register\" [queryParams]=\"{email: email}\"\n                            class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i> {{'createAccount' | i18n}}\n                        </a>\n                    </div>\n                    <div class=\"d-flex\">\n                        <a routerLink=\"/sso\" class=\"btn btn-outline-secondary btn-block mt-2\">\n                            <i class=\"fa fa-bank\" aria-hidden=\"true\"></i> {{'enterpriseSingleSignOn' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { DeleteRecoverRequest } from 'jslib/models/request/deleteRecoverRequest';\n\n@Component({\n    selector: 'app-recover-delete',\n    templateUrl: 'recover-delete.component.html',\n})\nexport class RecoverDeleteComponent {\n    email: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService) {\n    }\n\n    async submit() {\n        try {\n            const request = new DeleteRecoverRequest();\n            request.email = this.email.trim().toLowerCase();\n            this.formPromise = this.apiService.postAccountRecoverDelete(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Started Delete Recovery' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deleteRecoverEmailSent'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <p>{{'deleteRecoverDesc' | i18n}}</p>\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>{{'submit' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { TwoFactorRecoveryRequest } from 'jslib/models/request/twoFactorRecoveryRequest';\n\n@Component({\n    selector: 'app-recover-two-factor',\n    templateUrl: 'recover-two-factor.component.html',\n})\nexport class RecoverTwoFactorComponent {\n    email: string;\n    masterPassword: string;\n    recoveryCode: string;\n    formPromise: Promise<any>;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private cryptoService: CryptoService,\n        private authService: AuthService) { }\n\n    async submit() {\n        try {\n            const request = new TwoFactorRecoveryRequest();\n            request.recoveryCode = this.recoveryCode.replace(/\\s/g, '').toLowerCase();\n            request.email = this.email.trim().toLowerCase();\n            const key = await this.authService.makePreloginKey(this.masterPassword, request.email);\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n            this.formPromise = this.apiService.postTwoFactorRecover(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Recovered 2FA' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('twoStepRecoverDisabled'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'recoverAccountTwoStep' | i18n}}</p>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <p>{{'recoverAccountTwoStepDesc' | i18n}}\n                        <a href=\"https://help.bitwarden.com/article/lost-two-step-device/\" target=\"_blank\"\n                            rel=\"noopener\">{{'learnMore' | i18n}}</a>\n                    </p>\n                    <div class=\"form-group\">\n                        <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                        <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\" required\n                            appAutofocus inputmode=\"email\" appInputVerbatim=\"false\">\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                        <input id=\"masterPassword\" type=\"password\" name=\"MasterPassword\" class=\"form-control\"\n                            [(ngModel)]=\"masterPassword\" required appInputVerbatim>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"recoveryCode\">{{'recoveryCodeTitle' | i18n}}</label>\n                        <input id=\"recoveryCode\" class=\"text-monospace form-control\" type=\"text\" name=\"RecoveryCode\"\n                            [(ngModel)]=\"recoveryCode\" required appInputVerbatim>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>{{'submit' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib/abstractions/policy.service';\nimport { StateService } from 'jslib/abstractions/state.service';\n\nimport { RegisterComponent as BaseRegisterComponent } from 'jslib/angular/components/register.component';\n\nimport { MasterPasswordPolicyOptions } from 'jslib/models/domain/masterPasswordPolicyOptions';\nimport { Policy } from 'jslib/models/domain/policy';\n\nimport { PolicyData } from 'jslib/models/data/policyData';\nimport { ReferenceEventRequest } from 'jslib/models/request/referenceEventRequest';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: 'register.component.html',\n})\nexport class RegisterComponent extends BaseRegisterComponent {\n    showCreateOrgMessage = false;\n    showTerms = true;\n    layout = '';\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    private policies: Policy[];\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, cryptoService: CryptoService,\n        apiService: ApiService, private route: ActivatedRoute,\n        stateService: StateService, platformUtilsService: PlatformUtilsService,\n        passwordGenerationService: PasswordGenerationService, private policyService: PolicyService) {\n        super(authService, router, i18nService, cryptoService, apiService, stateService, platformUtilsService,\n            passwordGenerationService);\n        this.showTerms = !platformUtilsService.isSelfHost();\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe((qParams) => {\n            this.referenceData = new ReferenceEventRequest();\n            if (qParams.email != null && qParams.email.indexOf('@') > -1) {\n                this.email = qParams.email;\n            }\n            if (qParams.premium != null) {\n                this.stateService.save('loginRedirect', { route: '/settings/premium' });\n            } else if (qParams.org != null) {\n                this.showCreateOrgMessage = true;\n                this.referenceData.flow = qParams.org;\n                this.stateService.save('loginRedirect',\n                    { route: '/settings/create-organization', qParams: { plan: qParams.org } });\n            }\n            if (qParams.layout != null) {\n                this.layout = this.referenceData.layout = qParams.layout;\n            }\n            if (qParams.reference != null) {\n                this.referenceData.id = qParams.reference;\n            } else {\n                this.referenceData.id = ('; ' + document.cookie).split('; reference=').pop().split(';').shift();\n            }\n            if (this.referenceData.id === '') {\n                this.referenceData.id = null;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            try {\n                const policies = await this.apiService.getPoliciesByToken(invite.organizationId, invite.token,\n                    invite.email, invite.organizationUserId);\n                if (policies.data != null) {\n                    const policiesData = policies.data.map((p) => new PolicyData(p));\n                    this.policies = policiesData.map((p) => new Policy(p));\n                }\n            } catch { }\n        }\n\n        if (this.policies != null) {\n            this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions(this.policies);\n        }\n    }\n\n    async submit() {\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(this.masterPasswordScore, this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        await super.submit();\n    }\n}\n","<div class=\"layout\" [ngClass]=\"['layout', layout]\">\n    <header class=\"header\" *ngIf=\"layout === 'enterprise2'\">\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-7\">\n                    <img alt=\"Bitwarden\" class=\"logo mb-2\" src=\"images/logo-horizontal-white.png\">\n                </div>\n            </div>\n        </div>\n    </header>\n    <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n        <div class=\"row\">\n            <div class=\"col-7\" *ngIf=\"layout\">\n                <div class=\"mt-5\">\n                    <div *ngIf=\"layout === 'enterprise2'\">\n                        <h2>Companies globally trust Bitwarden for password management.</h2>\n                        <p>Start your 7-day free trial!</p>\n                        <p class=\"highlight\">Quickly deploy your <b>organization</b></p>\n                        <p>Use Bitwarden across all platforms</p>\n                        <p>Collaborate and share securely</p>\n                        <figure>\n                            <figcaption>\n                                <cite>\n                                    <img src=\"images/wired-logo.png\" alt=\"Wired\">\n                                </cite>\n                            </figcaption>\n                            <blockquote>\n                                \"Bitwarden has become a popular choice among open-source software advocates. After using it for a\n                                few months, I can see why.\" - February 2020\n                            </blockquote>\n                        </figure>\n                    </div>\n                    <div *ngIf=\"layout === 'enterprise3'\">\n                        <p>Enterprise 3 layout</p>\n                    </div>\n                    <div *ngIf=\"layout === 'enterprise4'\">\n                        <p>Enterprise 4 layout</p>\n                    </div>\n                </div>\n            </div>\n            <div [ngClass]=\"{'col-5': layout, 'col-12': !layout}\">\n                <div class=\"row justify-content-md-center mt-5\">\n                    <div [ngClass]=\"{'col-5': !layout, 'col-12': layout}\">\n                        <p class=\"lead text-center mb-4\" *ngIf=\"!layout\">{{'createAccount' | i18n}}</p>\n                        <div class=\"card d-block\">\n                            <div class=\"card-body\">\n                                <app-callout title=\"{{'createOrganizationStep1' | i18n}}\" type=\"info\" icon=\"fa-thumb-tack\"\n                                    *ngIf=\"showCreateOrgMessage\">\n                                    {{'createOrganizationCreatePersonalAccount' | i18n}}\n                                </app-callout>\n                                <div class=\"form-group\">\n                                    <label for=\"email\">{{'emailAddress' | i18n}}</label>\n                                    <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"email\"\n                                        required [appAutofocus]=\"email === ''\" inputmode=\"email\" appInputVerbatim=\"false\">\n                                    <small class=\"form-text text-muted\">{{'emailAddressDesc' | i18n}}</small>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"name\">{{'yourName' | i18n}}</label>\n                                    <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\"\n                                        [appAutofocus]=\"email !== ''\">\n                                    <small class=\"form-text text-muted\">{{'yourNameDesc' | i18n}}</small>\n                                </div>\n                                <div class=\"form-group\">\n                                    <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\">\n                                        {{'masterPasswordPolicyInEffect' | i18n}}\n                                        <ul class=\"mb-0\">\n                                            <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n                                                {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}}\n                                            </li>\n                                            <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n                                                {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}}\n                                            </li>\n                                            <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n                                                {{'policyInEffectUppercase' | i18n}}</li>\n                                            <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n                                                {{'policyInEffectLowercase' | i18n}}</li>\n                                            <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n                                                {{'policyInEffectNumbers' | i18n}}</li>\n                                            <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n                                                {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li>\n                                        </ul>\n                                    </app-callout>\n                                    <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                                    <div class=\"d-flex\">\n                                        <div class=\"w-100\">\n                                            <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                                name=\"MasterPassword\" class=\"text-monospace form-control mb-1\"\n                                                [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required\n                                                appInputVerbatim>\n                                            <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                                            </app-password-strength>\n                                        </div>\n                                        <div>\n                                            <button type=\"button\" class=\"ml-1 btn btn-link\"\n                                                appA11yTitle=\"{{'toggleVisibility' | i18n}}\"\n                                                (click)=\"togglePassword(false)\">\n                                                <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                                            </button>\n                                            <div class=\"progress-bar invisible\"></div>\n                                        </div>\n                                    </div>\n                                    <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label>\n                                    <div class=\"d-flex\">\n                                        <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                            name=\"MasterPasswordRetype\" class=\"text-monospace form-control\"\n                                            [(ngModel)]=\"confirmMasterPassword\" required appInputVerbatim>\n                                        <button type=\"button\" class=\"ml-1 btn btn-link\"\n                                            appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(true)\">\n                                            <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                                [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                                        </button>\n                                    </div>\n                                </div>\n                                <div class=\"form-group\">\n                                    <label for=\"hint\">{{'masterPassHint' | i18n}}</label>\n                                    <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\">\n                                    <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small>\n                                </div>\n                                <hr>\n                                <div class=\"d-flex mb-2\">\n                                    <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\"\n                                        [disabled]=\"form.loading\">\n                                        <span>{{'submit' | i18n}}</span>\n                                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\"\n                                            aria-hidden=\"true\"></i>\n                                    </button>\n                                    <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                                        {{'cancel' | i18n}}\n                                    </a>\n                                </div>\n                                <small class=\"text-muted\" *ngIf=\"showTerms\">\n                                    {{'submitAgreePolicies' | i18n}}\n                                    <a href=\"https://bitwarden.com/terms/\" target=\"_blank\"\n                                        rel=\"noopener\">{{'termsOfService' | i18n}}</a>,\n                                    <a href=\"https://bitwarden.com/privacy/\" target=\"_blank\"\n                                        rel=\"noopener\">{{'privacyPolicy' | i18n}}</a>\n                                </small>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>\n","import { PolicyData } from '../data/policyData';\n\nimport Domain from './domainBase';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class Policy extends Domain {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(obj?: PolicyData) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.id = obj.id;\n        this.organizationId = obj.organizationId;\n        this.type = obj.type;\n        this.data = obj.data;\n        this.enabled = obj.enabled;\n    }\n}\n","import { PolicyResponse } from '../response/policyResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyData {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: PolicyResponse) {\n        this.id = response.id;\n        this.organizationId = response.organizationId;\n        this.type = response.type;\n        this.data = response.data;\n        this.enabled = response.enabled;\n    }\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib/abstractions/policy.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport {\n    SetPasswordComponent as BaseSetPasswordComponent,\n} from 'jslib/angular/components/set-password.component';\n\n@Component({\n    selector: 'app-set-password',\n    templateUrl: 'set-password.component.html',\n})\nexport class SetPasswordComponent extends BaseSetPasswordComponent {\n    constructor(apiService: ApiService, i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, router: Router,\n        syncService: SyncService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService, router, apiService, syncService);\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'setMasterPassword' | i18n}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body text-center\" *ngIf=\"syncLoading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    {{'loading' | i18n}}\n                </div>\n                <div class=\"card-body\" *ngIf=\"!syncLoading\">\n                    <app-callout type=\"info\">{{'ssoCompleteRegistration' | i18n}}</app-callout>\n                    <div class=\"form-group\">\n                        <app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\">\n                            {{'masterPasswordPolicyInEffect' | i18n}}\n                            <ul class=\"mb-0\">\n                                <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n                                    {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}}\n                                </li>\n                                <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n                                    {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}}\n                                </li>\n                                <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">\n                                    {{'policyInEffectUppercase' | i18n}}</li>\n                                <li *ngIf=\"enforcedPolicyOptions?.requireLower\">\n                                    {{'policyInEffectLowercase' | i18n}}</li>\n                                <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">\n                                    {{'policyInEffectNumbers' | i18n}}</li>\n                                <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">\n                                    {{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li>\n                            </ul>\n                        </app-callout>\n                        <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                        <div class=\"d-flex\">\n                            <div class=\"w-100\">\n                                <input id=\"masterPassword\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                    name=\"MasterPasswordHash\" class=\"text-monospace form-control mb-1\"\n                                    [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required\n                                    appInputVerbatim>\n                                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\">\n                                </app-password-strength>\n                            </div>\n                            <div>\n                                <button type=\"button\" class=\"ml-1 btn btn-link\"\n                                    appA11yTitle=\"{{'toggleVisibility' | i18n}}\" (click)=\"togglePassword(false)\">\n                                    <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                        [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                                </button>\n                                <div class=\"progress-bar invisible\"></div>\n                            </div>\n                        </div>\n                        <small class=\"form-text text-muted\">{{'masterPassDesc' | i18n}}</small>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"masterPasswordRetype\">{{'reTypeMasterPass' | i18n}}</label>\n                        <div class=\"d-flex\">\n                            <input id=\"masterPasswordRetype\" type=\"{{showPassword ? 'text' : 'password'}}\"\n                                name=\"MasterPasswordRetype\" class=\"text-monospace form-control\"\n                                [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim>\n                            <button type=\"button\" class=\"ml-1 btn btn-link\" appA11yTitle=\"{{'toggleVisibility' | i18n}}\"\n                                (click)=\"togglePassword(true)\">\n                                <i class=\"fa fa-lg\" aria-hidden=\"true\"\n                                    [ngClass]=\"{'fa-eye': !showPassword, 'fa-eye-slash': showPassword}\"></i>\n                            </button>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"hint\">{{'masterPassHint' | i18n}}</label>\n                        <input id=\"hint\" class=\"form-control\" type=\"text\" name=\"Hint\" [(ngModel)]=\"hint\">\n                        <small class=\"form-text text-muted\">{{'masterPassHintDesc' | i18n}}</small>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span>{{'submit' | i18n}}</span>\n                        </button>\n                        <button type=\"button\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\" (click)=\"logOut()\">\n                            {{'logOut' | i18n}}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import { OnInit } from '@angular/core';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { PolicyService } from '../../abstractions/policy.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { CipherString } from '../../models/domain/cipherString';\nimport { MasterPasswordPolicyOptions } from '../../models/domain/masterPasswordPolicyOptions';\nimport { SymmetricCryptoKey } from '../../models/domain/symmetricCryptoKey';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class ChangePasswordComponent implements OnInit {\n    masterPassword: string;\n    masterPasswordRetype: string;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    enforcedPolicyOptions: MasterPasswordPolicyOptions;\n\n    protected kdf: KdfType;\n    protected kdfIterations: number;\n\n    private masterPasswordStrengthTimeout: any;\n    private email: string;\n\n    constructor(protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected messagingService: MessagingService, protected userService: UserService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected policyService: PolicyService) { }\n\n    async ngOnInit() {\n        this.email = await this.userService.getEmail();\n        this.enforcedPolicyOptions = await this.policyService.getMasterPasswordPolicyOptions();\n    }\n\n    getPasswordScoreAlertDisplay() {\n        if (this.enforcedPolicyOptions == null) {\n            return '';\n        }\n\n        let str: string;\n        switch (this.enforcedPolicyOptions.minComplexity) {\n            case 4:\n                str = this.i18nService.t('strong');\n                break;\n            case 3:\n                str = this.i18nService.t('good');\n                break;\n            default:\n                str = this.i18nService.t('weak');\n                break;\n        }\n        return str + ' (' + this.enforcedPolicyOptions.minComplexity + ')';\n    }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.masterPassword !== this.masterPasswordRetype) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n\n        if (this.enforcedPolicyOptions != null &&\n            !this.policyService.evaluateMasterPassword(\n                strengthResult.score,\n                this.masterPassword,\n                this.enforcedPolicyOptions)) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPasswordPolicyRequirementsNotMet'));\n            return;\n        }\n\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return;\n            }\n        }\n\n        if (!await this.setupSubmitActions()) {\n            return;\n        }\n\n        const email = await this.userService.getEmail();\n        if (this.kdf == null) {\n            this.kdf = await this.userService.getKdf();\n        }\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.userService.getKdfIterations();\n        }\n        const key = await this.cryptoService.makeKey(this.masterPassword, email.trim().toLowerCase(),\n            this.kdf, this.kdfIterations);\n        const masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n        let encKey: [SymmetricCryptoKey, CipherString] = null;\n        const existingEncKey = await this.cryptoService.getEncKey();\n        if (existingEncKey == null) {\n            encKey = await this.cryptoService.makeEncKey(key);\n        } else {\n            encKey = await this.cryptoService.remakeEncKey(key);\n        }\n\n        await this.performSubmitActions(masterPasswordHash, key, encKey);\n    }\n\n    async setupSubmitActions(): Promise<boolean> {\n        // Override in sub-class\n        // Can be used for additional validation and/or other processes the should occur before changing passwords\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, CipherString]) {\n        // Override in sub-class\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        return userInput;\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { SsoComponent as BaseSsoComponent } from 'jslib/angular/components/sso.component';\n\nconst IdentifierStorageKey = 'ssoOrgIdentifier';\n\n@Component({\n    selector: 'app-sso',\n    templateUrl: 'sso.component.html',\n})\nexport class SsoComponent extends BaseSsoComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, route: ActivatedRoute,\n        storageService: StorageService, stateService: StateService,\n        platformUtilsService: PlatformUtilsService, apiService: ApiService,\n        cryptoFunctionService: CryptoFunctionService,\n        passwordGenerationService: PasswordGenerationService) {\n        super(authService, router, i18nService, route, storageService, stateService, platformUtilsService,\n            apiService, cryptoFunctionService, passwordGenerationService);\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngOnInit() {\n        super.ngOnInit();\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n            if (qParams.identifier != null) {\n                this.identifier = qParams.identifier;\n            } else {\n                const storedIdentifier = await this.storageService.get<string>(IdentifierStorageKey);\n                if (storedIdentifier != null) {\n                    this.identifier = storedIdentifier;\n                }\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async submit() {\n        await this.storageService.save(IdentifierStorageKey, this.identifier);\n        super.submit();\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" class=\"container\" [appApiAction]=\"initiateSsoFormPromise\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <img src=\"images/logo-dark@2x.png\" class=\"logo mb-2\" alt=\"Bitwarden\">\n            <div class=\"card d-block mt-4\">\n                <div class=\"card-body\" *ngIf=\"loggingIn\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    {{'loading' | i18n}}\n                </div>\n                <div class=\"card-body\" *ngIf=\"!loggingIn\">\n                    <p>{{'ssoLogInWithOrgIdentifier' | i18n}}</p>\n                    <div class=\"form-group\">\n                        <label for=\"identifier\">{{'organizationIdentifier' | i18n}}</label>\n                        <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\"\n                            [(ngModel)]=\"identifier\" required appAutofocus>\n                    </div>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>\n                                <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'logIn' | i18n}}\n                            </span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { AuthService } from '../../abstractions/auth.service';\nimport { CryptoFunctionService } from '../../abstractions/cryptoFunction.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { StorageService } from '../../abstractions/storage.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nimport { Utils } from '../../misc/utils';\n\nimport { AuthResult } from '../../models/domain/authResult';\n\nexport class SsoComponent {\n    identifier: string;\n    loggingIn = false;\n\n    formPromise: Promise<AuthResult>;\n    initiateSsoFormPromise: Promise<any>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n    onSuccessfulLoginChangePasswordNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'lock';\n    protected changePasswordRoute = 'set-password';\n    protected clientId: string;\n    protected redirectUri: string;\n    protected state: string;\n    protected codeChallenge: string;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected route: ActivatedRoute,\n        protected storageService: StorageService, protected stateService: StateService,\n        protected platformUtilsService: PlatformUtilsService, protected apiService: ApiService,\n        protected cryptoFunctionService: CryptoFunctionService,\n        protected passwordGenerationService: PasswordGenerationService) { }\n\n    async ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n            if (qParams.code != null && qParams.state != null) {\n                const codeVerifier = await this.storageService.get<string>(ConstantsService.ssoCodeVerifierKey);\n                const state = await this.storageService.get<string>(ConstantsService.ssoStateKey);\n                await this.storageService.remove(ConstantsService.ssoCodeVerifierKey);\n                await this.storageService.remove(ConstantsService.ssoStateKey);\n                if (qParams.code != null && codeVerifier != null && state != null && state === qParams.state) {\n                    await this.logIn(qParams.code, codeVerifier);\n                }\n            } else if (qParams.clientId != null && qParams.redirectUri != null && qParams.state != null &&\n                qParams.codeChallenge != null) {\n                this.redirectUri = qParams.redirectUri;\n                this.state = qParams.state;\n                this.codeChallenge = qParams.codeChallenge;\n                this.clientId = qParams.clientId;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    async submit(returnUri?: string, includeUserIdentifier?: boolean) {\n        this.initiateSsoFormPromise = this.preValidate();\n        if (await this.initiateSsoFormPromise) {\n            const authorizeUrl = await this.buildAuthorizeUrl(returnUri, includeUserIdentifier);\n            this.platformUtilsService.launchUri(authorizeUrl, { sameWindow: true });\n        }\n    }\n\n    async preValidate(): Promise<boolean> {\n        if (this.identifier == null || this.identifier === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('ssoValidationFailed'),\n                this.i18nService.t('ssoIdentifierRequired'));\n            return false;\n        }\n        return await this.apiService.preValidateSso(this.identifier);\n    }\n\n    protected async buildAuthorizeUrl(returnUri?: string, includeUserIdentifier?: boolean): Promise<string> {\n        let codeChallenge = this.codeChallenge;\n        let state = this.state;\n\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n\n        if (codeChallenge == null) {\n            const codeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n            const codeVerifierHash = await this.cryptoFunctionService.hash(codeVerifier, 'sha256');\n            codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n            await this.storageService.save(ConstantsService.ssoCodeVerifierKey, codeVerifier);\n        }\n\n        if (state == null) {\n            state = await this.passwordGenerationService.generatePassword(passwordOptions);\n            if (returnUri) {\n                state += `_returnUri='${returnUri}'`;\n            }\n\n            await this.storageService.save(ConstantsService.ssoStateKey, state);\n        }\n\n        let authorizeUrl = this.apiService.identityBaseUrl + '/connect/authorize?' +\n            'client_id=' + this.clientId + '&redirect_uri=' + encodeURIComponent(this.redirectUri) + '&' +\n            'response_type=code&scope=api offline_access&' +\n            'state=' + state + '&code_challenge=' + codeChallenge + '&' +\n            'code_challenge_method=S256&response_mode=query&' +\n            'domain_hint=' + encodeURIComponent(this.identifier);\n\n        if (includeUserIdentifier) {\n            const userIdentifier = await this.apiService.getSsoUserIdentifier();\n            authorizeUrl += `&user_identifier=${encodeURIComponent(userIdentifier)}`;\n        }\n\n        return authorizeUrl;\n    }\n\n    private async logIn(code: string, codeVerifier: string) {\n        this.loggingIn = true;\n        try {\n            this.formPromise = this.authService.logInSso(code, codeVerifier, this.redirectUri);\n            const response = await this.formPromise;\n            if (response.twoFactor) {\n                this.platformUtilsService.eventTrack('SSO Logged In To Two-step');\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute], {\n                        queryParams: {\n                            resetMasterPassword: response.resetMasterPassword,\n                        },\n                    });\n                }\n            } else if (response.resetMasterPassword) {\n                this.platformUtilsService.eventTrack('SSO - routing to complete registration');\n                if (this.onSuccessfulLoginChangePasswordNavigate != null) {\n                    this.onSuccessfulLoginChangePasswordNavigate();\n                } else {\n                    this.router.navigate([this.changePasswordRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                this.platformUtilsService.eventTrack('SSO Logged In');\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n        this.loggingIn = false;\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { TwoFactorOptionsComponent } from './two-factor-options.component';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { EnvironmentService } from 'jslib/abstractions/environment.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { TwoFactorComponent as BaseTwoFactorComponent } from 'jslib/angular/components/two-factor.component';\n\n@Component({\n    selector: 'app-two-factor',\n    templateUrl: 'two-factor.component.html',\n})\nexport class TwoFactorComponent extends BaseTwoFactorComponent {\n    @ViewChild('twoFactorOptions', { read: ViewContainerRef, static: true }) twoFactorOptionsModal: ViewContainerRef;\n\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, apiService: ApiService,\n        platformUtilsService: PlatformUtilsService, stateService: StateService,\n        environmentService: EnvironmentService, private componentFactoryResolver: ComponentFactoryResolver,\n        storageService: StorageService) {\n        super(authService, router, i18nService, apiService, platformUtilsService, window, environmentService,\n            stateService, storageService);\n        this.onSuccessfulLoginNavigate = this.goAfterLogIn;\n    }\n\n    anotherMethod() {\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        const modal = this.twoFactorOptionsModal.createComponent(factory).instance;\n        const childComponent = modal.show<TwoFactorOptionsComponent>(TwoFactorOptionsComponent,\n            this.twoFactorOptionsModal);\n\n        childComponent.onProviderSelected.subscribe(async (provider: TwoFactorProviderType) => {\n            modal.close();\n            this.selectedProviderType = provider;\n            await this.init();\n        });\n        childComponent.onRecoverSelected.subscribe(() => {\n            modal.close();\n        });\n    }\n\n    async goAfterLogIn() {\n        const invite = await this.stateService.get<any>('orgInvitation');\n        if (invite != null) {\n            this.router.navigate(['accept-organization'], { queryParams: invite });\n        } else {\n            const loginRedirect = await this.stateService.get<any>('loginRedirect');\n            if (loginRedirect != null) {\n                this.router.navigate([loginRedirect.route], { queryParams: loginRedirect.qParams });\n                await this.stateService.remove('loginRedirect');\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate autocomplete=\"off\">\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\"\n            [ngClass]=\"{'col-9': selectedProviderType === providerType.Duo || selectedProviderType === providerType.OrganizationDuo}\">\n            <p class=\"lead text-center mb-4\">{{title}}</p>\n            <div class=\"card d-block\">\n                <div class=\"card-body\">\n                    <ng-container\n                        *ngIf=\"selectedProviderType === providerType.Email || selectedProviderType === providerType.Authenticator\">\n                        <p *ngIf=\"selectedProviderType === providerType.Authenticator\">\n                            {{'enterVerificationCodeApp' | i18n}}</p>\n                        <p *ngIf=\"selectedProviderType === providerType.Email\">\n                            {{'enterVerificationCodeEmail' | i18n : twoFactorEmail}}\n                        </p>\n                        <div class=\"form-group\">\n                            <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label>\n                            <input id=\"code\" type=\"text\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\" required\n                                appAutofocus inputmode=\"tel\" appInputVerbatim>\n                            <small class=\"form-text\" *ngIf=\"selectedProviderType === providerType.Email\">\n                                <a href=\"#\" appStopClick (click)=\"sendEmail(true)\" [appApiAction]=\"emailPromise\"\n                                    *ngIf=\"selectedProviderType === providerType.Email\">\n                                    {{'sendVerificationCodeEmailAgain' | i18n}}\n                                </a>\n                            </small>\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"selectedProviderType === providerType.Yubikey\">\n                        <p class=\"text-center\">{{'insertYubiKey' | i18n}}</p>\n                        <img src=\"images/yubikey.jpg\" class=\"rounded img-fluid mb-3\" alt=\"\">\n                        <div class=\"form-group\">\n                            <label for=\"code\" class=\"sr-only\">{{'verificationCode' | i18n}}</label>\n                            <input id=\"code\" type=\"password\" name=\"Code\" class=\"form-control\" [(ngModel)]=\"token\"\n                                required appAutofocus appInputVerbatim autocomplete=\"new-password\">\n                        </div>\n                    </ng-container>\n                    <ng-container *ngIf=\"selectedProviderType === providerType.U2f\">\n                        <p class=\"text-center\" *ngIf=\"!u2fReady\">\n                            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"\n                                aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n                        </p>\n                        <ng-container *ngIf=\"u2fReady\">\n                            <p class=\"text-center\">{{'insertU2f' | i18n}}</p>\n                            <img src=\"images/u2fkey.jpg\" alt=\"\" class=\"rounded img-fluid mb-3\">\n                        </ng-container>\n                    </ng-container>\n                    <ng-container *ngIf=\"selectedProviderType === providerType.Duo ||\n                        selectedProviderType === providerType.OrganizationDuo\">\n                        <div id=\"duo-frame\" class=\"mb-3\">\n                            <iframe id=\"duo_iframe\"></iframe>\n                        </div>\n                    </ng-container>\n                    <i class=\"fa fa-spinner text-muted fa-spin pull-right\" title=\"{{'loading' | i18n}}\"\n                        *ngIf=\"form.loading && selectedProviderType === providerType.U2f\" aria-hidden=\"true\"></i>\n                    <div class=\"form-check\" *ngIf=\"selectedProviderType != null\">\n                        <input id=\"remember\" type=\"checkbox\" name=\"Remember\" class=\"form-check-input\"\n                            [(ngModel)]=\"remember\">\n                        <label for=\"remember\" class=\"form-check-label\">{{'rememberMe' | i18n}}</label>\n                    </div>\n                    <ng-container *ngIf=\"selectedProviderType == null\">\n                        <p>{{'noTwoStepProviders' | i18n}}</p>\n                        <p>{{'noTwoStepProviders2' | i18n}}</p>\n                    </ng-container>\n                    <hr>\n                    <div class=\"d-flex mb-3\">\n                        <button type=\"submit\" class=\"btn btn-primary btn-block btn-submit\" [disabled]=\"form.loading\"\n                            *ngIf=\"selectedProviderType != null && selectedProviderType !== providerType.Duo && \n                        selectedProviderType !== providerType.OrganizationDuo && selectedProviderType !== providerType.U2f\">\n                            <span>\n                                <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i> {{'continue' | i18n}}\n                            </span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                    <div class=\"text-center\">\n                        <a href=\"#\" appStopClick (click)=\"anotherMethod()\">{{'useAnotherTwoStepMethod' | i18n}}</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n<ng-template #twoFactorOptions></ng-template>\n<iframe id=\"u2f_iframe\" hidden></iframe>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    TwoFactorOptionsComponent as BaseTwoFactorOptionsComponent,\n} from 'jslib/angular/components/two-factor-options.component';\n\n@Component({\n    selector: 'app-two-factor-options',\n    templateUrl: 'two-factor-options.component.html',\n})\nexport class TwoFactorOptionsComponent extends BaseTwoFactorOptionsComponent {\n    constructor(authService: AuthService, router: Router,\n        i18nService: I18nService, platformUtilsService: PlatformUtilsService) {\n        super(authService, router, i18nService, platformUtilsService, window);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"twoStepOptionsTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"twoStepOptionsTitle\">{{'twoStepOptions' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"list-group list-group-flush\">\n                <a href=\"#\" appStopClick *ngFor=\"let p of providers\" (click)=\"choose(p)\"\n                    class=\"list-group-item list-group-item-action\">\n                    <img [src]=\"'images/two-factor/' + p.type + '.png'\" alt=\"\" class=\"pull-right\">\n                    <h3>{{p.name}}</h3>\n                    {{p.description}}\n                </a>\n                <a href=\"#\" appStopClick class=\"list-group-item list-group-item-action\" (click)=\"recover()\">\n                    <h3>{{'recoveryCodeTitle' | i18n}}</h3>\n                    {{'recoveryCodeDesc' | i18n}}\n                </a>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </div>\n    </div>\n</div>\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorEmailRequest extends PasswordVerificationRequest {\n    email: string;\n\n    constructor(email: string, masterPasswordHash: string) {\n        super();\n        this.masterPasswordHash = masterPasswordHash;\n        this.email = email;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { VerifyEmailRequest } from 'jslib/models/request/verifyEmailRequest';\n\n@Component({\n    selector: 'app-verify-email-token',\n    templateUrl: 'verify-email-token.component.html',\n})\nexport class VerifyEmailTokenComponent implements OnInit {\n    constructor(private router: Router, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute,\n        private apiService: ApiService, private userService: UserService) { }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null) {\n                try {\n                    await this.apiService.postAccountVerifyEmailToken(\n                        new VerifyEmailRequest(qParams.userId, qParams.token));\n                    const authed = await this.userService.isAuthenticated();\n                    if (authed) {\n                        await this.apiService.refreshIdentityToken();\n                    }\n                    this.toasterService.popAsync('success', null, this.i18nService.t('emailVerified'));\n                    this.router.navigate(['/']);\n                    return;\n                } catch { }\n            }\n            this.toasterService.popAsync('error', null, this.i18nService.t('emailVerifiedFailed'));\n            this.router.navigate(['/']);\n        });\n    }\n}\n","<div class=\"mt-5 d-flex justify-content-center\">\n    <div>\n        <img src=\"images/logo-dark@2x.png\" class=\"mb-4 logo\" alt=\"Bitwarden\">\n        <p class=\"text-center\">\n            <i class=\"fa fa-spinner fa-spin fa-2x text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </p>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { VerifyDeleteRecoverRequest } from 'jslib/models/request/verifyDeleteRecoverRequest';\n\n@Component({\n    selector: 'app-verify-recover-delete',\n    templateUrl: 'verify-recover-delete.component.html',\n})\nexport class VerifyRecoverDeleteComponent implements OnInit {\n    email: string;\n    formPromise: Promise<any>;\n\n    private userId: string;\n    private token: string;\n\n    constructor(private router: Router, private apiService: ApiService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let fired = false;\n        this.route.queryParams.subscribe(async (qParams) => {\n            if (fired) {\n                return;\n            }\n            fired = true;\n            if (qParams.userId != null && qParams.token != null && qParams.email != null) {\n                this.userId = qParams.userId;\n                this.token = qParams.token;\n                this.email = qParams.email;\n            } else {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    async submit() {\n        try {\n            const request = new VerifyDeleteRecoverRequest(this.userId, this.token);\n            this.formPromise = this.apiService.postAccountRecoverDeleteToken(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Recovered Delete' });\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" class=\"container\" ngNativeValidate>\n    <div class=\"row justify-content-md-center mt-5\">\n        <div class=\"col-5\">\n            <p class=\"lead text-center mb-4\">{{'deleteAccount' | i18n}}</p>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout>\n                    <p class=\"text-center\">\n                        <strong>{{email}}</strong>\n                    </p>\n                    <p>{{'deleteRecoverConfirmDesc' | i18n}}</p>\n                    <hr>\n                    <div class=\"d-flex\">\n                        <button type=\"submit\" class=\"btn btn-danger btn-block btn-submit\" [disabled]=\"form.loading\">\n                            <span>{{'deleteAccount' | i18n}}</span>\n                            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        </button>\n                        <a routerLink=\"/\" class=\"btn btn-outline-secondary btn-block ml-2 mt-0\">\n                            {{'cancel' | i18n}}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</form>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport {\n    CollectionDetailsResponse,\n    CollectionResponse,\n} from 'jslib/models/response/collectionResponse';\nimport { ListResponse } from 'jslib/models/response/listResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { ModalComponent } from '../../modal.component';\nimport { CollectionAddEditComponent } from './collection-add-edit.component';\nimport { EntityUsersComponent } from './entity-users.component';\n\n@Component({\n    selector: 'app-org-manage-collections',\n    templateUrl: 'collections.component.html',\n})\nexport class CollectionsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    collections: CollectionView[];\n    pagedCollections: CollectionView[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedCollectionsCount = 0;\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private collectionService: CollectionService, private componentFactoryResolver: ComponentFactoryResolver,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private i18nService: I18nService, private platformUtilsService: PlatformUtilsService,\n        private userService: UserService, private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        let response: ListResponse<CollectionResponse>;\n        if (organization.isAdmin) {\n            response = await this.apiService.getCollections(this.organizationId);\n        } else {\n            response = await this.apiService.getUserCollections();\n        }\n        const collections = response.data.filter((c) => c.organizationId === this.organizationId).map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.collections || this.collections.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCollections.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedCollectionsCount > this.pageSize) {\n            pagedSize = this.pagedCollectionsCount;\n        }\n        if (this.collections.length > pagedLength) {\n            this.pagedCollections =\n                this.pagedCollections.concat(this.collections.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCollectionsCount = this.pagedCollections.length;\n        this.didScroll = this.pagedCollections.length > this.pageSize;\n    }\n\n    edit(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionAddEditComponent>(\n            CollectionAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.collectionId = collection != null ? collection.id : null;\n        childComponent.onSavedCollection.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedCollection.subscribe(() => {\n            this.modal.close();\n            this.removeCollection(collection);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(collection: CollectionView) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), collection.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteCollection(this.organizationId, collection.id);\n            this.analytics.eventTrack.next({ action: 'Deleted Collection' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', collection.name));\n            this.removeCollection(collection);\n        } catch { }\n    }\n\n    users(collection: CollectionView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'collection';\n        childComponent.entityId = collection.id;\n        childComponent.entityName = collection.name;\n\n        childComponent.onEditedUsers.subscribe(() => {\n            this.load();\n            this.modal.close();\n        });\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPaging() {\n        this.pagedCollections = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.collections && this.collections.length > this.pageSize;\n    }\n\n    private removeCollection(collection: CollectionView) {\n        const index = this.collections.indexOf(collection);\n        if (index > -1) {\n            this.collections.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\">\n    <h1>{{'collections' | i18n}}</h1>\n    <div class=\"ml-auto d-flex\">\n        <div>\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\n                [(ngModel)]=\"searchText\">\n        </div>\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n            {{'newCollection' | i18n}}\n        </button>\n    </div>\n</div>\n<ng-container *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container\n    *ngIf=\"!loading && (isPaging() ? pagedCollections : collections | search:searchText:'name':'id') as searchedCollections\">\n    <p *ngIf=\"!searchedCollections.length\">{{'noCollectionsInList' | i18n}}</p>\n    <table class=\"table table-hover table-list\" *ngIf=\"searchedCollections.length\" infiniteScroll\n        [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\n        <tbody>\n            <tr *ngFor=\"let c of searchedCollections\">\n                <td>\n                    <a href=\"#\" appStopClick (click)=\"edit(c)\">{{c.name}}</a>\n                </td>\n                <td class=\"table-list-options\">\n                    <div class=\"dropdown\" appListDropdown>\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\n                            <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\">\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(c)\">\n                                <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i>\n                                {{'users' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(c)\">\n                                <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\n                                {{'delete' | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherString } from 'jslib/models/domain/cipherString';\nimport { SymmetricCryptoKey } from 'jslib/models/domain/symmetricCryptoKey';\nimport { CollectionRequest } from 'jslib/models/request/collectionRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-collection-add-edit',\n    templateUrl: 'collection-add-edit.component.html',\n})\nexport class CollectionAddEditComponent implements OnInit {\n    @Input() collectionId: string;\n    @Input() organizationId: string;\n    @Output() onSavedCollection = new EventEmitter();\n    @Output() onDeletedCollection = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    accessGroups: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    private orgKey: SymmetricCryptoKey;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService, private cryptoService: CryptoService,\n        private userService: UserService) { }\n\n    async ngOnInit() {\n        const organization = await this.userService.getOrganization(this.organizationId);\n        this.accessGroups = organization.useGroups;\n        this.editMode = this.loading = this.collectionId != null;\n        if (this.accessGroups) {\n            const groupsResponse = await this.apiService.getGroups(this.organizationId);\n            this.groups = groupsResponse.data.map((r) => r).sort(Utils.getSortFunction(this.i18nService, 'name'));\n        }\n        this.orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editCollection');\n            try {\n                const collection = await this.apiService.getCollectionDetails(this.organizationId, this.collectionId);\n                this.name = await this.cryptoService.decryptToUtf8(new CipherString(collection.name), this.orgKey);\n                this.externalId = collection.externalId;\n                if (collection.groups != null && this.groups.length > 0) {\n                    collection.groups.forEach((s) => {\n                        const group = this.groups.filter((g) => !g.accessAll && g.id === s.id);\n                        if (group != null && group.length > 0) {\n                            (group[0] as any).checked = true;\n                            (group[0] as any).readOnly = s.readOnly;\n                            (group[0] as any).hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addCollection');\n        }\n\n        this.groups.forEach((g) => {\n            if (g.accessAll) {\n                (g as any).checked = true;\n            }\n        });\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        if (g.accessAll) {\n            return;\n        }\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n            (g as any).hidePasswords = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach((g) => this.check(g, select));\n    }\n\n    async submit() {\n        if (this.orgKey == null) {\n            throw new Error('No encryption key for this organization.');\n        }\n\n        const request = new CollectionRequest();\n        request.name = (await this.cryptoService.encrypt(this.name, this.orgKey)).encryptedString;\n        request.externalId = this.externalId;\n        request.groups = this.groups.filter((g) => (g as any).checked && !g.accessAll)\n            .map((g) => new SelectionReadOnlyRequest(g.id, !!(g as any).readOnly, !!(g as any).hidePasswords));\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putCollection(this.organizationId, this.collectionId, request);\n            } else {\n                this.formPromise = this.apiService.postCollection(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Collection' : 'Created Collection' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedCollectionId' : 'createdCollectionId', this.name));\n            this.onSavedCollection.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteCollectionConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteCollection(this.organizationId, this.collectionId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Collection' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedCollectionId', this.name));\n            this.onDeletedCollection.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"collectionAddEditTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"collectionAddEditTitle\">{{title}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <div class=\"form-group\">\n                    <label for=\"name\">{{'name' | i18n}}</label>\n                    <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"externalId\">{{'externalId' | i18n}}</label>\n                    <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\">\n                    <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small>\n                </div>\n                <ng-container *ngIf=\"accessGroups\">\n                    <h3 class=\"mt-4 d-flex mb-0\">\n                        {{'groupAccess' | i18n}}\n                        <div class=\"ml-auto\" *ngIf=\"groups && groups.length\">\n                            <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                                {{'selectAll' | i18n}}\n                            </button>\n                            <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                                {{'unselectAll' | i18n}}\n                            </button>\n                        </div>\n                    </h3>\n                    <div *ngIf=\"!groups || !groups.length\">\n                        {{'noGroupsInList' | i18n}}\n                    </div>\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>{{'name' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let g of groups; let i = index\">\n                                <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\"\n                                        [disabled]=\"g.accessAll\" appStopProp>\n                                </td>\n                                <td (click)=\"check(g)\">\n                                    {{g.name}}\n                                    <ng-container *ngIf=\"g.accessAll\">\n                                        <i class=\"fa fa-th text-muted fa-fw\" title=\"{{'groupAccessAllItems' | i18n}}\"\n                                            aria-hidden=\"true\"></i>\n                                        <span class=\"sr-only\">{{'groupAccessAllItems' | i18n}}</span>\n                                    </ng-container>\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"g.hidePasswords\"\n                                        name=\"Groups[{{i}}].HidePasswords\" [disabled]=\"!g.checked || g.accessAll\">\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"g.readOnly\" name=\"Groups[{{i}}].ReadOnly\"\n                                        [disabled]=\"!g.checked || g.accessAll\">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n                <div class=\"ml-auto\">\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Collection } from '../domain/collection';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class CollectionRequest {\n    name: string;\n    externalId: string;\n    groups: SelectionReadOnlyRequest[] = [];\n\n    constructor(collection?: Collection) {\n        if (collection == null) {\n            return;\n        }\n        this.name = collection.name ? collection.name.encryptedString : null;\n        this.externalId = collection.externalId;\n    }\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { EventService } from '../../services/event.service';\n\nimport { EventResponse } from 'jslib/models/response/eventResponse';\nimport { ListResponse } from 'jslib/models/response/listResponse';\n\n@Component({\n    selector: 'app-org-events',\n    templateUrl: 'events.component.html',\n})\nexport class EventsComponent implements OnInit {\n    loading = true;\n    loaded = false;\n    organizationId: string;\n    events: any[];\n    start: string;\n    end: string;\n    continuationToken: string;\n    refreshPromise: Promise<any>;\n    morePromise: Promise<any>;\n\n    private orgUsersUserIdMap = new Map<string, any>();\n    private orgUsersIdMap = new Map<string, any>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private eventService: EventService, private i18nService: I18nService,\n        private toasterService: ToasterService, private userService: UserService,\n        private router: Router) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useEvents) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            const defaultDates = this.eventService.getDefaultDateFilters();\n            this.start = defaultDates[0];\n            this.end = defaultDates[1];\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        response.data.forEach((u) => {\n            const name = u.name == null || u.name.trim() === '' ? u.email : u.name;\n            this.orgUsersIdMap.set(u.id, { name: name, email: u.email });\n            this.orgUsersUserIdMap.set(u.userId, { name: name, email: u.email });\n        });\n        await this.loadEvents(true);\n        this.loaded = true;\n    }\n\n    async loadEvents(clearExisting: boolean) {\n        if (this.refreshPromise != null || this.morePromise != null) {\n            return;\n        }\n\n        let dates: string[] = null;\n        try {\n            dates = this.eventService.formatDateFilters(this.start, this.end);\n        } catch (e) {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidDateRange'));\n            return;\n        }\n\n        this.loading = true;\n        let response: ListResponse<EventResponse>;\n        try {\n            const promise = this.apiService.getEventsOrganization(this.organizationId, dates[0], dates[1],\n                clearExisting ? null : this.continuationToken);\n            if (clearExisting) {\n                this.refreshPromise = promise;\n            } else {\n                this.morePromise = promise;\n            }\n            response = await promise;\n        } catch { }\n\n        this.continuationToken = response.continuationToken;\n        const events = response.data.map((r) => {\n            const userId = r.actingUserId == null ? r.userId : r.actingUserId;\n            const eventInfo = this.eventService.getEventInfo(r);\n            const user = userId != null && this.orgUsersUserIdMap.has(userId) ?\n                this.orgUsersUserIdMap.get(userId) : null;\n            return {\n                message: eventInfo.message,\n                appIcon: eventInfo.appIcon,\n                appName: eventInfo.appName,\n                userId: userId,\n                userName: user != null ? user.name : this.i18nService.t('unknown'),\n                userEmail: user != null ? user.email : '',\n                date: r.date,\n                ip: r.ipAddress,\n                type: r.type,\n            };\n        });\n\n        if (!clearExisting && this.events != null && this.events.length > 0) {\n            this.events = this.events.concat(events);\n        } else {\n            this.events = events;\n        }\n\n        this.loading = false;\n        this.morePromise = null;\n        this.refreshPromise = null;\n    }\n}\n","<div class=\"page-header d-flex\">\n    <h1>{{'eventLogs' | i18n}}</h1>\n    <div class=\"ml-auto d-flex\">\n        <div class=\"form-inline\">\n            <label class=\"sr-only\" for=\"start\">{{'startDate' | i18n}}</label>\n            <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"start\"\n                placeholder=\"{{'startDate' | i18n}}\" [(ngModel)]=\"start\" placeholder=\"YYYY-MM-DDTHH:MM\">\n            <span class=\"mx-2\">-</span>\n            <label class=\"sr-only\" for=\"end\">{{'endDate' | i18n}}</label>\n            <input type=\"datetime-local\" class=\"form-control form-control-sm\" id=\"end\"\n                placeholder=\"{{'endDate' | i18n}}\" [(ngModel)]=\"end\" placeholder=\"YYYY-MM-DDTHH:MM\">\n        </div>\n        <button #refreshBtn [appApiAction]=\"refreshPromise\" type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\"\n            (click)=\"loadEvents(true)\" [disabled]=\"loaded && refreshBtn.loading\">\n            <i class=\"fa fa-refresh fa-fw\" aria-hidden=\"true\" [ngClass]=\"{'fa-spin': loaded && refreshBtn.loading}\"></i>\n            {{'refresh' | i18n}}\n        </button>\n    </div>\n</div>\n<ng-container *ngIf=\"!loaded\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container *ngIf=\"loaded\">\n    <p *ngIf=\"!events || !events.length\">{{'noEventsInList' | i18n}}</p>\n    <table class=\"table table-hover\" *ngIf=\"events && events.length\">\n        <thead>\n            <tr>\n                <th class=\"border-top-0\" width=\"210\">{{'timestamp' | i18n}}</th>\n                <th class=\"border-top-0\" width=\"40\">\n                    <span class=\"sr-only\">{{'device' | i18n}}</span>\n                </th>\n                <th class=\"border-top-0\" width=\"150\">{{'user' | i18n}}</th>\n                <th class=\"border-top-0\">{{'event' | i18n}}</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let e of events\">\n                <td>{{e.date | date:'medium'}}</td>\n                <td>\n                    <i class=\"text-muted fa fa-lg {{e.appIcon}}\" title=\"{{e.appName}}, {{e.ip}}\" aria-hidden=\"true\"></i>\n                    <span class=\"sr-only\">{{e.appName}}, {{e.ip}}</span>\n                </td>\n                <td>\n                    <span title=\"{{e.userEmail}}\">{{e.userName}}</span>\n                </td>\n                <td [innerHTML]=\"e.message\"></td>\n            </tr>\n        </tbody>\n    </table>\n    <button #moreBtn [appApiAction]=\"morePromise\" type=\"button\" class=\"btn btn-block btn-link btn-submit\"\n        (click)=\"loadEvents(false)\" [disabled]=\"loaded && moreBtn.loading\" *ngIf=\"continuationToken\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'loadMore' | i18n}}</span>\n    </button>\n</ng-container>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { EntityUsersComponent } from './entity-users.component';\nimport { GroupAddEditComponent } from './group-add-edit.component';\n\n@Component({\n    selector: 'app-org-groups',\n    templateUrl: 'groups.component.html',\n})\nexport class GroupsComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('usersTemplate', { read: ViewContainerRef, static: true }) usersModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    groups: GroupResponse[];\n    pagedGroups: GroupResponse[];\n    searchText: string;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedGroupsCount = 0;\n    private modal: ModalComponent = null;\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private router: Router, private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.useGroups) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            await this.load();\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getGroups(this.organizationId);\n        const groups = response.data != null && response.data.length > 0 ? response.data : [];\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n        this.resetPaging();\n        this.loading = false;\n    }\n\n    loadMore() {\n        if (!this.groups || this.groups.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedGroups.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedGroupsCount > this.pageSize) {\n            pagedSize = this.pagedGroupsCount;\n        }\n        if (this.groups.length > pagedLength) {\n            this.pagedGroups = this.pagedGroups.concat(this.groups.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedGroupsCount = this.pagedGroups.length;\n        this.didScroll = this.pagedGroups.length > this.pageSize;\n    }\n\n    edit(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<GroupAddEditComponent>(\n            GroupAddEditComponent, this.addEditModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.groupId = group != null ? group.id : null;\n        childComponent.onSavedGroup.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedGroup.subscribe(() => {\n            this.modal.close();\n            this.removeGroup(group);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    add() {\n        this.edit(null);\n    }\n\n    async delete(group: GroupResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), group.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteGroup(this.organizationId, group.id);\n            this.analytics.eventTrack.next({ action: 'Deleted Group' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', group.name));\n            this.removeGroup(group);\n        } catch { }\n    }\n\n    users(group: GroupResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.usersModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityUsersComponent>(\n            EntityUsersComponent, this.usersModalRef);\n\n        childComponent.organizationId = this.organizationId;\n        childComponent.entity = 'group';\n        childComponent.entityId = group.id;\n        childComponent.entityName = group.name;\n\n        childComponent.onEditedUsers.subscribe(() => {\n            this.modal.close();\n        });\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPaging() {\n        this.pagedGroups = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.groups && this.groups.length > this.pageSize;\n    }\n\n    private removeGroup(group: GroupResponse) {\n        const index = this.groups.indexOf(group);\n        if (index > -1) {\n            this.groups.splice(index, 1);\n            this.resetPaging();\n        }\n    }\n}\n","<div class=\"page-header d-flex\">\n    <h1>{{'groups' | i18n}}</h1>\n    <div class=\"ml-auto d-flex\">\n        <div>\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\n                [(ngModel)]=\"searchText\">\n        </div>\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"add()\">\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n            {{'newGroup' | i18n}}\n        </button>\n    </div>\n</div>\n<ng-container *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container *ngIf=\"!loading && (isPaging() ? pagedGroups : groups | search:searchText:'name':'id') as searchedGroups\">\n    <p *ngIf=\"!searchedGroups.length\">{{'noGroupsInList' | i18n}}</p>\n    <table class=\"table table-hover table-list\" *ngIf=\"searchedGroups.length\" infiniteScroll\n        [infiniteScrollDistance]=\"1\" [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\n        <tbody>\n            <tr *ngFor=\"let g of searchedGroups\">\n                <td>\n                    <a href=\"#\" appStopClick (click)=\"edit(g)\">{{g.name}}</a>\n                </td>\n                <td class=\"table-list-options\">\n                    <div class=\"dropdown\" appListDropdown>\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\n                            <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\">\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"users(g)\">\n                                <i class=\"fa fa-fw fa-users\" aria-hidden=\"true\"></i>\n                                {{'users' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"delete(g)\">\n                                <i class=\"fa fa-fw fa-trash-o\" aria-hidden=\"true\"></i>\n                                {{'delete' | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #usersTemplate></ng-template>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { GroupRequest } from 'jslib/models/request/groupRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\n@Component({\n    selector: 'app-group-add-edit',\n    templateUrl: 'group-add-edit.component.html',\n})\nexport class GroupAddEditComponent implements OnInit {\n    @Input() groupId: string;\n    @Input() organizationId: string;\n    @Output() onSavedGroup = new EventEmitter();\n    @Output() onDeletedGroup = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    name: string;\n    externalId: string;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.groupId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editGroup');\n            try {\n                const group = await this.apiService.getGroupDetails(this.organizationId, this.groupId);\n                this.access = group.accessAll ? 'all' : 'selected';\n                this.name = group.name;\n                this.externalId = group.externalId;\n                if (group.collections != null && this.collections != null) {\n                    group.collections.forEach((s) => {\n                        const collection = this.collections.filter((c) => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('addGroup');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n\n    async submit() {\n        const request = new GroupRequest();\n        request.name = this.name;\n        request.externalId = this.externalId;\n        request.accessAll = this.access === 'all';\n        if (!request.accessAll) {\n            request.collections = this.collections.filter((c) => (c as any).checked)\n                .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                this.formPromise = this.apiService.putGroup(this.organizationId, this.groupId, request);\n            } else {\n                this.formPromise = this.apiService.postGroup(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited Group' : 'Created Group' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedGroupId' : 'createdGroupId', this.name));\n            this.onSavedGroup.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteGroupConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteGroup(this.organizationId, this.groupId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Group' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('deletedGroupId', this.name));\n            this.onDeletedGroup.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAddEditTitle\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"groupAddEditTitle\">{{title}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <div class=\"form-group\">\n                    <label for=\"name\">{{'name' | i18n}}</label>\n                    <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"name\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"externalId\">{{'externalId' | i18n}}</label>\n                    <input id=\"externalId\" class=\"form-control\" type=\"text\" name=\"ExternalId\" [(ngModel)]=\"externalId\">\n                    <small class=\"form-text text-muted\">{{'externalIdDesc' | i18n}}</small>\n                </div>\n                <h3 class=\"mt-4 d-flex\">\n                    <div class=\"mb-2\">\n                        {{'accessControl' | i18n}}\n                        <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"\n                            href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\">\n                            <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                        </a>\n                    </div>\n                    <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </h3>\n                <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\">\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\"\n                            [(ngModel)]=\"access\">\n                        <label class=\"form-check-label\" for=\"accessAll\">\n                            {{'groupAccessAllItems' | i18n}}\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\"\n                            [(ngModel)]=\"access\">\n                        <label class=\"form-check-label\" for=\"accessSelected\">\n                            {{'groupAccessSelectedCollections' | i18n}}\n                        </label>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"access === 'selected'\">\n                    <div *ngIf=\"!collections || !collections.length\">\n                        {{'noCollectionsInList' | i18n}}\n                    </div>\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>{{'name' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let c of collections; let i = index\">\n                                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                        appStopProp>\n                                </td>\n                                <td (click)=\"check(c)\">\n                                    {{c.name}}\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\"\n                                        name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\">\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\"\n                                        [disabled]=\"!c.checked\">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n                <div class=\"ml-auto\">\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\" aria-hidden=\"true\"\n                            title=\"{{'loading' | i18n}}\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\n@Component({\n    selector: 'app-org-manage',\n    templateUrl: 'manage.component.html',\n})\nexport class ManageComponent implements OnInit {\n    organization: Organization;\n    accessPolicies = false;\n    accessGroups = false;\n    accessEvents = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.accessPolicies = this.organization.usePolicies;\n            this.accessEvents = this.organization.useEvents;\n            this.accessGroups = this.organization.useGroups;\n        });\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card\" *ngIf=\"organization\">\n                <div class=\"card-header\">{{'manage' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"people\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin\">\n                        {{'people' | i18n}}\n                    </a>\n                    <a routerLink=\"collections\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'collections' | i18n}}\n                    </a>\n                    <a routerLink=\"groups\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin && accessGroups\">\n                        {{'groups' | i18n}}\n                    </a>\n                    <a routerLink=\"policies\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin && accessPolicies\">\n                        {{'policies' | i18n}}\n                    </a>\n                    <a routerLink=\"events\" class=\"list-group-item\" routerLinkActive=\"active\"\n                        *ngIf=\"organization.isAdmin && accessEvents\">\n                        {{'eventLogs' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserConfirmRequest } from 'jslib/models/request/organizationUserConfirmRequest';\n\nimport { OrganizationUserUserDetailsResponse } from 'jslib/models/response/organizationUserResponse';\n\nimport { OrganizationUserStatusType } from 'jslib/enums/organizationUserStatusType';\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\nimport { Utils } from 'jslib/misc/utils';\n\nimport { ModalComponent } from '../../modal.component';\nimport { EntityEventsComponent } from './entity-events.component';\nimport { UserAddEditComponent } from './user-add-edit.component';\nimport { UserConfirmComponent } from './user-confirm.component';\nimport { UserGroupsComponent } from './user-groups.component';\n\n@Component({\n    selector: 'app-org-people',\n    templateUrl: 'people.component.html',\n})\nexport class PeopleComponent implements OnInit {\n    @ViewChild('addEdit', { read: ViewContainerRef, static: true }) addEditModalRef: ViewContainerRef;\n    @ViewChild('groupsTemplate', { read: ViewContainerRef, static: true }) groupsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n    @ViewChild('confirmTemplate', { read: ViewContainerRef, static: true }) confirmModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    users: OrganizationUserUserDetailsResponse[];\n    pagedUsers: OrganizationUserUserDetailsResponse[];\n    searchText: string;\n    status: OrganizationUserStatusType = null;\n    statusMap = new Map<OrganizationUserStatusType, OrganizationUserUserDetailsResponse[]>();\n    organizationUserType = OrganizationUserType;\n    organizationUserStatusType = OrganizationUserStatusType;\n    actionPromise: Promise<any>;\n    accessEvents = false;\n    accessGroups = false;\n\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private pagedUsersCount = 0;\n    private modal: ModalComponent = null;\n    private allUsers: OrganizationUserUserDetailsResponse[];\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService, private analytics: Angulartics2,\n        private toasterService: ToasterService, private cryptoService: CryptoService,\n        private userService: UserService, private router: Router,\n        private storageService: StorageService, private searchService: SearchService) { }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (!organization.isAdmin) {\n                this.router.navigate(['../collections'], { relativeTo: this.route });\n                return;\n            }\n            this.accessEvents = organization.useEvents;\n            this.accessGroups = organization.useGroups;\n            await this.load();\n\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n                this.searchText = qParams.search;\n                if (qParams.viewEvents != null) {\n                    const user = this.users.filter((u) => u.id === qParams.viewEvents);\n                    if (user.length > 0 && user[0].status === OrganizationUserStatusType.Confirmed) {\n                        this.events(user[0]);\n                    }\n                }\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getOrganizationUsers(this.organizationId);\n        this.statusMap.clear();\n        this.allUsers = response.data != null && response.data.length > 0 ? response.data : [];\n        this.allUsers.sort(Utils.getSortFunction(this.i18nService, 'email'));\n        this.allUsers.forEach((u) => {\n            if (!this.statusMap.has(u.status)) {\n                this.statusMap.set(u.status, [u]);\n            } else {\n                this.statusMap.get(u.status).push(u);\n            }\n        });\n        this.filter(this.status);\n        this.loading = false;\n    }\n\n    filter(status: OrganizationUserStatusType) {\n        this.status = status;\n        if (this.status != null) {\n            this.users = this.statusMap.get(this.status);\n        } else {\n            this.users = this.allUsers;\n        }\n        this.resetPaging();\n    }\n\n    loadMore() {\n        if (!this.users || this.users.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedUsers.length;\n        let pagedSize = this.pageSize;\n        if (pagedLength === 0 && this.pagedUsersCount > this.pageSize) {\n            pagedSize = this.pagedUsersCount;\n        }\n        if (this.users.length > pagedLength) {\n            this.pagedUsers = this.pagedUsers.concat(this.users.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedUsersCount = this.pagedUsers.length;\n        this.didScroll = this.pagedUsers.length > this.pageSize;\n    }\n\n    get allCount() {\n        return this.allUsers != null ? this.allUsers.length : 0;\n    }\n\n    get invitedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Invited) ?\n            this.statusMap.get(OrganizationUserStatusType.Invited).length : 0;\n    }\n\n    get acceptedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Accepted) ?\n            this.statusMap.get(OrganizationUserStatusType.Accepted).length : 0;\n    }\n\n    get confirmedCount() {\n        return this.statusMap.has(OrganizationUserStatusType.Confirmed) ?\n            this.statusMap.get(OrganizationUserStatusType.Confirmed).length : 0;\n    }\n\n    get showConfirmUsers(): boolean {\n        return this.allUsers != null && this.statusMap != null && this.allUsers.length > 1 &&\n            this.confirmedCount > 0 && this.confirmedCount < 3 && this.acceptedCount > 0;\n    }\n\n    edit(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.addEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserAddEditComponent>(\n            UserAddEditComponent, this.addEditModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n        childComponent.onDeletedUser.subscribe(() => {\n            this.modal.close();\n            this.removeUser(user);\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    invite() {\n        this.edit(null);\n    }\n\n    groups(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.groupsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<UserGroupsComponent>(\n            UserGroupsComponent, this.groupsModalRef);\n\n        childComponent.name = user != null ? user.name || user.email : null;\n        childComponent.organizationId = this.organizationId;\n        childComponent.organizationUserId = user != null ? user.id : null;\n        childComponent.onSavedUser.subscribe(() => {\n            this.modal.close();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async remove(user: OrganizationUserUserDetailsResponse) {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), user.name || user.email,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            await this.apiService.deleteOrganizationUser(this.organizationId, user.id);\n            this.analytics.eventTrack.next({ action: 'Deleted User' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', user.name || user.email));\n            this.removeUser(user);\n        } catch { }\n    }\n\n    async reinvite(user: OrganizationUserUserDetailsResponse) {\n        if (this.actionPromise != null) {\n            return;\n        }\n        this.actionPromise = this.apiService.postOrganizationUserReinvite(this.organizationId, user.id);\n        await this.actionPromise;\n        this.analytics.eventTrack.next({ action: 'Reinvited User' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenReinvited', user.name || user.email));\n        this.actionPromise = null;\n    }\n\n    async confirm(user: OrganizationUserUserDetailsResponse) {\n        function updateUser(self: PeopleComponent) {\n            user.status = OrganizationUserStatusType.Confirmed;\n            const mapIndex = self.statusMap.get(OrganizationUserStatusType.Accepted).indexOf(user);\n            if (mapIndex > -1) {\n                self.statusMap.get(OrganizationUserStatusType.Accepted).splice(mapIndex, 1);\n                self.statusMap.get(OrganizationUserStatusType.Confirmed).push(user);\n            }\n        }\n\n        if (this.actionPromise != null) {\n            return;\n        }\n\n        const autoConfirm = await this.storageService.get<boolean>(ConstantsService.autoConfirmFingerprints);\n        if (autoConfirm == null || !autoConfirm) {\n            if (this.modal != null) {\n                this.modal.close();\n            }\n\n            const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n            this.modal = this.confirmModalRef.createComponent(factory).instance;\n            const childComponent = this.modal.show<UserConfirmComponent>(\n                UserConfirmComponent, this.confirmModalRef);\n\n            childComponent.name = user != null ? user.name || user.email : null;\n            childComponent.organizationId = this.organizationId;\n            childComponent.organizationUserId = user != null ? user.id : null;\n            childComponent.userId = user != null ? user.userId : null;\n            childComponent.onConfirmedUser.subscribe(() => {\n                this.modal.close();\n                updateUser(this);\n            });\n\n            this.modal.onClosed.subscribe(() => {\n                this.modal = null;\n            });\n            return;\n        }\n\n        this.actionPromise = this.doConfirmation(user);\n        await this.actionPromise;\n        updateUser(this);\n        this.analytics.eventTrack.next({ action: 'Confirmed User' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', user.name || user.email));\n        this.actionPromise = null;\n    }\n\n    async events(user: OrganizationUserUserDetailsResponse) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = user.name || user.email;\n        childComponent.organizationId = this.organizationId;\n        childComponent.entityId = user.id;\n        childComponent.showUser = false;\n        childComponent.entity = 'user';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async resetPaging() {\n        this.pagedUsers = [];\n        this.loadMore();\n    }\n\n    isSearching() {\n        return this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.users && this.users.length > this.pageSize;\n    }\n\n    private async doConfirmation(user: OrganizationUserUserDetailsResponse) {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const publicKeyResponse = await this.apiService.getUserPublicKey(user.userId);\n        const publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n        try {\n            // tslint:disable-next-line\n            console.log('User\\'s fingerprint: ' +\n                (await this.cryptoService.getFingerprint(user.userId, publicKey.buffer)).join('-'));\n        } catch { }\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, user.id, request);\n    }\n\n    private removeUser(user: OrganizationUserUserDetailsResponse) {\n        let index = this.users.indexOf(user);\n        if (index > -1) {\n            this.users.splice(index, 1);\n            this.resetPaging();\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Accepted)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Accepted).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Accepted).splice(index, 1);\n            }\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Invited)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Invited).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Invited).splice(index, 1);\n            }\n        }\n        if (this.statusMap.has(OrganizationUserStatusType.Confirmed)) {\n            index = this.statusMap.get(OrganizationUserStatusType.Confirmed).indexOf(user);\n            if (index > -1) {\n                this.statusMap.get(OrganizationUserStatusType.Confirmed).splice(index, 1);\n            }\n        }\n    }\n}\n","<div class=\"page-header d-flex\">\n    <h1>{{'people' | i18n}}</h1>\n    <div class=\"ml-auto d-flex\">\n        <div class=\"btn-group btn-group-sm\" role=\"group\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" [ngClass]=\"{active: status == null}\"\n                (click)=\"filter(null)\">\n                {{'all' | i18n}}\n                <span class=\"badge badge-pill badge-info\" *ngIf=\"allCount\">{{allCount}}</span>\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{active: status == organizationUserStatusType.Invited}\"\n                (click)=\"filter(organizationUserStatusType.Invited)\">\n                {{'invited' | i18n}}\n                <span class=\"badge badge-pill badge-info\" *ngIf=\"invitedCount\">{{invitedCount}}</span>\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-secondary\"\n                [ngClass]=\"{active: status == organizationUserStatusType.Accepted}\"\n                (click)=\"filter(organizationUserStatusType.Accepted)\">\n                {{'accepted' | i18n}}\n                <span class=\"badge badge-pill badge-warning\" *ngIf=\"acceptedCount\">{{acceptedCount}}</span>\n            </button>\n        </div>\n        <div class=\"ml-3\">\n            <label class=\"sr-only\" for=\"search\">{{'search' | i18n}}</label>\n            <input type=\"search\" class=\"form-control form-control-sm\" id=\"search\" placeholder=\"{{'search' | i18n}}\"\n                [(ngModel)]=\"searchText\">\n        </div>\n        <button type=\"button\" class=\"btn btn-sm btn-outline-primary ml-3\" (click)=\"invite()\">\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>\n            {{'inviteUser' | i18n}}\n        </button>\n    </div>\n</div>\n<ng-container *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container\n    *ngIf=\"!loading && (isPaging() ? pagedUsers : users | search:searchText:'name':'email':'id') as searchedUsers\">\n    <p *ngIf=\"!searchedUsers.length\">{{'noUsersInList' | i18n}}</p>\n    <ng-container *ngIf=\"searchedUsers.length\">\n        <app-callout type=\"info\" title=\"{{'confirmUsers' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"showConfirmUsers\">\n            {{'usersNeedConfirmed' | i18n}}\n        </app-callout>\n        <table class=\"table table-hover table-list\" infiniteScroll [infiniteScrollDistance]=\"1\"\n            [infiniteScrollDisabled]=\"!isPaging()\" (scrolled)=\"loadMore()\">\n            <tbody>\n                <tr *ngFor=\"let u of searchedUsers\">\n                    <td width=\"30\">\n                        <app-avatar [data]=\"u.name || u.email\" [email]=\"u.email\" size=\"25\" [circle]=\"true\"\n                            [fontSize]=\"14\"></app-avatar>\n                    </td>\n                    <td>\n                        <a href=\"#\" appStopClick (click)=\"edit(u)\">{{u.email}}</a>\n                        <span class=\"badge badge-secondary\"\n                            *ngIf=\"u.status === organizationUserStatusType.Invited\">{{'invited' | i18n}}</span>\n                        <span class=\"badge badge-warning\"\n                            *ngIf=\"u.status === organizationUserStatusType.Accepted\">{{'accepted' | i18n}}</span>\n                        <small class=\"text-muted d-block\" *ngIf=\"u.name\">{{u.name}}</small>\n                    </td>\n                    <td>\n                        <ng-container *ngIf=\"u.twoFactorEnabled\">\n                            <i class=\"fa fa-lock\" title=\"{{'userUsingTwoStep' | i18n}}\" aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'userUsingTwoStep' | i18n}}</span>\n                        </ng-container>\n                    </td>\n                    <td>\n                        <span *ngIf=\"u.type === organizationUserType.Owner\">{{'owner' | i18n}}</span>\n                        <span *ngIf=\"u.type === organizationUserType.Admin\">{{'admin' | i18n}}</span>\n                        <span *ngIf=\"u.type === organizationUserType.Manager\">{{'manager' | i18n}}</span>\n                        <span *ngIf=\"u.type === organizationUserType.User\">{{'user' | i18n}}</span>\n                    </td>\n                    <td class=\"table-list-options\">\n                        <div class=\"dropdown\" appListDropdown>\n                            <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"\n                                appA11yTitle=\"{{'options' | i18n}}\">\n                                <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\n                            </button>\n                            <div class=\"dropdown-menu dropdown-menu-right\">\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"reinvite(u)\"\n                                    *ngIf=\"u.status === organizationUserStatusType.Invited\">\n                                    <i class=\"fa fa-fw fa-envelope-o\" aria-hidden=\"true\"></i>\n                                    {{'resendInvitation' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item text-success\" href=\"#\" appStopClick (click)=\"confirm(u)\"\n                                    *ngIf=\"u.status === organizationUserStatusType.Accepted\">\n                                    <i class=\"fa fa-fw fa-check\" aria-hidden=\"true\"></i>\n                                    {{'confirm' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"groups(u)\" *ngIf=\"accessGroups\">\n                                    <i class=\"fa fa-fw fa-sitemap\" aria-hidden=\"true\"></i>\n                                    {{'groups' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"events(u)\"\n                                    *ngIf=\"accessEvents && u.status === organizationUserStatusType.Confirmed\">\n                                    <i class=\"fa fa-fw fa-file-text-o\" aria-hidden=\"true\"></i>\n                                    {{'eventLogs' | i18n}}\n                                </a>\n                                <a class=\"dropdown-item text-danger\" href=\"#\" appStopClick (click)=\"remove(u)\">\n                                    <i class=\"fa fa-fw fa-remove\" aria-hidden=\"true\"></i>\n                                    {{'remove' | i18n}}\n                                </a>\n                            </div>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </ng-container>\n</ng-container>\n<ng-template #addEdit></ng-template>\n<ng-template #groupsTemplate></ng-template>\n<ng-template #eventsTemplate></ng-template>\n<ng-template #confirmTemplate></ng-template>\n","export class OrganizationUserConfirmRequest {\n    key: string;\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CollectionData } from 'jslib/models/data/collectionData';\nimport { Collection } from 'jslib/models/domain/collection';\nimport { OrganizationUserInviteRequest } from 'jslib/models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateRequest } from 'jslib/models/request/organizationUserUpdateRequest';\nimport { SelectionReadOnlyRequest } from 'jslib/models/request/selectionReadOnlyRequest';\nimport { CollectionDetailsResponse } from 'jslib/models/response/collectionResponse';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\n@Component({\n    selector: 'app-user-add-edit',\n    templateUrl: 'user-add-edit.component.html',\n})\nexport class UserAddEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n    @Output() onDeletedUser = new EventEmitter();\n\n    loading = true;\n    editMode: boolean = false;\n    title: string;\n    emails: string;\n    type: OrganizationUserType = OrganizationUserType.User;\n    access: 'all' | 'selected' = 'selected';\n    collections: CollectionView[] = [];\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    organizationUserType = OrganizationUserType;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private collectionService: CollectionService, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.editMode = this.loading = this.organizationUserId != null;\n        await this.loadCollections();\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editUser');\n            try {\n                const user = await this.apiService.getOrganizationUser(this.organizationId, this.organizationUserId);\n                this.access = user.accessAll ? 'all' : 'selected';\n                this.type = user.type;\n                if (user.collections != null && this.collections != null) {\n                    user.collections.forEach((s) => {\n                        const collection = this.collections.filter((c) => c.id === s.id);\n                        if (collection != null && collection.length > 0) {\n                            (collection[0] as any).checked = true;\n                            collection[0].readOnly = s.readOnly;\n                            collection[0].hidePasswords = s.hidePasswords;\n                        }\n                    });\n                }\n            } catch { }\n        } else {\n            this.title = this.i18nService.t('inviteUser');\n        }\n\n        this.loading = false;\n    }\n\n    async loadCollections() {\n        const response = await this.apiService.getCollections(this.organizationId);\n        const collections = response.data.map((r) =>\n            new Collection(new CollectionData(r as CollectionDetailsResponse)));\n        this.collections = await this.collectionService.decryptMany(collections);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n        if (!(c as any).checked) {\n            c.readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.collections.forEach((c) => this.check(c, select));\n    }\n\n    async submit() {\n        let collections: SelectionReadOnlyRequest[] = null;\n        if (this.access !== 'all') {\n            collections = this.collections.filter((c) => (c as any).checked)\n                .map((c) => new SelectionReadOnlyRequest(c.id, !!c.readOnly, !!c.hidePasswords));\n        }\n\n        try {\n            if (this.editMode) {\n                const request = new OrganizationUserUpdateRequest();\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                this.formPromise = this.apiService.putOrganizationUser(this.organizationId, this.organizationUserId,\n                    request);\n            } else {\n                const request = new OrganizationUserInviteRequest();\n                request.emails = this.emails.trim().split(/\\s*,\\s*/);\n                request.accessAll = this.access === 'all';\n                request.type = this.type;\n                request.collections = collections;\n                this.formPromise = this.apiService.postOrganizationUserInvite(this.organizationId, request);\n            }\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.editMode ? 'Edited User' : 'Invited User' });\n            this.toasterService.popAsync('success', null,\n                this.i18nService.t(this.editMode ? 'editedUserId' : 'invitedUsers', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n\n    async delete() {\n        if (!this.editMode) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeUserConfirmation'), this.name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.apiService.deleteOrganizationUser(this.organizationId, this.organizationUserId);\n            await this.deletePromise;\n            this.analytics.eventTrack.next({ action: 'Deleted User' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('removedUserId', this.name));\n            this.onDeletedUser.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"userAddEditTitle\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"userAddEditTitle\">\n                    {{title}}\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <ng-container *ngIf=\"!editMode\">\n                    <p>{{'inviteUserDesc' | i18n}}</p>\n                    <div class=\"form-group mb-4\">\n                        <label for=\"emails\">{{'email' | i18n}}</label>\n                        <input id=\"emails\" class=\"form-control\" type=\"text\" name=\"Emails\" [(ngModel)]=\"emails\" required>\n                        <small class=\"text-muted\">{{'inviteMultipleEmailDesc' | i18n : '20'}}</small>\n                    </div>\n                </ng-container>\n                <h3>\n                    {{'userType' | i18n}}\n                    <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"\n                        href=\"https://bitwarden.com/help/article/user-types-access-control/#user-types\">\n                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                    </a>\n                </h3>\n                <div class=\"form-check mt-2 form-check-block\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeUser\"\n                        [value]=\"organizationUserType.User\" [(ngModel)]=\"type\">\n                    <label class=\"form-check-label\" for=\"userTypeUser\">\n                        {{'user' | i18n}}\n                        <small>{{'userDesc' | i18n}}</small>\n                    </label>\n                </div>\n                <div class=\"form-check mt-2 form-check-block\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeManager\"\n                        [value]=\"organizationUserType.Manager\" [(ngModel)]=\"type\">\n                    <label class=\"form-check-label\" for=\"userTypeManager\">\n                        {{'manager' | i18n}}\n                        <small>{{'managerDesc' | i18n}}</small>\n                    </label>\n                </div>\n                <div class=\"form-check mt-2 form-check-block\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeAdmin\"\n                        [value]=\"organizationUserType.Admin\" [(ngModel)]=\"type\">\n                    <label class=\"form-check-label\" for=\"userTypeAdmin\">\n                        {{'admin' | i18n}}\n                        <small>{{'adminDesc' | i18n}}</small>\n                    </label>\n                </div>\n                <div class=\"form-check mt-2 form-check-block\">\n                    <input class=\"form-check-input\" type=\"radio\" name=\"userType\" id=\"userTypeOwner\"\n                        [value]=\"organizationUserType.Owner\" [(ngModel)]=\"type\">\n                    <label class=\"form-check-label\" for=\"userTypeOwner\">\n                        {{'owner' | i18n}}\n                        <small>{{'ownerDesc' | i18n}}</small>\n                    </label>\n                </div>\n                <h3 class=\"mt-4 d-flex\">\n                    <div class=\"mb-2\">\n                        {{'accessControl' | i18n}}\n                        <a target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"\n                            href=\"https://bitwarden.com/help/article/user-types-access-control/#access-control\">\n                            <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                        </a>\n                    </div>\n                    <div class=\"ml-auto\" *ngIf=\"access === 'selected' && collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </h3>\n                <div class=\"form-group\" [ngClass]=\"{'mb-0': access !== 'selected'}\">\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessAll\" value=\"all\"\n                            [(ngModel)]=\"access\">\n                        <label class=\"form-check-label\" for=\"accessAll\">\n                            {{'userAccessAllItems' | i18n}}\n                        </label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"radio\" name=\"access\" id=\"accessSelected\" value=\"selected\"\n                            [(ngModel)]=\"access\">\n                        <label class=\"form-check-label\" for=\"accessSelected\">\n                            {{'userAccessSelectedCollections' | i18n}}\n                        </label>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"access === 'selected'\">\n                    <div *ngIf=\"!collections || !collections.length\">\n                        {{'noCollectionsInList' | i18n}}\n                    </div>\n                    <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                        <thead>\n                            <tr>\n                                <th>&nbsp;</th>\n                                <th>{{'name' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'hidePasswords' | i18n}}</th>\n                                <th width=\"100\" class=\"text-center\">{{'readOnly' | i18n}}</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let c of collections; let i = index\">\n                                <td class=\"table-list-checkbox\" (click)=\"check(c)\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                        appStopProp>\n                                </td>\n                                <td (click)=\"check(c)\">\n                                    {{c.name}}\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.hidePasswords\"\n                                        name=\"Collection[{{i}}].HidePasswords\" [disabled]=\"!c.checked\">\n                                </td>\n                                <td class=\"text-center\">\n                                    <input type=\"checkbox\" [(ngModel)]=\"c.readOnly\" name=\"Collection[{{i}}].ReadOnly\"\n                                        [disabled]=\"!c.checked\">\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n                <div class=\"ml-auto\">\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { OrganizationUserConfirmRequest } from 'jslib/models/request/organizationUserConfirmRequest';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-user-confirm',\n    templateUrl: 'user-confirm.component.html',\n})\nexport class UserConfirmComponent implements OnInit {\n    @Input() name: string;\n    @Input() userId: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onConfirmedUser = new EventEmitter();\n\n    dontAskAgain = false;\n    loading = true;\n    fingerprint: string;\n    formPromise: Promise<any>;\n\n    private publicKey: Uint8Array = null;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private storageService: StorageService) { }\n\n    async ngOnInit() {\n        try {\n            const publicKeyResponse = await this.apiService.getUserPublicKey(this.userId);\n            if (publicKeyResponse != null) {\n                this.publicKey = Utils.fromB64ToArray(publicKeyResponse.publicKey);\n                const fingerprint = await this.cryptoService.getFingerprint(this.userId, this.publicKey.buffer);\n                if (fingerprint != null) {\n                    this.fingerprint = fingerprint.join('-');\n                }\n            }\n        } catch { }\n        this.loading = false;\n    }\n\n    async submit() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.dontAskAgain) {\n            await this.storageService.save(ConstantsService.autoConfirmFingerprints, true);\n        }\n\n        try {\n            this.formPromise = this.doConfirmation();\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Confirmed User' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('hasBeenConfirmed', this.name));\n            this.onConfirmedUser.emit();\n        } catch { }\n    }\n\n    private async doConfirmation() {\n        const orgKey = await this.cryptoService.getOrgKey(this.organizationId);\n        const key = await this.cryptoService.rsaEncrypt(orgKey.key, this.publicKey.buffer);\n        const request = new OrganizationUserConfirmRequest();\n        request.key = key.encryptedString;\n        await this.apiService.postOrganizationUserConfirm(this.organizationId, this.organizationUserId, request);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"confirmUserTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"confirmUserTitle\">\n                    {{'confirmUser' | i18n}}\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>\n                    {{'fingerprintEnsureIntegrityVerify' | i18n}}\n                    <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\">\n                        {{'learnMore' | i18n}}</a>\n                </p>\n                <p><code>{{fingerprint}}</code></p>\n                <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" id=\"dontAskAgain\" name=\"DontAskAgain\"\n                        [(ngModel)]=\"dontAskAgain\">\n                    <label class=\"form-check-label\" for=\"dontAskAgain\">\n                        {{'dontAskFingerprintAgain' | i18n}}\n                    </label>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'confirm' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { OrganizationUserUpdateGroupsRequest } from 'jslib/models/request/organizationUserUpdateGroupsRequest';\nimport { GroupResponse } from 'jslib/models/response/groupResponse';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-user-groups',\n    templateUrl: 'user-groups.component.html',\n})\nexport class UserGroupsComponent implements OnInit {\n    @Input() name: string;\n    @Input() organizationUserId: string;\n    @Input() organizationId: string;\n    @Output() onSavedUser = new EventEmitter();\n\n    loading = true;\n    groups: GroupResponse[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const groupsResponse = await this.apiService.getGroups(this.organizationId);\n        const groups = groupsResponse.data.map((r) => r);\n        groups.sort(Utils.getSortFunction(this.i18nService, 'name'));\n        this.groups = groups;\n\n        try {\n            const userGroups = await this.apiService.getOrganizationUserGroups(\n                this.organizationId, this.organizationUserId);\n            if (userGroups != null && this.groups != null) {\n                userGroups.forEach((ug) => {\n                    const group = this.groups.filter((g) => g.id === ug);\n                    if (group != null && group.length > 0) {\n                        (group[0] as any).checked = true;\n                    }\n                });\n            }\n        } catch { }\n\n        this.loading = false;\n    }\n\n    check(g: GroupResponse, select?: boolean) {\n        (g as any).checked = select == null ? !(g as any).checked : select;\n        if (!(g as any).checked) {\n            (g as any).readOnly = false;\n        }\n    }\n\n    selectAll(select: boolean) {\n        this.groups.forEach((g) => this.check(g, select));\n    }\n\n    async submit() {\n        const request = new OrganizationUserUpdateGroupsRequest();\n        request.groupIds = this.groups.filter((g) => (g as any).checked).map((g) => g.id);\n\n        try {\n            this.formPromise = this.apiService.putOrganizationUserGroups(this.organizationId, this.organizationUserId,\n                request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Edited User Groups' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedGroupsForUser', this.name));\n            this.onSavedUser.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"groupAccessTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"groupAccessTitle\">\n                    {{'groupAccess' | i18n}}\n                    <small class=\"text-muted\" *ngIf=\"name\">{{name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <p>{{'groupAccessUserDesc' | i18n}}</p>\n                <div *ngIf=\"!groups || !groups.length\">\n                    {{'noGroupsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"groups && groups.length\">\n                    <tbody>\n                        <tr *ngFor=\"let g of groups; let i = index\">\n                            <td class=\"table-list-checkbox\" (click)=\"check(g)\">\n                                <input type=\"checkbox\" [(ngModel)]=\"g.checked\" name=\"Groups[{{i}}].Checked\" appStopProp>\n                            </td>\n                            <td (click)=\"check(g)\">\n                                {{g.name}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { PolicyType } from 'jslib/enums/policyType';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { PolicyResponse } from 'jslib/models/response/policyResponse';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { PolicyEditComponent } from './policy-edit.component';\n\n@Component({\n    selector: 'app-org-policies',\n    templateUrl: 'policies.component.html',\n})\nexport class PoliciesComponent implements OnInit {\n    @ViewChild('editTemplate', { read: ViewContainerRef, static: true }) editModalRef: ViewContainerRef;\n\n    loading = true;\n    organizationId: string;\n    policies: any[];\n\n    private modal: ModalComponent = null;\n    private orgPolicies: PolicyResponse[];\n    private policiesEnabledMap: Map<PolicyType, boolean> = new Map<PolicyType, boolean>();\n\n    constructor(private apiService: ApiService, private route: ActivatedRoute,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private platformUtilsService: PlatformUtilsService, private userService: UserService,\n        private router: Router) {\n        this.policies = [\n            {\n                name: i18nService.t('twoStepLogin'),\n                description: i18nService.t('twoStepLoginPolicyDesc'),\n                type: PolicyType.TwoFactorAuthentication,\n                enabled: false,\n            },\n            {\n                name: i18nService.t('masterPass'),\n                description: i18nService.t('masterPassPolicyDesc'),\n                type: PolicyType.MasterPassword,\n                enabled: false,\n            },\n            {\n                name: i18nService.t('passwordGenerator'),\n                description: i18nService.t('passwordGeneratorPolicyDesc'),\n                type: PolicyType.PasswordGenerator,\n                enabled: false,\n            },\n        ];\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            const organization = await this.userService.getOrganization(this.organizationId);\n            if (organization == null || !organization.usePolicies) {\n                this.router.navigate(['/organizations', this.organizationId]);\n                return;\n            }\n            await this.load();\n        });\n    }\n\n    async load() {\n        const response = await this.apiService.getPolicies(this.organizationId);\n        this.orgPolicies = response.data != null && response.data.length > 0 ? response.data : [];\n        this.orgPolicies.forEach((op) => {\n            this.policiesEnabledMap.set(op.type, op.enabled);\n        });\n        this.policies.forEach((p) => {\n            p.enabled = this.policiesEnabledMap.has(p.type) && this.policiesEnabledMap.get(p.type);\n        });\n        this.loading = false;\n    }\n\n    edit(p: any) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.editModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<PolicyEditComponent>(\n            PolicyEditComponent, this.editModalRef);\n\n        childComponent.name = p.name;\n        childComponent.description = p.description;\n        childComponent.type = p.type;\n        childComponent.organizationId = this.organizationId;\n        childComponent.onSavedPolicy.subscribe(() => {\n            this.modal.close();\n            this.load();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n}\n","<div class=\"page-header d-flex\">\n    <h1>{{'policies' | i18n}}</h1>\n</div>\n<ng-container *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<table class=\"table table-hover table-list\" *ngIf=\"!loading\">\n    <tbody>\n        <tr *ngFor=\"let p of policies\">\n            <td>\n                <a href=\"#\" appStopClick (click)=\"edit(p)\">{{p.name}}</a>\n                <span class=\"badge badge-success\" *ngIf=\"p.enabled\">{{'enabled' | i18n}}</span>\n                <small class=\"text-muted d-block\">{{p.description}}</small>\n            </td>\n        </tr>\n    </tbody>\n</table>\n<ng-template #editTemplate></ng-template>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PolicyType } from 'jslib/enums/policyType';\n\nimport { PolicyRequest } from 'jslib/models/request/policyRequest';\n\nimport { PolicyResponse } from 'jslib/models/response/policyResponse';\n\n@Component({\n    selector: 'app-policy-edit',\n    templateUrl: 'policy-edit.component.html',\n})\nexport class PolicyEditComponent implements OnInit {\n    @Input() name: string;\n    @Input() description: string;\n    @Input() type: PolicyType;\n    @Input() organizationId: string;\n    @Output() onSavedPolicy = new EventEmitter();\n\n    policyType = PolicyType;\n    loading = true;\n    enabled = false;\n    formPromise: Promise<any>;\n    passwordScores: any[];\n    defaultTypes: any[];\n\n    // Master password\n\n    masterPassMinComplexity?: number = null;\n    masterPassMinLength?: number;\n    masterPassRequireUpper?: number;\n    masterPassRequireLower?: number;\n    masterPassRequireNumbers?: number;\n    masterPassRequireSpecial?: number;\n\n    // Password generator\n\n    passGenDefaultType?: string;\n    passGenMinLength?: number;\n    passGenUseUpper?: boolean;\n    passGenUseLower?: boolean;\n    passGenUseNumbers?: boolean;\n    passGenUseSpecial?: boolean;\n    passGenMinNumbers?: number;\n    passGenMinSpecial?: number;\n    passGenMinNumberWords?: number;\n    passGenCapitalize?: boolean;\n    passGenIncludeNumber?: boolean;\n\n    private policy: PolicyResponse;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) {\n        this.passwordScores = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('weak') + ' (0)', value: 0 },\n            { name: i18nService.t('weak') + ' (1)', value: 1 },\n            { name: i18nService.t('weak') + ' (2)', value: 2 },\n            { name: i18nService.t('good') + ' (3)', value: 3 },\n            { name: i18nService.t('strong') + ' (4)', value: 4 },\n        ];\n        this.defaultTypes = [\n            { name: i18nService.t('userPreference'), value: null },\n            { name: i18nService.t('password'), value: 'password' },\n            { name: i18nService.t('passphrase'), value: 'passphrase' },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.loading = false;\n    }\n\n    async load() {\n        try {\n            this.policy = await this.apiService.getPolicy(this.organizationId, this.type);\n\n            if (this.policy != null) {\n                this.enabled = this.policy.enabled;\n                if (this.policy.data != null) {\n                    switch (this.type) {\n                        case PolicyType.PasswordGenerator:\n                            this.passGenDefaultType = this.policy.data.defaultType;\n                            this.passGenMinLength = this.policy.data.minLength;\n                            this.passGenUseUpper = this.policy.data.useUpper;\n                            this.passGenUseLower = this.policy.data.useLower;\n                            this.passGenUseNumbers = this.policy.data.useNumbers;\n                            this.passGenUseSpecial = this.policy.data.useSpecial;\n                            this.passGenMinNumbers = this.policy.data.minNumbers;\n                            this.passGenMinSpecial = this.policy.data.minSpecial;\n                            this.passGenMinNumberWords = this.policy.data.minNumberWords;\n                            this.passGenCapitalize = this.policy.data.capitalize;\n                            this.passGenIncludeNumber = this.policy.data.includeNumber;\n                            break;\n                        case PolicyType.MasterPassword:\n                            this.masterPassMinComplexity = this.policy.data.minComplexity;\n                            this.masterPassMinLength = this.policy.data.minLength;\n                            this.masterPassRequireUpper = this.policy.data.requireUpper;\n                            this.masterPassRequireLower = this.policy.data.requireLower;\n                            this.masterPassRequireNumbers = this.policy.data.requireNumbers;\n                            this.masterPassRequireSpecial = this.policy.data.requireSpecial;\n                            break;\n                        default:\n                            break;\n                    }\n                }\n            }\n        } catch (e) {\n            if (e.statusCode === 404) {\n                this.enabled = false;\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    async submit() {\n        const request = new PolicyRequest();\n        request.enabled = this.enabled;\n        request.type = this.type;\n        request.data = null;\n        switch (this.type) {\n            case PolicyType.PasswordGenerator:\n                request.data = {\n                    defaultType: this.passGenDefaultType,\n                    minLength: this.passGenMinLength || null,\n                    useUpper: this.passGenUseUpper,\n                    useLower: this.passGenUseLower,\n                    useNumbers: this.passGenUseNumbers,\n                    useSpecial: this.passGenUseSpecial,\n                    minNumbers: this.passGenMinNumbers || null,\n                    minSpecial: this.passGenMinSpecial || null,\n                    minNumberWords: this.passGenMinNumberWords || null,\n                    capitalize: this.passGenCapitalize,\n                    includeNumber: this.passGenIncludeNumber,\n                };\n                break;\n            case PolicyType.MasterPassword:\n                request.data = {\n                    minComplexity: this.masterPassMinComplexity || null,\n                    minLength: this.masterPassMinLength || null,\n                    requireUpper: this.masterPassRequireUpper,\n                    requireLower: this.masterPassRequireLower,\n                    requireNumbers: this.masterPassRequireNumbers,\n                    requireSpecial: this.masterPassRequireSpecial,\n                };\n                break;\n            default:\n                break;\n        }\n        try {\n            this.formPromise = this.apiService.putPolicy(this.organizationId, this.type, request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Edited Policy' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('editedPolicyId', this.name));\n            this.onSavedPolicy.emit();\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"policiesEditTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"policiesEditTitle\">{{'editPolicy' | i18n}} - {{name}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"loading\">\n                <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span class=\"sr-only\">{{'loading' | i18n}}</span>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!loading\">\n                <p>{{description}}</p>\n                <app-callout type=\"warning\" *ngIf=\"type === policyType.TwoFactorAuthentication\"\n                    title=\"{{'warning' | i18n}}\" icon=\"fa-warning\">\n                    {{'twoStepLoginPolicyWarning' | i18n}}\n                </app-callout>\n                <div class=\"form-group\">\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"enabled\" [(ngModel)]=\"enabled\"\n                            name=\"Enabled\">\n                        <label class=\"form-check-label\" for=\"enabled\">{{'enabled' | i18n}}</label>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"type === policyType.MasterPassword\">\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"masterPassMinComplexity\">{{'minComplexityScore' | i18n}}</label>\n                            <select id=\"masterPassMinComplexity\" name=\"MasterPassMinComplexity\"\n                                [(ngModel)]=\"masterPassMinComplexity\" class=\"form-control\">\n                                <option *ngFor=\"let o of passwordScores\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"masterPassMinLength\">{{'minLength' | i18n}}</label>\n                            <input id=\"masterPassMinLength\" class=\"form-control\" type=\"number\" min=\"8\"\n                                name=\"MasterPassMinLength\" [(ngModel)]=\"masterPassMinLength\">\n                        </div>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireUpper\"\n                            [(ngModel)]=\"masterPassRequireUpper\" name=\"MasterPassRequireUpper\">\n                        <label class=\"form-check-label\" for=\"masterPassRequireUpper\">A-Z</label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireLower\"\n                            [(ngModel)]=\"masterPassRequireLower\" name=\"MasterPassRequireLower\">\n                        <label class=\"form-check-label\" for=\"masterPassRequireLower\">a-z</label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireNumbers\"\n                            [(ngModel)]=\"masterPassRequireNumbers\" name=\"MasterPassRequireNumbers\">\n                        <label class=\"form-check-label\" for=\"masterPassRequireNumbers\">0-9</label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"masterPassRequireSpecial\"\n                            [(ngModel)]=\"masterPassRequireSpecial\" name=\"MasterPassRequireSpecial\">\n                        <label class=\"form-check-label\" for=\"masterPassRequireSpecial\">!@#$%^&amp;*</label>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"type === policyType.PasswordGenerator\">\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group  mb-0\">\n                            <label for=\"passGenDefaultType\">{{'defaultType' | i18n}}</label>\n                            <select id=\"passGenDefaultType\" name=\"PassGenDefaultType\" [(ngModel)]=\"passGenDefaultType\"\n                                class=\"form-control\">\n                                <option *ngFor=\"let o of defaultTypes\" [ngValue]=\"o.value\">{{o.name}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <h3 class=\"mt-4\">{{'password' | i18n}}</h3>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"passGenMinLength\">{{'minLength' | i18n}}</label>\n                            <input id=\"passGenMinLength\" class=\"form-control\" type=\"number\" name=\"PassGenMinLength\"\n                                min=\"5\" max=\"128\" [(ngModel)]=\"passGenMinLength\">\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"passGenMinNumbers\">{{'minNumbers' | i18n}}</label>\n                            <input id=\"passGenMinNumbers\" class=\"form-control\" type=\"number\" name=\"PassGenMinNumbers\"\n                                min=\"0\" max=\"9\" [(ngModel)]=\"passGenMinNumbers\">\n                        </div>\n                        <div class=\"col-6 form-group\">\n                            <label for=\"passGenMinSpecial\">{{'minSpecial' | i18n}}</label>\n                            <input id=\"passGenMinSpecial\" class=\"form-control\" type=\"number\" name=\"PassGenMinSpecial\"\n                                min=\"0\" max=\"9\" [(ngModel)]=\"passGenMinSpecial\">\n                        </div>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseUpper\"\n                            [(ngModel)]=\"passGenUseUpper\" name=\"PassGenUseUpper\">\n                        <label class=\"form-check-label\" for=\"passGenUseUpper\">A-Z</label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseLower\"\n                            [(ngModel)]=\"passGenUseLower\" name=\"PassGenUseLower\">\n                        <label class=\"form-check-label\" for=\"passGenUseLower\">a-z</label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseNumbers\"\n                            [(ngModel)]=\"passGenUseNumbers\" name=\"PassGenUseNumbers\">\n                        <label class=\"form-check-label\" for=\"passGenUseNumbers\">0-9</label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenUseSpecial\"\n                            [(ngModel)]=\"passGenUseSpecial\" name=\"PassGenUseSpecial\">\n                        <label class=\"form-check-label\" for=\"passGenUseSpecial\">!@#$%^&amp;*</label>\n                    </div>\n                    <h3 class=\"mt-4\">{{'passphrase' | i18n}}</h3>\n                    <div class=\"row\">\n                        <div class=\"col-6 form-group\">\n                            <label for=\"passGenMinNumberWords\">{{'minimumNumberOfWords' | i18n}}</label>\n                            <input id=\"passGenMinNumberWords\" class=\"form-control\" type=\"number\"\n                                name=\"PassGenMinNumberWords\" min=\"3\" max=\"20\" [(ngModel)]=\"passGenMinNumberWords\">\n                        </div>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenCapitalize\"\n                            [(ngModel)]=\"passGenCapitalize\" name=\"PassGenCapitalize\">\n                        <label class=\"form-check-label\" for=\"passGenCapitalize\">{{'capitalize' | i18n}}</label>\n                    </div>\n                    <div class=\"form-check\">\n                        <input class=\"form-check-input\" type=\"checkbox\" id=\"passGenIncludeNumber\"\n                            [(ngModel)]=\"passGenIncludeNumber\" name=\"PassGenIncludeNumber\">\n                        <label class=\"form-check-label\" for=\"passGenIncludeNumber\">{{'includeNumber' | i18n}}</label>\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { OrganizationUpdateRequest } from 'jslib/models/request/organizationUpdateRequest';\nimport { OrganizationResponse } from 'jslib/models/response/organizationResponse';\n\nimport { ModalComponent } from '../../modal.component';\nimport { PurgeVaultComponent } from '../../settings/purge-vault.component';\nimport { TaxInfoComponent } from '../../settings/tax-info.component';\nimport { ApiKeyComponent } from './api-key.component';\nimport { DeleteOrganizationComponent } from './delete-organization.component';\nimport { RotateApiKeyComponent } from './rotate-api-key.component';\n\n@Component({\n    selector: 'app-org-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deleteOrganizationTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n    @ViewChild('purgeOrganizationTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('apiKeyTemplate', { read: ViewContainerRef, static: true }) apiKeyModalRef: ViewContainerRef;\n    @ViewChild('rotateApiKeyTemplate', { read: ViewContainerRef, static: true }) rotateApiKeyModalRef: ViewContainerRef;\n    @ViewChild(TaxInfoComponent) taxInfo: TaxInfoComponent;\n\n    selfHosted = false;\n    loading = true;\n    canUseApi = false;\n    org: OrganizationResponse;\n    formPromise: Promise<any>;\n    taxFormPromise: Promise<any>;\n\n    private organizationId: string;\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver,\n        private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private route: ActivatedRoute, private syncService: SyncService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.selfHosted = this.platformUtilsService.isSelfHost();\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            try {\n                this.org = await this.apiService.getOrganization(this.organizationId);\n                this.canUseApi = this.org.useApi;\n            } catch { }\n        });\n        this.loading = false;\n    }\n\n    async submit() {\n        try {\n            const request = new OrganizationUpdateRequest();\n            request.name = this.org.name;\n            request.businessName = this.org.businessName;\n            request.billingEmail = this.org.billingEmail;\n            request.identifier = this.org.identifier;\n            this.formPromise = this.apiService.putOrganization(this.organizationId, request).then(() => {\n                return this.syncService.fullSync(true);\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated Organization Settings' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('organizationUpdated'));\n        } catch { }\n    }\n\n    async submitTaxInfo() {\n        this.taxFormPromise = this.taxInfo.submitTaxInfo();\n        await this.taxFormPromise;\n        this.analytics.eventTrack.next({ action: 'Updated Organization Tax Info' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('taxInfoUpdated'));\n    }\n\n    deleteOrganization() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<DeleteOrganizationComponent>(\n            DeleteOrganizationComponent, this.deleteModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    viewApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.apiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ApiKeyComponent>(ApiKeyComponent, this.apiKeyModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    rotateApiKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.rotateApiKeyModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<RotateApiKeyComponent>(RotateApiKeyComponent, this.rotateApiKeyModalRef);\n        childComponent.organizationId = this.organizationId;\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'myOrganization' | i18n}}</h1>\n</div>\n<div *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</div>\n<form *ngIf=\"org && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"name\">{{'organizationName' | i18n}}</label>\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"org.name\"\n                    [disabled]=\"selfHosted\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"billingEmail\">{{'billingEmail' | i18n}}</label>\n                <input id=\"billingEmail\" class=\"form-control\" type=\"text\" name=\"BillingEmail\"\n                    [(ngModel)]=\"org.billingEmail\" [disabled]=\"selfHosted\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"businessName\">{{'businessName' | i18n}}</label>\n                <input id=\"businessName\" class=\"form-control\" type=\"text\" name=\"BusinessName\"\n                    [(ngModel)]=\"org.businessName\" [disabled]=\"selfHosted\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"identifier\">{{'identifier' | i18n}}</label>\n                <input id=\"identifier\" class=\"form-control\" type=\"text\" name=\"Identifier\"\n                    [(ngModel)]=\"org.identifier\">\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <app-avatar data=\"{{org.name}}\" dynamic=\"true\" size=\"75\" fontSize=\"35\"></app-avatar>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n</form>\n<ng-container *ngIf=\"canUseApi\">\n    <div class=\"secondary-header border-0 mb-0\">\n        <h1>{{'apiKey' | i18n}}</h1>\n    </div>\n    <p>\n        {{'apiKeyDesc' | i18n}}\n        <a href=\"https://docs.bitwarden.com\" target=\"_blank\" rel=\"noopener\">\n            {{'learnMore' | i18n}}\n        </a>\n    </p>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"viewApiKey()\">{{'viewApiKey' | i18n}}</button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"rotateApiKey()\">{{'rotateApiKey' | i18n}}</button>\n</ng-container>\n<div class=\"secondary-header border-0 mb-0\">\n    <h1>{{'taxInformation' | i18n}}</h1>\n</div>\n<p>{{'taxInformationDesc' | i18n}}</p>\n<div *ngIf=\"!org || loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</div>\n<form *ngIf=\"org && !loading\" #formTax (ngSubmit)=\"submitTaxInfo()\" [appApiAction]=\"taxFormPromise\" ngNativeValidate>\n    <app-tax-info></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"formTax.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n</form>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n    <h1>{{'dangerZone' | i18n}}</h1>\n</div>\n<div class=\"card border-danger\">\n    <div class=\"card-body\">\n        <p>{{'dangerZoneDesc' | i18n}}</p>\n        <button type=\"button\" class=\"btn btn-outline-danger\"\n            (click)=\"deleteOrganization()\">{{'deleteOrganization' | i18n}}</button>\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button>\n    </div>\n</div>\n<ng-template #deleteOrganizationTemplate></ng-template>\n<ng-template #purgeOrganizationTemplate></ng-template>\n<ng-template #apiKeyTemplate></ng-template>\n<ng-template #rotateApiKeyTemplate></ng-template>\n","import { TaxInfoUpdateRequest } from './taxInfoUpdateRequest';\n\nexport class OrganizationTaxInfoUpdateRequest extends TaxInfoUpdateRequest {\n    taxId: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n}\n","export class TaxInfoUpdateRequest {\n    country: string;\n    postalCode: string;\n}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\nimport { ApiKeyResponse } from 'jslib/models/response/apiKeyResponse';\n\n@Component({\n    selector: 'app-api-key',\n    templateUrl: 'api-key.component.html',\n})\nexport class ApiKeyComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<ApiKeyResponse>;\n    clientId: string;\n    clientSecret: string;\n    scope: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postOrganizationApiKey(this.organizationId, request);\n            const response = await this.formPromise;\n            this.clientSecret = response.apiKey;\n            this.clientId = 'organization.' + this.organizationId;\n            this.scope = 'api.organization';\n            this.analytics.eventTrack.next({ action: 'Viewed Organization API Key' });\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"apiKeyTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"apiKeyTitle\">{{'apiKey' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'apiKeyDesc' | i18n}}</p>\n                <ng-container *ngIf=\"!clientSecret\">\n                    <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                    <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                        [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n                </ng-container>\n                <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{'apiKeyWarning' | i18n}}</app-callout>\n                <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\"\n                    *ngIf=\"clientSecret\">\n                    <p class=\"mb-1\">\n                        <strong>client_id:</strong><br>\n                        <code>{{clientId}}</code>\n                    </p>\n                    <p class=\"mb-1\">\n                        <strong>client_secret:</strong><br>\n                        <code>{{clientSecret}}</code>\n                    </p>\n                    <p class=\"mb-1\">\n                        <strong>scope:</strong><br>\n                        <code>{{scope}}</code>\n                    </p>\n                    <p class=\"mb-0\">\n                        <strong>grant_type:</strong><br>\n                        <code>client_credentials</code>\n                    </p>\n                </app-callout>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"\n                    *ngIf=\"!clientSecret\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'viewApiKey' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-organization',\n    templateUrl: 'delete-organization.component.html',\n})\nexport class DeleteOrganizationComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteOrganization(this.organizationId, request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Organization' });\n            this.toasterService.popAsync('success', this.i18nService.t('organizationDeleted'),\n                this.i18nService.t('organizationDeletedDesc'));\n            this.router.navigate(['/']);\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteOrganizationTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"deleteOrganizationTitle\">{{'deleteOrganization' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'deleteOrganizationDesc' | i18n}}</p>\n                <app-callout type=\"warning\">{{'deleteOrganizationWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'deleteOrganization' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\nimport { ApiKeyResponse } from 'jslib/models/response/apiKeyResponse';\n\n@Component({\n    selector: 'app-rotate-api-key',\n    templateUrl: 'rotate-api-key.component.html',\n})\nexport class RotateApiKeyComponent {\n    organizationId: string;\n\n    masterPassword: string;\n    formPromise: Promise<ApiKeyResponse>;\n    clientId: string;\n    clientSecret: string;\n    scope: string;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private router: Router) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postOrganizationRotateApiKey(this.organizationId, request);\n            const response = await this.formPromise;\n            this.clientSecret = response.apiKey;\n            this.clientId = 'organization.' + this.organizationId;\n            this.scope = 'api.organization';\n            this.analytics.eventTrack.next({ action: 'Rotated Organization API Key' });\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"rotateKeyTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"rotateKeyTitle\">{{'rotateApiKey' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'apiKeyRotateDesc' | i18n}}</p>\n                <ng-container *ngIf=\"!clientSecret\">\n                    <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                    <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                        [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n                </ng-container>\n                <app-callout type=\"warning\" *ngIf=\"clientSecret\">{{'apiKeyWarning' | i18n}}</app-callout>\n                <app-callout type=\"info\" title=\"{{'oauth2ClientCredentials' | i18n}}\" icon=\"fa-key\"\n                    *ngIf=\"clientSecret\">\n                    <p class=\"mb-1\">\n                        <strong>client_id:</strong><br>\n                        <code>{{clientId}}</code>\n                    </p>\n                    <p class=\"mb-1\">\n                        <strong>client_secret:</strong><br>\n                        <code>{{clientSecret}}</code>\n                    </p>\n                    <p class=\"mb-1\">\n                        <strong>scope:</strong><br>\n                        <code>{{scope}}</code>\n                    </p>\n                    <p class=\"mb-0\">\n                        <strong>grant_type:</strong><br>\n                        <code>client_credentials</code>\n                    </p>\n                </app-callout>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\"\n                    *ngIf=\"!clientSecret\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'rotateApiKey' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { UserBillingComponent } from '../../settings/user-billing.component';\n\n@Component({\n    selector: 'app-org-billing',\n    templateUrl: '../../settings/user-billing.component.html',\n})\nexport class OrganizationBillingComponent extends UserBillingComponent implements OnInit {\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        private route: ActivatedRoute, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n}\n","export class WebConstants {\n    static readonly stripeTestKey = 'pk_test_KPoCfZXu7mznb9uSCPZ2JpTD';\n    static readonly stripeLiveKey = 'pk_live_bpN0P37nMxrMQkcaHXtAybJk';\n    static readonly btSandboxKey = 'sandbox_r72q8jq6_9pnxkwm75f87sdc2';\n    static readonly btProductionKey = 'production_qfbsv8kc_njj2zjtyngtjmbjd';\n    static readonly paypal = {\n        businessIdProduction: '4ZDA7DLUUJGMN',\n        businessIdSandbox: 'AD3LAUZSNVPJY',\n        buttonActionProduction: 'https://www.paypal.com/cgi-bin/webscr',\n        buttonActionSandbox: 'https://www.sandbox.paypal.com/cgi-bin/webscr',\n    };\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { OrganizationSubscriptionResponse } from 'jslib/models/response/organizationSubscriptionResponse';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { PlanType } from 'jslib/enums/planType';\n\n@Component({\n    selector: 'app-org-subscription',\n    templateUrl: 'organization-subscription.component.html',\n})\nexport class OrganizationSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    organizationId: string;\n    adjustSeatsAdd = true;\n    showAdjustSeats = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    showDownloadLicense = false;\n    showChangePlan = false;\n    sub: OrganizationSubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService,\n        private i18nService: I18nService, private analytics: Angulartics2,\n        private toasterService: ToasterService, private messagingService: MessagingService,\n        private route: ActivatedRoute) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await this.load();\n            this.firstLoaded = true;\n        });\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n        this.loading = true;\n        this.sub = await this.apiService.getOrganizationSubscription(this.organizationId);\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postOrganizationReinstate(this.organizationId);\n            await this.reinstatePromise;\n            this.analytics.eventTrack.next({ action: 'Reinstated Plan' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postOrganizationCancel(this.organizationId);\n            await this.cancelPromise;\n            this.analytics.eventTrack.next({ action: 'Canceled Plan' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    async changePlan() {\n        if (this.subscription == null && this.sub.planType === PlanType.Free) {\n            this.showChangePlan = !this.showChangePlan;\n            return;\n        }\n        const contactSupport = await this.platformUtilsService.showDialog(this.i18nService.t('changeBillingPlanDesc'),\n            this.i18nService.t('changeBillingPlan'), this.i18nService.t('contactSupport'), this.i18nService.t('close'));\n        if (contactSupport) {\n            this.platformUtilsService.launchUri('https://bitwarden.com/contact');\n        }\n    }\n\n    closeChangePlan(changed: boolean) {\n        this.showChangePlan = false;\n    }\n\n    downloadLicense() {\n        this.showDownloadLicense = !this.showDownloadLicense;\n    }\n\n    closeDownloadLicense() {\n        this.showDownloadLicense = false;\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(updated: boolean) {\n        this.showUpdateLicense = false;\n        if (updated) {\n            this.load();\n            this.messagingService.send('updatedOrgLicense');\n        }\n    }\n\n    adjustSeats(add: boolean) {\n        this.adjustSeatsAdd = add;\n        this.showAdjustSeats = true;\n    }\n\n    closeSeats(load: boolean) {\n        this.showAdjustSeats = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get isExpired() {\n        return this.sub != null && this.sub.expiration != null &&\n            new Date(this.sub.expiration) < new Date();\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get billingInterval() {\n        const monthly = !this.sub.plan.isAnnual;\n        return monthly ? 'month' : 'year';\n    }\n\n    get storageGbPrice() {\n        return this.sub.plan.additionalStoragePricePerGb;\n    }\n\n    get seatPrice() {\n        return this.sub.plan.seatPrice;\n    }\n\n    get canAdjustSeats() {\n        return this.sub.plan.hasAdditionalSeatsOption;\n    }\n\n    get canDownloadLicense() {\n        return (this.sub.planType !== PlanType.Free && this.subscription == null) ||\n            (this.subscription != null && !this.subscription.cancelled);\n    }\n}\n","<div class=\"page-header\">\n    <h1>\n        {{'subscription' | i18n}}\n        <small *ngIf=\"firstLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </small>\n    </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n    <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\">\n        {{'subscriptionCanceled' | i18n}}</app-callout>\n    <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\">\n        <p>{{'subscriptionPendingCanceled' | i18n}}</p>\n        <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\"\n            [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'reinstateSubscription' | i18n}}</span>\n        </button>\n    </app-callout>\n    <dl *ngIf=\"selfHosted\">\n        <dt>{{'billingPlan' | i18n}}</dt>\n        <dd>{{sub.plan.name}}</dd>\n        <dt>{{'expiration' | i18n}}</dt>\n        <dd *ngIf=\"sub.expiration\">\n            {{sub.expiration | date:'mediumDate'}}\n            <span *ngIf=\"isExpired\" class=\"text-danger ml-2\">\n                <i class=\"fa fa-exclamation-triangle\" aria-hidden=\"true\"></i>\n                {{'licenseIsExpired' | i18n}}\n            </span>\n        </dd>\n        <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd>\n    </dl>\n    <div class=\"row\" *ngIf=\"!selfHosted\">\n        <div class=\"col-4\">\n            <dl>\n                <dt>{{'billingPlan' | i18n}}</dt>\n                <dd>{{sub.plan.name}}</dd>\n                <ng-container *ngIf=\"subscription\">\n                    <dt>{{'status' | i18n}}</dt>\n                    <dd>\n                        <span class=\"text-capitalize\">{{subscription.status || '-'}}</span>\n                        <span class=\"badge badge-warning\"\n                            *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span>\n                    </dd>\n                    <dt>{{'nextCharge' | i18n}}</dt>\n                    <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$'))\n                        : '-'}}\n                    </dd>\n                </ng-container>\n            </dl>\n        </div>\n        <div class=\"col-8\" *ngIf=\"subscription\">\n            <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong>\n            <table class=\"table\">\n                <tbody>\n                    <tr *ngFor=\"let i of subscription.items\">\n                        <td>\n                            {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}}\n                        </td>\n                        <td>\n                            {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <ng-container *ngIf=\"selfHosted\">\n        <div>\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n                {{'updateLicense' | i18n}}\n            </button>\n            <a href=\"https://vault.bitwarden.com\" target=\"_blank\" rel=\"noopener\" class=\"btn btn-outline-secondary\">\n                {{'manageSubscription' | i18n}}\n            </a>\n        </div>\n        <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n            <div class=\"card-body\">\n                <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\"\n                    (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button>\n                <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3>\n                <app-update-license [organizationId]=\"organizationId\" (onUpdated)=\"closeUpdateLicense(true)\"\n                    (onCanceled)=\"closeUpdateLicense(false)\"></app-update-license>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!selfHosted\">\n        <div class=\"d-flex\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"changePlan()\" *ngIf=\"!showChangePlan\">\n                {{'changeBillingPlan' | i18n}}\n            </button>\n            <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"downloadLicense()\"\n                *ngIf=\"canDownloadLicense\" [disabled]=\"showDownloadLicense\">\n                {{'downloadLicense' | i18n}}\n            </button>\n            <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\"\n                [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\"\n                *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span>{{'cancelSubscription' | i18n}}</span>\n            </button>\n        </div>\n        <app-change-plan [organizationId]=\"organizationId\" (onChanged)=\"closeChangePlan(true)\"\n            (onCanceled)=\"closeChangePlan(false)\" *ngIf=\"showChangePlan\"></app-change-plan>\n        <div class=\"mt-3\" *ngIf=\"showDownloadLicense\">\n            <app-download-license [organizationId]=\"organizationId\" (onDownloaded)=\"closeDownloadLicense()\"\n                (onCanceled)=\"closeDownloadLicense()\"></app-download-license>\n        </div>\n        <h2 class=\"spaced-header\">{{'userSeats' | i18n}}</h2>\n        <p>{{'subscriptionUserSeats' | i18n : sub.seats}}</p>\n        <ng-container *ngIf=\"subscription && canAdjustSeats && !subscription.cancelled && !subscriptionMarkedForCancel\">\n            <div class=\"mt-3\">\n                <div class=\"d-flex\" *ngIf=\"!showAdjustSeats\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustSeats(true)\">\n                        {{'addSeats' | i18n}}\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustSeats(false)\">\n                        {{'removeSeats' | i18n}}\n                    </button>\n                </div>\n                <app-adjust-seats [seatPrice]=\"seatPrice\" [add]=\"adjustSeatsAdd\" [organizationId]=\"organizationId\"\n                    [interval]=\"billingInterval\" (onAdjusted)=\"closeSeats(true)\" (onCanceled)=\"closeSeats(false)\"\n                    *ngIf=\"showAdjustSeats\"></app-adjust-seats>\n            </div>\n        </ng-container>\n        <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2>\n        <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p>\n        <div class=\"progress\">\n            <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\"\n                [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                {{(storagePercentage / 100) | percent}}</div>\n        </div>\n        <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n            <div class=\"mt-3\">\n                <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n                        {{'addStorage' | i18n}}\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary ml-1\" (click)=\"adjustStorage(false)\">\n                        {{'removeStorage' | i18n}}\n                    </button>\n                </div>\n                <app-adjust-storage [storageGbPrice]=\"storageGbPrice\" [add]=\"adjustStorageAdd\"\n                    [organizationId]=\"organizationId\" [interval]=\"billingInterval\" (onAdjusted)=\"closeStorage(true)\"\n                    (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage>\n            </div>\n        </ng-container>\n    </ng-container>\n</ng-container>\n","export enum PlanType {\n    Free = 0,\n    FamiliesAnnually2019 = 1,\n    TeamsMonthly2019 = 2,\n    TeamsAnnually2019 = 3,\n    EnterpriseMonthly2019 = 4,\n    EnterpriseAnnually2019 = 5,\n    Custom = 6,\n    FamiliesAnnually = 7,\n    TeamsMonthly = 8,\n    TeamsAnnually = 9,\n    EnterpriseMonthly = 10,\n    EnterpriseAnnually = 11,\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-change-plan',\n    templateUrl: 'change-plan.component.html',\n})\nexport class ChangePlanComponent {\n    @Input() organizationId: string;\n    @Output() onChanged = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        try {\n            this.platformUtilsService.eventTrack('Changed Plan');\n            this.onChanged.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<div class=\"card card-org-plans\">\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\n                aria-hidden=\"true\">&times;</span></button>\n        <h2 class=\"card-body-header\">{{'changeBillingPlan' | i18n}}</h2>\n        <p class=\"mb-0\">{{'changeBillingPlanUpgrade' | i18n}}</p>\n        <app-organization-plans [showFree]=\"false\" [showCancel]=\"true\" plan=\"families\" [organizationId]=\"organizationId\"\n            (onCanceled)=\"cancel()\">\n        </app-organization-plans>\n    </div>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\n@Component({\n    selector: 'app-download-license',\n    templateUrl: 'download-license.component.html',\n})\nexport class DownloadLicenseComponent {\n    @Input() organizationId: string;\n    @Output() onDownloaded = new EventEmitter();\n    @Output() onCanceled = new EventEmitter();\n\n    installationId: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.installationId == null || this.installationId === '') {\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.getOrganizationLicense(this.organizationId, this.installationId);\n            const license = await this.formPromise;\n            const licenseString = JSON.stringify(license, null, 2);\n            this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_organization_license.json');\n            this.platformUtilsService.eventTrack('Downloaded License');\n            this.onDownloaded.emit();\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\n                aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{'downloadLicense' | i18n}}</h3>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <div class=\"d-flex\">\n                    <label for=\"installationId\">{{'enterInstallationId' | i18n}}</label>\n                    <a class=\"ml-auto\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\"\n                        href=\"https://help.bitwarden.com/article/licensing-on-premise/#organization-account-sharing\">\n                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                    </a>\n                </div>\n                <input id=\"installationId\" class=\"form-control\" type=\"text\" name=\"InstallationId\"\n                    [(ngModel)]=\"installationId\" required>\n            </div>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n    </div>\n</form>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n    ViewChild,\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { SeatRequest } from 'jslib/models/request/seatRequest';\n\nimport { PaymentComponent } from '../../settings/payment.component';\n\n@Component({\n    selector: 'app-adjust-seats',\n    templateUrl: 'adjust-seats.component.html',\n})\nexport class AdjustSeatsComponent {\n    @Input() seatPrice = 0;\n    @Input() add = true;\n    @Input() organizationId: string;\n    @Input() interval = 'year';\n    @Output() onAdjusted = new EventEmitter<number>();\n    @Output() onCanceled = new EventEmitter();\n\n    @ViewChild(PaymentComponent, { static: true }) paymentComponent: PaymentComponent;\n\n    seatAdjustment = 0;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private router: Router, private activatedRoute: ActivatedRoute) { }\n\n    async submit() {\n        try {\n            const request = new SeatRequest();\n            request.seatAdjustment = this.seatAdjustment;\n            if (!this.add) {\n                request.seatAdjustment *= -1;\n            }\n\n            let paymentFailed = false;\n            const action = async () => {\n                const result = await this.apiService.postOrganizationSeat(this.organizationId, request);\n                if (result != null && result.paymentIntentClientSecret != null) {\n                    try {\n                        await this.paymentComponent.handleStripeCardPayment(result.paymentIntentClientSecret, null);\n                    } catch {\n                        paymentFailed = true;\n                    }\n                }\n            };\n            this.formPromise = action();\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: this.add ? 'Added Seats' : 'Removed Seats' });\n            this.onAdjusted.emit(this.seatAdjustment);\n            if (paymentFailed) {\n                this.toasterService.popAsync({\n                    body: this.i18nService.t('couldNotChargeCardPayInvoice'),\n                    type: 'warning',\n                    timeout: 10000,\n                });\n                this.router.navigate(['../billing'], { relativeTo: this.activatedRoute });\n            } else {\n                this.toasterService.popAsync('success', null,\n                    this.i18nService.t('adjustedSeats', request.seatAdjustment.toString()));\n            }\n        } catch { }\n    }\n\n    cancel() {\n        this.onCanceled.emit();\n    }\n\n    get adjustedSeatTotal(): number {\n        return this.seatAdjustment * this.seatPrice;\n    }\n}\n","<form #form class=\"card\" (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"card-body\">\n        <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\" (click)=\"cancel()\"><span\n                aria-hidden=\"true\">&times;</span></button>\n        <h3 class=\"card-body-header\">{{(add ? 'addSeats' : 'removeSeats') | i18n}}</h3>\n        <div class=\"row\">\n            <div class=\"form-group col-6\">\n                <label for=\"seatAdjustment\">{{(add ? 'seatsToAdd' : 'seatsToRemove') | i18n}}</label>\n                <input id=\"seatAdjustment\" class=\"form-control\" type=\"number\" name=\"SeatAdjustment\"\n                    [(ngModel)]=\"seatAdjustment\" min=\"0\" step=\"1\" required>\n            </div>\n        </div>\n        <div *ngIf=\"add\" class=\"mb-3\">\n            <strong>{{'total' | i18n}}:</strong> {{seatAdjustment || 0}} &times; {{seatPrice | currency:'$'}} = {{adjustedSeatTotal\n            | currency:'$'}} /{{interval | i18n}}\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"cancel()\">\n            {{'cancel' | i18n}}\n        </button>\n        <small class=\"d-block text-muted mt-3\">\n            {{(add ? 'seatsAddNote' : 'seatsRemoveNote') | i18n}}\n        </small>\n    </div>\n</form>\n<app-payment [showMethods]=\"false\"></app-payment>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent {\n    access2fa = false;\n    selfHosted: boolean;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.selfHosted = await this.platformUtilsService.isSelfHost();\n            const organization = await this.userService.getOrganization(params.organizationId);\n            this.access2fa = organization.use2fa;\n        });\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card\">\n                <div class=\"card-header\">{{'settings' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'myOrganization' | i18n}}\n                    </a>\n                    <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'subscription' | i18n}}\n                    </a>\n                    <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\">\n                        {{'billing' | i18n}}\n                    </a>\n                    <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"access2fa\">\n                        {{'twoStepLogin' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PolicyService } from 'jslib/abstractions/policy.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorDuoComponent } from '../../settings/two-factor-duo.component';\nimport { TwoFactorSetupComponent as BaseTwoFactorSetupComponent } from '../../settings/two-factor-setup.component';\n\n@Component({\n    selector: 'app-two-factor-setup',\n    templateUrl: '../../settings/two-factor-setup.component.html',\n})\nexport class TwoFactorSetupComponent extends BaseTwoFactorSetupComponent {\n    constructor(apiService: ApiService, userService: UserService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        policyService: PolicyService, private route: ActivatedRoute) {\n        super(apiService, userService, componentFactoryResolver, messagingService, policyService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            await super.ngOnInit();\n        });\n    }\n\n    manage(type: TwoFactorProviderType) {\n        switch (type) {\n            case TwoFactorProviderType.OrganizationDuo:\n                const duoComp = this.openModal(this.duoModalRef, TwoFactorDuoComponent);\n                duoComp.type = TwoFactorProviderType.OrganizationDuo;\n                duoComp.organizationId = this.organizationId;\n                duoComp.onUpdated.subscribe((enabled: boolean) => {\n                    this.updateStatus(enabled, TwoFactorProviderType.OrganizationDuo);\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    protected getTwoFactorProviders() {\n        return this.apiService.getTwoFactorOrganizationProviders(this.organizationId);\n    }\n\n    protected filterProvider(type: TwoFactorProviderType) {\n        return type !== TwoFactorProviderType.OrganizationDuo;\n    }\n}\n","import {\n    Component,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { UpdateTwoFactorAuthenticatorRequest } from 'jslib/models/request/updateTwoFactorAuthenticatorRequest';\nimport { TwoFactorAuthenticatorResponse } from 'jslib/models/response/twoFactorAuthenticatorResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-authenticator',\n    templateUrl: 'two-factor-authenticator.component.html',\n})\nexport class TwoFactorAuthenticatorComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.Authenticator;\n    key: string;\n    token: string;\n    formPromise: Promise<any>;\n\n    private qrScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        private userService: UserService, platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n        this.qrScript = window.document.createElement('script');\n        this.qrScript.src = 'scripts/qrious.min.js';\n        this.qrScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.qrScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.qrScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorAuthenticatorRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.token = this.token;\n        request.key = this.key;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorAuthenticator(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorAuthenticatorResponse) {\n        this.token = null;\n        this.enabled = response.enabled;\n        this.key = response.key;\n        const email = await this.userService.getEmail();\n        window.setTimeout(() => {\n            const qr = new (window as any).QRious({\n                element: document.getElementById('qr'),\n                value: 'otpauth://totp/Bitwarden:' + encodeURIComponent(email) +\n                    '?secret=' + encodeURIComponent(this.key) + '&issuer=Bitwarden',\n                size: 160,\n            });\n        }, 100);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faAuthenticatorTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"2faAuthenticatorTitle\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>{{'authenticatorAppTitle' | i18n}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\n                <div class=\"modal-body\">\n                    <ng-container *ngIf=\"!enabled\">\n                        <img src=\"images/0.png\" class=\"float-right\" alt=\"\">\n                        <p>{{'twoStepAuthenticatorDesc' | i18n}}</p>\n                        <p>\n                            <strong>1. {{'twoStepAuthenticatorDownloadApp' | i18n}}</strong>\n                        </p>\n                    </ng-container>\n                    <ng-container *ngIf=\"enabled\">\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\n                            <p>{{'twoStepLoginProviderEnabled' | i18n}}</p>\n                            {{'twoStepAuthenticatorReaddDesc' | i18n}}\n                        </app-callout>\n                        <img src=\"images/0.png\" class=\"float-right\" alt=\"\">\n                        <p>{{'twoStepAuthenticatorNeedApp' | i18n}}</p>\n                    </ng-container>\n                    <ul class=\"fa-ul\">\n                        <li>\n                            <i class=\"fa-li fa fa-apple\"></i>{{'iosDevices' | i18n}}:\n                            <a href=\"https://itunes.apple.com/us/app/authy/id494168017?mt=8\" target=\"_blank\"\n                                rel=\"noopener\">Authy</a>\n                        </li>\n                        <li>\n                            <i class=\"fa-li fa fa-android\"></i>{{'androidDevices' | i18n}}:\n                            <a href=\"https://play.google.com/store/apps/details?id=com.authy.authy\" target=\"_blank\"\n                                rel=\"noopener\">Authy</a>\n                        </li>\n                        <li>\n                            <i class=\"fa-li fa fa-windows\"></i>{{'windowsDevices' | i18n}}:\n                            <a href=\"https://www.microsoft.com/p/authenticator/9wzdncrfj3rj\" target=\"_blank\"\n                                rel=\"noopener\">Microsoft Authenticator</a>\n                        </li>\n                    </ul>\n                    <p>{{'twoStepAuthenticatorAppsRecommended' | i18n}}</p>\n                    <p *ngIf=\"!enabled\">\n                        <strong>2. {{'twoStepAuthenticatorScanCode' | i18n}}</strong>\n                    </p>\n                    <hr *ngIf=\"enabled\">\n                    <p class=\"text-center\" [ngClass]=\"{'mb-0': enabled}\">\n                        <canvas id=\"qr\"></canvas><br>\n                        <code appA11yTitle=\"{{'key' | i18n}}\">{{key}}</code>\n                    </p>\n                    <ng-container *ngIf=\"!enabled\">\n                        <label for=\"token\">3. {{'twoStepAuthenticatorEnterCode' | i18n}}</label>\n                        <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required\n                            appInputVerbatim>\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { TwoFactorEmailRequest } from 'jslib/models/request/twoFactorEmailRequest';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\nimport { UpdateTwoFactorEmailRequest } from 'jslib/models/request/updateTwoFactorEmailRequest';\nimport { TwoFactorEmailResponse } from 'jslib/models/response/twoFactorEmailResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-email',\n    templateUrl: 'two-factor-email.component.html',\n})\nexport class TwoFactorEmailComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Email;\n    email: string;\n    token: string;\n    sentEmail: string;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private userService: UserService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        return this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.enabled) {\n            return super.disable(this.formPromise);\n        } else {\n            return this.enable();\n        }\n    }\n\n    async sendEmail() {\n        try {\n            const request = new TwoFactorEmailRequest(this.email, this.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmailSetup(request);\n            await this.emailPromise;\n            this.sentEmail = this.email;\n        } catch { }\n    }\n\n    protected enable() {\n        const request = new UpdateTwoFactorEmailRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.email = this.email;\n        request.token = this.token;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorEmail(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    private async processResponse(response: TwoFactorEmailResponse) {\n        this.token = null;\n        this.email = response.email;\n        this.enabled = response.enabled;\n        if (!this.enabled && (this.email == null || this.email === '')) {\n            this.email = await this.userService.getEmail();\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faEmailTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"2faEmailTitle\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>{{'emailTitle' | i18n}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\n                <div class=\"modal-body\">\n                    <ng-container *ngIf=\"enabled\">\n                        <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\">\n                            {{'twoStepLoginProviderEnabled' | i18n}}\n                        </app-callout>\n                        <strong>{{'email' | i18n}}:</strong> {{email}}\n                    </ng-container>\n                    <ng-container *ngIf=\"!enabled\">\n                        <p class=\"d-flex\">\n                            <span class=\"mr-3\">{{'twoFactorEmailDesc' | i18n}}</span>\n                            <img src=\"images/1.png\" class=\"float-right ml-auto\" alt=\"\">\n                        </p>\n                        <div class=\"form-group\">\n                            <label for=\"email\">1. {{'twoFactorEmailEnterEmail' | i18n}}</label>\n                            <input id=\"email\" type=\"text\" name=\"Email\" class=\"form-control\" [(ngModel)]=\"email\" required\n                                inputmode=\"email\" appInputVerbatim=\"false\">\n                        </div>\n                        <div class=\"mb-3 d-flex\">\n                            <button #sendBtn type=\"button\"\n                                class=\"btn btn-outline-primary btn-sm btn-submit align-self-start\" (click)=\"sendEmail()\"\n                                [appApiAction]=\"emailPromise\" [disabled]=\"sendBtn.loading\">\n                                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                                <span>{{'sendEmail' | i18n}}</span>\n                            </button>\n                            <span class=\"text-success ml-3\" *ngIf=\"sentEmail\">\n                                {{'verificationCodeEmailSent' | i18n : sentEmail}}\n                            </span>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"token\">2. {{'twoFactorEmailEnterCode' | i18n}}</label>\n                            <input id=\"token\" type=\"text\" name=\"Token\" class=\"form-control\" [(ngModel)]=\"token\" required\n                                appInputVerbatim>\n                        </div>\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        <span *ngIf=\"!enabled\">{{'enable' | i18n}}</span>\n                        <span *ngIf=\"enabled\">{{'disable' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { TwoFactorRecoverResponse } from 'jslib/models/response/twoFactorRescoverResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\n@Component({\n    selector: 'app-two-factor-recovery',\n    templateUrl: 'two-factor-recovery.component.html',\n})\nexport class TwoFactorRecoveryComponent {\n    type = -1;\n    code: string;\n    authed: boolean;\n    twoFactorProviderType = TwoFactorProviderType;\n\n    constructor(private i18nService: I18nService) { }\n\n    auth(authResponse: any) {\n        this.authed = true;\n        this.processResponse(authResponse.response);\n    }\n\n    print() {\n        const w = window.open();\n        w.document.write('<div style=\"font-size: 18px; text-align: center;\">' +\n            '<p>' + this.i18nService.t('twoFactorRecoveryYourCode') + ':</p>' +\n            '<code style=\"font-family: Menlo, Monaco, Consolas, \\'Courier New\\', monospace;\">' +\n            this.code + '</code></div>' +\n            '<p style=\"text-align: center;\">' + new Date() + '</p>');\n        w.print();\n        w.close();\n    }\n\n    private formatString(s: string) {\n        if (s == null) {\n            return null;\n        }\n        return s.replace(/(.{4})/g, '$1 ').trim().toUpperCase();\n    }\n\n    private processResponse(response: TwoFactorRecoverResponse) {\n        this.code = this.formatString(response.code);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faRecoveryTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"2faRecoveryTitle\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>{{'recoveryCodeTitle' | i18n}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <ng-container *ngIf=\"authed\">\n                <div class=\"modal-body text-center\">\n                    <ng-container *ngIf=\"code\">\n                        <p>{{'twoFactorRecoveryYourCode' | i18n}}:</p>\n                        <code class=\"text-lg\">{{code}}</code>\n                    </ng-container>\n                    <ng-container *ngIf=\"!code\">\n                        {{'twoFactorRecoveryNoCode' | i18n}}\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"button\" class=\"btn btn-primary\" (click)=\"print()\"\n                        *ngIf=\"code\">{{'printCode' | i18n}}</button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </ng-container>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\nimport { UpdateTwoFactorU2fDeleteRequest } from 'jslib/models/request/updateTwoFactorU2fDeleteRequest';\nimport { UpdateTwoFactorU2fRequest } from 'jslib/models/request/updateTwoFactorU2fRequest';\nimport {\n    ChallengeResponse,\n    TwoFactorU2fResponse,\n} from 'jslib/models/response/twoFactorU2fResponse';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-u2f',\n    templateUrl: 'two-factor-u2f.component.html',\n})\nexport class TwoFactorU2fComponent extends TwoFactorBaseComponent implements OnInit, OnDestroy {\n    type = TwoFactorProviderType.U2f;\n    name: string;\n    keys: any[];\n    keyIdAvailable: number = null;\n    keysConfiguredCount = 0;\n    u2fError: boolean;\n    u2fListening: boolean;\n    u2fResponse: string;\n    challengePromise: Promise<ChallengeResponse>;\n    formPromise: Promise<any>;\n\n    private u2fScript: HTMLScriptElement;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private ngZone: NgZone) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n        this.u2fScript = window.document.createElement('script');\n        this.u2fScript.src = 'scripts/u2f.js';\n        this.u2fScript.async = true;\n    }\n\n    ngOnInit() {\n        window.document.body.appendChild(this.u2fScript);\n    }\n\n    ngOnDestroy() {\n        window.document.body.removeChild(this.u2fScript);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        if (this.u2fResponse == null || this.keyIdAvailable == null) {\n            // Should never happen.\n            return Promise.reject();\n        }\n        const request = new UpdateTwoFactorU2fRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.deviceResponse = this.u2fResponse;\n        request.id = this.keyIdAvailable;\n        request.name = this.name;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorU2f(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n        });\n    }\n\n    disable() {\n        return super.disable(this.formPromise);\n    }\n\n    async remove(key: any) {\n        if (this.keysConfiguredCount <= 1 || key.removePromise != null) {\n            return;\n        }\n        const name = key.name != null ? key.name : this.i18nService.t('u2fkeyX', key.id);\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('removeU2fConfirmation'), name,\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n        const request = new UpdateTwoFactorU2fDeleteRequest();\n        request.id = key.id;\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            key.removePromise = this.apiService.deleteTwoFactorU2f(request);\n            const response = await key.removePromise;\n            key.removePromise = null;\n            await this.processResponse(response);\n        } catch { }\n    }\n\n    async readKey() {\n        if (this.keyIdAvailable == null) {\n            return;\n        }\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        try {\n            this.challengePromise = this.apiService.getTwoFactorU2fChallenge(request);\n            const challenge = await this.challengePromise;\n            this.readDevice(challenge);\n        } catch { }\n    }\n\n    private readDevice(u2fChallenge: ChallengeResponse) {\n        // tslint:disable-next-line\n        console.log('listening for key...');\n        this.resetU2f(true);\n        (window as any).u2f.register(u2fChallenge.appId, [{\n            version: u2fChallenge.version,\n            challenge: u2fChallenge.challenge,\n            attestation: 'direct',\n        }], [], (data: any) => {\n            this.ngZone.run(() => {\n                this.u2fListening = false;\n                if (data.errorCode) {\n                    this.u2fError = true;\n                    // tslint:disable-next-line\n                    console.log('error: ' + data.errorCode);\n                    return;\n                }\n                this.u2fResponse = JSON.stringify(data);\n            });\n        }, 15);\n    }\n\n    private resetU2f(listening = false) {\n        this.u2fResponse = null;\n        this.u2fError = false;\n        this.u2fListening = listening;\n    }\n\n    private processResponse(response: TwoFactorU2fResponse) {\n        this.resetU2f();\n        this.keys = [];\n        this.keyIdAvailable = null;\n        this.name = null;\n        this.keysConfiguredCount = 0;\n        for (let i = 1; i <= 5; i++) {\n            if (response.keys != null) {\n                const key = response.keys.filter((k) => k.id === i);\n                if (key.length > 0) {\n                    this.keysConfiguredCount++;\n                    this.keys.push({\n                        id: i, name: key[0].name,\n                        configured: true,\n                        compromised: key[0].compromised,\n                        removePromise: null,\n                    });\n                    continue;\n                }\n            }\n            this.keys.push({ id: i, name: null, configured: false, compromised: false, removePromise: null });\n            if (this.keyIdAvailable == null) {\n                this.keyIdAvailable = i;\n            }\n        }\n        this.enabled = response.enabled;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faU2fTitle\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"2faU2fTitle\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>FIDO U2F</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\">\n                <div class=\"modal-body\">\n                    <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\">\n                        {{'twoStepLoginProviderEnabled' | i18n}}\n                    </app-callout>\n                    <app-callout type=\"warning\">\n                        <p>{{'twoFactorU2fWarning' | i18n}}</p>\n                        <ul class=\"mb-0\">\n                            <li>{{'twoFactorU2fSupportWeb' | i18n}}</li>\n                        </ul>\n                    </app-callout>\n                    <img src=\"images/4.png\" class=\"float-right ml-5\" alt=\"\">\n                    <ul class=\"fa-ul\">\n                        <li *ngFor=\"let k of keys; let i = index\" #removeKeyBtn [appApiAction]=\"k.removePromise\">\n                            <i class=\"fa-li fa fa-key\"></i>\n                            <strong *ngIf=\"!k.configured || !k.name\">{{'u2fkeyX' | i18n : i + 1}}</strong>\n                            <strong *ngIf=\"k.configured && k.name\">{{k.name}}</strong>\n                            <ng-container *ngIf=\"k.configured && !removeKeyBtn.loading\">\n                                <ng-container *ngIf=\"k.compromised\">\n                                    <i class=\"fa fa-fw fa-exclamation-triangle text-warning\" aria-hidden=\"true\"\n                                        title=\"{{'keyCompromised' | i18n}}\"></i>\n                                    <span class=\"sr-only\">{{'keyCompromised' | i18n}}</span>\n                                </ng-container>\n                                <ng-container *ngIf=\"!k.compromised\">\n                                    <i class=\"fa fa-fw fa-check text-success\" aria-hidden=\"true\"\n                                        title=\"{{'enabled' | i18n}}\"></i>\n                                    <span class=\"sr-only\">{{'enabled' | i18n}}</span>\n                                </ng-container>\n                            </ng-container>\n                            <ng-container *ngIf=\"keysConfiguredCount > 1 && k.configured\">\n                                <i class=\"fa fa-spin fa-spinner text-muted fa-fw\" title=\"{{'loading' | i18n}}\"\n                                    *ngIf=\"removeKeyBtn.loading\" aria-hidden=\"true\"></i>\n                                -\n                                <a href=\"#\" appStopClick (click)=\"remove(k)\">{{'remove' | i18n}}</a>\n                            </ng-container>\n                        </li>\n                    </ul>\n                    <hr>\n                    <p>{{'twoFactorU2fAdd' | i18n}}:</p>\n                    <ol>\n                        <li>{{'twoFactorU2fGiveName' | i18n}}</li>\n                        <li>{{'twoFactorU2fPlugInReadKey' | i18n}}</li>\n                        <li>{{'twoFactorU2fTouchButton' | i18n}}</li>\n                        <li>{{'twoFactorU2fSaveForm' | i18n}}</li>\n                    </ol>\n                    <div class=\"row\">\n                        <div class=\"form-group col-6\">\n                            <label for=\"name\">{{'name' | i18n}}</label>\n                            <input id=\"name\" type=\"text\" name=\"Name\" class=\"form-control\" [(ngModel)]=\"name\"\n                                [disabled]=\"!keyIdAvailable\">\n                        </div>\n                    </div>\n                    <button type=\"button\" (click)=\"readKey()\" class=\"btn btn-outline-secondary mr-2\"\n                        [disabled]=\"readKeyBtn.loading || u2fListening || !keyIdAvailable\" #readKeyBtn\n                        [appApiAction]=\"challengePromise\">\n                        {{'readKey' | i18n}}\n                    </button>\n                    <ng-container *ngIf=\"readKeyBtn.loading\">\n                        <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i>\n                    </ng-container>\n                    <ng-container *ngIf=\"!readKeyBtn.loading\">\n                        <ng-container *ngIf=\"u2fListening\">\n                            <i class=\"fa fa-spinner fa-spin text-muted\" aria-hidden=\"true\"></i>\n                            {{'twoFactorU2fWaiting' | i18n}}...\n                        </ng-container>\n                        <ng-container *ngIf=\"u2fResponse\">\n                            <i class=\"fa fa-check-circle text-success\" aria-hidden=\"true\"></i>\n                            {{'twoFactorU2fClickSave' | i18n}}\n                        </ng-container>\n                        <ng-container *ngIf=\"u2fError\">\n                            <i class=\"fa fa-warning text-danger\" aria-hidden=\"true\"></i>\n                            {{'twoFactorU2fProblemReadingTryAgain' | i18n}}\n                        </ng-container>\n                    </ng-container>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"form.loading || !u2fResponse\">\n                        <i class=\"fa fa-spinner fa-spin\" *ngIf=\"form.loading\" title=\"{{'loading' | i18n}}\"\n                            aria-hidden=\"true\"></i>\n                        <span *ngIf=\"!form.loading\">{{'save' | i18n}}</span>\n                    </button>\n                    <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\"\n                        [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\"\n                        *ngIf=\"enabled\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        <span>{{'disableAllKeys' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { UpdateTwoFactorYubioOtpRequest } from 'jslib/models/request/updateTwoFactorYubioOtpRequest';\nimport { TwoFactorYubiKeyResponse } from 'jslib/models/response/twoFactorYubiKeyResponse';\n\nimport { TwoFactorProviderType } from 'jslib/enums/twoFactorProviderType';\n\nimport { TwoFactorBaseComponent } from './two-factor-base.component';\n\n@Component({\n    selector: 'app-two-factor-yubikey',\n    templateUrl: 'two-factor-yubikey.component.html',\n})\nexport class TwoFactorYubiKeyComponent extends TwoFactorBaseComponent {\n    type = TwoFactorProviderType.Yubikey;\n    keys: any[];\n    nfc = false;\n\n    formPromise: Promise<any>;\n    disablePromise: Promise<any>;\n\n    constructor(apiService: ApiService, i18nService: I18nService,\n        analytics: Angulartics2, toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService) {\n        super(apiService, i18nService, analytics, toasterService, platformUtilsService);\n    }\n\n    auth(authResponse: any) {\n        super.auth(authResponse);\n        this.processResponse(authResponse.response);\n    }\n\n    submit() {\n        const request = new UpdateTwoFactorYubioOtpRequest();\n        request.masterPasswordHash = this.masterPasswordHash;\n        request.key1 = this.keys != null && this.keys.length > 0 ? this.keys[0].key : null;\n        request.key2 = this.keys != null && this.keys.length > 1 ? this.keys[1].key : null;\n        request.key3 = this.keys != null && this.keys.length > 2 ? this.keys[2].key : null;\n        request.key4 = this.keys != null && this.keys.length > 3 ? this.keys[3].key : null;\n        request.key5 = this.keys != null && this.keys.length > 4 ? this.keys[4].key : null;\n        request.nfc = this.nfc;\n\n        return super.enable(async () => {\n            this.formPromise = this.apiService.putTwoFactorYubiKey(request);\n            const response = await this.formPromise;\n            await this.processResponse(response);\n            this.toasterService.popAsync('success', null, this.i18nService.t('yubikeysUpdated'));\n        });\n    }\n\n    disable() {\n        return super.disable(this.disablePromise);\n    }\n\n    remove(key: any) {\n        key.existingKey = null;\n        key.key = null;\n    }\n\n    private processResponse(response: TwoFactorYubiKeyResponse) {\n        this.enabled = response.enabled;\n        this.keys = [\n            { key: response.key1, existingKey: this.padRight(response.key1) },\n            { key: response.key2, existingKey: this.padRight(response.key2) },\n            { key: response.key3, existingKey: this.padRight(response.key3) },\n            { key: response.key4, existingKey: this.padRight(response.key4) },\n            { key: response.key5, existingKey: this.padRight(response.key5) },\n        ];\n        this.nfc = response.nfc || !response.enabled;\n    }\n\n    private padRight(str: string, character = '•', size = 44) {\n        if (str == null || character == null || str.length >= size) {\n            return str;\n        }\n        const max = (size - str.length) / character.length;\n        for (let i = 0; i < max; i++) {\n            str += character;\n        }\n        return str;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"2faYubiKeyTitle\">\n    <div class=\"modal-dialog modal-lg\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"2faYubiKeyTitle\">\n                    {{'twoStepLogin' | i18n}}\n                    <small>YubiKey</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <app-two-factor-verify [organizationId]=\"organizationId\" [type]=\"type\" (onAuthed)=\"auth($event)\"\n                *ngIf=\"!authed\">\n            </app-two-factor-verify>\n            <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"authed\"\n                autocomplete=\"off\">\n                <div class=\"modal-body\">\n                    <app-callout type=\"success\" title=\"{{'enabled' | i18n}}\" icon=\"fa-check-circle\" *ngIf=\"enabled\">\n                        {{'twoStepLoginProviderEnabled' | i18n}}\n                    </app-callout>\n                    <app-callout type=\"warning\">\n                        <p>{{'twoFactorYubikeyWarning' | i18n}}</p>\n                        <ul class=\"mb-0\">\n                            <li>{{'twoFactorYubikeySupportUsb' | i18n}}</li>\n                            <li>{{'twoFactorYubikeySupportMobile' | i18n}}</li>\n                        </ul>\n                    </app-callout>\n                    <img src=\"images/3.png\" class=\"float-right\" alt=\"\">\n                    <p>{{'twoFactorYubikeyAdd' | i18n}}:</p>\n                    <ol>\n                        <li>{{'twoFactorYubikeyPlugIn' | i18n}}</li>\n                        <li>{{'twoFactorYubikeySelectKey' | i18n}}</li>\n                        <li>{{'twoFactorYubikeyTouchButton' | i18n}}</li>\n                        <li>{{'twoFactorYubikeySaveForm' | i18n}}</li>\n                    </ol>\n                    <hr>\n                    <div class=\"row\">\n                        <div class=\"form-group col-6\" *ngFor=\"let k of keys; let i = index\">\n                            <label for=\"key{{i + 1}}\">{{'yubikeyX' | i18n : i + 1}}</label>\n                            <input id=\"key{{i + 1}}\" type=\"password\" name=\"Key{{i + 1}}\" class=\"form-control\"\n                                [(ngModel)]=\"k.key\" *ngIf=\"!k.existingKey\" appInputVerbatim autocomplete=\"new-password\">\n                            <div class=\"d-flex\" *ngIf=\"k.existingKey\">\n                                <span class=\"mr-2\">{{k.existingKey}}</span>\n                                <button type=\"button\" class=\"btn btn-link text-danger ml-auto\" (click)=\"remove(k)\"\n                                    appA11yTitle=\"{{'remove' | i18n}}\">\n                                    <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    <strong class=\"d-block mb-2\">{{'nfcSupport' | i18n}}</strong>\n                    <div class=\"form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"nfc\" name=\"Nfc\" [(ngModel)]=\"nfc\">\n                        <label class=\"form-check-label\" for=\"nfc\">{{'twoFactorYubikeySupportsNfc' | i18n}}</label>\n                    </div>\n                    <small class=\"form-text text-muted\">{{'twoFactorYubikeySupportsNfcDesc' | i18n}}</small>\n                </div>\n                <div class=\"modal-footer\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        <span>{{'save' | i18n}}</span>\n                    </button>\n                    <button #disableBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\"\n                        [appApiAction]=\"disablePromise\" [disabled]=\"disableBtn.loading\" (click)=\"disable()\"\n                        *ngIf=\"enabled\">\n                        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                        <span>{{'disableAllKeys' | i18n}}</span>\n                    </button>\n                    <button type=\"button\" class=\"btn btn-outline-secondary\"\n                        data-dismiss=\"modal\">{{'close' | i18n}}</button>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { ExportService } from 'jslib/abstractions/export.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { ExportComponent as BaseExportComponent } from '../../tools/export.component';\n\nimport { EventType } from 'jslib/enums/eventType';\n\n@Component({\n    selector: 'app-org-export',\n    templateUrl: '../../tools/export.component.html',\n})\nexport class ExportComponent extends BaseExportComponent {\n    organizationId: string;\n\n    constructor(cryptoService: CryptoService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService, exportService: ExportService,\n        eventService: EventService, private route: ActivatedRoute) {\n        super(cryptoService, i18nService, platformUtilsService, exportService, eventService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n        });\n    }\n\n    getExportData() {\n        return this.exportService.getOrganizationExport(this.organizationId, this.format);\n    }\n\n    getFileName() {\n        return super.getFileName('org');\n    }\n\n    async collectEvent(): Promise<any> {\n        // TODO\n        // await this.eventService.collect(EventType.Organization_ClientExportedVault);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport {\n    ExposedPasswordsReportComponent as BaseExposedPasswordsReportComponent,\n} from '../../tools/exposed-passwords-report.component';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\n@Component({\n    selector: 'app-exposed-passwords-report',\n    templateUrl: '../../tools/exposed-passwords-report.component.html',\n})\nexport class ExposedPasswordsReportComponent extends BaseExposedPasswordsReportComponent {\n    constructor(cipherService: CipherService, auditService: AuditService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService, private route: ActivatedRoute) {\n        super(cipherService, auditService, componentFactoryResolver, messagingService, userService);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import { AttachmentResponse } from '../response/attachmentResponse';\n\nexport class AttachmentData {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response?: AttachmentResponse) {\n        if (response == null) {\n            return;\n        }\n        this.id = response.id;\n        this.url = response.url;\n        this.fileName = response.fileName;\n        this.key = response.key;\n        this.size = response.size;\n        this.sizeName = response.sizeName;\n    }\n}\n","import { CardApi } from '../api/cardApi';\n\nexport class CardData {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data?: CardApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.cardholderName = data.cardholderName;\n        this.brand = data.brand;\n        this.number = data.number;\n        this.expMonth = data.expMonth;\n        this.expYear = data.expYear;\n        this.code = data.code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldApi } from '../api/fieldApi';\n\nexport class FieldData {\n    type: FieldType;\n    name: string;\n    value: string;\n\n    constructor(response?: FieldApi) {\n        if (response == null) {\n            return;\n        }\n        this.type = response.type;\n        this.name = response.name;\n        this.value = response.value;\n    }\n}\n","import { IdentityApi } from '../api/identityApi';\n\nexport class IdentityData {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data?: IdentityApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.title = data.title;\n        this.firstName = data.firstName;\n        this.middleName = data.middleName;\n        this.lastName = data.lastName;\n        this.address1 = data.address1;\n        this.address2 = data.address2;\n        this.address3 = data.address3;\n        this.city = data.city;\n        this.state = data.state;\n        this.postalCode = data.postalCode;\n        this.country = data.country;\n        this.company = data.company;\n        this.email = data.email;\n        this.phone = data.phone;\n        this.ssn = data.ssn;\n        this.username = data.username;\n        this.passportNumber = data.passportNumber;\n        this.licenseNumber = data.licenseNumber;\n    }\n}\n","import { LoginApi } from '../api/loginApi';\n\nimport { LoginUriData } from './loginUriData';\n\nexport class LoginData {\n    uris: LoginUriData[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n\n    constructor(data?: LoginApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.username = data.username;\n        this.password = data.password;\n        this.passwordRevisionDate = data.passwordRevisionDate;\n        this.totp = data.totp;\n\n        if (data.uris) {\n            this.uris = data.uris.map((u) => new LoginUriData(u));\n        }\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriApi } from '../api/loginUriApi';\n\nexport class LoginUriData {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data?: LoginUriApi) {\n        if (data == null) {\n            return;\n        }\n        this.uri = data.uri;\n        this.match = data.match;\n    }\n}\n","import { PasswordHistoryResponse } from '../response/passwordHistoryResponse';\n\nexport class PasswordHistoryData {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response?: PasswordHistoryResponse) {\n        if (response == null) {\n            return;\n        }\n\n        this.password = response.password;\n        this.lastUsedDate = response.lastUsedDate;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class SecureNoteData {\n    type: SecureNoteType;\n\n    constructor(data?: SecureNoteApi) {\n        if (data == null) {\n            return;\n        }\n\n        this.type = data.type;\n    }\n}\n","import { AttachmentData } from '../data/attachmentData';\n\nimport { AttachmentView } from '../view/attachmentView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\nimport { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\n\nimport { Utils } from '../../misc/utils';\n\nexport class Attachment extends Domain {\n    id: string;\n    url: string;\n    size: string;\n    sizeName: string;\n    key: CipherString;\n    fileName: CipherString;\n\n    constructor(obj?: AttachmentData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.size = obj.size;\n        this.buildDomainModel(this, obj, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, alreadyEncrypted, ['id', 'url', 'sizeName']);\n    }\n\n    async decrypt(orgId: string): Promise<AttachmentView> {\n        const view = await this.decryptObj(new AttachmentView(this), {\n            fileName: null,\n        }, orgId);\n\n        if (this.key != null) {\n            let cryptoService: CryptoService;\n            const containerService = (Utils.global as any).bitwardenContainerService;\n            if (containerService) {\n                cryptoService = containerService.getCryptoService();\n            } else {\n                throw new Error('global bitwardenContainerService not initialized.');\n            }\n\n            try {\n                const orgKey = await cryptoService.getOrgKey(orgId);\n                const decValue = await cryptoService.decryptToBytes(this.key, orgKey);\n                view.key = new SymmetricCryptoKey(decValue);\n            } catch (e) {\n                // TODO: error?\n            }\n        }\n\n        return view;\n    }\n\n    toAttachmentData(): AttachmentData {\n        const a = new AttachmentData();\n        a.size = this.size;\n        this.buildDataModel(this, a, {\n            id: null,\n            url: null,\n            sizeName: null,\n            fileName: null,\n            key: null,\n        }, ['id', 'url', 'sizeName']);\n        return a;\n    }\n}\n","import { View } from './view';\n\nimport { Attachment } from '../domain/attachment';\nimport { SymmetricCryptoKey } from '../domain/symmetricCryptoKey';\n\nexport class AttachmentView implements View {\n    id: string = null;\n    url: string = null;\n    size: string = null;\n    sizeName: string = null;\n    fileName: string = null;\n    key: SymmetricCryptoKey = null;\n\n    constructor(a?: Attachment) {\n        if (!a) {\n            return;\n        }\n\n        this.id = a.id;\n        this.url = a.url;\n        this.size = a.size;\n        this.sizeName = a.sizeName;\n    }\n\n    get fileSize(): number {\n        try {\n            if (this.size != null) {\n                return parseInt(this.size, null);\n            }\n        } catch { }\n        return 0;\n    }\n}\n","import { EncryptionType } from '../../enums/encryptionType';\n\nimport { Utils } from '../../misc/utils';\n\nexport class SymmetricCryptoKey {\n    key: ArrayBuffer;\n    encKey?: ArrayBuffer;\n    macKey?: ArrayBuffer;\n    encType: EncryptionType;\n\n    keyB64: string;\n    encKeyB64: string;\n    macKeyB64: string;\n\n    meta: any;\n\n    constructor(key: ArrayBuffer, encType?: EncryptionType) {\n        if (key == null) {\n            throw new Error('Must provide key');\n        }\n\n        if (encType == null) {\n            if (key.byteLength === 32) {\n                encType = EncryptionType.AesCbc256_B64;\n            } else if (key.byteLength === 64) {\n                encType = EncryptionType.AesCbc256_HmacSha256_B64;\n            } else {\n                throw new Error('Unable to determine encType.');\n            }\n        }\n\n        this.key = key;\n        this.encType = encType;\n\n        if (encType === EncryptionType.AesCbc256_B64 && key.byteLength === 32) {\n            this.encKey = key;\n            this.macKey = null;\n        } else if (encType === EncryptionType.AesCbc128_HmacSha256_B64 && key.byteLength === 32) {\n            this.encKey = key.slice(0, 16);\n            this.macKey = key.slice(16, 32);\n        } else if (encType === EncryptionType.AesCbc256_HmacSha256_B64 && key.byteLength === 64) {\n            this.encKey = key.slice(0, 32);\n            this.macKey = key.slice(32, 64);\n        } else {\n            throw new Error('Unsupported encType/key length.');\n        }\n\n        if (this.key != null) {\n            this.keyB64 = Utils.fromBufferToB64(this.key);\n        }\n        if (this.encKey != null) {\n            this.encKeyB64 = Utils.fromBufferToB64(this.encKey);\n        }\n        if (this.macKey != null) {\n            this.macKeyB64 = Utils.fromBufferToB64(this.macKey);\n        }\n    }\n}\n","import { CardData } from '../data/cardData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nimport { CardView } from '../view/cardView';\n\nexport class Card extends Domain {\n    cardholderName: CipherString;\n    brand: CipherString;\n    number: CipherString;\n    expMonth: CipherString;\n    expYear: CipherString;\n    code: CipherString;\n\n    constructor(obj?: CardData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<CardView> {\n        return this.decryptObj(new CardView(this), {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        }, orgId);\n    }\n\n    toCardData(): CardData {\n        const c = new CardData();\n        this.buildDataModel(this, c, {\n            cardholderName: null,\n            brand: null,\n            number: null,\n            expMonth: null,\n            expYear: null,\n            code: null,\n        });\n        return c;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldData } from '../data/fieldData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nimport { FieldView } from '../view/fieldView';\n\nexport class Field extends Domain {\n    name: CipherString;\n    value: CipherString;\n    type: FieldType;\n\n    constructor(obj?: FieldData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n        this.buildDomainModel(this, obj, {\n            name: null,\n            value: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<FieldView> {\n        return this.decryptObj(new FieldView(this), {\n            name: null,\n            value: null,\n        }, orgId);\n    }\n\n    toFieldData(): FieldData {\n        const f = new FieldData();\n        this.buildDataModel(this, f, {\n            name: null,\n            value: null,\n            type: null,\n        }, ['type']);\n        return f;\n    }\n}\n","import { IdentityData } from '../data/identityData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nimport { IdentityView } from '../view/identityView';\n\nexport class Identity extends Domain {\n    title: CipherString;\n    firstName: CipherString;\n    middleName: CipherString;\n    lastName: CipherString;\n    address1: CipherString;\n    address2: CipherString;\n    address3: CipherString;\n    city: CipherString;\n    state: CipherString;\n    postalCode: CipherString;\n    country: CipherString;\n    company: CipherString;\n    email: CipherString;\n    phone: CipherString;\n    ssn: CipherString;\n    username: CipherString;\n    passportNumber: CipherString;\n    licenseNumber: CipherString;\n\n    constructor(obj?: IdentityData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<IdentityView> {\n        return this.decryptObj(new IdentityView(this), {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        }, orgId);\n    }\n\n    toIdentityData(): IdentityData {\n        const i = new IdentityData();\n        this.buildDataModel(this, i, {\n            title: null,\n            firstName: null,\n            middleName: null,\n            lastName: null,\n            address1: null,\n            address2: null,\n            address3: null,\n            city: null,\n            state: null,\n            postalCode: null,\n            country: null,\n            company: null,\n            email: null,\n            phone: null,\n            ssn: null,\n            username: null,\n            passportNumber: null,\n            licenseNumber: null,\n        });\n        return i;\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginData } from '../data/loginData';\n\nimport { LoginView } from '../view/loginView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nexport class Login extends Domain {\n    uris: LoginUri[];\n    username: CipherString;\n    password: CipherString;\n    passwordRevisionDate?: Date;\n    totp: CipherString;\n\n    constructor(obj?: LoginData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.passwordRevisionDate = obj.passwordRevisionDate != null ? new Date(obj.passwordRevisionDate) : null;\n        this.buildDomainModel(this, obj, {\n            username: null,\n            password: null,\n            totp: null,\n        }, alreadyEncrypted, []);\n\n        if (obj.uris) {\n            this.uris = [];\n            obj.uris.forEach((u) => {\n                this.uris.push(new LoginUri(u, alreadyEncrypted));\n            });\n        }\n    }\n\n    async decrypt(orgId: string): Promise<LoginView> {\n        const view = await this.decryptObj(new LoginView(this), {\n            username: null,\n            password: null,\n            totp: null,\n        }, orgId);\n\n        if (this.uris != null) {\n            view.uris = [];\n            for (let i = 0; i < this.uris.length; i++) {\n                const uri = await this.uris[i].decrypt(orgId);\n                view.uris.push(uri);\n            }\n        }\n\n        return view;\n    }\n\n    toLoginData(): LoginData {\n        const l = new LoginData();\n        l.passwordRevisionDate = this.passwordRevisionDate != null ? this.passwordRevisionDate.toISOString() : null;\n        this.buildDataModel(this, l, {\n            username: null,\n            password: null,\n            totp: null,\n        });\n\n        if (this.uris != null && this.uris.length > 0) {\n            l.uris = [];\n            this.uris.forEach((u) => {\n                l.uris.push(u.toLoginUriData());\n            });\n        }\n\n        return l;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriData } from '../data/loginUriData';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nexport class LoginUri extends Domain {\n    uri: CipherString;\n    match: UriMatchType;\n\n    constructor(obj?: LoginUriData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.match = obj.match;\n        this.buildDomainModel(this, obj, {\n            uri: null,\n        }, alreadyEncrypted, []);\n    }\n\n    decrypt(orgId: string): Promise<LoginUriView> {\n        return this.decryptObj(new LoginUriView(this), {\n            uri: null,\n        }, orgId);\n    }\n\n    toLoginUriData(): LoginUriData {\n        const u = new LoginUriData();\n        this.buildDataModel(this, u, {\n            uri: null,\n        }, ['match']);\n        return u;\n    }\n}\n","import { PasswordHistoryData } from '../data/passwordHistoryData';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nimport { PasswordHistoryView } from '../view/passwordHistoryView';\n\nexport class Password extends Domain {\n    password: CipherString;\n    lastUsedDate: Date;\n\n    constructor(obj?: PasswordHistoryData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            password: null,\n        }, alreadyEncrypted);\n        this.lastUsedDate = new Date(obj.lastUsedDate);\n    }\n\n    decrypt(orgId: string): Promise<PasswordHistoryView> {\n         return this.decryptObj(new PasswordHistoryView(this), {\n            password: null,\n        }, orgId);\n    }\n\n    toPasswordHistoryData(): PasswordHistoryData {\n        const ph = new PasswordHistoryData();\n        ph.lastUsedDate = this.lastUsedDate.toISOString();\n        this.buildDataModel(this, ph, {\n            password: null,\n        });\n        return ph;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteData } from '../data/secureNoteData';\n\nimport Domain from './domainBase';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nexport class SecureNote extends Domain {\n    type: SecureNoteType;\n\n    constructor(obj?: SecureNoteData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.type = obj.type;\n    }\n\n    decrypt(orgId: string): Promise<SecureNoteView> {\n        return Promise.resolve(new SecureNoteView(this));\n    }\n\n    toSecureNoteData(): SecureNoteData {\n        const n = new SecureNoteData();\n        n.type = this.type;\n        return n;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherCreateRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class CardApi extends BaseResponse {\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.cardholderName = this.getResponseProperty('CardholderName');\n        this.brand = this.getResponseProperty('Brand');\n        this.number = this.getResponseProperty('Number');\n        this.expMonth = this.getResponseProperty('ExpMonth');\n        this.expYear = this.getResponseProperty('ExpYear');\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { FieldType } from '../../enums/fieldType';\n\nexport class FieldApi extends BaseResponse {\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.value = this.getResponseProperty('Value');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nexport class IdentityApi extends BaseResponse {\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.title = this.getResponseProperty('Title');\n        this.firstName = this.getResponseProperty('FirstName');\n        this.middleName = this.getResponseProperty('MiddleName');\n        this.lastName = this.getResponseProperty('LastName');\n        this.address1 = this.getResponseProperty('Address1');\n        this.address2 = this.getResponseProperty('Address2');\n        this.address3 = this.getResponseProperty('Address3');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n        this.company = this.getResponseProperty('Company');\n        this.email = this.getResponseProperty('Email');\n        this.phone = this.getResponseProperty('Phone');\n        this.ssn = this.getResponseProperty('SSN');\n        this.username = this.getResponseProperty('Username');\n        this.passportNumber = this.getResponseProperty('PassportNumber');\n        this.licenseNumber = this.getResponseProperty('LicenseNumber');\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { LoginUriApi } from './loginUriApi';\n\nexport class LoginApi extends BaseResponse {\n    uris: LoginUriApi[];\n    username: string;\n    password: string;\n    passwordRevisionDate: string;\n    totp: string;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.username = this.getResponseProperty('Username');\n        this.password = this.getResponseProperty('Password');\n        this.passwordRevisionDate = this.getResponseProperty('PasswordRevisionDate');\n        this.totp = this.getResponseProperty('Totp');\n\n        const uris = this.getResponseProperty('Uris');\n        if (uris != null) {\n            this.uris = uris.map((u: any) => new LoginUriApi(u));\n        }\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nexport class LoginUriApi extends BaseResponse {\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.uri = this.getResponseProperty('Uri');\n        const match = this.getResponseProperty('Match');\n        this.match = match != null ? match : null;\n    }\n}\n","import { BaseResponse } from '../response/baseResponse';\n\nimport { SecureNoteType } from '../../enums/secureNoteType';\n\nexport class SecureNoteApi extends BaseResponse {\n    type: SecureNoteType;\n\n    constructor(data: any = null) {\n        super(data);\n        if (data == null) {\n            return;\n        }\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    Input,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appFallbackSrc]',\n})\nexport class FallbackSrcDirective {\n    @Input('appFallbackSrc') appFallbackSrc: string;\n\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('error') onError() {\n        this.el.nativeElement.src = this.appFallbackSrc;\n    }\n}\n","import { Component } from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { ImportService } from 'jslib/abstractions/import.service';\n\nimport { ImportComponent as BaseImportComponent } from '../../tools/import.component';\n\n@Component({\n    selector: 'app-org-import',\n    templateUrl: '../../tools/import.component.html',\n})\nexport class ImportComponent extends BaseImportComponent {\n    constructor(i18nService: I18nService, analytics: Angulartics2,\n        toasterService: ToasterService, importService: ImportService,\n        router: Router, private route: ActivatedRoute) {\n        super(i18nService, analytics, toasterService, importService, router);\n    }\n\n    ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organizationId = params.organizationId;\n            this.successNavigate = ['organizations', this.organizationId, 'vault'];\n            super.ngOnInit();\n        });\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport {\n    InactiveTwoFactorReportComponent as BaseInactiveTwoFactorReportComponent,\n} from '../../tools/inactive-two-factor-report.component';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\n@Component({\n    selector: 'app-inactive-two-factor-report',\n    templateUrl: '../../tools/inactive-two-factor-report.component.html',\n})\nexport class InactiveTwoFactorReportComponent extends BaseInactiveTwoFactorReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport {\n    ReusedPasswordsReportComponent as BaseReusedPasswordsReportComponent,\n} from '../../tools/reused-passwords-report.component';\n\n@Component({\n    selector: 'app-reused-passwords-report',\n    templateUrl: '../../tools/reused-passwords-report.component.html',\n})\nexport class ReusedPasswordsReportComponent extends BaseReusedPasswordsReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-org-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent {\n    organization: Organization;\n    accessReports = false;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private messagingService: MessagingService) { }\n\n    ngOnInit() {\n        this.route.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            // TODO: Maybe we want to just make sure they are not on a free plan? Just compare useTotp for now\n            // since all paid plans include useTotp\n            this.accessReports = this.organization.useTotp;\n        });\n    }\n\n    upgradeOrganization() {\n        this.messagingService.send('upgradeOrganization', { organizationId: this.organization.id });\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card mb-4\">\n                <div class=\"card-header\">{{'tools' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'importData' | i18n}}\n                    </a>\n                    <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'exportVault' | i18n}}\n                    </a>\n                </div>\n            </div>\n            <div class=\"card\">\n                <div class=\"card-header d-flex\">\n                    {{'reports' | i18n}}\n                    <div class=\"ml-auto\">\n                        <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!accessReports\"\n                            (click)=\"upgradeOrganization()\">\n                            {{'upgrade' | i18n}}\n                        </a>\n                    </div>\n                </div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'exposedPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'reusedPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'weakPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'unsecuredWebsitesReport' | i18n}}\n                    </a>\n                    <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'inactive2faReport' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport {\n    UnsecuredWebsitesReportComponent as BaseUnsecuredWebsitesReportComponent,\n} from '../../tools/unsecured-websites-report.component';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\n@Component({\n    selector: 'app-unsecured-websites-report',\n    templateUrl: '../../tools/unsecured-websites-report.component.html',\n})\nexport class UnsecuredWebsitesReportComponent extends BaseUnsecuredWebsitesReportComponent {\n    constructor(cipherService: CipherService, componentFactoryResolver: ComponentFactoryResolver,\n        messagingService: MessagingService, userService: UserService,\n        private route: ActivatedRoute) {\n        super(cipherService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport {\n    WeakPasswordsReportComponent as BaseWeakPasswordsReportComponent,\n} from '../../tools/weak-passwords-report.component';\n\n@Component({\n    selector: 'app-weak-passwords-report',\n    templateUrl: '../../tools/weak-passwords-report.component.html',\n})\nexport class WeakPasswordsReportComponent extends BaseWeakPasswordsReportComponent {\n    constructor(cipherService: CipherService, passwordGenerationService: PasswordGenerationService,\n        componentFactoryResolver: ComponentFactoryResolver, messagingService: MessagingService,\n        userService: UserService, private route: ActivatedRoute) {\n        super(cipherService, passwordGenerationService, componentFactoryResolver, messagingService, userService);\n    }\n\n    async ngOnInit() {\n        this.route.parent.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            await super.ngOnInit();\n        });\n    }\n\n    getAllCiphers(): Promise<CipherView[]> {\n        return this.cipherService.getAllFromApiForOrganization(this.organization.id);\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { ModalComponent } from '../../modal.component';\n\nimport { EntityEventsComponent } from '../manage/entity-events.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { GroupingsComponent } from './groupings.component';\n\nconst BroadcasterSubscriptionId = 'OrgVaultComponent';\n\n@Component({\n    selector: 'app-org-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('eventsTemplate', { read: ViewContainerRef, static: true }) eventsModalRef: ViewContainerRef;\n\n    organization: Organization;\n    collectionId: string = null;\n    type: CipherType = null;\n    deleted: boolean = false;\n\n    modal: ModalComponent = null;\n\n    constructor(private route: ActivatedRoute, private userService: UserService,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private syncService: SyncService, private i18nService: I18nService,\n        private componentFactoryResolver: ComponentFactoryResolver, private messagingService: MessagingService,\n        private broadcasterService: BroadcasterService, private ngZone: NgZone) { }\n\n    ngOnInit() {\n        const queryParams = this.route.parent.params.subscribe(async (params) => {\n            this.organization = await this.userService.getOrganization(params.organizationId);\n            this.groupingsComponent.organization = this.organization;\n            this.ciphersComponent.organization = this.organization;\n\n            const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n                this.ciphersComponent.searchText = this.groupingsComponent.searchText = qParams.search;\n                if (!this.organization.isAdmin) {\n                    await this.syncService.fullSync(false);\n                    this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                        this.ngZone.run(async () => {\n                            switch (message.command) {\n                                case 'syncCompleted':\n                                    if (message.successfully) {\n                                        await Promise.all([\n                                            this.groupingsComponent.load(),\n                                            this.ciphersComponent.refresh(),\n                                        ]);\n                                        this.changeDetectorRef.detectChanges();\n                                    }\n                                    break;\n                            }\n                        });\n                    });\n                }\n                await this.groupingsComponent.load();\n\n                if (qParams == null) {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                } else {\n                    if (qParams.deleted) {\n                        this.groupingsComponent.selectedTrash = true;\n                        await this.filterDeleted(true);\n                    } else if (qParams.type) {\n                        const t = parseInt(qParams.type, null);\n                        this.groupingsComponent.selectedType = t;\n                        await this.filterCipherType(t, true);\n                    } else if (qParams.collectionId) {\n                        this.groupingsComponent.selectedCollectionId = qParams.collectionId;\n                        await this.filterCollection(qParams.collectionId, true);\n                    } else {\n                        this.groupingsComponent.selectedAll = true;\n                        await this.ciphersComponent.reload();\n                    }\n                }\n\n                if (qParams.viewEvents != null) {\n                    const cipher = this.ciphersComponent.ciphers.filter((c) => c.id === qParams.viewEvents);\n                    if (cipher.length > 0) {\n                        this.viewEvents(cipher[0]);\n                    }\n                }\n\n                if (queryParamsSub != null) {\n                    queryParamsSub.unsubscribe();\n                }\n            });\n\n            if (queryParams != null) {\n                queryParams.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.applyFilter();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        const filter = (c: CipherView) => c.type === type;\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string, load = false) {\n        this.ciphersComponent.showAddNew = true;\n        this.ciphersComponent.deleted = false;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        const filter = (c: CipherView) => {\n            if (collectionId === 'unassigned') {\n                return c.collectionIds == null || c.collectionIds.length === 0;\n            } else {\n                return c.collectionIds != null && c.collectionIds.indexOf(collectionId) > -1;\n            }\n        };\n        if (load) {\n            await this.ciphersComponent.reload(filter);\n        } else {\n            await this.ciphersComponent.applyFilter(filter);\n        }\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    async filterDeleted(load: boolean = false) {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        if (load) {\n            await this.ciphersComponent.reload(null, true);\n        } else {\n            await this.ciphersComponent.applyFilter(null);\n        }\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    editCipherAttachments(cipher: CipherView) {\n        if (this.organization.maxStorageGb == null || this.organization.maxStorageGb === 0) {\n            this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n            return;\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        if (this.organization.isAdmin) {\n            childComponent.collectionIds = cipher.collectionIds;\n            childComponent.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.organizationId = this.organization.id;\n        component.type = this.type;\n        if (this.organization.isAdmin) {\n            component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        if (this.collectionId != null) {\n            component.collectionIds = [this.collectionId];\n        }\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.organization = this.organization;\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    cloneCipher(cipher: CipherView) {\n        const component = this.editCipher(cipher);\n        component.cloneMode = true;\n        component.organizationId = this.organization.id;\n        if (this.organization.isAdmin) {\n            component.collections = this.groupingsComponent.collections.filter((c) => !c.readOnly);\n        }\n        // Regardless of Admin state, the collection Ids need to passed manually as they are not assigned value\n        // in the add-edit componenet\n        component.collectionIds = cipher.collectionIds;\n    }\n\n    async viewEvents(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.eventsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<EntityEventsComponent>(\n            EntityEventsComponent, this.eventsModalRef);\n\n        childComponent.name = cipher.name;\n        childComponent.organizationId = this.organization.id;\n        childComponent.entityId = cipher.id;\n        childComponent.showUser = true;\n        childComponent.entity = 'cipher';\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.collectionId = null;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                type: this.type,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <app-org-vault-groupings [showFolders]=\"false\" [showFavorites]=\"false\" [showTrash]=\"true\"\n                (onAllClicked)=\"clearGroupingFilters()\" (onCipherTypeClicked)=\"filterCipherType($event)\"\n                (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\"\n                (onTrashClicked)=\"filterDeleted()\">\n            </app-org-vault-groupings>\n        </div>\n        <div class=\"col-9\">\n            <div class=\"page-header d-flex\">\n                <h1>\n                    {{'vault' | i18n}}\n                    <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n                        <ng-container *ngIf=\"actionSpinner.loading\">\n                            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"\n                                aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n                        </ng-container>\n                    </small>\n                </h1>\n                <div class=\"ml-auto d-flex\">\n                    <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [modal]=\"modal\" [deleted]=\"deleted\"\n                        [organization]=\"organization\">\n                    </app-vault-bulk-actions>\n                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm ml-auto\" (click)=\"addCipher()\"\n                        *ngIf=\"!deleted\">\n                        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}}\n                    </button>\n                </div>\n            </div>\n            <app-org-vault-ciphers (onCipherClicked)=\"editCipher($event)\"\n                (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\"\n                (onCollectionsClicked)=\"editCipherCollections($event)\" (onEventsClicked)=\"viewEvents($event)\"\n                (onCloneClicked)=\"cloneCipher($event)\">\n            </app-org-vault-ciphers>\n        </div>\n    </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #eventsTemplate></ng-template>\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\n\nimport { AttachmentView } from 'jslib/models/view/attachmentView';\n\nimport { AttachmentsComponent as BaseAttachmentsComponent } from '../../vault/attachments.component';\n\n@Component({\n    selector: 'app-org-vault-attachments',\n    templateUrl: '../../vault/attachments.component.html',\n})\nexport class AttachmentsComponent extends BaseAttachmentsComponent {\n    organization: Organization;\n\n    constructor(cipherService: CipherService, i18nService: I18nService,\n        cryptoService: CryptoService, userService: UserService,\n        platformUtilsService: PlatformUtilsService, private apiService: ApiService) {\n        super(cipherService, i18nService, cryptoService, userService, platformUtilsService);\n    }\n\n    protected async reupload(attachment: AttachmentView) {\n        if (this.organization.isAdmin && this.showFixOldAttachments(attachment)) {\n            await super.reuploadCipherAttachment(attachment, true);\n        }\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file, this.organization.isAdmin);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        if (!this.organization.isAdmin) {\n            return super.deleteCipherAttachment(attachmentId);\n        }\n        return this.apiService.deleteCipherAttachmentAdmin(this.cipherId, attachmentId);\n    }\n\n    protected showFixOldAttachments(attachment: AttachmentView) {\n        return attachment.key == null && this.organization.isAdmin;\n    }\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { CipherData } from 'jslib/models/data/cipherData';\nimport { Cipher } from 'jslib/models/domain/cipher';\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherCollectionsRequest } from 'jslib/models/request/cipherCollectionsRequest';\n\nimport { CollectionsComponent as BaseCollectionsComponent } from '../../vault/collections.component';\n\n@Component({\n    selector: 'app-org-vault-collections',\n    templateUrl: '../../vault/collections.component.html',\n})\nexport class CollectionsComponent extends BaseCollectionsComponent {\n    organization: Organization;\n\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, cipherService: CipherService,\n        private apiService: ApiService) {\n        super(collectionService, platformUtilsService, i18nService, cipherService);\n        this.allowSelectNone = true;\n    }\n\n    protected async loadCipher() {\n        if (!this.organization.isAdmin) {\n            return await super.loadCipher();\n        }\n        const response = await this.apiService.getCipherAdmin(this.cipherId);\n        return new Cipher(new CipherData(response));\n    }\n\n    protected loadCipherCollections() {\n        if (!this.organization.isAdmin) {\n            return super.loadCipherCollections();\n        }\n        return this.collectionIds;\n    }\n\n    protected loadCollections() {\n        if (!this.organization.isAdmin) {\n            return super.loadCollections();\n        }\n        return Promise.resolve(this.collections);\n    }\n\n    protected saveCollections() {\n        if (this.organization.isAdmin) {\n            const request = new CipherCollectionsRequest(this.cipherDomain.collectionIds);\n            return this.apiService.putCipherCollectionsAdmin(this.cipherId, request);\n        } else {\n            return super.saveCollections();\n        }\n    }\n}\n","export class CipherCollectionsRequest {\n    collectionIds: string[];\n\n    constructor(collectionIds: string[]) {\n        this.collectionIds = collectionIds == null ? [] : collectionIds;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { Organization } from 'jslib/models/domain/organization';\nimport { CipherBulkDeleteRequest } from 'jslib/models/request/cipherBulkDeleteRequest';\n\n@Component({\n    selector: 'app-vault-bulk-delete',\n    templateUrl: 'bulk-delete.component.html',\n})\nexport class BulkDeleteComponent {\n    @Input() cipherIds: string[] = [];\n    @Input() permanent: boolean = false;\n    @Input() organization: Organization;\n    @Output() onDeleted = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private apiService: ApiService) { }\n\n    async submit() {\n        if (!this.organization || !this.organization.isAdmin) {\n            await this.deleteCiphers();\n        } else {\n            await this.deleteCiphersAdmin();\n        }\n\n        await this.formPromise;\n\n        this.onDeleted.emit();\n        this.analytics.eventTrack.next({ action: 'Bulk Deleted Items' });\n        this.toasterService.popAsync('success', null, this.i18nService.t(this.permanent ? 'permanentlyDeletedItems'\n            : 'deletedItems'));\n    }\n\n    private async deleteCiphers() {\n        if (this.permanent) {\n            this.formPromise = await this.cipherService.deleteManyWithServer(this.cipherIds);\n        } else {\n            this.formPromise = await this.cipherService.softDeleteManyWithServer(this.cipherIds);\n        }\n    }\n\n    private async deleteCiphersAdmin() {\n        const deleteRequest = new CipherBulkDeleteRequest(this.cipherIds, this.organization.id);\n        if (this.permanent) {\n            this.formPromise = await this.apiService.deleteManyCiphersAdmin(deleteRequest);\n        } else {\n            this.formPromise = await this.apiService.putDeleteManyCiphersAdmin(deleteRequest);\n        }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteSelectedTitle\">\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"deleteSelectedTitle\">\n                    {{(permanent ? 'permanentlyDeleteSelected' : 'deleteSelected') | i18n}}\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                {{(permanent ? 'permanentlyDeleteSelectedItemsDesc' : 'deleteSelectedItemsDesc') | i18n: cipherIds.length}}\n            </div>\n            <div class=\"modal-footer\">\n                <button appAutoFocus type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{(permanent ? 'permanentlyDelete' : 'delete') | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","export class CipherBulkDeleteRequest {\n    ids: string[];\n    organizationId: string;\n\n    constructor(ids: string[], organizationId?: string) {\n        this.ids = ids == null ? [] : ids;\n        this.organizationId = organizationId;\n    }\n}\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { FolderView } from 'jslib/models/view/folderView';\n\n@Component({\n    selector: 'app-vault-bulk-move',\n    templateUrl: 'bulk-move.component.html',\n})\nexport class BulkMoveComponent implements OnInit {\n    @Input() cipherIds: string[] = [];\n    @Output() onMoved = new EventEmitter();\n\n    folderId: string = null;\n    folders: FolderView[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private folderService: FolderService) { }\n\n    async ngOnInit() {\n        this.folders = await this.folderService.getAllDecrypted();\n        this.folderId = this.folders[0].id;\n    }\n\n    async submit() {\n        this.formPromise = this.cipherService.moveManyWithServer(this.cipherIds, this.folderId);\n        await this.formPromise;\n        this.onMoved.emit();\n        this.analytics.eventTrack.next({ action: 'Bulk Moved Items' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('movedItems'));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"moveSelectedTitle\">\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"moveSelectedTitle\">\n                    {{'moveSelected' | i18n}}\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'moveSelectedItemsDesc' | i18n: cipherIds.length}}</p>\n                <div class=\"form-group\">\n                    <label for=\"folder\">{{'folder' | i18n}}</label>\n                    <select id=\"folder\" name=\"FolderId\" [(ngModel)]=\"folderId\" class=\"form-control\">\n                        <option *ngFor=\"let f of folders\" [ngValue]=\"f.id\">{{f.name}}</option>\n                    </select>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-vault-bulk-restore',\n    templateUrl: 'bulk-restore.component.html',\n})\nexport class BulkRestoreComponent {\n    @Input() cipherIds: string[] = [];\n    @Output() onRestored = new EventEmitter();\n\n    formPromise: Promise<any>;\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async submit() {\n        this.formPromise = this.cipherService.restoreManyWithServer(this.cipherIds);\n        await this.formPromise;\n        this.onRestored.emit();\n        this.analytics.eventTrack.next({ action: 'Bulk Restored Items' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('restoredItems'));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"restoreSelectedTitle\">\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"restoreSelectedTitle\">\n                    {{'restoreSelected' | i18n}}\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                {{'restoreSelectedItemsDesc' | i18n: cipherIds.length}}\n            </div>\n            <div class=\"modal-footer\">\n                <button appAutoFocus type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'restore' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CipherView } from 'jslib/models/view';\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\n@Component({\n    selector: 'app-vault-bulk-share',\n    templateUrl: 'bulk-share.component.html',\n})\nexport class BulkShareComponent implements OnInit {\n    @Input() ciphers: CipherView[] = [];\n    @Input() organizationId: string;\n    @Output() onShared = new EventEmitter();\n\n    nonShareableCount = 0;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n    shareableCiphers: CipherView[] = [];\n    formPromise: Promise<any>;\n\n    private writeableCollections: CollectionView[] = [];\n\n    constructor(private analytics: Angulartics2, private cipherService: CipherService,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private collectionService: CollectionService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.shareableCiphers = this.ciphers.filter((c) => !c.hasOldAttachments && c.organizationId == null);\n        this.nonShareableCount = this.ciphers.length - this.shareableCiphers.length;\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.filter((c) => !c.readOnly);\n        this.organizations = await this.userService.getAllOrganizations();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    filterCollections() {\n        this.selectAll(false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit() {\n        const checkedCollectionIds = this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n        try {\n            this.formPromise = this.cipherService.shareManyWithServer(this.shareableCiphers, this.organizationId,\n                checkedCollectionIds);\n            await this.formPromise;\n            this.onShared.emit();\n            this.analytics.eventTrack.next({ action: 'Bulk Shared Items' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('sharedItems'));\n        } catch { }\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach((c) => this.check(c, select));\n    }\n\n    get canSave() {\n        if (this.shareableCiphers != null && this.shareableCiphers.length > 0 && this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareSelectedTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"shareSelectedTitle\">\n                    {{'shareSelected' | i18n}}\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'shareManyDesc' | i18n}}</p>\n                <p>{{'shareSelectedItemsCountDesc' | i18n: this.ciphers.length : shareableCiphers.length : nonShareableCount}}\n                </p>\n                <div class=\"form-group\">\n                    <label for=\"organization\">{{'organization' | i18n}}</label>\n                    <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\"\n                        (change)=\"filterCollections()\">\n                        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option>\n                    </select>\n                </div>\n                <div class=\"d-flex\">\n                    <h3>{{'collections' | i18n}}</h3>\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"!collections || !collections.length\">\n                    {{'noCollectionsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                    <tbody>\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                            <td class=\"table-list-checkbox\">\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                    appStopProp>\n                            </td>\n                            <td>\n                                {{c.name}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\"\n                    [ngClass]=\"{loading:form.loading}\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { ModalComponent } from '../modal.component';\nimport { DeauthorizeSessionsComponent } from './deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './delete-account.component';\nimport { PurgeVaultComponent } from './purge-vault.component';\n\n@Component({\n    selector: 'app-account',\n    templateUrl: 'account.component.html',\n})\nexport class AccountComponent {\n    @ViewChild('deauthorizeSessionsTemplate', { read: ViewContainerRef, static: true }) deauthModalRef: ViewContainerRef;\n    @ViewChild('purgeVaultTemplate', { read: ViewContainerRef, static: true }) purgeModalRef: ViewContainerRef;\n    @ViewChild('deleteAccountTemplate', { read: ViewContainerRef, static: true }) deleteModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) { }\n\n    deauthorizeSessions() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deauthModalRef.createComponent(factory).instance;\n        this.modal.show<DeauthorizeSessionsComponent>(DeauthorizeSessionsComponent, this.deauthModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    purgeVault() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.purgeModalRef.createComponent(factory).instance;\n        this.modal.show<PurgeVaultComponent>(PurgeVaultComponent, this.purgeModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    deleteAccount() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.deleteModalRef.createComponent(factory).instance;\n        this.modal.show<DeleteAccountComponent>(DeleteAccountComponent, this.deleteModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'myAccount' | i18n}}</h1>\n</div>\n<app-profile></app-profile>\n<div class=\"secondary-header\">\n    <h1>{{'changeEmail' | i18n}}</h1>\n</div>\n<app-change-email></app-change-email>\n<div class=\"secondary-header\">\n    <h1>{{'changeMasterPassword' | i18n}}</h1>\n</div>\n<app-change-password></app-change-password>\n<div class=\"secondary-header\">\n    <h1>{{'encKeySettings' | i18n}}</h1>\n</div>\n<app-change-kdf></app-change-kdf>\n<div class=\"secondary-header text-danger border-0 mb-0\">\n    <h1>{{'dangerZone' | i18n}}</h1>\n</div>\n<div class=\"card border-danger\">\n    <div class=\"card-body\">\n        <p>{{'dangerZoneDesc' | i18n}}</p>\n        <button type=\"button\" class=\"btn btn-outline-danger\"\n            (click)=\"deauthorizeSessions()\">{{'deauthorizeSessions' | i18n}}</button>\n        <button type=\"button\" class=\"btn btn-outline-danger\" (click)=\"purgeVault()\">{{'purgeVault' | i18n}}</button>\n        <button type=\"button\" class=\"btn btn-outline-danger\"\n            (click)=\"deleteAccount()\">{{'deleteAccount' | i18n}}</button>\n    </div>\n</div>\n<ng-template #deauthorizeSessionsTemplate></ng-template>\n<ng-template #purgeVaultTemplate></ng-template>\n<ng-template #deleteAccountTemplate></ng-template>\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-deauthorize-sessions',\n    templateUrl: 'deauthorize-sessions.component.html',\n})\nexport class DeauthorizeSessionsComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.postSecurityStamp(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deauthorized Sessions' });\n            this.toasterService.popAsync('success', this.i18nService.t('sessionsDeauthorized'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deAuthTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"deAuthTitle\">{{'deauthorizeSessions' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'deauthorizeSessionsDesc' | i18n}}</p>\n                <app-callout type=\"warning\">{{'deauthorizeSessionsWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutoFocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'deauthorizeSessions' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { PasswordVerificationRequest } from 'jslib/models/request/passwordVerificationRequest';\n\n@Component({\n    selector: 'app-delete-account',\n    templateUrl: 'delete-account.component.html',\n})\nexport class DeleteAccountComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const request = new PasswordVerificationRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        try {\n            this.formPromise = this.apiService.deleteAccount(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Deleted Account' });\n            this.toasterService.popAsync('success', this.i18nService.t('accountDeleted'),\n                this.i18nService.t('accountDeletedDesc'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"deleteAccountTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"deleteAccountTitle\">{{'deleteAccount' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'deleteAccountDesc' | i18n}}</p>\n                <app-callout type=\"warning\">{{'deleteAccountWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-danger btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'deleteAccount' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { UpdateProfileRequest } from 'jslib/models/request/updateProfileRequest';\n\nimport { ProfileResponse } from 'jslib/models/response/profileResponse';\n\n@Component({\n    selector: 'app-profile',\n    templateUrl: 'profile.component.html',\n})\nexport class ProfileComponent implements OnInit {\n    loading = true;\n    profile: ProfileResponse;\n    fingerprint: string;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private userService: UserService, private cryptoService: CryptoService) { }\n\n    async ngOnInit() {\n        this.profile = await this.apiService.getProfile();\n        this.loading = false;\n        const fingerprint = await this.cryptoService.getFingerprint(await this.userService.getUserId());\n        if (fingerprint != null) {\n            this.fingerprint = fingerprint.join('-');\n        }\n    }\n\n    async submit() {\n        try {\n            const request = new UpdateProfileRequest(this.profile.name, this.profile.masterPasswordHint);\n            this.formPromise = this.apiService.putProfile(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Updated Profile' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('accountUpdated'));\n        } catch { }\n    }\n}\n","<div *ngIf=\"loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</div>\n<form *ngIf=\"profile && !loading\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"name\">{{'name' | i18n}}</label>\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"profile.name\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"email\">{{'email' | i18n}}</label>\n                <input id=\"email\" class=\"form-control\" type=\"text\" name=\"Email\" [(ngModel)]=\"profile.email\" readonly>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"masterPasswordHint\">{{'masterPassHintLabel' | i18n}}</label>\n                <input id=\"masterPasswordHint\" class=\"form-control\" type=\"text\" name=\"MasterPasswordHint\"\n                    [(ngModel)]=\"profile.masterPasswordHint\">\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"mb-3\">\n                <app-avatar data=\"{{profile.name || profile.email}}\" [email]=\"profile.email\" dynamic=\"true\" size=\"75\"\n                    fontSize=\"35\"></app-avatar>\n            </div>\n            <hr>\n            <p *ngIf=\"fingerprint\">\n                {{'yourAccountsFingerprint' | i18n}}:\n                <a href=\"https://help.bitwarden.com/article/fingerprint-phrase/\" target=\"_blank\" rel=\"noopener\"\n                    appA11yTitle=\"{{'learnMore' | i18n}}\">\n                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i></a><br>\n                <code>{{fingerprint}}</code>\n            </p>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n</form>\n","import {\n    Component,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { EmailRequest } from 'jslib/models/request/emailRequest';\nimport { EmailTokenRequest } from 'jslib/models/request/emailTokenRequest';\n\n@Component({\n    selector: 'app-change-email',\n    templateUrl: 'change-email.component.html',\n})\nexport class ChangeEmailComponent {\n    masterPassword: string;\n    newEmail: string;\n    token: string;\n    tokenSent = false;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private userService: UserService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        this.newEmail = this.newEmail.trim().toLowerCase();\n        if (!this.tokenSent) {\n            const request = new EmailTokenRequest();\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            try {\n                this.formPromise = this.apiService.postEmailToken(request);\n                await this.formPromise;\n                this.tokenSent = true;\n            } catch { }\n        } else {\n            const request = new EmailRequest();\n            request.token = this.token;\n            request.newEmail = this.newEmail;\n            request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n            const kdf = await this.userService.getKdf();\n            const kdfIterations = await this.userService.getKdfIterations();\n            const newKey = await this.cryptoService.makeKey(this.masterPassword, this.newEmail, kdf, kdfIterations);\n            request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n            const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n            request.key = newEncKey[1].encryptedString;\n            try {\n                this.formPromise = this.apiService.postEmail(request);\n                await this.formPromise;\n                this.reset();\n                this.analytics.eventTrack.next({ action: 'Changed Email' });\n                this.toasterService.popAsync('success', this.i18nService.t('emailChanged'),\n                    this.i18nService.t('logBackIn'));\n                this.messagingService.send('logout');\n            } catch { }\n        }\n    }\n\n    reset() {\n        this.token = this.newEmail = this.masterPassword = null;\n        this.tokenSent = false;\n    }\n}\n","<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required [readonly]=\"tokenSent\" appInputVerbatim>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"newEmail\">{{'newEmail' | i18n}}</label>\n                <input id=\"newEmail\" class=\"form-control\" type=\"text\" name=\"NewEmail\" [(ngModel)]=\"newEmail\" required\n                    [readonly]=\"tokenSent\" inputmode=\"email\" appInputVerbatim=\"false\">\n            </div>\n        </div>\n    </div>\n    <ng-container *ngIf=\"tokenSent\">\n        <hr>\n        <p>{{'changeEmailDesc' | i18n : newEmail}}</p>\n        <app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\n        <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"form-group\">\n                    <label for=\"token\">{{'code' | i18n}}</label>\n                    <input id=\"token\" class=\"form-control\" type=\"text\" name=\"Token\" [(ngModel)]=\"token\" required\n                        appInputVerbatim>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span *ngIf=\"!tokenSent\">{{'continue' | i18n}}</span>\n        <span *ngIf=\"tokenSent\">{{'changeEmail' | i18n}}</span>\n    </button>\n    <button type=\"button\" class=\"btn btn-outline-secondary\" *ngIf=\"tokenSent\" (click)=\"reset()\">\n        {{'cancel' | i18n}}\n    </button>\n</form>\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class EmailTokenRequest extends PasswordVerificationRequest {\n    newEmail: string;\n    masterPasswordHash: string;\n}\n","import { Component } from '@angular/core';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib/abstractions/policy.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport {\n    ChangePasswordComponent as BaseChangePasswordComponent,\n} from 'jslib/angular/components/change-password.component';\n\nimport { CipherString } from 'jslib/models/domain/cipherString';\nimport { SymmetricCryptoKey } from 'jslib/models/domain/symmetricCryptoKey';\n\nimport { CipherWithIdRequest } from 'jslib/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib/models/request/folderWithIdRequest';\nimport { PasswordRequest } from 'jslib/models/request/passwordRequest';\nimport { UpdateKeyRequest } from 'jslib/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: 'change-password.component.html',\n})\nexport class ChangePasswordComponent extends BaseChangePasswordComponent {\n    rotateEncKey = false;\n    currentMasterPassword: string;\n\n    constructor(i18nService: I18nService,\n        cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService,\n        private folderService: FolderService, private cipherService: CipherService,\n        private syncService: SyncService, private apiService: ApiService, ) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async rotateEncKeyClicked() {\n        if (this.rotateEncKey) {\n            const ciphers = await this.cipherService.getAllDecrypted();\n            let hasOldAttachments = false;\n            if (ciphers != null) {\n                for (let i = 0; i < ciphers.length; i++) {\n                    if (ciphers[i].organizationId == null && ciphers[i].hasOldAttachments) {\n                        hasOldAttachments = true;\n                        break;\n                    }\n                }\n            }\n\n            if (hasOldAttachments) {\n                const learnMore = await this.platformUtilsService.showDialog(\n                    this.i18nService.t('oldAttachmentsNeedFixDesc'), null,\n                    this.i18nService.t('learnMore'), this.i18nService.t('close'), 'warning');\n                if (learnMore) {\n                    this.platformUtilsService.launchUri(\n                        'https://help.bitwarden.com/article/attachments/#fixing-old-attachments');\n                }\n                this.rotateEncKey = false;\n                return;\n            }\n\n            const result = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateEncryptionKeyWarning') + ' ' +\n                this.i18nService.t('rotateEncKeyConfirmation'), this.i18nService.t('rotateEncKeyTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n            if (!result) {\n                this.rotateEncKey = false;\n            }\n        }\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        await super.submit();\n    }\n\n    async setupSubmitActions() {\n        if (this.currentMasterPassword == null || this.currentMasterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return false;\n        }\n\n        if (this.rotateEncKey) {\n            await this.syncService.fullSync(true);\n        }\n\n        return super.setupSubmitActions();\n    }\n\n    async performSubmitActions(newMasterPasswordHash: string, newKey: SymmetricCryptoKey,\n        newEncKey: [SymmetricCryptoKey, CipherString]) {\n        const request = new PasswordRequest();\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.currentMasterPassword, null);\n        request.newMasterPasswordHash = newMasterPasswordHash;\n        request.key = newEncKey[1].encryptedString;\n\n        try {\n            if (this.rotateEncKey) {\n                this.formPromise = this.apiService.postPassword(request).then(() => {\n                    return this.updateKey(newKey, request.newMasterPasswordHash);\n                });\n            } else {\n                this.formPromise = this.apiService.postPassword(request);\n            }\n\n            await this.formPromise;\n\n            this.platformUtilsService.showToast('success', this.i18nService.t('masterPasswordChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    private async updateKey(key: SymmetricCryptoKey, masterPasswordHash: string) {\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: CipherString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = masterPasswordHash;\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        await this.apiService.postAccountKey(request);\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\n<app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions\">\n    {{'masterPasswordPolicyInEffect' | i18n}}\n    <ul class=\"mb-0\">\n        <li *ngIf=\"enforcedPolicyOptions?.minComplexity > 0\">\n            {{'policyInEffectMinComplexity' | i18n : getPasswordScoreAlertDisplay()}}\n        </li>\n        <li *ngIf=\"enforcedPolicyOptions?.minLength > 0\">\n            {{'policyInEffectMinLength' | i18n : enforcedPolicyOptions?.minLength.toString()}}\n        </li>\n        <li *ngIf=\"enforcedPolicyOptions?.requireUpper\">{{'policyInEffectUppercase' | i18n}}</li>\n        <li *ngIf=\"enforcedPolicyOptions?.requireLower\">{{'policyInEffectLowercase' | i18n}}</li>\n        <li *ngIf=\"enforcedPolicyOptions?.requireNumbers\">{{'policyInEffectNumbers' | i18n}}</li>\n        <li *ngIf=\"enforcedPolicyOptions?.requireSpecial\">{{'policyInEffectSpecial' | i18n : '!@#$%^&*'}}</li>\n    </ul>\n</app-callout>\n\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"currentMasterPassword\">{{'currentMasterPass' | i18n}}</label>\n                <input id=\"currentMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"currentMasterPassword\" required appInputVerbatim>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"masterPassword\">{{'newMasterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"NewMasterPasswordHash\" class=\"form-control mb-1\"\n                    [(ngModel)]=\"masterPassword\" (input)=\"updatePasswordStrength()\" required appInputVerbatim\n                    autocomplete=\"new-password\">\n                <app-password-strength [score]=\"masterPasswordScore\" [showText]=\"true\"></app-password-strength>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"masterPasswordRetype\">{{'confirmNewMasterPass' | i18n}}</label>\n                <input id=\"masterPasswordRetype\" type=\"password\" name=\"MasterPasswordRetype\"\n                    class=\"form-control\" [(ngModel)]=\"masterPasswordRetype\" required appInputVerbatim\n                    autocomplete=\"new-password\">\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"rotateEncKey\" name=\"RotateEncKey\"\n                [(ngModel)]=\"rotateEncKey\" (change)=\"rotateEncKeyClicked()\">\n            <label class=\"form-check-label\" for=\"rotateEncKey\">\n                {{'rotateAccountEncKey' | i18n}}\n            </label>\n            <a href=\"https://help.bitwarden.com/article/change-your-master-password/#rotating-your-accounts-encryption-key\"\n                target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\n                <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n            </a>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'changeMasterPassword' | i18n}}</span>\n    </button>\n</form>\n","import { FolderRequest } from './folderRequest';\n\nimport { Folder } from '../domain/folder';\n\nexport class FolderWithIdRequest extends FolderRequest {\n    id: string;\n\n    constructor(folder: Folder) {\n        super(folder);\n        this.id = folder.id;\n    }\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class PasswordRequest extends PasswordVerificationRequest {\n    newMasterPasswordHash: string;\n    key: string;\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\nimport { FolderWithIdRequest } from './folderWithIdRequest';\n\nexport class UpdateKeyRequest {\n    ciphers: CipherWithIdRequest[] = [];\n    folders: FolderWithIdRequest[] = [];\n    masterPasswordHash: string;\n    privateKey: string;\n    key: string;\n}\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { KdfRequest } from 'jslib/models/request/kdfRequest';\n\nimport { KdfType } from 'jslib/enums/kdfType';\n\n@Component({\n    selector: 'app-change-kdf',\n    templateUrl: 'change-kdf.component.html',\n})\nexport class ChangeKdfComponent implements OnInit {\n    masterPassword: string;\n    kdfIterations: number;\n    kdf = KdfType.PBKDF2_SHA256;\n    kdfOptions: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private userService: UserService) {\n        this.kdfOptions = [\n            { name: 'PBKDF2 SHA-256', value: KdfType.PBKDF2_SHA256 },\n        ];\n    }\n\n    async ngOnInit() {\n        this.kdf = await this.userService.getKdf();\n        this.kdfIterations = await this.userService.getKdfIterations();\n    }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (!hasEncKey) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const request = new KdfRequest();\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        const email = await this.userService.getEmail();\n        const newKey = await this.cryptoService.makeKey(this.masterPassword, email, this.kdf, this.kdfIterations);\n        request.newMasterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, newKey);\n        const newEncKey = await this.cryptoService.remakeEncKey(newKey);\n        request.key = newEncKey[1].encryptedString;\n        try {\n            this.formPromise = this.apiService.postAccountKdf(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Changed KDF' });\n            this.toasterService.popAsync('success', this.i18nService.t('encKeySettingsChanged'),\n                this.i18nService.t('logBackIn'));\n            this.messagingService.send('logout');\n        } catch { }\n    }\n}\n","<app-callout type=\"warning\">{{'loggedOutWarning' | i18n}}</app-callout>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate autocomplete=\"off\">\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"kdfMasterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"kdfMasterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appInputVerbatim>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group mb-0\">\n                <label for=\"kdf\">{{'kdfAlgorithm' | i18n}}</label>\n                <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/Key_derivation_function\" target=\"_blank\"\n                    rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\n                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                </a>\n                <select id=\"kdf\" name=\"Kdf\" [(ngModel)]=\"kdf\" class=\"form-control\" required>\n                    <option *ngFor=\"let o of kdfOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                </select>\n            </div>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"form-group mb-0\">\n                <label for=\"kdfIterations\">{{'kdfIterations' | i18n}}</label>\n                <a class=\"ml-auto\" href=\"https://en.wikipedia.org/wiki/PBKDF2\" target=\"_blank\" rel=\"noopener\"\n                    appA11yTitle=\"{{'learnMore' | i18n}}\">\n                    <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                </a>\n                <input id=\"kdfIterations\" type=\"number\" min=\"5000\" max=\"2000000\" name=\"KdfIterations\"\n                    class=\"form-control\" [(ngModel)]=\"kdfIterations\" required>\n            </div>\n        </div>\n        <div class=\"col-12\">\n            <div class=\"form-group\">\n                <div class=\"small form-text text-muted\">\n                    <p>{{'kdfIterationsDesc' | i18n : (100000 | number)}}</p>\n                    <strong>{{'warning' | i18n}}</strong>: {{'kdfIterationsWarning' | i18n : (50000 | number)}}\n                </div>\n            </div>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'changeKdf' | i18n}}</span>\n    </button>\n</form>\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { OrganizationPlansComponent } from './organization-plans.component';\n\n@Component({\n    selector: 'app-create-organization',\n    templateUrl: 'create-organization.component.html',\n})\nexport class CreateOrganizationComponent implements OnInit {\n    @ViewChild(OrganizationPlansComponent, { static: true }) orgPlansComponent: OrganizationPlansComponent;\n\n    constructor(private route: ActivatedRoute) { }\n\n    ngOnInit() {\n        const queryParamsSub = this.route.queryParams.subscribe(async (qParams) => {\n            if (qParams.plan === 'families' || qParams.plan === 'teams' || qParams.plan === 'enterprise') {\n                this.orgPlansComponent.plan = qParams.plan;\n            }\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'newOrganization' | i18n}}</h1>\n</div>\n<p>{{'newOrganizationDesc' | i18n}}</p>\n<app-organization-plans></app-organization-plans>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\nimport { UpdateDomainsRequest } from 'jslib/models/request/updateDomainsRequest';\n\n@Component({\n    selector: 'app-domain-rules',\n    templateUrl: 'domain-rules.component.html',\n})\nexport class DomainRulesComponent implements OnInit {\n    loading = true;\n    custom: string[] = [];\n    global: any[] = [];\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async ngOnInit() {\n        const response = await this.apiService.getSettingsDomains();\n        this.loading = false;\n        if (response.equivalentDomains != null) {\n            this.custom = response.equivalentDomains.map((d) => d.join(', '));\n        }\n        if (response.globalEquivalentDomains != null) {\n            this.global = response.globalEquivalentDomains.map((d) => {\n                return {\n                    domains: d.domains.join(', '),\n                    excluded: d.excluded,\n                    key: d.type,\n                };\n            });\n        }\n    }\n\n    toggleExcluded(globalDomain: any) {\n        globalDomain.excluded = !globalDomain.excluded;\n    }\n\n    customize(globalDomain: any) {\n        globalDomain.excluded = true;\n        this.custom.push(globalDomain.domains);\n    }\n\n    remove(index: number) {\n        this.custom.splice(index, 1);\n    }\n\n    add() {\n        this.custom.push('');\n    }\n\n    async submit() {\n        const request = new UpdateDomainsRequest();\n        request.excludedGlobalEquivalentDomains = this.global.filter((d) => d.excluded)\n            .map((d) => d.key);\n        if (request.excludedGlobalEquivalentDomains.length === 0) {\n            request.excludedGlobalEquivalentDomains = null;\n        }\n        request.equivalentDomains = this.custom.filter((d) => d != null && d.trim() !== '')\n            .map((d) => d.split(',').map((d2) => d2.trim()));\n        if (request.equivalentDomains.length === 0) {\n            request.equivalentDomains = null;\n        }\n\n        try {\n            this.formPromise = this.apiService.putSettingsDomains(request);\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Saved Equivalent Domains' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('domainsUpdated'));\n        } catch { }\n    }\n\n    indexTrackBy(index: number, obj: any): any {\n        return index;\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'domainRules' | i18n}}</h1>\n</div>\n<p>{{'domainRulesDesc' | i18n}}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <h2>{{'customEqDomains' | i18n}}</h2>\n    <p *ngIf=\"loading\">\n        <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\n    </p>\n    <ng-container *ngIf=\"!loading\">\n        <div class=\"form-group d-flex\" *ngFor=\"let d of custom; let i = index; trackBy: indexTrackBy\">\n            <div class=\"flex-fill\">\n                <label for=\"customDomain_{{i}}\" class=\"sr-only\">{{'customDomainX' | i18n : (i + 1)}}</label>\n                <textarea class=\"form-control\" name=\"CustomDomain[{{i}}]\" id=\"customDomain_{{i}}\"\n                    [(ngModel)]=\"custom[i]\" placeholder=\"{{'ex' | i18n}} google.com, gmail.com\" required></textarea>\n            </div>\n            <button type=\"button\" class=\"btn btn-link text-danger ml-2\" (click)=\"remove(i)\"\n                appA11yTitle=\"{{'remove' | i18n}}\">\n                <i class=\"fa fa-minus-circle fa-lg\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n        <button type=\"button\" (click)=\"add()\" class=\"btn btn-outline-secondary btn-sm mb-2\">\n            <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i> {{'newCustomDomain' | i18n}}\n        </button>\n        <small class=\"text-muted d-block mb-3\">{{'newCustomDomainDesc' | i18n}}</small>\n    </ng-container>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n    <h2 class=\"spaced-header\">{{'globalEqDomains' | i18n}}</h2>\n    <p *ngIf=\"loading\">\n        <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span class=\"sr-only\">{{'loading' | i18n}}</span>\n    </p>\n    <table class=\"table table-hover table-list\" *ngIf=\"!loading && global.length > 0\">\n        <tbody>\n            <tr *ngFor=\"let d of global\">\n                <td [ngClass]=\"{'table-list-strike': d.excluded}\">{{d.domains}}</td>\n                <td class=\"table-list-options\">\n                    <div class=\"dropdown\" appListDropdown>\n                        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\"\n                            aria-haspopup=\"true\" aria-expanded=\"false\" appA11yTitle=\"{{'options' | i18n}}\">\n                            <i class=\"fa fa-cog fa-lg\" aria-hidden=\"true\"></i>\n                        </button>\n                        <div class=\"dropdown-menu dropdown-menu-right\">\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\"\n                                *ngIf=\"!d.excluded\">\n                                <i class=\"fa fa-fw fa-close\" aria-hidden=\"true\"></i>\n                                {{'exclude' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"toggleExcluded(d)\"\n                                *ngIf=\"d.excluded\">\n                                <i class=\"fa fa-fw fa-plus\" aria-hidden=\"true\"></i>\n                                {{'include' | i18n}}\n                            </a>\n                            <a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"customize(d)\">\n                                <i class=\"fa fa-fw fa-scissors\" aria-hidden=\"true\"></i>\n                                {{'customize' | i18n}}\n                            </a>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'save' | i18n}}</span>\n    </button>\n</form>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { VaultTimeoutService } from 'jslib/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\n@Component({\n    selector: 'app-options',\n    templateUrl: 'options.component.html',\n})\nexport class OptionsComponent implements OnInit {\n    vaultTimeout: number = null;\n    vaultTimeoutAction: string = 'lock';\n    disableIcons: boolean;\n    enableGravatars: boolean;\n    enableFullWidth: boolean;\n    locale: string;\n    vaultTimeouts: any[];\n    localeOptions: any[];\n\n    private startingLocale: string;\n\n    constructor(private storageService: StorageService, private stateService: StateService,\n        private analytics: Angulartics2, private i18nService: I18nService,\n        private toasterService: ToasterService, private vaultTimeoutService: VaultTimeoutService,\n        private platformUtilsService: PlatformUtilsService, private messagingService: MessagingService) {\n        this.vaultTimeouts = [\n            { name: i18nService.t('oneMinute'), value: 1 },\n            { name: i18nService.t('fiveMinutes'), value: 5 },\n            { name: i18nService.t('fifteenMinutes'), value: 15 },\n            { name: i18nService.t('thirtyMinutes'), value: 30 },\n            { name: i18nService.t('oneHour'), value: 60 },\n            { name: i18nService.t('fourHours'), value: 240 },\n            { name: i18nService.t('onRefresh'), value: -1 },\n        ];\n        if (this.platformUtilsService.isDev()) {\n            this.vaultTimeouts.push({ name: i18nService.t('never'), value: null });\n        }\n\n        const localeOptions: any[] = [];\n        i18nService.supportedTranslationLocales.forEach((locale) => {\n            let name = locale;\n            if (i18nService.localeNames.has(locale)) {\n                name += (' - ' + i18nService.localeNames.get(locale));\n            }\n            localeOptions.push({ name: name, value: locale });\n        });\n        localeOptions.sort(Utils.getSortFunction(i18nService, 'name'));\n        localeOptions.splice(0, 0, { name: i18nService.t('default'), value: null });\n        this.localeOptions = localeOptions;\n    }\n\n    async ngOnInit() {\n        this.vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        this.vaultTimeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        this.disableIcons = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        this.enableGravatars = await this.storageService.get<boolean>('enableGravatars');\n        this.enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        this.locale = this.startingLocale = await this.storageService.get<string>(ConstantsService.localeKey);\n    }\n\n    async submit() {\n        await this.vaultTimeoutService.setVaultTimeoutOptions(this.vaultTimeout != null ? this.vaultTimeout : null,\n            this.vaultTimeoutAction);\n        await this.storageService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.stateService.save(ConstantsService.disableFaviconKey, this.disableIcons);\n        await this.storageService.save('enableGravatars', this.enableGravatars);\n        await this.stateService.save('enableGravatars', this.enableGravatars);\n        await this.storageService.save('enableFullWidth', this.enableFullWidth);\n        this.messagingService.send('setFullWidth');\n        await this.storageService.save(ConstantsService.localeKey, this.locale);\n        this.analytics.eventTrack.next({ action: 'Saved Options' });\n        if (this.locale !== this.startingLocale) {\n            window.location.reload();\n        } else {\n            this.toasterService.popAsync('success', null, this.i18nService.t('optionsUpdated'));\n        }\n    }\n\n    async vaultTimeoutActionChanged(newValue: string) {\n        if (newValue === 'logOut') {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('vaultTimeoutLogOutConfirmation'),\n                this.i18nService.t('vaultTimeoutLogOutConfirmationTitle'),\n                this.i18nService.t('yes'), this.i18nService.t('cancel'), 'warning');\n            if (!confirmed) {\n                this.vaultTimeoutAction = 'lock';\n                return;\n            }\n        }\n        this.vaultTimeoutAction = newValue;\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'options' | i18n}}</h1>\n</div>\n<p>{{'optionsDesc' | i18n}}</p>\n<form (ngSubmit)=\"submit()\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <label for=\"vaultTimeout\">{{'vaultTimeout' | i18n}}</label>\n                <select id=\"vaultTimeout\" name=\"VaultTimeout\" [(ngModel)]=\"vaultTimeout\" class=\"form-control\">\n                    <option *ngFor=\"let o of vaultTimeouts\" [ngValue]=\"o.value\">{{o.name}}</option>\n                </select>\n                <small class=\"form-text text-muted\">{{'vaultTimeoutDesc' | i18n}}</small>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <label>{{'vaultTimeoutAction' | i18n}}</label>\n        <div class=\"form-check form-check-block\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLock\"\n                value=\"lock\" [(ngModel)]=\"vaultTimeoutAction\">\n            <label class=\"form-check-label\" for=\"vaultTimeoutActionLock\">\n                {{'lock' | i18n}}\n                <small>{{'vaultTimeoutActionLockDesc' | i18n}}</small>\n            </label>\n        </div>\n        <div class=\"form-check mt-2 form-check-block\">\n            <input class=\"form-check-input\" type=\"radio\" name=\"vaultTimeoutAction\" id=\"vaultTimeoutActionLogOut\"\n                value=\"logOut\" [(ngModel)]=\"vaultTimeoutAction\" (ngModelChange)=\"vaultTimeoutActionChanged($event)\">\n            <label class=\"form-check-label\" for=\"vaultTimeoutActionLogOut\">\n                {{'logOut' | i18n}}\n                <small>{{'vaultTimeoutActionLogOutDesc' | i18n}}</small>\n            </label>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-6\">\n            <div class=\"form-group\">\n                <div class=\"d-flex\">\n                    <label for=\"locale\">{{'language' | i18n}}</label>\n                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/localization/\" target=\"_blank\"\n                        rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\n                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                    </a>\n                </div>\n                <select id=\"locale\" name=\"Locale\" [(ngModel)]=\"locale\" class=\"form-control\">\n                    <option *ngFor=\"let o of localeOptions\" [ngValue]=\"o.value\">{{o.name}}</option>\n                </select>\n                <small class=\"form-text text-muted\">{{'languageDesc' | i18n}}</small>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"disableIcons\" name=\"DisableIcons\"\n                [(ngModel)]=\"disableIcons\">\n            <label class=\"form-check-label\" for=\"disableIcons\">\n                {{'disableIcons' | i18n}}\n            </label>\n            <a href=\"https://help.bitwarden.com/article/website-icons/\" target=\"_blank\" rel=\"noopener\"\n                appA11yTitle=\"{{'learnMore' | i18n}}\">\n                <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n            </a>\n        </div>\n        <small class=\"form-text text-muted\">{{'disableIconsDesc' | i18n}}</small>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"enableGravatars\" name=\"enableGravatars\"\n                [(ngModel)]=\"enableGravatars\">\n            <label class=\"form-check-label\" for=\"enableGravatars\">\n                {{'enableGravatars' | i18n}}\n            </label>\n            <a href=\"https://gravatar.com/\" target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\n                <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n            </a>\n        </div>\n        <small class=\"form-text text-muted\">{{'enableGravatarsDesc' | i18n}}</small>\n    </div>\n\t<div class=\"form-group\">\n        <div class=\"form-check\">\n            <input class=\"form-check-input\" type=\"checkbox\" id=\"enableFullWidth\" name=\"enableFullWidth\"\n                [(ngModel)]=\"enableFullWidth\">\n            <label class=\"form-check-label\" for=\"enableFullWidth\">\n                {{'enableFullWidth' | i18n}}\n            </label>\n        </div>\n        <small class=\"form-text text-muted\">{{'enableFullWidthDesc' | i18n}}</small>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">\n        {{'save' | i18n}}\n    </button>\n</form>\n","import {\n    AfterContentInit,\n    Component,\n    Input,\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CryptoFunctionService } from 'jslib/abstractions/cryptoFunction.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { SsoComponent } from 'jslib/angular/components/sso.component';\n\nimport { Organization } from 'jslib/models/domain/organization';\n\n@Component({\n    selector: 'app-link-sso',\n    templateUrl: 'link-sso.component.html',\n})\nexport class LinkSsoComponent extends SsoComponent implements AfterContentInit {\n    @Input() organization: Organization;\n    returnUri: string = '/settings/organizations'\n\n    constructor(platformUtilsService: PlatformUtilsService, i18nService: I18nService,\n        apiService: ApiService, authService: AuthService,\n        router: Router, route: ActivatedRoute,\n        cryptoFunctionService: CryptoFunctionService, passwordGenerationService: PasswordGenerationService,\n        storageService: StorageService, stateService: StateService) {\n        super(authService, router,\n            i18nService, route,\n            storageService, stateService,\n            platformUtilsService, apiService,\n            cryptoFunctionService, passwordGenerationService);\n\n        this.returnUri = '/settings/organizations';\n        this.redirectUri = window.location.origin + '/sso-connector.html';\n        this.clientId = 'web';\n    }\n\n    async ngAfterContentInit() {\n        this.identifier = this.organization.identifier;\n    }\n}\n","<a class=\"dropdown-item\" href=\"#\" appStopClick (click)=\"submit(returnUri, true)\">\n    <i class=\"fa fa-fw fa-link\" aria-hidden=\"true\"></i>\n    {{'linkSso' | i18n}}\n</a>\n","import {\n    Component,\n    OnInit,\n    ViewChild,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { PaymentComponent } from './payment.component';\nimport { TaxInfoComponent } from './tax-info.component';\n\n@Component({\n    selector: 'app-premium',\n    templateUrl: 'premium.component.html',\n})\nexport class PremiumComponent implements OnInit {\n    @ViewChild(PaymentComponent) paymentComponent: PaymentComponent;\n    @ViewChild(TaxInfoComponent) taxInfoComponent: TaxInfoComponent;\n\n    canAccessPremium = false;\n    selfHosted = false;\n    premiumPrice = 10;\n    storageGbPrice = 4;\n    additionalStorage = 0;\n\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        platformUtilsService: PlatformUtilsService, private tokenService: TokenService,\n        private router: Router, private messagingService: MessagingService,\n        private syncService: SyncService, private userService: UserService) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n        const premium = await this.tokenService.getPremium();\n        if (premium) {\n            this.router.navigate(['/settings/subscription']);\n            return;\n        }\n    }\n\n    async submit() {\n        let files: FileList = null;\n        if (this.selfHosted) {\n            const fileEl = document.getElementById('file') as HTMLInputElement;\n            files = fileEl.files;\n            if (files == null || files.length === 0) {\n                this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('selectFile'));\n                return;\n            }\n        }\n\n        try {\n            if (this.selfHosted) {\n                if (!this.tokenService.getEmailVerified()) {\n                    this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                        this.i18nService.t('verifyEmailFirst'));\n                    return;\n                }\n\n                const fd = new FormData();\n                fd.append('license', files[0]);\n                this.formPromise = this.apiService.postAccountLicense(fd).then(() => {\n                    return this.finalizePremium();\n                });\n            } else {\n                this.formPromise = this.paymentComponent.createPaymentToken().then((result) => {\n                    const fd = new FormData();\n                    fd.append('paymentMethodType', result[1].toString());\n                    if (result[0] != null) {\n                        fd.append('paymentToken', result[0]);\n                    }\n                    fd.append('additionalStorageGb', (this.additionalStorage || 0).toString());\n                    fd.append('country', this.taxInfoComponent.taxInfo.country);\n                    fd.append('postalCode', this.taxInfoComponent.taxInfo.postalCode);\n                    return this.apiService.postPremium(fd);\n                }).then((paymentResponse) => {\n                    if (!paymentResponse.success && paymentResponse.paymentIntentClientSecret != null) {\n                        return this.paymentComponent.handleStripeCardPayment(paymentResponse.paymentIntentClientSecret,\n                            () => this.finalizePremium());\n                    } else {\n                        return this.finalizePremium();\n                    }\n                });\n            }\n            await this.formPromise;\n        } catch { }\n    }\n\n    async finalizePremium() {\n        await this.apiService.refreshIdentityToken();\n        await this.syncService.fullSync(true);\n        this.analytics.eventTrack.next({ action: 'Signed Up Premium' });\n        this.toasterService.popAsync('success', null, this.i18nService.t('premiumUpdated'));\n        this.messagingService.send('purchasedPremium');\n        this.router.navigate(['/settings/subscription']);\n    }\n\n    get additionalStorageTotal(): number {\n        return this.storageGbPrice * Math.abs(this.additionalStorage || 0);\n    }\n\n    get total(): number {\n        return this.additionalStorageTotal + this.premiumPrice;\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'goPremium' | i18n}}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"canAccessPremium\" title=\"{{'youHavePremiumAccess' | i18n}}\" icon=\"fa-star\">\n    {{'alreadyPremiumFromOrg' | i18n}}\n</app-callout>\n<app-callout type=\"success\">\n    <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p>\n    <ul class=\"fa-ul\">\n        <li>\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\n            {{'premiumSignUpStorage' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\n            {{'premiumSignUpTwoStep' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\n            {{'premiumSignUpReports' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\n            {{'premiumSignUpTotp' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\n            {{'premiumSignUpSupport' | i18n}}\n        </li>\n        <li>\n            <i class=\"fa fa-check text-success fa-li\" aria-hidden=\"true\"></i>\n            {{'premiumSignUpFuture' | i18n}}\n        </li>\n    </ul>\n    <p class=\"text-lg\" [ngClass]=\"{'mb-0':!selfHosted}\">{{'premiumPrice' | i18n : (premiumPrice | currency:'$')}}</p>\n    <a href=\"https://vault.bitwarden.com/#/settings/premium\" target=\"_blank\" rel=\"noopener\"\n        class=\"btn btn-outline-secondary\" *ngIf=\"selfHosted\">\n        {{'purchasePremium' | i18n}}\n    </a>\n</app-callout>\n<ng-container *ngIf=\"selfHosted\">\n    <p>{{'uploadLicenseFilePremium' | i18n}}</p>\n    <form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n        <div class=\"form-group\">\n            <label for=\"file\">{{'licenseFile' | i18n}}</label>\n            <input type=\"file\" id=\"file\" class=\"form-control-file\" name=\"file\" required>\n            <small class=\"form-text text-muted\">{{'licenseFileDesc' | i18n : 'bitwarden_premium_license.json'}}</small>\n        </div>\n        <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'submit' | i18n}}</span>\n        </button>\n    </form>\n</ng-container>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate *ngIf=\"!selfHosted\">\n    <h2 class=\"mt-5\">{{'addons' | i18n}}</h2>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"additionalStorage\">{{'additionalStorageGb' | i18n}}</label>\n            <input id=\"additionalStorage\" class=\"form-control\" type=\"number\" name=\"AdditionalStorageGb\"\n                [(ngModel)]=\"additionalStorage\" min=\"0\" max=\"99\" step=\"1\"\n                placeholder=\"{{'additionalStorageGbDesc' | i18n}}\">\n            <small\n                class=\"text-muted form-text\">{{'additionalStorageIntervalDesc' | i18n : '1 GB' : (storageGbPrice | currency:'$') : ('year' | i18n)}}</small>\n        </div>\n    </div>\n    <h2 class=\"spaced-header\">{{'summary' | i18n}}</h2>\n    {{'premiumMembership' | i18n}}: {{premiumPrice | currency:'$'}}\n    <br> {{'additionalStorageGb' | i18n}}: {{additionalStorage || 0}} GB &times; {{storageGbPrice | currency:'$'}} = {{additionalStorageTotal\n    | currency:'$'}}\n    <hr class=\"my-3\">\n    <div class=\"text-lg\">\n        <strong>{{'total' | i18n}}:</strong> {{total | currency:'USD $'}} /{{'year' | i18n}}\n    </div>\n    <small class=\"text-muted font-italic\">{{'paymentChargedAnnually' | i18n}}</small>\n    <h2 class=\"spaced-header mb-4\">{{'paymentInformation' | i18n}}</h2>\n    <app-payment [hideBank]=\"true\"></app-payment>\n    <app-tax-info></app-tax-info>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'submit' | i18n}}</span>\n    </button>\n</form>\n","import {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'SettingsComponent';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: 'settings.component.html',\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n    premium: boolean;\n    selfHosted: boolean;\n\n    constructor(private tokenService: TokenService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone, private platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'purchasedPremium':\n                        await this.load();\n                        break;\n                    default:\n                }\n            });\n        });\n\n        this.selfHosted = await this.platformUtilsService.isSelfHost();\n        await this.load();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async load() {\n        this.premium = await this.tokenService.getPremium();\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card\">\n                <div class=\"card-header\">{{'settings' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"account\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'myAccount' | i18n}}\n                    </a>\n                    <a routerLink=\"options\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'options' | i18n}}\n                    </a>\n                    <a routerLink=\"organizations\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'organizations' | i18n}}\n                    </a>\n                    <a routerLink=\"subscription\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"premium\">\n                        {{'premiumMembership' | i18n}}\n                    </a>\n                    <a routerLink=\"premium\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!premium\">\n                        {{'goPremium' | i18n}}\n                    </a>\n                    <a routerLink=\"billing\" class=\"list-group-item\" routerLinkActive=\"active\" *ngIf=\"!selfHosted\">\n                        {{'billing' | i18n}}\n                    </a>\n                    <a routerLink=\"two-factor\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'twoStepLogin' | i18n}}\n                    </a>\n                    <a routerLink=\"domain-rules\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'domainRules' | i18n}}\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { SubscriptionResponse } from 'jslib/models/response/subscriptionResponse';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\n\n@Component({\n    selector: 'app-user-subscription',\n    templateUrl: 'user-subscription.component.html',\n})\nexport class UserSubscriptionComponent implements OnInit {\n    loading = false;\n    firstLoaded = false;\n    adjustStorageAdd = true;\n    showAdjustStorage = false;\n    showUpdateLicense = false;\n    sub: SubscriptionResponse;\n    selfHosted = false;\n\n    cancelPromise: Promise<any>;\n    reinstatePromise: Promise<any>;\n\n    constructor(private tokenService: TokenService, private apiService: ApiService,\n        private platformUtilsService: PlatformUtilsService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private router: Router) {\n        this.selfHosted = platformUtilsService.isSelfHost();\n    }\n\n    async ngOnInit() {\n        await this.load();\n        this.firstLoaded = true;\n    }\n\n    async load() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.tokenService.getPremium()) {\n            this.loading = true;\n            this.sub = await this.apiService.getUserSubscription();\n        } else {\n            this.router.navigate(['/settings/premium']);\n            return;\n        }\n\n        this.loading = false;\n    }\n\n    async reinstate() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('reinstateConfirmation'),\n            this.i18nService.t('reinstateSubscription'), this.i18nService.t('yes'), this.i18nService.t('cancel'));\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.reinstatePromise = this.apiService.postReinstatePremium();\n            await this.reinstatePromise;\n            this.analytics.eventTrack.next({ action: 'Reinstated Premium' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('reinstated'));\n            this.load();\n        } catch { }\n    }\n\n    async cancel() {\n        if (this.loading) {\n            return;\n        }\n\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('manageSubscriptionFromStore'),\n                this.i18nService.t('cancelSubscription'), null, null, 'warning');\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('cancelConfirmation'),\n            this.i18nService.t('cancelSubscription'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.cancelPromise = this.apiService.postCancelPremium();\n            await this.cancelPromise;\n            this.analytics.eventTrack.next({ action: 'Canceled Premium' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('canceledSubscription'));\n            this.load();\n        } catch { }\n    }\n\n    downloadLicense() {\n        if (this.loading) {\n            return;\n        }\n\n        const licenseString = JSON.stringify(this.sub.license, null, 2);\n        this.platformUtilsService.saveFile(window, licenseString, null, 'bitwarden_premium_license.json');\n    }\n\n    updateLicense() {\n        if (this.loading) {\n            return;\n        }\n        this.showUpdateLicense = true;\n    }\n\n    closeUpdateLicense(load: boolean) {\n        this.showUpdateLicense = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    adjustStorage(add: boolean) {\n        if (this.usingInAppPurchase) {\n            this.platformUtilsService.showDialog(this.i18nService.t('cannotPerformInAppPurchase'),\n                this.i18nService.t(add ? 'addStorage' : 'removeStorage'), null, null, 'warning');\n            return;\n        }\n        this.adjustStorageAdd = add;\n        this.showAdjustStorage = true;\n    }\n\n    closeStorage(load: boolean) {\n        this.showAdjustStorage = false;\n        if (load) {\n            this.load();\n        }\n    }\n\n    get subscriptionMarkedForCancel() {\n        return this.subscription != null && !this.subscription.cancelled && this.subscription.cancelAtEndDate;\n    }\n\n    get subscription() {\n        return this.sub != null ? this.sub.subscription : null;\n    }\n\n    get nextInvoice() {\n        return this.sub != null ? this.sub.upcomingInvoice : null;\n    }\n\n    get storagePercentage() {\n        return this.sub != null && this.sub.maxStorageGb ?\n            +(100 * (this.sub.storageGb / this.sub.maxStorageGb)).toFixed(2) : 0;\n    }\n\n    get storageProgressWidth() {\n        return this.storagePercentage < 5 ? 5 : 0;\n    }\n\n    get usingInAppPurchase() {\n        return this.sub != null ? this.sub.usingInAppPurchase : false;\n    }\n}\n","<div class=\"page-header\">\n    <h1>\n        {{'premiumMembership' | i18n}}\n        <small *ngIf=\"firstLoaded && loading\">\n            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n        </small>\n    </h1>\n</div>\n<ng-container *ngIf=\"!firstLoaded && loading\">\n    <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n    <span class=\"sr-only\">{{'loading' | i18n}}</span>\n</ng-container>\n<ng-container *ngIf=\"sub\">\n    <app-callout type=\"warning\" title=\"{{'canceled' | i18n}}\" *ngIf=\"subscription && subscription.cancelled\">\n        {{'subscriptionCanceled' | i18n}}</app-callout>\n    <app-callout type=\"warning\" title=\"{{'pendingCancellation' | i18n}}\" *ngIf=\"subscriptionMarkedForCancel\">\n        <p>{{'subscriptionPendingCanceled' | i18n}}</p>\n        <button #reinstateBtn type=\"button\" class=\"btn btn-outline-secondary btn-submit\" (click)=\"reinstate()\"\n            [appApiAction]=\"reinstatePromise\" [disabled]=\"reinstateBtn.loading\">\n            <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>{{'reinstateSubscription' | i18n}}</span>\n        </button>\n    </app-callout>\n    <dl *ngIf=\"selfHosted\">\n        <dt>{{'expiration' | i18n}}</dt>\n        <dd *ngIf=\"sub.expiration\">{{sub.expiration | date:'mediumDate'}}</dd>\n        <dd *ngIf=\"!sub.expiration\">{{'neverExpires' | i18n}}</dd>\n    </dl>\n    <div class=\"row\" *ngIf=\"!selfHosted\">\n        <div class=\"col-4\">\n            <dl>\n                <dt>{{'status' | i18n}}</dt>\n                <dd>\n                    <span class=\"text-capitalize\">{{(subscription && subscription.status) || '-'}}</span>\n                    <span class=\"badge badge-warning\"\n                        *ngIf=\"subscriptionMarkedForCancel\">{{'pendingCancellation' | i18n}}</span>\n                </dd>\n                <dt>{{'nextCharge' | i18n}}</dt>\n                <dd>{{nextInvoice ? ((nextInvoice.date | date: 'mediumDate') + ', ' + (nextInvoice.amount | currency:'$')) :\n                    '-'}}\n                </dd>\n            </dl>\n        </div>\n        <div class=\"col-8\" *ngIf=\"subscription\">\n            <strong class=\"d-block mb-1\">{{'details' | i18n}}</strong>\n            <table class=\"table\">\n                <tbody>\n                    <tr *ngFor=\"let i of subscription.items\">\n                        <td>\n                            {{i.name}} {{i.quantity > 1 ? '&times;' + i.quantity : ''}} @ {{i.amount | currency:'$'}}\n                        </td>\n                        <td>\n                            {{(i.quantity * i.amount) | currency:'$'}} /{{i.interval | i18n}}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n    <ng-container *ngIf=\"selfHosted\">\n        <div>\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"updateLicense()\">\n                {{'updateLicense' | i18n}}\n            </button>\n            <a href=\"https://vault.bitwarden.com/#/settings/subscription\" target=\"_blank\" rel=\"noopener\"\n                class=\"btn btn-outline-secondary\">\n                {{'manageSubscription' | i18n}}\n            </a>\n        </div>\n        <div class=\"card mt-3\" *ngIf=\"showUpdateLicense\">\n            <div class=\"card-body\">\n                <button type=\"button\" class=\"close\" appA11yTitle=\"{{'cancel' | i18n}}\"\n                    (click)=\"closeUpdateLicense(false)\"><span aria-hidden=\"true\">&times;</span></button>\n                <h3 class=\"card-body-header\">{{'updateLicense' | i18n}}</h3>\n                <app-update-license (onUpdated)=\"closeUpdateLicense(true)\" (onCanceled)=\"closeUpdateLicense(false)\">\n                </app-update-license>\n            </div>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!selfHosted\">\n        <div class=\"d-flex\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"downloadLicense()\"\n                *ngIf=\"!subscription || !subscription.cancelled\">\n                {{'downloadLicense' | i18n}}\n            </button>\n            <button #cancelBtn type=\"button\" class=\"btn btn-outline-danger btn-submit ml-auto\" (click)=\"cancel()\"\n                [appApiAction]=\"cancelPromise\" [disabled]=\"cancelBtn.loading\"\n                *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n                <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                <span>{{'cancelSubscription' | i18n}}</span>\n            </button>\n        </div>\n        <h2 class=\"spaced-header\">{{'storage' | i18n}}</h2>\n        <p>{{'subscriptionStorage' | i18n : sub.maxStorageGb || 0 : sub.storageName || '0 MB'}}</p>\n        <div class=\"progress\">\n            <div class=\"progress-bar bg-success\" role=\"progressbar\" [ngStyle]=\"{width: storageProgressWidth + '%' }\"\n                [attr.aria-valuenow]=\"storagePercentage\" aria-valuemin=\"0\" aria-valuemax=\"100\">\n                {{(storagePercentage / 100) | percent}}</div>\n        </div>\n        <ng-container *ngIf=\"subscription && !subscription.cancelled && !subscriptionMarkedForCancel\">\n            <div class=\"mt-3\">\n                <div class=\"d-flex\" *ngIf=\"!showAdjustStorage\">\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"adjustStorage(true)\">\n                        {{'addStorage' | i18n}}\n                    </button>\n                    <button type=\"button\" class=\"ml-1 btn btn-outline-secondary\" (click)=\"adjustStorage(false)\">\n                        {{'removeStorage' | i18n}}\n                    </button>\n                </div>\n                <app-adjust-storage [storageGbPrice]=\"4\" [add]=\"adjustStorageAdd\" (onAdjusted)=\"closeStorage(true)\"\n                    (onCanceled)=\"closeStorage(false)\" *ngIf=\"showAdjustStorage\"></app-adjust-storage>\n            </div>\n        </ng-container>\n    </ng-container>\n</ng-container>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { AuditService } from 'jslib/abstractions/audit.service';\nimport { UserService } from 'jslib/abstractions/user.service';\nimport { BreachAccountResponse } from 'jslib/models/response/breachAccountResponse';\n\n@Component({\n    selector: 'app-breach-report',\n    templateUrl: 'breach-report.component.html',\n})\nexport class BreachReportComponent implements OnInit {\n    error = false;\n    username: string;\n    checkedUsername: string;\n    breachedAccounts: BreachAccountResponse[] = [];\n    formPromise: Promise<BreachAccountResponse[]>;\n\n    constructor(private auditService: AuditService, private userService: UserService) { }\n\n    async ngOnInit() {\n        this.username = await this.userService.getEmail();\n    }\n\n    async submit() {\n        this.error = false;\n        this.username = this.username.toLowerCase();\n        try {\n            this.formPromise = this.auditService.breachedAccounts(this.username);\n            this.breachedAccounts = await this.formPromise;\n        } catch {\n            this.error = true;\n        }\n        this.checkedUsername = this.username;\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'dataBreachReport' | i18n}}</h1>\n</div>\n<p>{{'breachDesc' | i18n}}</p>\n<form #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n    <div class=\"row\">\n        <div class=\"form-group col-6\">\n            <label for=\"username\">{{'username' | i18n}}</label>\n            <input id=\"username\" type=\"text\" name=\"Username\" class=\"form-control\" [(ngModel)]=\"username\" required>\n            <small class=\"form-text text-muted\">{{'breachCheckUsernameEmail' | i18n}}</small>\n        </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n        <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n        <span>{{'checkBreaches' | i18n}}</span>\n    </button>\n</form>\n<div class=\"mt-4\" *ngIf=\"!form.loading && checkedUsername\">\n    <p *ngIf=\"error\">{{'reportError' | i18n}}...</p>\n    <ng-container *ngIf=\"!error\">\n        <app-callout type=\"success\" title=\"{{'goodNews' | i18n}}\" *ngIf=\"!breachedAccounts.length\">\n            {{'breachUsernameNotFound' | i18n : checkedUsername}}\n        </app-callout>\n        <app-callout type=\"danger\" title=\"{{'breachFound' | i18n}}\" *ngIf=\"breachedAccounts.length\">\n            {{'breachUsernameFound' | i18n : checkedUsername : breachedAccounts.length}}\n        </app-callout>\n        <ul class=\"list-group list-group-breach\" *ngIf=\"breachedAccounts.length\">\n            <li *ngFor=\"let a of breachedAccounts\" class=\"list-group-item min-height-fix\">\n                <div class=\"row\">\n                    <div class=\"col-2 text-center\">\n                        <img [src]=\"a.logoPath\" alt=\"\" class=\"img-fluid\">\n                    </div>\n                    <div class=\"col-7\">\n                        <h3 class=\"text-lg\">{{a.title}}</h3>\n                        <p [innerHTML]=\"a.description\"></p>\n                        <p class=\"mb-1\">{{'compromisedData' | i18n}}:</p>\n                        <ul>\n                            <li *ngFor=\"let d of a.dataClasses\">{{d}}</li>\n                        </ul>\n                    </div>\n                    <div class=\"col-3\">\n                        <dl>\n                            <dt>{{'website' | i18n}}</dt>\n                            <dd>{{a.domain}}</dd>\n                            <dt>{{'affectedUsers' | i18n}}</dt>\n                            <dd>{{a.pwnCount | number}}</dd>\n                            <dt>{{'breachOccurred' | i18n}}</dt>\n                            <dd>{{a.breachDate | date: 'mediumDate'}}</dd>\n                            <dt>{{'breachReported' | i18n}}</dt>\n                            <dd>{{a.addedDate | date: 'mediumDate'}}</dd>\n                        </dl>\n                    </div>\n                </div>\n            </li>\n        </ul>\n    </ng-container>\n</div>\n","import {\n    Component,\n    ComponentFactoryResolver,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorComponent as BasePasswordGeneratorComponent,\n} from 'jslib/angular/components/password-generator.component';\n\nimport { ModalComponent } from '../modal.component';\nimport { PasswordGeneratorHistoryComponent } from './password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator',\n    templateUrl: 'password-generator.component.html',\n})\nexport class PasswordGeneratorComponent extends BasePasswordGeneratorComponent {\n    @ViewChild('historyTemplate', { read: ViewContainerRef, static: true }) historyModalRef: ViewContainerRef;\n\n    private modal: ModalComponent = null;\n\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n\n    history() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.historyModalRef.createComponent(factory).instance;\n        this.modal.show<PasswordGeneratorHistoryComponent>(PasswordGeneratorHistoryComponent, this.historyModalRef);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    lengthChanged() {\n        document.getElementById('length').focus();\n    }\n\n    minNumberChanged() {\n        document.getElementById('min-number').focus();\n    }\n\n    minSpecialChanged() {\n        document.getElementById('min-special').focus();\n    }\n}\n","<div class=\"page-header\">\n    <h1>{{'passwordGenerator' | i18n}}</h1>\n</div>\n<app-callout type=\"info\" *ngIf=\"enforcedPolicyOptions?.inEffect()\">\n    {{'passwordGeneratorPolicyInEffect' | i18n}}\n</app-callout>\n<div class=\"card card-password bg-light my-4\">\n    <div class=\"card-body\">\n        <div class=\"password-wrapper\" [innerHTML]=\"password | colorPassword\" appSelectCopy></div>\n    </div>\n</div>\n<div class=\"form-group\">\n    <div class=\"form-check form-check-inline\">\n        <input id=\"generate-password\" name=\"type\" value=\"password\" class=\"form-check-input\" type=\"radio\"\n            (change)=\"saveOptions()\" [(ngModel)]=\"options.type\">\n        <label for=\"generate-password\" class=\"form-check-label\">{{'password' | i18n}}</label>\n    </div>\n    <div class=\"form-check form-check-inline\">\n        <input id=\"generate-passphrase\" name=\"type\" value=\"passphrase\" class=\"form-check-input\" type=\"radio\"\n            (change)=\"saveOptions()\" [(ngModel)]=\"options.type\">\n        <label for=\"generate-passphrase\" class=\"form-check-label\">{{'passphrase' | i18n}}</label>\n    </div>\n</div>\n<ng-container *ngIf=\"options.type === 'passphrase'\">\n    <div class=\"row\">\n        <div class=\"form-group col-4\">\n            <label for=\"num-words\">{{'numWords' | i18n}}</label>\n            <input id=\"num-words\" class=\"form-control\" type=\"number\" min=\"3\" max=\"20\" [(ngModel)]=\"options.numWords\"\n                (blur)=\"saveOptions()\">\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"word-separator\">{{'wordSeparator' | i18n}}</label>\n            <input id=\"word-separator\" class=\"form-control\" type=\"text\" maxlength=\"1\"\n                [(ngModel)]=\"options.wordSeparator\" (blur)=\"saveOptions()\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input id=\"capitalize\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.capitalize\" [disabled]=\"enforcedPolicyOptions?.capitalize\">\n            <label for=\"capitalize\" class=\"form-check-label\">{{'capitalize' | i18n}}</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"include-number\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.includeNumber\" [disabled]=\"enforcedPolicyOptions?.includeNumber\">\n            <label for=\"include-number\" class=\"form-check-label\">{{'includeNumber' | i18n}}</label>\n        </div>\n    </div>\n</ng-container>\n<ng-container *ngIf=\"options.type === 'password'\">\n    <div class=\"row\">\n        <div class=\"form-group col-4\">\n            <label for=\"length\">{{'length' | i18n}}</label>\n            <input id=\"length\" class=\"form-control\" type=\"number\" min=\"5\" max=\"128\" [(ngModel)]=\"options.length\"\n                (blur)=\"saveOptions()\" (change)=\"lengthChanged()\">\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"min-number\">{{'minNumbers' | i18n}}</label>\n            <input id=\"min-number\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\"\n                [(ngModel)]=\"options.minNumber\" (change)=\"minNumberChanged()\">\n        </div>\n        <div class=\"form-group col-4\">\n            <label for=\"min-special\">{{'minSpecial' | i18n}}</label>\n            <input id=\"min-special\" class=\"form-control\" type=\"number\" min=\"0\" max=\"9\" (blur)=\"saveOptions()\"\n                [(ngModel)]=\"options.minSpecial\" (change)=\"minSpecialChanged()\">\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <div class=\"form-check\">\n            <input id=\"uppercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.uppercase\" [disabled]=\"enforcedPolicyOptions?.useUppercase\">\n            <label for=\"uppercase\" class=\"form-check-label\">A-Z</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"lowercase\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.lowercase\" [disabled]=\"enforcedPolicyOptions?.useLowercase\">\n            <label for=\"lowercase\" class=\"form-check-label\">a-z</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"numbers\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.number\" [disabled]=\"enforcedPolicyOptions?.useNumbers\">\n            <label for=\"numbers\" class=\"form-check-label\">0-9</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"special\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"options.special\" [disabled]=\"enforcedPolicyOptions?.useSpecial\">\n            <label for=\"special\" class=\"form-check-label\">!@#$%^&amp;*</label>\n        </div>\n        <div class=\"form-check\">\n            <input id=\"ambiguous\" class=\"form-check-input\" type=\"checkbox\" (change)=\"saveOptions()\"\n                [(ngModel)]=\"avoidAmbiguous\">\n            <label for=\"ambiguous\" class=\"form-check-label\">{{'ambiguous' | i18n}}</label>\n        </div>\n    </div>\n</ng-container>\n<div class=\"d-flex\">\n    <div>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"regenerate()\">\n            {{'regeneratePassword' | i18n}}\n        </button>\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"copy()\">\n            {{'copyPassword' | i18n}}\n        </button>\n    </div>\n    <div class=\"ml-auto\">\n        <button type=\"button\" class=\"btn btn-outline-secondary\" (click)=\"history()\"\n            appA11yTitle=\"{{'passwordHistory' | i18n}}\">\n            <i class=\"fa fa-clock-o fa-lg\" aria-hidden=\"true\"></i>\n        </button>\n    </div>\n</div>\n<ng-template #historyTemplate></ng-template>\n","import { Component } from '@angular/core';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    PasswordGeneratorHistoryComponent as BasePasswordGeneratorHistoryComponent,\n} from 'jslib/angular/components/password-generator-history.component';\n\n@Component({\n    selector: 'app-password-generator-history',\n    templateUrl: 'password-generator-history.component.html',\n})\nexport class PasswordGeneratorHistoryComponent extends BasePasswordGeneratorHistoryComponent {\n    constructor(passwordGenerationService: PasswordGenerationService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService) {\n        super(passwordGenerationService, platformUtilsService, i18nService, window);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"passHistoryTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"passHistoryTitle\">{{'passwordHistory' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <ul class=\"list-group list-group-flush\" *ngIf=\"history.length\">\n                <li class=\"list-group-item d-flex\" *ngFor=\"let h of history\">\n                    <div class=\"password-row\">\n                        <div class=\"text-monospace password-wrapper\" [innerHTML]=\"h.password | colorPassword\"\n                            appSelectCopy></div>\n                        <small class=\"text-muted\">{{h.date | date:'medium'}}</small>\n                    </div>\n                    <div class=\"ml-auto\">\n                        <button class=\"btn btn-link\" appA11yTitle=\"{{'copyPassword' | i18n}}\"\n                            (click)=\"copy(h.password)\">\n                            <i class=\"fa fa-lg fa-clone\" aria-hidden=\"true\"></i>\n                        </button>\n                    </div>\n                </li>\n            </ul>\n            <div class=\"modal-body\" *ngIf=\"!history.length\">\n                {{'noPasswordsInList' | i18n}}\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">\n                    {{'close' | i18n}}\n                </button>\n                <div class=\"ml-auto\">\n                    <button type=\"button\" (click)=\"clear()\" class=\"btn btn-outline-danger\"\n                        appA11yTitle=\"{{'clear' | i18n}}\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {\n    Component,\n    OnInit,\n} from '@angular/core';\n\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Component({\n    selector: 'app-tools',\n    templateUrl: 'tools.component.html',\n})\nexport class ToolsComponent implements OnInit {\n    canAccessPremium = false;\n\n    constructor(private userService: UserService, private messagingService: MessagingService) { }\n\n    async ngOnInit() {\n        this.canAccessPremium = await this.userService.canAccessPremium();\n    }\n\n    premiumRequired() {\n        if (!this.canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        }\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <div class=\"card mb-4\">\n                <div class=\"card-header\">{{'tools' | i18n}}</div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"generator\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'passwordGenerator' | i18n}}\n                    </a>\n                    <a routerLink=\"import\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'importData' | i18n}}\n                    </a>\n                    <a routerLink=\"export\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'exportVault' | i18n}}\n                    </a>\n                </div>\n            </div>\n            <div class=\"card\">\n                <div class=\"card-header d-flex\">\n                    {{'reports' | i18n}}\n                    <div class=\"ml-auto\">\n                        <a href=\"#\" appStopClick class=\"badge badge-primary\" *ngIf=\"!canAccessPremium\"\n                            (click)=\"premiumRequired()\">\n                            {{'premium' | i18n}}\n                        </a>\n                    </div>\n                </div>\n                <div class=\"list-group list-group-flush\">\n                    <a routerLink=\"exposed-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'exposedPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"reused-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'reusedPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"weak-passwords-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'weakPasswordsReport' | i18n}}\n                    </a>\n                    <a routerLink=\"unsecured-websites-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'unsecuredWebsitesReport' | i18n}}\n                    </a>\n                    <a routerLink=\"inactive-two-factor-report\" class=\"list-group-item\" routerLinkActive=\"active\">\n                        {{'inactive2faReport' | i18n}}\n                    </a>\n                    <a routerLink=\"breach-report\" class=\"list-group-item d-flex\" routerLinkActive=\"active\">\n                        {{'dataBreachReport' | i18n}}\n                        <div class=\"ml-auto\">\n                            <span class=\"badge badge-success\" *ngIf=\"!canAccessPremium\">\n                                {{'free' | i18n | uppercase}}\n                            </span>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-9\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>\n","import {\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\nimport {\n    ActivatedRoute,\n    Router,\n} from '@angular/router';\n\nimport { CipherType } from 'jslib/enums/cipherType';\n\nimport { CipherView } from 'jslib/models/view/cipherView';\n\nimport { ModalComponent } from '../modal.component';\n\nimport { OrganizationsComponent } from '../settings/organizations.component';\nimport { UpdateKeyComponent } from '../settings/update-key.component';\nimport { AddEditComponent } from './add-edit.component';\nimport { AttachmentsComponent } from './attachments.component';\nimport { CiphersComponent } from './ciphers.component';\nimport { CollectionsComponent } from './collections.component';\nimport { FolderAddEditComponent } from './folder-add-edit.component';\nimport { GroupingsComponent } from './groupings.component';\nimport { ShareComponent } from './share.component';\n\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nconst BroadcasterSubscriptionId = 'VaultComponent';\n\n@Component({\n    selector: 'app-vault',\n    templateUrl: 'vault.component.html',\n})\nexport class VaultComponent implements OnInit, OnDestroy {\n    @ViewChild(GroupingsComponent, { static: true }) groupingsComponent: GroupingsComponent;\n    @ViewChild(CiphersComponent, { static: true }) ciphersComponent: CiphersComponent;\n    @ViewChild(OrganizationsComponent, { static: true }) organizationsComponent: OrganizationsComponent;\n    @ViewChild('attachments', { read: ViewContainerRef, static: true }) attachmentsModalRef: ViewContainerRef;\n    @ViewChild('folderAddEdit', { read: ViewContainerRef, static: true }) folderAddEditModalRef: ViewContainerRef;\n    @ViewChild('cipherAddEdit', { read: ViewContainerRef, static: true }) cipherAddEditModalRef: ViewContainerRef;\n    @ViewChild('share', { read: ViewContainerRef, static: true }) shareModalRef: ViewContainerRef;\n    @ViewChild('collections', { read: ViewContainerRef, static: true }) collectionsModalRef: ViewContainerRef;\n    @ViewChild('updateKeyTemplate', { read: ViewContainerRef, static: true }) updateKeyModalRef: ViewContainerRef;\n\n    favorites: boolean = false;\n    type: CipherType = null;\n    folderId: string = null;\n    collectionId: string = null;\n    showVerifyEmail = false;\n    showBrowserOutdated = false;\n    showUpdateKey = false;\n    showPremiumCallout = false;\n    deleted: boolean = false;\n\n    modal: ModalComponent = null;\n\n    constructor(private syncService: SyncService, private route: ActivatedRoute,\n        private router: Router, private changeDetectorRef: ChangeDetectorRef,\n        private i18nService: I18nService, private componentFactoryResolver: ComponentFactoryResolver,\n        private tokenService: TokenService, private cryptoService: CryptoService,\n        private messagingService: MessagingService, private userService: UserService,\n        private platformUtilsService: PlatformUtilsService, private broadcasterService: BroadcasterService,\n        private ngZone: NgZone) { }\n\n    async ngOnInit() {\n        this.showVerifyEmail = !(await this.tokenService.getEmailVerified());\n        this.showBrowserOutdated = window.navigator.userAgent.indexOf('MSIE') !== -1;\n\n        const queryParamsSub = this.route.queryParams.subscribe(async (params) => {\n            await this.syncService.fullSync(false);\n\n            this.showUpdateKey = !(await this.cryptoService.hasEncKey());\n            const canAccessPremium = await this.userService.canAccessPremium();\n            this.showPremiumCallout = !this.showVerifyEmail && !canAccessPremium &&\n                !this.platformUtilsService.isSelfHost();\n\n            await Promise.all([\n                this.groupingsComponent.load(),\n                this.organizationsComponent.load(),\n            ]);\n\n            if (params == null) {\n                this.groupingsComponent.selectedAll = true;\n                await this.ciphersComponent.reload();\n            } else {\n                if (params.deleted) {\n                    this.groupingsComponent.selectedTrash = true;\n                    await this.filterDeleted();\n                } else if (params.favorites) {\n                    this.groupingsComponent.selectedFavorites = true;\n                    await this.filterFavorites();\n                } else if (params.type) {\n                    const t = parseInt(params.type, null);\n                    this.groupingsComponent.selectedType = t;\n                    await this.filterCipherType(t);\n                } else if (params.folderId) {\n                    this.groupingsComponent.selectedFolder = true;\n                    this.groupingsComponent.selectedFolderId = params.folderId;\n                    await this.filterFolder(params.folderId);\n                } else if (params.collectionId) {\n                    this.groupingsComponent.selectedCollectionId = params.collectionId;\n                    await this.filterCollection(params.collectionId);\n                } else {\n                    this.groupingsComponent.selectedAll = true;\n                    await this.ciphersComponent.reload();\n                }\n            }\n\n            this.broadcasterService.subscribe(BroadcasterSubscriptionId, (message: any) => {\n                this.ngZone.run(async () => {\n                    switch (message.command) {\n                        case 'syncCompleted':\n                            if (message.successfully) {\n                                await Promise.all([\n                                    this.groupingsComponent.load(),\n                                    this.organizationsComponent.load(),\n                                    this.ciphersComponent.load(this.ciphersComponent.filter),\n                                ]);\n                                this.changeDetectorRef.detectChanges();\n                            }\n                            break;\n                    }\n                });\n            });\n\n            if (queryParamsSub != null) {\n                queryParamsSub.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    async clearGroupingFilters() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchVault');\n        await this.ciphersComponent.reload();\n        this.clearFilters();\n        this.go();\n    }\n\n    async filterFavorites() {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFavorites');\n        await this.ciphersComponent.reload((c) => c.favorite);\n        this.clearFilters();\n        this.favorites = true;\n        this.go();\n    }\n\n    async filterDeleted() {\n        this.ciphersComponent.showAddNew = false;\n        this.ciphersComponent.deleted = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchTrash');\n        await this.ciphersComponent.reload(null, true);\n        this.clearFilters();\n        this.deleted = true;\n        this.go();\n    }\n\n    async filterCipherType(type: CipherType) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchType');\n        await this.ciphersComponent.reload((c) => c.type === type);\n        this.clearFilters();\n        this.type = type;\n        this.go();\n    }\n\n    async filterFolder(folderId: string) {\n        this.ciphersComponent.showAddNew = true;\n        folderId = folderId === 'none' ? null : folderId;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchFolder');\n        await this.ciphersComponent.reload((c) => c.folderId === folderId);\n        this.clearFilters();\n        this.folderId = folderId == null ? 'none' : folderId;\n        this.go();\n    }\n\n    async filterCollection(collectionId: string) {\n        this.ciphersComponent.showAddNew = true;\n        this.groupingsComponent.searchPlaceholder = this.i18nService.t('searchCollection');\n        await this.ciphersComponent.reload((c) => c.collectionIds != null &&\n            c.collectionIds.indexOf(collectionId) > -1);\n        this.clearFilters();\n        this.collectionId = collectionId;\n        this.go();\n    }\n\n    filterSearchText(searchText: string) {\n        this.ciphersComponent.searchText = searchText;\n        this.ciphersComponent.search(200);\n    }\n\n    async editCipherAttachments(cipher: CipherView) {\n        const canAccessPremium = await this.userService.canAccessPremium();\n        if (cipher.organizationId == null && !canAccessPremium) {\n            this.messagingService.send('premiumRequired');\n            return;\n        } else if (cipher.organizationId != null) {\n            const org = await this.userService.getOrganization(cipher.organizationId);\n            if (org != null && (org.maxStorageGb == null || org.maxStorageGb === 0)) {\n                this.messagingService.send('upgradeOrganization', { organizationId: cipher.organizationId });\n                return;\n            }\n        }\n\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.attachmentsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AttachmentsComponent>(AttachmentsComponent, this.attachmentsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        let madeAttachmentChanges = false;\n        childComponent.onUploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onDeletedAttachment.subscribe(() => madeAttachmentChanges = true);\n        childComponent.onReuploadedAttachment.subscribe(() => madeAttachmentChanges = true);\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n            if (madeAttachmentChanges) {\n                await this.ciphersComponent.refresh();\n            }\n            madeAttachmentChanges = false;\n        });\n    }\n\n    shareCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.shareModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<ShareComponent>(ShareComponent, this.shareModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSharedCipher.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    editCipherCollections(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.collectionsModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<CollectionsComponent>(CollectionsComponent, this.collectionsModalRef);\n\n        childComponent.cipherId = cipher.id;\n        childComponent.onSavedCollections.subscribe(async () => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(async () => {\n            this.modal = null;\n        });\n    }\n\n    async addFolder() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = null;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    async editFolder(folderId: string) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.folderAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<FolderAddEditComponent>(\n            FolderAddEditComponent, this.folderAddEditModalRef);\n\n        childComponent.folderId = folderId;\n        childComponent.onSavedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n        });\n        childComponent.onDeletedFolder.subscribe(async () => {\n            this.modal.close();\n            await this.groupingsComponent.loadFolders();\n            await this.filterFolder('none');\n            this.groupingsComponent.selectedFolderId = null;\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    addCipher() {\n        const component = this.editCipher(null);\n        component.type = this.type;\n        component.folderId = this.folderId === 'none' ? null : this.folderId;\n        if (this.collectionId != null) {\n            const collection = this.groupingsComponent.collections.filter((c) => c.id === this.collectionId);\n            if (collection.length > 0) {\n                component.organizationId = collection[0].organizationId;\n                component.collectionIds = [this.collectionId];\n            }\n        }\n    }\n\n    editCipher(cipher: CipherView) {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.cipherAddEditModalRef.createComponent(factory).instance;\n        const childComponent = this.modal.show<AddEditComponent>(\n            AddEditComponent, this.cipherAddEditModalRef);\n\n        childComponent.cipherId = cipher == null ? null : cipher.id;\n        childComponent.onSavedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onDeletedCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n        childComponent.onRestoredCipher.subscribe(async (c: CipherView) => {\n            this.modal.close();\n            await this.ciphersComponent.refresh();\n        });\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n\n        return childComponent;\n    }\n\n    cloneCipher(cipher: CipherView) {\n        const component = this.editCipher(cipher);\n        component.cloneMode = true;\n    }\n\n    updateKey() {\n        if (this.modal != null) {\n            this.modal.close();\n        }\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory(ModalComponent);\n        this.modal = this.updateKeyModalRef.createComponent(factory).instance;\n        this.modal.show<UpdateKeyComponent>(UpdateKeyComponent, this.updateKeyModalRef);\n\n        this.modal.onClosed.subscribe(() => {\n            this.modal = null;\n        });\n    }\n\n    private clearFilters() {\n        this.folderId = null;\n        this.collectionId = null;\n        this.favorites = false;\n        this.type = null;\n        this.deleted = false;\n    }\n\n    private go(queryParams: any = null) {\n        if (queryParams == null) {\n            queryParams = {\n                favorites: this.favorites ? true : null,\n                type: this.type,\n                folderId: this.folderId,\n                collectionId: this.collectionId,\n                deleted: this.deleted ? true : null,\n            };\n        }\n\n        this.router.navigate([], {\n            relativeTo: this.route,\n            queryParams: queryParams,\n            replaceUrl: true,\n        });\n    }\n}\n","<div class=\"container page-content\">\n    <div class=\"row\">\n        <div class=\"col-3\">\n            <app-vault-groupings (onAllClicked)=\"clearGroupingFilters()\" (onFavoritesClicked)=\"filterFavorites()\"\n                (onCipherTypeClicked)=\"filterCipherType($event)\" (onFolderClicked)=\"filterFolder($event.id)\"\n                (onAddFolder)=\"addFolder()\" (onEditFolder)=\"editFolder($event.id)\"\n                (onCollectionClicked)=\"filterCollection($event.id)\" (onSearchTextChanged)=\"filterSearchText($event)\"\n                (onTrashClicked)=\"filterDeleted()\">\n            </app-vault-groupings>\n        </div>\n        <div class=\"col-6\">\n            <div class=\"page-header d-flex\">\n                <h1>\n                    {{'myVault' | i18n}}\n                    <small #actionSpinner [appApiAction]=\"ciphersComponent.actionPromise\">\n                        <ng-container *ngIf=\"actionSpinner.loading\">\n                            <i class=\"fa fa-spinner fa-spin text-muted\" title=\"{{'loading' | i18n}}\"\n                                aria-hidden=\"true\"></i>\n                            <span class=\"sr-only\">{{'loading' | i18n}}</span>\n                        </ng-container>\n                    </small>\n                </h1>\n                <div class=\"ml-auto d-flex\">\n                    <app-vault-bulk-actions [ciphersComponent]=\"ciphersComponent\" [modal]=\"modal\" [deleted]=\"deleted\">\n                    </app-vault-bulk-actions>\n                    <button type=\"button\" class=\"btn btn-outline-primary btn-sm\" (click)=\"addCipher()\" *ngIf=\"!deleted\">\n                        <i class=\"fa fa-plus fa-fw\" aria-hidden=\"true\"></i>{{'addItem' | i18n}}\n                    </button>\n                </div>\n            </div>\n            <app-vault-ciphers (onCipherClicked)=\"editCipher($event)\"\n                (onAttachmentsClicked)=\"editCipherAttachments($event)\" (onAddCipher)=\"addCipher()\"\n                (onShareClicked)=\"shareCipher($event)\" (onCollectionsClicked)=\"editCipherCollections($event)\"\n                (onCloneClicked)=\"cloneCipher($event)\">\n            </app-vault-ciphers>\n        </div>\n        <div class=\"col-3\">\n            <div class=\"card border-warning mb-4\" *ngIf=\"showUpdateKey\">\n                <div class=\"card-header bg-warning text-white\">\n                    <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateKeyTitle' | i18n}}\n                </div>\n                <div class=\"card-body\">\n                    <p>{{'updateEncryptionKeyShortDesc' | i18n}}</p>\n                    <button class=\"btn btn-block btn-outline-secondary\" type=\"button\" (click)=\"updateKey()\">\n                        {{'updateEncryptionKey' | i18n}}\n                    </button>\n                </div>\n            </div>\n            <app-verify-email *ngIf=\"showVerifyEmail\" class=\"d-block mb-4\"></app-verify-email>\n            <div class=\"card border-warning mb-4\" *ngIf=\"showBrowserOutdated\">\n                <div class=\"card-header bg-warning text-white\">\n                    <i class=\"fa fa-warning fa-fw\" aria-hidden=\"true\"></i> {{'updateBrowser' | i18n}}\n                </div>\n                <div class=\"card-body\">\n                    <p>{{'updateBrowserDesc' | i18n}}</p>\n                    <a class=\"btn btn-block btn-outline-secondary\" target=\"_blank\"\n                        href=\"https://browser-update.org/update-browser.html\" rel=\"noopener\">\n                        {{'updateBrowser' | i18n}}\n                    </a>\n                </div>\n            </div>\n            <div class=\"card border-success mb-4\" *ngIf=\"showPremiumCallout\">\n                <div class=\"card-header bg-success text-white\">\n                    <i class=\"fa fa-star fa-fw\" aria-hidden=\"true\"></i> {{'goPremium' | i18n}}\n                </div>\n                <div class=\"card-body\">\n                    <p>{{'premiumUpgradeUnlockFeatures' | i18n}}</p>\n                    <a class=\"btn btn-block btn-outline-secondary\" routerLink=\"/settings/premium\">\n                        {{'goPremium' | i18n}}\n                    </a>\n                </div>\n            </div>\n            <div class=\"card\">\n                <div class=\"card-header d-flex\">\n                    {{'organizations' | i18n}}\n                    <a class=\"ml-auto\" href=\"https://help.bitwarden.com/article/what-is-an-organization/\"\n                        target=\"_blank\" rel=\"noopener\" appA11yTitle=\"{{'learnMore' | i18n}}\">\n                        <i class=\"fa fa-question-circle-o\" aria-hidden=\"true\"></i>\n                    </a>\n                </div>\n                <div class=\"card-body\">\n                    <app-organizations [vault]=\"true\"></app-organizations>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<ng-template #attachments></ng-template>\n<ng-template #folderAddEdit></ng-template>\n<ng-template #cipherAddEdit></ng-template>\n<ng-template #share></ng-template>\n<ng-template #collections></ng-template>\n<ng-template #updateKeyTemplate></ng-template>\n","import { Component } from '@angular/core';\n\nimport {\n    Toast,\n    ToasterService,\n} from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\n\nimport { CipherString } from 'jslib/models/domain/cipherString';\n\nimport { CipherWithIdRequest } from 'jslib/models/request/cipherWithIdRequest';\nimport { FolderWithIdRequest } from 'jslib/models/request/folderWithIdRequest';\nimport { UpdateKeyRequest } from 'jslib/models/request/updateKeyRequest';\n\n@Component({\n    selector: 'app-update-key',\n    templateUrl: 'update-key.component.html',\n})\nexport class UpdateKeyComponent {\n    masterPassword: string;\n    formPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService,\n        private cryptoService: CryptoService, private messagingService: MessagingService,\n        private syncService: SyncService, private folderService: FolderService,\n        private cipherService: CipherService) { }\n\n    async submit() {\n        const hasEncKey = await this.cryptoService.hasEncKey();\n        if (hasEncKey) {\n            return;\n        }\n\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.toasterService.popAsync('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.makeRequest().then((request) => {\n                return this.apiService.postAccountKey(request);\n            });\n            await this.formPromise;\n            this.analytics.eventTrack.next({ action: 'Key Updated' });\n            const toast: Toast = {\n                type: 'success',\n                title: this.i18nService.t('keyUpdated'),\n                body: this.i18nService.t('logBackInOthersToo'),\n                timeout: 15000,\n            };\n            this.toasterService.popAsync(toast);\n            this.messagingService.send('logout');\n        } catch { }\n    }\n\n    private async makeRequest(): Promise<UpdateKeyRequest> {\n        const key = await this.cryptoService.getKey();\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const privateKey = await this.cryptoService.getPrivateKey();\n        let encPrivateKey: CipherString = null;\n        if (privateKey != null) {\n            encPrivateKey = await this.cryptoService.encrypt(privateKey, encKey[0]);\n        }\n        const request = new UpdateKeyRequest();\n        request.privateKey = encPrivateKey != null ? encPrivateKey.encryptedString : null;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n\n        await this.syncService.fullSync(true);\n\n        const folders = await this.folderService.getAllDecrypted();\n        for (let i = 0; i < folders.length; i++) {\n            if (folders[i].id == null) {\n                continue;\n            }\n            const folder = await this.folderService.encrypt(folders[i], encKey[0]);\n            request.folders.push(new FolderWithIdRequest(folder));\n        }\n\n        const ciphers = await this.cipherService.getAllDecrypted();\n        for (let i = 0; i < ciphers.length; i++) {\n            if (ciphers[i].organizationId != null) {\n                continue;\n            }\n            const cipher = await this.cipherService.encrypt(ciphers[i], encKey[0]);\n            request.ciphers.push(new CipherWithIdRequest(cipher));\n        }\n\n        return request;\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"updateEncKeyTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"updateEncKeyTitle\">{{'updateEncryptionKey' | i18n}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <p>{{'updateEncryptionKeyShortDesc' | i18n}} {{'updateEncryptionKeyDesc' | i18n}}\n                    <a href=\"https://help.bitwarden.com/article/update-encryption-key/\" target=\"_blank\"\n                        rel=\"noopener\">{{'learnMore' | i18n}}</a>\n                </p>\n                <app-callout type=\"warning\">{{'updateEncryptionKeyWarning' | i18n}}</app-callout>\n                <label for=\"masterPassword\">{{'masterPass' | i18n}}</label>\n                <input id=\"masterPassword\" type=\"password\" name=\"MasterPasswordHash\" class=\"form-control\"\n                    [(ngModel)]=\"masterPassword\" required appAutofocus appInputVerbatim>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'updateEncryptionKey' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\" data-dismiss=\"modal\">{{'close' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport {\n    FolderAddEditComponent as BaseFolderAddEditComponent,\n} from 'jslib/angular/components/folder-add-edit.component';\n\n@Component({\n    selector: 'app-folder-add-edit',\n    templateUrl: 'folder-add-edit.component.html',\n})\nexport class FolderAddEditComponent extends BaseFolderAddEditComponent {\n    constructor(folderService: FolderService, i18nService: I18nService,\n        platformUtilsService: PlatformUtilsService) {\n        super(folderService, i18nService, platformUtilsService);\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"folderAddEditTitle\">\n    <div class=\"modal-dialog modal-sm\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\" ngNativeValidate>\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"folderAddEditTitle\">{{title}}</h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <label for=\"name\">{{'name' | i18n}}</label>\n                <input id=\"name\" class=\"form-control\" type=\"text\" name=\"Name\" [(ngModel)]=\"folder.name\" required>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit\" [disabled]=\"form.loading\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n                <div class=\"ml-auto\">\n                    <button #deleteBtn type=\"button\" (click)=\"delete()\" class=\"btn btn-outline-danger\"\n                        appA11yTitle=\"{{'delete' | i18n}}\" *ngIf=\"editMode\" [disabled]=\"deleteBtn.loading\"\n                        [appApiAction]=\"deletePromise\">\n                        <i class=\"fa fa-trash-o fa-lg fa-fw\" [hidden]=\"deleteBtn.loading\" aria-hidden=\"true\"></i>\n                        <i class=\"fa fa-spinner fa-spin fa-lg fa-fw\" [hidden]=\"!deleteBtn.loading\"\n                            title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>\n","import {\n    Component,\n    OnDestroy,\n} from '@angular/core';\n\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { CollectionView } from 'jslib/models/view/collectionView';\n\nimport { ShareComponent as BaseShareComponent } from 'jslib/angular/components/share.component';\n\n@Component({\n    selector: 'app-vault-share',\n    templateUrl: 'share.component.html',\n})\nexport class ShareComponent extends BaseShareComponent implements OnDestroy {\n    constructor(collectionService: CollectionService, platformUtilsService: PlatformUtilsService,\n        i18nService: I18nService, userService: UserService,\n        cipherService: CipherService) {\n        super(collectionService, platformUtilsService, i18nService, userService, cipherService);\n    }\n\n    ngOnDestroy() {\n        this.selectAll(false);\n    }\n\n    check(c: CollectionView, select?: boolean) {\n        (c as any).checked = select == null ? !(c as any).checked : select;\n    }\n\n    selectAll(select: boolean) {\n        const collections = select ? this.collections : this.writeableCollections;\n        collections.forEach((c) => this.check(c, select));\n    }\n}\n","<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"shareTitle\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <form class=\"modal-content\" #form (ngSubmit)=\"submit()\" [appApiAction]=\"formPromise\">\n            <div class=\"modal-header\">\n                <h2 class=\"modal-title\" id=\"shareTitle\">\n                    {{'share' | i18n}}\n                    <small *ngIf=\"cipher\">{{cipher.name}}</small>\n                </h2>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" appA11yTitle=\"{{'close' | i18n}}\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\" *ngIf=\"!organizations || !organizations.length\">\n                {{'noOrganizationsList' | i18n}}\n            </div>\n            <div class=\"modal-body\" *ngIf=\"organizations && organizations.length\">\n                <p>{{'shareDesc' | i18n}}</p>\n                <div class=\"form-group\">\n                    <label for=\"organization\">{{'organization' | i18n}}</label>\n                    <select id=\"organization\" name=\"OrganizationId\" [(ngModel)]=\"organizationId\" class=\"form-control\"\n                        (change)=\"filterCollections()\">\n                        <option *ngFor=\"let o of organizations\" [ngValue]=\"o.id\">{{o.name}}</option>\n                    </select>\n                </div>\n                <div class=\"d-flex\">\n                    <h3>{{'collections' | i18n}}</h3>\n                    <div class=\"ml-auto d-flex\" *ngIf=\"collections && collections.length\">\n                        <button type=\"button\" (click)=\"selectAll(true)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'selectAll' | i18n}}\n                        </button>\n                        <button type=\"button\" (click)=\"selectAll(false)\" class=\"btn btn-link btn-sm py-0\">\n                            {{'unselectAll' | i18n}}\n                        </button>\n                    </div>\n                </div>\n                <div *ngIf=\"!collections || !collections.length\">\n                    {{'noCollectionsInList' | i18n}}\n                </div>\n                <table class=\"table table-hover table-list mb-0\" *ngIf=\"collections && collections.length\">\n                    <tbody>\n                        <tr *ngFor=\"let c of collections; let i = index\" (click)=\"check(c)\">\n                            <td class=\"table-list-checkbox\">\n                                <input type=\"checkbox\" [(ngModel)]=\"c.checked\" name=\"Collection[{{i}}].Checked\"\n                                    appStopProp>\n                            </td>\n                            <td>\n                                {{c.name}}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"submit\" class=\"btn btn-primary btn-submit manual\" [disabled]=\"form.loading || !canSave\"\n                    [ngClass]=\"{loading:form.loading}\" *ngIf=\"organizations && organizations.length\">\n                    <i class=\"fa fa-spinner fa-spin\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n                    <span>{{'save' | i18n}}</span>\n                </button>\n                <a href=\"#\" routerLink=\"/settings/create-organization\" class=\"btn btn-primary\"\n                    *ngIf=\"!organizations || !organizations.length\">\n                    {{'newOrganization' | i18n}}\n                </a>\n                <button type=\"button\" class=\"btn btn-outline-secondary\"\n                    data-dismiss=\"modal\">{{'cancel' | i18n}}</button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { Component } from '@angular/core';\n\nimport { ToasterService } from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\n\nimport { ApiService } from 'jslib/abstractions/api.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\n\n@Component({\n    selector: 'app-verify-email',\n    templateUrl: 'verify-email.component.html',\n})\nexport class VerifyEmailComponent {\n    actionPromise: Promise<any>;\n\n    constructor(private apiService: ApiService, private i18nService: I18nService,\n        private analytics: Angulartics2, private toasterService: ToasterService) { }\n\n    async send() {\n        if (this.actionPromise != null) {\n            return;\n        }\n        try {\n            this.actionPromise = this.apiService.postAccountVerifyEmail();\n            await this.actionPromise;\n            this.analytics.eventTrack.next({ action: 'Sent Verification Email' });\n            this.toasterService.popAsync('success', null, this.i18nService.t('checkInboxForVerification'));\n        } catch { }\n        this.actionPromise = null;\n    }\n}\n","<div class=\"card border-warning\">\n    <div class=\"card-header bg-warning text-white\">\n        <i class=\"fa fa-envelope-o fa-fw\" aria-hidden=\"true\"></i> {{'verifyEmail' | i18n}}\n    </div>\n    <div class=\"card-body\">\n        <p>{{'verifyEmailDesc' | i18n}}</p>\n        <button type=\"button\" class=\"btn btn-block btn-outline-secondary btn-submit\" #sendBtn\n            [appApiAction]=\"actionPromise\" [disabled]=\"sendBtn.loading\" (click)=\"send()\">\n            <i class=\"fa fa-spin fa-spinner\" title=\"{{'loading' | i18n}}\" aria-hidden=\"true\"></i>\n            <span>\n                {{'sendEmail' | i18n}}\n            </span>\n        </button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { ToasterService } from 'angular2-toaster';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { UserService } from 'jslib/abstractions/user.service';\n\n@Injectable()\nexport class OrganizationGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router,\n        private toasterService: ToasterService, private i18nService: I18nService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.params.organizationId);\n        if (org == null) {\n            this.router.navigate(['/']);\n            return false;\n        }\n        if (!org.isOwner && !org.enabled) {\n            this.toasterService.popAsync('error', null, this.i18nService.t('organizationIsDisabled'));\n            this.router.navigate(['/']);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\n@Injectable()\nexport class OrganizationTypeGuardService implements CanActivate {\n    constructor(private userService: UserService, private router: Router) { }\n\n    async canActivate(route: ActivatedRouteSnapshot) {\n        const org = await this.userService.getOrganization(route.parent.params.organizationId);\n        const allowedTypes = route.data == null ? null : route.data.allowedTypes as OrganizationUserType[];\n        if (allowedTypes == null || allowedTypes.indexOf(org.type) === -1) {\n            this.router.navigate(['/organizations', org.id]);\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    CanActivate,\n    Router,\n} from '@angular/router';\n\nimport { UserService } from 'jslib/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib/abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class UnauthGuardService implements CanActivate {\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router) { }\n\n    async canActivate() {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (isAuthed) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            if (locked) {\n                this.router.navigate(['lock']);\n            } else {\n                this.router.navigate(['vault']);\n            }\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    Router,\n    RouterStateSnapshot,\n} from '@angular/router';\n\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { UserService } from '../../abstractions/user.service';\nimport { VaultTimeoutService } from '../../abstractions/vaultTimeout.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private vaultTimeoutService: VaultTimeoutService, private userService: UserService,\n        private router: Router, private messagingService: MessagingService) { }\n\n    async canActivate(route: ActivatedRouteSnapshot, routerState: RouterStateSnapshot) {\n        const isAuthed = await this.userService.isAuthenticated();\n        if (!isAuthed) {\n            this.messagingService.send('authBlocked');\n            return false;\n        }\n\n        const locked = await this.vaultTimeoutService.isLocked();\n        if (locked) {\n            if (routerState != null) {\n                this.messagingService.send('lockedUrl', { url: routerState.url });\n            }\n            this.router.navigate(['lock'], { queryParams: { promptBiometric: true }});\n            return false;\n        }\n\n        return true;\n    }\n}\n","import { DeviceType } from '../enums/deviceType';\nimport { PolicyType } from '../enums/policyType';\n\nimport { ApiService as ApiServiceAbstraction } from '../abstractions/api.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { TokenService } from '../abstractions/token.service';\n\nimport { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { BitPayInvoiceRequest } from '../models/request/bitPayInvoiceRequest';\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { DeleteRecoverRequest } from '../models/request/deleteRecoverRequest';\nimport { EmailRequest } from '../models/request/emailRequest';\nimport { EmailTokenRequest } from '../models/request/emailTokenRequest';\nimport { EventRequest } from '../models/request/eventRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { GroupRequest } from '../models/request/groupRequest';\nimport { IapCheckRequest } from '../models/request/iapCheckRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportDirectoryRequest } from '../models/request/importDirectoryRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KdfRequest } from '../models/request/kdfRequest';\nimport { KeysRequest } from '../models/request/keysRequest';\nimport { OrganizationCreateRequest } from '../models/request/organizationCreateRequest';\nimport { OrganizationTaxInfoUpdateRequest } from '../models/request/organizationTaxInfoUpdateRequest';\nimport { OrganizationUpdateRequest } from '../models/request/organizationUpdateRequest';\nimport { OrganizationUpgradeRequest } from '../models/request/organizationUpgradeRequest';\nimport { OrganizationUserAcceptRequest } from '../models/request/organizationUserAcceptRequest';\nimport { OrganizationUserConfirmRequest } from '../models/request/organizationUserConfirmRequest';\nimport { OrganizationUserInviteRequest } from '../models/request/organizationUserInviteRequest';\nimport { OrganizationUserUpdateGroupsRequest } from '../models/request/organizationUserUpdateGroupsRequest';\nimport { OrganizationUserUpdateRequest } from '../models/request/organizationUserUpdateRequest';\nimport { PasswordHintRequest } from '../models/request/passwordHintRequest';\nimport { PasswordRequest } from '../models/request/passwordRequest';\nimport { PasswordVerificationRequest } from '../models/request/passwordVerificationRequest';\nimport { PaymentRequest } from '../models/request/paymentRequest';\nimport { PolicyRequest } from '../models/request/policyRequest';\nimport { PreloginRequest } from '../models/request/preloginRequest';\nimport { RegisterRequest } from '../models/request/registerRequest';\nimport { SeatRequest } from '../models/request/seatRequest';\nimport { SelectionReadOnlyRequest } from '../models/request/selectionReadOnlyRequest';\nimport { SetPasswordRequest } from '../models/request/setPasswordRequest';\nimport { StorageRequest } from '../models/request/storageRequest';\nimport { TaxInfoUpdateRequest } from '../models/request/taxInfoUpdateRequest';\nimport { TokenRequest } from '../models/request/tokenRequest';\nimport { TwoFactorEmailRequest } from '../models/request/twoFactorEmailRequest';\nimport { TwoFactorProviderRequest } from '../models/request/twoFactorProviderRequest';\nimport { TwoFactorRecoveryRequest } from '../models/request/twoFactorRecoveryRequest';\nimport { UpdateDomainsRequest } from '../models/request/updateDomainsRequest';\nimport { UpdateKeyRequest } from '../models/request/updateKeyRequest';\nimport { UpdateProfileRequest } from '../models/request/updateProfileRequest';\nimport { UpdateTwoFactorAuthenticatorRequest } from '../models/request/updateTwoFactorAuthenticatorRequest';\nimport { UpdateTwoFactorDuoRequest } from '../models/request/updateTwoFactorDuoRequest';\nimport { UpdateTwoFactorEmailRequest } from '../models/request/updateTwoFactorEmailRequest';\nimport { UpdateTwoFactorU2fDeleteRequest } from '../models/request/updateTwoFactorU2fDeleteRequest';\nimport { UpdateTwoFactorU2fRequest } from '../models/request/updateTwoFactorU2fRequest';\nimport { UpdateTwoFactorYubioOtpRequest } from '../models/request/updateTwoFactorYubioOtpRequest';\nimport { VerifyBankRequest } from '../models/request/verifyBankRequest';\nimport { VerifyDeleteRecoverRequest } from '../models/request/verifyDeleteRecoverRequest';\nimport { VerifyEmailRequest } from '../models/request/verifyEmailRequest';\n\nimport { ApiKeyResponse } from '../models/response/apiKeyResponse';\nimport { BillingResponse } from '../models/response/billingResponse';\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport {\n    CollectionGroupDetailsResponse,\n    CollectionResponse,\n} from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\nimport { EventResponse } from '../models/response/eventResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    GroupDetailsResponse,\n    GroupResponse,\n} from '../models/response/groupResponse';\nimport { IdentityTokenResponse } from '../models/response/identityTokenResponse';\nimport { IdentityTwoFactorResponse } from '../models/response/identityTwoFactorResponse';\nimport { ListResponse } from '../models/response/listResponse';\nimport { OrganizationResponse } from '../models/response/organizationResponse';\nimport { OrganizationSubscriptionResponse } from '../models/response/organizationSubscriptionResponse';\nimport {\n    OrganizationUserDetailsResponse,\n    OrganizationUserUserDetailsResponse,\n} from '../models/response/organizationUserResponse';\nimport { PaymentResponse } from '../models/response/paymentResponse';\nimport { PlanResponse } from '../models/response/planResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { PreloginResponse } from '../models/response/preloginResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\nimport { SelectionReadOnlyResponse } from '../models/response/selectionReadOnlyResponse';\nimport { SubscriptionResponse } from '../models/response/subscriptionResponse';\nimport { SyncResponse } from '../models/response/syncResponse';\nimport { TaxInfoResponse } from '../models/response/taxInfoResponse';\nimport { TwoFactorAuthenticatorResponse } from '../models/response/twoFactorAuthenticatorResponse';\nimport { TwoFactorDuoResponse } from '../models/response/twoFactorDuoResponse';\nimport { TwoFactorEmailResponse } from '../models/response/twoFactorEmailResponse';\nimport { TwoFactorProviderResponse } from '../models/response/twoFactorProviderResponse';\nimport { TwoFactorRecoverResponse } from '../models/response/twoFactorRescoverResponse';\nimport {\n    ChallengeResponse,\n    TwoFactorU2fResponse,\n} from '../models/response/twoFactorU2fResponse';\nimport { TwoFactorYubiKeyResponse } from '../models/response/twoFactorYubiKeyResponse';\nimport { UserKeyResponse } from '../models/response/userKeyResponse';\n\nexport class ApiService implements ApiServiceAbstraction {\n    urlsSet: boolean = false;\n    apiBaseUrl: string;\n    identityBaseUrl: string;\n    eventsBaseUrl: string;\n\n    private device: DeviceType;\n    private deviceType: string;\n    private isWebClient = false;\n    private isDesktopClient = false;\n    private usingBaseUrl = false;\n\n    constructor(private tokenService: TokenService, private platformUtilsService: PlatformUtilsService,\n        private logoutCallback: (expired: boolean) => Promise<void>, private customUserAgent: string = null) {\n        this.device = platformUtilsService.getDevice();\n        this.deviceType = this.device.toString();\n        this.isWebClient = this.device === DeviceType.IEBrowser || this.device === DeviceType.ChromeBrowser ||\n            this.device === DeviceType.EdgeBrowser || this.device === DeviceType.FirefoxBrowser ||\n            this.device === DeviceType.OperaBrowser || this.device === DeviceType.SafariBrowser ||\n            this.device === DeviceType.UnknownBrowser || this.device === DeviceType.VivaldiBrowser;\n        this.isDesktopClient = this.device === DeviceType.WindowsDesktop || this.device === DeviceType.MacOsDesktop ||\n            this.device === DeviceType.LinuxDesktop;\n    }\n\n    setUrls(urls: EnvironmentUrls): void {\n        this.urlsSet = true;\n\n        if (urls.base != null) {\n            this.usingBaseUrl = true;\n            this.apiBaseUrl = urls.base + '/api';\n            this.identityBaseUrl = urls.base + '/identity';\n            this.eventsBaseUrl = urls.base + '/events';\n            return;\n        }\n\n        this.apiBaseUrl = urls.api;\n        this.identityBaseUrl = urls.identity;\n        this.eventsBaseUrl = urls.events;\n\n        // Production\n        if (this.apiBaseUrl == null) {\n            this.apiBaseUrl = 'https://api.bitwarden.com';\n        }\n        if (this.identityBaseUrl == null) {\n            this.identityBaseUrl = 'https://identity.bitwarden.com';\n        }\n        if (this.eventsBaseUrl == null) {\n            this.eventsBaseUrl = 'https://events.bitwarden.com';\n        }\n    }\n\n    // Auth APIs\n\n    async postIdentityToken(request: TokenRequest): Promise<IdentityTokenResponse | IdentityTwoFactorResponse> {\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\n            body: this.qsStringify(request.toIdentityToken(this.platformUtilsService.identityClientId)),\n            credentials: this.getCredentials(),\n            cache: 'no-store',\n            headers: headers,\n            method: 'POST',\n        }));\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        }\n\n        if (responseJson != null) {\n            if (response.status === 200) {\n                return new IdentityTokenResponse(responseJson);\n            } else if (response.status === 400 && responseJson.TwoFactorProviders2 &&\n                Object.keys(responseJson.TwoFactorProviders2).length) {\n                await this.tokenService.clearTwoFactorToken(request.email);\n                return new IdentityTwoFactorResponse(responseJson);\n            }\n        }\n\n        return Promise.reject(new ErrorResponse(responseJson, response.status, true));\n    }\n\n    async refreshIdentityToken(): Promise<any> {\n        try {\n            await this.doRefreshToken();\n        } catch (e) {\n            return Promise.reject(null);\n        }\n    }\n\n    // Account APIs\n\n    async getProfile(): Promise<ProfileResponse> {\n        const r = await this.send('GET', '/accounts/profile', null, true, true);\n        return new ProfileResponse(r);\n    }\n\n    async getUserBilling(): Promise<BillingResponse> {\n        const r = await this.send('GET', '/accounts/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getUserSubscription(): Promise<SubscriptionResponse> {\n        const r = await this.send('GET', '/accounts/subscription', null, true, true);\n        return new SubscriptionResponse(r);\n    }\n\n    async getTaxInfo(): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/accounts/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async putProfile(request: UpdateProfileRequest): Promise<ProfileResponse> {\n        const r = await this.send('PUT', '/accounts/profile', request, true, true);\n        return new ProfileResponse(r);\n    }\n\n    putTaxInfo(request: TaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/accounts/tax', request, true, false);\n    }\n\n    async postPrelogin(request: PreloginRequest): Promise<PreloginResponse> {\n        const r = await this.send('POST', '/accounts/prelogin', request, false, true);\n        return new PreloginResponse(r);\n    }\n\n    postEmailToken(request: EmailTokenRequest): Promise<any> {\n        return this.send('POST', '/accounts/email-token', request, true, false);\n    }\n\n    postEmail(request: EmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/email', request, true, false);\n    }\n\n    postPassword(request: PasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/password', request, true, false);\n    }\n\n    setPassword(request: SetPasswordRequest): Promise<any> {\n        return this.send('POST', '/accounts/set-password', request, true, false);\n    }\n\n    postSecurityStamp(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/security-stamp', request, true, false);\n    }\n\n    deleteAccount(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/accounts', request, true, false);\n    }\n\n    async getAccountRevisionDate(): Promise<number> {\n        const r = await this.send('GET', '/accounts/revision-date', null, true, true);\n        return r as number;\n    }\n\n    postPasswordHint(request: PasswordHintRequest): Promise<any> {\n        return this.send('POST', '/accounts/password-hint', request, false, false);\n    }\n\n    postRegister(request: RegisterRequest): Promise<any> {\n        return this.send('POST', '/accounts/register', request, false, false);\n    }\n\n    async postPremium(data: FormData): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/premium', data, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postIapCheck(request: IapCheckRequest): Promise<any> {\n        return this.send('POST', '/accounts/iap-check', request, true, false);\n    }\n\n    postReinstatePremium(): Promise<any> {\n        return this.send('POST', '/accounts/reinstate-premium', null, true, false);\n    }\n\n    postCancelPremium(): Promise<any> {\n        return this.send('POST', '/accounts/cancel-premium', null, true, false);\n    }\n\n    async postAccountStorage(request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/accounts/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postAccountPayment(request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/accounts/payment', request, true, false);\n    }\n\n    postAccountLicense(data: FormData): Promise<any> {\n        return this.send('POST', '/accounts/license', data, true, false);\n    }\n\n    postAccountKeys(request: KeysRequest): Promise<any> {\n        return this.send('POST', '/accounts/keys', request, true, false);\n    }\n\n    postAccountKey(request: UpdateKeyRequest): Promise<any> {\n        return this.send('POST', '/accounts/key', request, true, false);\n    }\n\n    postAccountVerifyEmail(): Promise<any> {\n        return this.send('POST', '/accounts/verify-email', null, true, false);\n    }\n\n    postAccountVerifyEmailToken(request: VerifyEmailRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-email-token', request, false, false);\n    }\n\n    postAccountVerifyPassword(request: PasswordVerificationRequest): Promise<any> {\n        return this.send('POST', '/accounts/verify-password', request, true, false);\n    }\n\n    postAccountRecoverDelete(request: DeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover', request, false, false);\n    }\n\n    postAccountRecoverDeleteToken(request: VerifyDeleteRecoverRequest): Promise<any> {\n        return this.send('POST', '/accounts/delete-recover-token', request, false, false);\n    }\n\n    postAccountKdf(request: KdfRequest): Promise<any> {\n        return this.send('POST', '/accounts/kdf', request, true, false);\n    }\n\n    async getEnterprisePortalSignInToken(): Promise<string> {\n        const r = await this.send('GET', '/accounts/enterprise-portal-signin-token', null, true, true);\n        return r as string;\n    }\n\n    async deleteSsoUser(organizationId: string): Promise<any> {\n        return this.send('DELETE', '/accounts/sso/' + organizationId, null, true, false);\n    }\n\n    async getSsoUserIdentifier(): Promise<string> {\n        return this.send('GET', '/accounts/sso/user-identifier', null, true, true)\n    }\n\n    // Folder APIs\n\n    async getFolder(id: string): Promise<FolderResponse> {\n        const r = await this.send('GET', '/folders/' + id, null, true, true);\n        return new FolderResponse(r);\n    }\n\n    async postFolder(request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('POST', '/folders', request, true, true);\n        return new FolderResponse(r);\n    }\n\n    async putFolder(id: string, request: FolderRequest): Promise<FolderResponse> {\n        const r = await this.send('PUT', '/folders/' + id, request, true, true);\n        return new FolderResponse(r);\n    }\n\n    deleteFolder(id: string): Promise<any> {\n        return this.send('DELETE', '/folders/' + id, null, true, false);\n    }\n\n    // Cipher APIs\n\n    async getCipher(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id, null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCipherAdmin(id: string): Promise<CipherResponse> {\n        const r = await this.send('GET', '/ciphers/' + id + '/admin', null, true, true);\n        return new CipherResponse(r);\n    }\n\n    async getCiphersOrganization(organizationId: string): Promise<ListResponse<CipherResponse>> {\n        const r = await this.send('GET', '/ciphers/organization-details?organizationId=' + organizationId,\n            null, true, true);\n        return new ListResponse(r, CipherResponse);\n    }\n\n    async postCipher(request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherCreate(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/create', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAdmin(request: CipherCreateRequest): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipher(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id, request, true, true);\n        return new CipherResponse(r);\n    }\n\n    async putCipherAdmin(id: string, request: CipherRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/admin', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipher(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id, null, true, false);\n    }\n\n    deleteCipherAdmin(id: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/admin', null, true, false);\n    }\n\n    deleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers', request, true, false);\n    }\n\n    deleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('DELETE', '/ciphers/admin', request, true, false);\n    }\n\n    putMoveCiphers(request: CipherBulkMoveRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/move', request, true, false);\n    }\n\n    async putShareCipher(id: string, request: CipherShareRequest): Promise<CipherResponse> {\n        const r = await this.send('PUT', '/ciphers/' + id + '/share', request, true, true);\n        return new CipherResponse(r);\n    }\n\n    putShareCiphers(request: CipherBulkShareRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/share', request, true, false);\n    }\n\n    putCipherCollections(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections', request, true, false);\n    }\n\n    putCipherCollectionsAdmin(id: string, request: CipherCollectionsRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/collections-admin', request, true, false);\n    }\n\n    postPurgeCiphers(request: PasswordVerificationRequest, organizationId: string = null): Promise<any> {\n        let path = '/ciphers/purge';\n        if (organizationId != null) {\n            path += '?organizationId=' + organizationId;\n        }\n        return this.send('POST', path, request, true, false);\n    }\n\n    postImportCiphers(request: ImportCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import', request, true, false);\n    }\n\n    postImportOrganizationCiphers(organizationId: string, request: ImportOrganizationCiphersRequest): Promise<any> {\n        return this.send('POST', '/ciphers/import-organization?organizationId=' + organizationId, request, true, false);\n    }\n\n    putDeleteCipher(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete', null, true, false);\n    }\n\n    putDeleteCipherAdmin(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/delete-admin', null, true, false);\n    }\n\n    putDeleteManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete', request, true, false);\n    }\n\n    putDeleteManyCiphersAdmin(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/delete-admin', request, true, false);\n    }\n\n    putRestoreCipher(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/restore', null, true, false);\n    }\n\n    putRestoreCipherAdmin(id: string): Promise<any> {\n        return this.send('PUT', '/ciphers/' + id + '/restore-admin', null, true, false);\n    }\n\n    putRestoreManyCiphers(request: CipherBulkDeleteRequest): Promise<any> {\n        return this.send('PUT', '/ciphers/restore', request, true, false);\n    }\n\n    // Attachments APIs\n\n    async postCipherAttachment(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    async postCipherAttachmentAdmin(id: string, data: FormData): Promise<CipherResponse> {\n        const r = await this.send('POST', '/ciphers/' + id + '/attachment-admin', data, true, true);\n        return new CipherResponse(r);\n    }\n\n    deleteCipherAttachment(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId, null, true, false);\n    }\n\n    deleteCipherAttachmentAdmin(id: string, attachmentId: string): Promise<any> {\n        return this.send('DELETE', '/ciphers/' + id + '/attachment/' + attachmentId + '/admin', null, true, false);\n    }\n\n    postShareCipherAttachment(id: string, attachmentId: string, data: FormData,\n        organizationId: string): Promise<any> {\n        return this.send('POST', '/ciphers/' + id + '/attachment/' +\n            attachmentId + '/share?organizationId=' + organizationId, data, true, false);\n    }\n\n    // Collections APIs\n\n    async getCollectionDetails(organizationId: string, id: string): Promise<CollectionGroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/details',\n            null, true, true);\n        return new CollectionGroupDetailsResponse(r);\n    }\n\n    async getUserCollections(): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollections(organizationId: string): Promise<ListResponse<CollectionResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections', null, true, true);\n        return new ListResponse(r, CollectionResponse);\n    }\n\n    async getCollectionUsers(organizationId: string, id: string): Promise<SelectionReadOnlyResponse[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            null, true, true);\n        return r.map((dr: any) => new SelectionReadOnlyResponse(dr));\n    }\n\n    async postCollection(organizationId: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/collections', request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollection(organizationId: string, id: string, request: CollectionRequest): Promise<CollectionResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id,\n            request, true, true);\n        return new CollectionResponse(r);\n    }\n\n    async putCollectionUsers(organizationId: string, id: string, request: SelectionReadOnlyRequest[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/collections/' + id + '/users',\n            request, true, false);\n    }\n\n    deleteCollection(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/collections/' + id, null, true, false);\n    }\n\n    deleteCollectionUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/collections/' + id + '/user/' + organizationUserId,\n            null, true, false);\n    }\n\n    // Groups APIs\n\n    async getGroupDetails(organizationId: string, id: string): Promise<GroupDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/details',\n            null, true, true);\n        return new GroupDetailsResponse(r);\n    }\n\n    async getGroups(organizationId: string): Promise<ListResponse<GroupResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups', null, true, true);\n        return new ListResponse(r, GroupResponse);\n    }\n\n    async getGroupUsers(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/groups/' + id + '/users',\n            null, true, true);\n        return r;\n    }\n\n    async postGroup(organizationId: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/groups', request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroup(organizationId: string, id: string, request: GroupRequest): Promise<GroupResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id, request, true, true);\n        return new GroupResponse(r);\n    }\n\n    async putGroupUsers(organizationId: string, id: string, request: string[]): Promise<any> {\n        await this.send('PUT', '/organizations/' + organizationId + '/groups/' + id + '/users', request, true, false);\n    }\n\n    deleteGroup(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/groups/' + id, null, true, false);\n    }\n\n    deleteGroupUser(organizationId: string, id: string, organizationUserId: string): Promise<any> {\n        return this.send('DELETE',\n            '/organizations/' + organizationId + '/groups/' + id + '/user/' + organizationUserId, null, true, false);\n    }\n\n    // Policy APIs\n\n    async getPolicy(organizationId: string, type: PolicyType): Promise<PolicyResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/' + type, null, true, true);\n        return new PolicyResponse(r);\n    }\n\n    async getPolicies(organizationId: string): Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies', null, true, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async getPoliciesByToken(organizationId: string, token: string, email: string, organizationUserId: string):\n        Promise<ListResponse<PolicyResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/policies/token?' +\n            'token=' + encodeURIComponent(token) + '&email=' + encodeURIComponent(email) +\n            '&organizationUserId=' + organizationUserId, null, false, true);\n        return new ListResponse(r, PolicyResponse);\n    }\n\n    async putPolicy(organizationId: string, type: PolicyType, request: PolicyRequest): Promise<PolicyResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/policies/' + type, request, true, true);\n        return new PolicyResponse(r);\n    }\n\n    // Organization User APIs\n\n    async getOrganizationUser(organizationId: string, id: string): Promise<OrganizationUserDetailsResponse> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id, null, true, true);\n        return new OrganizationUserDetailsResponse(r);\n    }\n\n    async getOrganizationUserGroups(organizationId: string, id: string): Promise<string[]> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users/' + id + '/groups',\n            null, true, true);\n        return r;\n    }\n\n    async getOrganizationUsers(organizationId: string): Promise<ListResponse<OrganizationUserUserDetailsResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/users', null, true, true);\n        return new ListResponse(r, OrganizationUserUserDetailsResponse);\n    }\n\n    postOrganizationUserInvite(organizationId: string, request: OrganizationUserInviteRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/invite', request, true, false);\n    }\n\n    postOrganizationUserReinvite(organizationId: string, id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/reinvite', null, true, false);\n    }\n\n    postOrganizationUserAccept(organizationId: string, id: string,\n        request: OrganizationUserAcceptRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/accept', request, true, false);\n    }\n\n    postOrganizationUserConfirm(organizationId: string, id: string,\n        request: OrganizationUserConfirmRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/users/' + id + '/confirm',\n            request, true, false);\n    }\n\n    putOrganizationUser(organizationId: string, id: string, request: OrganizationUserUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id, request, true, false);\n    }\n\n    putOrganizationUserGroups(organizationId: string, id: string,\n        request: OrganizationUserUpdateGroupsRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + organizationId + '/users/' + id + '/groups', request, true, false);\n    }\n\n    deleteOrganizationUser(organizationId: string, id: string): Promise<any> {\n        return this.send('DELETE', '/organizations/' + organizationId + '/users/' + id, null, true, false);\n    }\n\n    // Plan APIs\n\n    async getPlans(): Promise<ListResponse<PlanResponse>> {\n        const r = await this.send('GET', '/plans/', null, true, true);\n        return new ListResponse(r, PlanResponse);\n    }\n\n\n    async postImportDirectory(organizationId: string, request: ImportDirectoryRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + organizationId + '/import', request, true, false);\n    }\n\n    // Settings APIs\n\n    async getSettingsDomains(): Promise<DomainsResponse> {\n        const r = await this.send('GET', '/settings/domains', null, true, true);\n        return new DomainsResponse(r);\n    }\n\n    async putSettingsDomains(request: UpdateDomainsRequest): Promise<DomainsResponse> {\n        const r = await this.send('PUT', '/settings/domains', request, true, true);\n        return new DomainsResponse(r);\n    }\n\n    // Sync APIs\n\n    async getSync(): Promise<SyncResponse> {\n        const path = this.isDesktopClient || this.isWebClient ? '/sync?excludeDomains=true' : '/sync';\n        const r = await this.send('GET', path, null, true, true);\n        return new SyncResponse(r);\n    }\n\n    // Two-factor APIs\n\n    async getTwoFactorProviders(): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorOrganizationProviders(organizationId: string): Promise<ListResponse<TwoFactorProviderResponse>> {\n        const r = await this.send('GET', '/organizations/' + organizationId + '/two-factor', null, true, true);\n        return new ListResponse(r, TwoFactorProviderResponse);\n    }\n\n    async getTwoFactorAuthenticator(request: PasswordVerificationRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('POST', '/two-factor/get-authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async getTwoFactorEmail(request: PasswordVerificationRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('POST', '/two-factor/get-email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async getTwoFactorDuo(request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/two-factor/get-duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorOrganizationDuo(organizationId: string,\n        request: PasswordVerificationRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('POST', '/organizations/' + organizationId + '/two-factor/get-duo',\n            request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async getTwoFactorYubiKey(request: PasswordVerificationRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('POST', '/two-factor/get-yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async getTwoFactorU2f(request: PasswordVerificationRequest): Promise<TwoFactorU2fResponse> {\n        const r = await this.send('POST', '/two-factor/get-u2f', request, true, true);\n        return new TwoFactorU2fResponse(r);\n    }\n\n    async getTwoFactorU2fChallenge(request: PasswordVerificationRequest): Promise<ChallengeResponse> {\n        const r = await this.send('POST', '/two-factor/get-u2f-challenge', request, true, true);\n        return new ChallengeResponse(r);\n    }\n\n    async getTwoFactorRecover(request: PasswordVerificationRequest): Promise<TwoFactorRecoverResponse> {\n        const r = await this.send('POST', '/two-factor/get-recover', request, true, true);\n        return new TwoFactorRecoverResponse(r);\n    }\n\n    async putTwoFactorAuthenticator(\n        request: UpdateTwoFactorAuthenticatorRequest): Promise<TwoFactorAuthenticatorResponse> {\n        const r = await this.send('PUT', '/two-factor/authenticator', request, true, true);\n        return new TwoFactorAuthenticatorResponse(r);\n    }\n\n    async putTwoFactorEmail(request: UpdateTwoFactorEmailRequest): Promise<TwoFactorEmailResponse> {\n        const r = await this.send('PUT', '/two-factor/email', request, true, true);\n        return new TwoFactorEmailResponse(r);\n    }\n\n    async putTwoFactorDuo(request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorOrganizationDuo(organizationId: string,\n        request: UpdateTwoFactorDuoRequest): Promise<TwoFactorDuoResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/duo', request, true, true);\n        return new TwoFactorDuoResponse(r);\n    }\n\n    async putTwoFactorYubiKey(request: UpdateTwoFactorYubioOtpRequest): Promise<TwoFactorYubiKeyResponse> {\n        const r = await this.send('PUT', '/two-factor/yubikey', request, true, true);\n        return new TwoFactorYubiKeyResponse(r);\n    }\n\n    async putTwoFactorU2f(request: UpdateTwoFactorU2fRequest): Promise<TwoFactorU2fResponse> {\n        const r = await this.send('PUT', '/two-factor/u2f', request, true, true);\n        return new TwoFactorU2fResponse(r);\n    }\n\n    async deleteTwoFactorU2f(request: UpdateTwoFactorU2fDeleteRequest): Promise<TwoFactorU2fResponse> {\n        const r = await this.send('DELETE', '/two-factor/u2f', request, true, true);\n        return new TwoFactorU2fResponse(r);\n    }\n\n    async putTwoFactorDisable(request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/two-factor/disable', request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    async putTwoFactorOrganizationDisable(organizationId: string,\n        request: TwoFactorProviderRequest): Promise<TwoFactorProviderResponse> {\n        const r = await this.send('PUT', '/organizations/' + organizationId + '/two-factor/disable',\n            request, true, true);\n        return new TwoFactorProviderResponse(r);\n    }\n\n    postTwoFactorRecover(request: TwoFactorRecoveryRequest): Promise<any> {\n        return this.send('POST', '/two-factor/recover', request, false, false);\n    }\n\n    postTwoFactorEmailSetup(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email', request, true, false);\n    }\n\n    postTwoFactorEmail(request: TwoFactorEmailRequest): Promise<any> {\n        return this.send('POST', '/two-factor/send-email-login', request, false, false);\n    }\n\n    // Organization APIs\n\n    async getOrganization(id: string): Promise<OrganizationResponse> {\n        const r = await this.send('GET', '/organizations/' + id, null, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async getOrganizationBilling(id: string): Promise<BillingResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/billing', null, true, true);\n        return new BillingResponse(r);\n    }\n\n    async getOrganizationSubscription(id: string): Promise<OrganizationSubscriptionResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/subscription', null, true, true);\n        return new OrganizationSubscriptionResponse(r);\n    }\n\n    async getOrganizationLicense(id: string, installationId: string): Promise<any> {\n        return this.send('GET', '/organizations/' + id + '/license?installationId=' + installationId,\n            null, true, true);\n    }\n\n    async getOrganizationTaxInfo(id: string): Promise<TaxInfoResponse> {\n        const r = await this.send('GET', '/organizations/' + id + '/tax', null, true, true);\n        return new TaxInfoResponse(r);\n    }\n\n    async postOrganization(request: OrganizationCreateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations', request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganization(id: string, request: OrganizationUpdateRequest): Promise<OrganizationResponse> {\n        const r = await this.send('PUT', '/organizations/' + id, request, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async putOrganizationTaxInfo(id: string, request: OrganizationTaxInfoUpdateRequest): Promise<any> {\n        return this.send('PUT', '/organizations/' + id + '/tax', request, true, false);\n    }\n\n    postLeaveOrganization(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/leave', null, true, false);\n    }\n\n    async postOrganizationLicense(data: FormData): Promise<OrganizationResponse> {\n        const r = await this.send('POST', '/organizations/license', data, true, true);\n        return new OrganizationResponse(r);\n    }\n\n    async postOrganizationLicenseUpdate(id: string, data: FormData): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/license', data, true, false);\n    }\n\n    async postOrganizationApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationRotateApiKey(id: string, request: PasswordVerificationRequest): Promise<ApiKeyResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/rotate-api-key', request, true, true);\n        return new ApiKeyResponse(r);\n    }\n\n    async postOrganizationUpgrade(id: string, request: OrganizationUpgradeRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/upgrade', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationSeat(id: string, request: SeatRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/seat', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    async postOrganizationStorage(id: string, request: StorageRequest): Promise<PaymentResponse> {\n        const r = await this.send('POST', '/organizations/' + id + '/storage', request, true, true);\n        return new PaymentResponse(r);\n    }\n\n    postOrganizationPayment(id: string, request: PaymentRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/payment', request, true, false);\n    }\n\n    postOrganizationVerifyBank(id: string, request: VerifyBankRequest): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/verify-bank', request, true, false);\n    }\n\n    postOrganizationCancel(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/cancel', null, true, false);\n    }\n\n    postOrganizationReinstate(id: string): Promise<any> {\n        return this.send('POST', '/organizations/' + id + '/reinstate', null, true, false);\n    }\n\n    deleteOrganization(id: string, request: PasswordVerificationRequest): Promise<any> {\n        return this.send('DELETE', '/organizations/' + id, request, true, false);\n    }\n\n    // Event APIs\n\n    async getEvents(start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/events', start, end, token), null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsCipher(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/ciphers/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganization(id: string, start: string, end: string,\n        token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET', this.addEventParameters('/organizations/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async getEventsOrganizationUser(organizationId: string, id: string,\n        start: string, end: string, token: string): Promise<ListResponse<EventResponse>> {\n        const r = await this.send('GET',\n            this.addEventParameters('/organizations/' + organizationId + '/users/' + id + '/events', start, end, token),\n            null, true, true);\n        return new ListResponse(r, EventResponse);\n    }\n\n    async postEventsCollect(request: EventRequest[]): Promise<any> {\n        const authHeader = await this.getActiveBearerToken();\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n            'Authorization': 'Bearer ' + authHeader,\n            'Content-Type': 'application/json; charset=utf-8',\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n        const response = await this.fetch(new Request(this.eventsBaseUrl + '/collect', {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: 'POST',\n            body: JSON.stringify(request),\n            headers: headers,\n        }));\n        if (response.status !== 200) {\n            return Promise.reject('Event post failed.');\n        }\n    }\n\n    // User APIs\n\n    async getUserPublicKey(id: string): Promise<UserKeyResponse> {\n        const r = await this.send('GET', '/users/' + id + '/public-key', null, true, true);\n        return new UserKeyResponse(r);\n    }\n\n    // HIBP APIs\n\n    async getHibpBreach(username: string): Promise<BreachAccountResponse[]> {\n        const r = await this.send('GET', '/hibp/breach?username=' + username, null, true, true);\n        return r.map((a: any) => new BreachAccountResponse(a));\n    }\n\n    // Misc\n\n    async postBitPayInvoice(request: BitPayInvoiceRequest): Promise<string> {\n        const r = await this.send('POST', '/bitpay-invoice', request, true, true);\n        return r as string;\n    }\n\n    async postSetupPayment(): Promise<string> {\n        const r = await this.send('POST', '/setup-payment', null, true, true);\n        return r as string;\n    }\n\n    // Helpers\n\n    async getActiveBearerToken(): Promise<string> {\n        let accessToken = await this.tokenService.getToken();\n        if (this.tokenService.tokenNeedsRefresh()) {\n            const tokenResponse = await this.doRefreshToken();\n            accessToken = tokenResponse.accessToken;\n        }\n        return accessToken;\n    }\n\n    fetch(request: Request): Promise<Response> {\n        if (request.method === 'GET') {\n            request.headers.set('Cache-Control', 'no-store');\n            request.headers.set('Pragma', 'no-cache');\n        }\n        return this.nativeFetch(request);\n    }\n\n    nativeFetch(request: Request): Promise<Response> {\n        return fetch(request);\n    }\n\n    async preValidateSso(identifier: string): Promise<boolean> {\n\n        if (identifier == null || identifier === '') {\n            throw new Error('Organization Identifier was not provided.');\n        }\n        const headers = new Headers({\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const path = `/account/prevalidate?domainHint=${encodeURIComponent(identifier)}`;\n        const response = await this.fetch(new Request(this.identityBaseUrl + path, {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'GET',\n        }));\n\n        if (response.status === 200) {\n            return true;\n        } else {\n            const error = await this.handleError(response, false);\n            return Promise.reject(error);\n        }\n    }\n\n    private async send(method: 'GET' | 'POST' | 'PUT' | 'DELETE', path: string, body: any,\n        authed: boolean, hasResponse: boolean): Promise<any> {\n        const headers = new Headers({\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const requestInit: RequestInit = {\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            method: method,\n        };\n\n        if (authed) {\n            const authHeader = await this.getActiveBearerToken();\n            headers.set('Authorization', 'Bearer ' + authHeader);\n        }\n        if (body != null) {\n            if (typeof body === 'string') {\n                requestInit.body = body;\n                headers.set('Content-Type', 'application/x-www-form-urlencoded; charset=utf-8');\n            } else if (typeof body === 'object') {\n                if (body instanceof FormData) {\n                    requestInit.body = body;\n                } else {\n                    headers.set('Content-Type', 'application/json; charset=utf-8');\n                    requestInit.body = JSON.stringify(body);\n                }\n            }\n        }\n        if (hasResponse) {\n            headers.set('Accept', 'application/json');\n        }\n\n        requestInit.headers = headers;\n        const response = await this.fetch(new Request(this.apiBaseUrl + path, requestInit));\n\n        if (hasResponse && response.status === 200) {\n            const responseJson = await response.json();\n            return responseJson;\n        } else if (response.status !== 200) {\n            const error = await this.handleError(response, false);\n            return Promise.reject(error);\n        }\n    }\n\n    private async handleError(response: Response, tokenError: boolean): Promise<ErrorResponse> {\n        if ((tokenError && response.status === 400) || response.status === 401 || response.status === 403) {\n            await this.logoutCallback(true);\n            return null;\n        }\n\n        let responseJson: any = null;\n        if (this.isJsonResponse(response)) {\n            responseJson = await response.json();\n        }\n\n        return new ErrorResponse(responseJson, response.status, tokenError);\n    }\n\n    private async doRefreshToken(): Promise<IdentityTokenResponse> {\n        const refreshToken = await this.tokenService.getRefreshToken();\n        if (refreshToken == null || refreshToken === '') {\n            throw new Error();\n        }\n        const headers = new Headers({\n            'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8',\n            'Accept': 'application/json',\n            'Device-Type': this.deviceType,\n        });\n        if (this.customUserAgent != null) {\n            headers.set('User-Agent', this.customUserAgent);\n        }\n\n        const decodedToken = this.tokenService.decodeToken();\n        const response = await this.fetch(new Request(this.identityBaseUrl + '/connect/token', {\n            body: this.qsStringify({\n                grant_type: 'refresh_token',\n                client_id: decodedToken.client_id,\n                refresh_token: refreshToken,\n            }),\n            cache: 'no-store',\n            credentials: this.getCredentials(),\n            headers: headers,\n            method: 'POST',\n        }));\n\n        if (response.status === 200) {\n            const responseJson = await response.json();\n            const tokenResponse = new IdentityTokenResponse(responseJson);\n            await this.tokenService.setTokens(tokenResponse.accessToken, tokenResponse.refreshToken);\n            return tokenResponse;\n        } else {\n            const error = await this.handleError(response, true);\n            return Promise.reject(error);\n        }\n    }\n\n    private qsStringify(params: any): string {\n        return Object.keys(params).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);\n        }).join('&');\n    }\n\n    private getCredentials(): RequestCredentials {\n        if (this.device !== DeviceType.SafariExtension && (!this.isWebClient || this.usingBaseUrl)) {\n            return 'include';\n        }\n        return undefined;\n    }\n\n    private addEventParameters(base: string, start: string, end: string, token: string) {\n        if (start != null) {\n            base += ('?start=' + start);\n        }\n        if (end != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('end=' + end);\n        }\n        if (token != null) {\n            base += (base.indexOf('?') > -1 ? '&' : '?');\n            base += ('continuationToken=' + token);\n        }\n        return base;\n    }\n\n    private isJsonResponse(response: Response): boolean {\n        const typeHeader = response.headers.get('content-type');\n        return typeHeader != null && typeHeader.indexOf('application/json') > -1;\n    }\n}\n","import { AttachmentResponse } from './attachmentResponse';\nimport { BaseResponse } from './baseResponse';\nimport { PasswordHistoryResponse } from './passwordHistoryResponse';\n\nimport { CardApi } from '../api/cardApi';\nimport { FieldApi } from '../api/fieldApi';\nimport { IdentityApi } from '../api/identityApi';\nimport { LoginApi } from '../api/loginApi';\nimport { SecureNoteApi } from '../api/secureNoteApi';\n\nexport class CipherResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    folderId: string;\n    type: number;\n    name: string;\n    notes: string;\n    fields: FieldApi[];\n    login: LoginApi;\n    card: CardApi;\n    identity: IdentityApi;\n    secureNote: SecureNoteApi;\n    favorite: boolean;\n    edit: boolean;\n    viewPassword: boolean;\n    organizationUseTotp: boolean;\n    revisionDate: string;\n    attachments: AttachmentResponse[];\n    passwordHistory: PasswordHistoryResponse[];\n    collectionIds: string[];\n    deletedDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.folderId = this.getResponseProperty('FolderId') || null;\n        this.type = this.getResponseProperty('Type');\n        this.name = this.getResponseProperty('Name');\n        this.notes = this.getResponseProperty('Notes');\n        this.favorite = this.getResponseProperty('Favorite') || false;\n        this.edit = !!this.getResponseProperty('Edit');\n        if (this.getResponseProperty('ViewPassword') == null) {\n            this.viewPassword = true;\n        } else {\n            this.viewPassword = this.getResponseProperty('ViewPassword');\n        }\n        this.organizationUseTotp = this.getResponseProperty('OrganizationUseTotp');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.deletedDate = this.getResponseProperty('DeletedDate');\n\n        const login = this.getResponseProperty('Login');\n        if (login != null) {\n            this.login = new LoginApi(login);\n        }\n\n        const card = this.getResponseProperty('Card');\n        if (card != null) {\n            this.card = new CardApi(card);\n        }\n\n        const identity = this.getResponseProperty('Identity');\n        if (identity != null) {\n            this.identity = new IdentityApi(identity);\n        }\n\n        const secureNote = this.getResponseProperty('SecureNote');\n        if (secureNote != null) {\n            this.secureNote = new SecureNoteApi(secureNote);\n        }\n\n        const fields = this.getResponseProperty('Fields');\n        if (fields != null) {\n            this.fields = fields.map((f: any) => new FieldApi(f));\n        }\n\n        const attachments = this.getResponseProperty('Attachments');\n        if (attachments != null) {\n            this.attachments = attachments.map((a: any) => new AttachmentResponse(a));\n        }\n\n        const passwordHistory = this.getResponseProperty('PasswordHistory');\n        if (passwordHistory != null) {\n            this.passwordHistory = passwordHistory.map((h: any) => new PasswordHistoryResponse(h));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class CollectionResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class CollectionDetailsResponse extends CollectionResponse {\n    readOnly: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.readOnly = this.getResponseProperty('ReadOnly') || false;\n    }\n}\n\nexport class CollectionGroupDetailsResponse extends CollectionResponse {\n    groups: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const groups = this.getResponseProperty('Groups');\n        if (groups != null) {\n            this.groups = groups.map((g: any) => new SelectionReadOnlyResponse(g));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { GlobalDomainResponse } from './globalDomainResponse';\n\nexport class DomainsResponse extends BaseResponse {\n    equivalentDomains: string[][];\n    globalEquivalentDomains: GlobalDomainResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.equivalentDomains = this.getResponseProperty('EquivalentDomains');\n        const globalEquivalentDomains = this.getResponseProperty('GlobalEquivalentDomains');\n        if (globalEquivalentDomains != null) {\n            this.globalEquivalentDomains = globalEquivalentDomains.map((d: any) => new GlobalDomainResponse(d));\n        } else {\n            this.globalEquivalentDomains = [];\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class FolderResponse extends BaseResponse {\n    id: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.revisionDate = this.getResponseProperty('RevisionDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { PlanResponse } from './planResponse';\n\nimport { PlanType } from '../../enums/planType';\n\nexport class OrganizationResponse extends BaseResponse {\n    id: string;\n    identifier: string;\n    name: string;\n    businessName: string;\n    businessAddress1: string;\n    businessAddress2: string;\n    businessAddress3: string;\n    businessCountry: string;\n    businessTaxNumber: string;\n    billingEmail: string;\n    plan: PlanResponse;\n    planType: PlanType;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb: number;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.identifier = this.getResponseProperty('Identifier');\n        this.name = this.getResponseProperty('Name');\n        this.businessName = this.getResponseProperty('BusinessName');\n        this.businessAddress1 = this.getResponseProperty('BusinessAddress1');\n        this.businessAddress2 = this.getResponseProperty('BusinessAddress2');\n        this.businessAddress3 = this.getResponseProperty('BusinessAddress3');\n        this.businessCountry = this.getResponseProperty('BusinessCountry');\n        this.businessTaxNumber = this.getResponseProperty('BusinessTaxNumber');\n        this.billingEmail = this.getResponseProperty('BillingEmail');\n        const plan = this.getResponseProperty('Plan');\n        this.plan = plan == null ? null : new PlanResponse(plan);\n        this.planType = this.getResponseProperty('PlanType');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n    }\n}\n","import { PlanType } from '../../enums/planType';\nimport { ProductType } from '../../enums/productType';\n\nimport { BaseResponse } from './baseResponse';\n\nexport class PlanResponse extends BaseResponse {\n    type: PlanType;\n    product: ProductType;\n    name: string;\n    isAnnual: boolean;\n    nameLocalizationKey: string;\n    descriptionLocalizationKey: string;\n    canBeUsedByBusiness: boolean;\n    baseSeats: number;\n    baseStorageGb: number;\n    maxCollections: number;\n    maxUsers: number;\n\n    hasAdditionalSeatsOption: boolean;\n    maxAdditionalSeats: number;\n    hasAdditionalStorageOption: boolean;\n    maxAdditionalStorage: number;\n    hasPremiumAccessOption: boolean;\n    trialPeriodDays: number;\n\n    hasSelfHost: boolean;\n    hasPolicies: boolean;\n    hasGroups: boolean;\n    hasDirectory: boolean;\n    hasEvents: boolean;\n    hasTotp: boolean;\n    has2fa: boolean;\n    hasApi: boolean;\n    hasSso: boolean;\n    usersGetPremium: boolean;\n\n    upgradeSortOrder: number;\n    displaySortOrder: number;\n    legacyYear: number;\n    disabled: boolean;\n\n    stripePlanId: string;\n    stripeSeatPlanId: string;\n    stripeStoragePlanId: string;\n    stripePremiumAccessPlanId: string;\n    basePrice: number;\n    seatPrice: number;\n    additionalStoragePricePerGb: number;\n    premiumAccessOptionPrice: number;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.product = this.getResponseProperty('Product');\n        this.name = this.getResponseProperty('Name');\n        this.isAnnual = this.getResponseProperty('IsAnnual');\n        this.nameLocalizationKey = this.getResponseProperty('NameLocalizationKey');\n        this.descriptionLocalizationKey = this.getResponseProperty('DescriptionLocalizationKey');\n        this.canBeUsedByBusiness = this.getResponseProperty('CanBeUsedByBusiness');\n        this.baseSeats = this.getResponseProperty('BaseSeats');\n        this.baseStorageGb = this.getResponseProperty('BaseStorageGb');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxUsers = this.getResponseProperty('MaxUsers');\n        this.hasAdditionalSeatsOption = this.getResponseProperty('HasAdditionalSeatsOption');\n        this.maxAdditionalSeats = this.getResponseProperty('MaxAdditionalSeats');\n        this.hasAdditionalStorageOption = this.getResponseProperty('HasAdditionalStorageOption');\n        this.maxAdditionalStorage = this.getResponseProperty('MaxAdditionalStorage');\n        this.hasPremiumAccessOption = this.getResponseProperty('HasPremiumAccessOption');\n        this.trialPeriodDays = this.getResponseProperty('TrialPeriodDays');\n        this.hasSelfHost = this.getResponseProperty('HasSelfHost');\n        this.hasPolicies = this.getResponseProperty('HasPolicies');\n        this.hasGroups = this.getResponseProperty('HasGroups');\n        this.hasDirectory = this.getResponseProperty('HasDirectory');\n        this.hasEvents = this.getResponseProperty('HasEvents');\n        this.hasTotp = this.getResponseProperty('HasTotp');\n        this.has2fa = this.getResponseProperty('Has2fa');\n        this.hasApi = this.getResponseProperty('HasApi');\n        this.hasSso = this.getResponseProperty('HasSso');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.upgradeSortOrder = this.getResponseProperty('UpgradeSortOrder');\n        this.displaySortOrder = this.getResponseProperty('SortOrder');\n        this.legacyYear = this.getResponseProperty('LegacyYear');\n        this.disabled = this.getResponseProperty('Disabled');\n        this.stripePlanId = this.getResponseProperty('StripePlanId');\n        this.stripeSeatPlanId = this.getResponseProperty('StripeSeatPlanId');\n        this.stripeStoragePlanId = this.getResponseProperty('StripeStoragePlanId');\n        this.stripePremiumAccessPlanId = this.getResponseProperty('StripePremiumAccessPlanId');\n        this.basePrice = this.getResponseProperty('BasePrice');\n        this.seatPrice = this.getResponseProperty('SeatPrice');\n        this.additionalStoragePricePerGb = this.getResponseProperty('AdditionalStoragePricePerGb');\n        this.premiumAccessOptionPrice = this.getResponseProperty('PremiumAccessOptionPrice');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class SubscriptionResponse extends BaseResponse {\n    storageName: string;\n    storageGb: number;\n    maxStorageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    license: any;\n    expiration: string;\n    usingInAppPurchase: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.license = this.getResponseProperty('License');\n        this.expiration = this.getResponseProperty('Expiration');\n        this.usingInAppPurchase = this.getResponseProperty('UsingInAppPurchase');\n        const subscription = this.getResponseProperty('Subscription');\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n    }\n}\n\nexport class BillingSubscriptionResponse extends BaseResponse {\n    trialStartDate: string;\n    trialEndDate: string;\n    periodStartDate: string;\n    periodEndDate: string;\n    cancelledDate: string;\n    cancelAtEndDate: boolean;\n    status: string;\n    cancelled: boolean;\n    items: BillingSubscriptionItemResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.trialEndDate = this.getResponseProperty('TrialStartDate');\n        this.trialEndDate = this.getResponseProperty('TrialEndDate');\n        this.periodStartDate = this.getResponseProperty('PeriodStartDate');\n        this.periodEndDate = this.getResponseProperty('PeriodEndDate');\n        this.cancelledDate = this.getResponseProperty('CancelledDate');\n        this.cancelAtEndDate = this.getResponseProperty('CancelAtEndDate');\n        this.status = this.getResponseProperty('Status');\n        this.cancelled = this.getResponseProperty('Cancelled');\n        const items = this.getResponseProperty('Items');\n        if (items != null) {\n            this.items = items.map((i: any) => new BillingSubscriptionItemResponse(i));\n        }\n    }\n}\n\nexport class BillingSubscriptionItemResponse extends BaseResponse {\n    name: string;\n    amount: number;\n    quantity: number;\n    interval: string;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.amount = this.getResponseProperty('Amount');\n        this.quantity = this.getResponseProperty('Quantity');\n        this.interval = this.getResponseProperty('Interval');\n    }\n}\n\nexport class BillingSubscriptionUpcomingInvoiceResponse extends BaseResponse {\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PolicyType } from '../../enums/policyType';\n\nexport class PolicyResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    type: PolicyType;\n    data: any;\n    enabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.type = this.getResponseProperty('Type');\n        this.data = this.getResponseProperty('Data');\n        this.enabled = this.getResponseProperty('Enabled');\n    }\n}\n","import { Utils } from '../misc/utils';\n\nimport { AppIdService as AppIdServiceAbstraction } from '../abstractions/appId.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class AppIdService implements AppIdServiceAbstraction {\n    constructor(private storageService: StorageService) {\n    }\n\n    getAppId(): Promise<string> {\n        return this.makeAndGetAppId('appId');\n    }\n\n    getAnonymousAppId(): Promise<string> {\n        return this.makeAndGetAppId('anonymousAppId');\n    }\n\n    private async makeAndGetAppId(key: string) {\n        const existingId = await this.storageService.get<string>(key);\n        if (existingId != null) {\n            return existingId;\n        }\n\n        const guid = Utils.newGuid();\n        await this.storageService.save(key, guid);\n        return guid;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { AuditService as AuditServiceAbstraction } from '../abstractions/audit.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\n\nimport { throttle } from '../misc/throttle';\nimport { Utils } from '../misc/utils';\n\nimport { BreachAccountResponse } from '../models/response/breachAccountResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nconst PwnedPasswordsApi = 'https://api.pwnedpasswords.com/range/';\n\nexport class AuditService implements AuditServiceAbstraction {\n    constructor(private cryptoFunctionService: CryptoFunctionService, private apiService: ApiService) { }\n\n    @throttle(100, () => 'passwordLeaked')\n    async passwordLeaked(password: string): Promise<number> {\n        const hashBytes = await this.cryptoFunctionService.hash(password, 'sha1');\n        const hash = Utils.fromBufferToHex(hashBytes).toUpperCase();\n        const hashStart = hash.substr(0, 5);\n        const hashEnding = hash.substr(5);\n\n        const response = await this.apiService.nativeFetch(new Request(PwnedPasswordsApi + hashStart));\n        const leakedHashes = await response.text();\n        const match = leakedHashes.split(/\\r?\\n/).find((v) => {\n            return v.split(':')[0] === hashEnding;\n        });\n\n        return match != null ? parseInt(match.split(':')[1], 10) : 0;\n    }\n\n    async breachedAccounts(username: string): Promise<BreachAccountResponse[]> {\n        try {\n            return await this.apiService.getHibpBreach(username);\n        } catch (e) {\n            const error = e as ErrorResponse;\n            if (error.statusCode === 404) {\n                return [];\n            }\n            throw new Error();\n        }\n    }\n}\n","import { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nimport { CipherData } from '../models/data/cipherData';\n\nimport { Attachment } from '../models/domain/attachment';\nimport { Card } from '../models/domain/card';\nimport { Cipher } from '../models/domain/cipher';\nimport { CipherString } from '../models/domain/cipherString';\nimport Domain from '../models/domain/domainBase';\nimport { Field } from '../models/domain/field';\nimport { Identity } from '../models/domain/identity';\nimport { Login } from '../models/domain/login';\nimport { LoginUri } from '../models/domain/loginUri';\nimport { Password } from '../models/domain/password';\nimport { SecureNote } from '../models/domain/secureNote';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nimport { CipherBulkDeleteRequest } from '../models/request/cipherBulkDeleteRequest';\nimport { CipherBulkMoveRequest } from '../models/request/cipherBulkMoveRequest';\nimport { CipherBulkRestoreRequest } from '../models/request/cipherBulkRestoreRequest';\nimport { CipherBulkShareRequest } from '../models/request/cipherBulkShareRequest';\nimport { CipherCollectionsRequest } from '../models/request/cipherCollectionsRequest';\nimport { CipherCreateRequest } from '../models/request/cipherCreateRequest';\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CipherShareRequest } from '../models/request/cipherShareRequest';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { ErrorResponse } from '../models/response/errorResponse';\n\nimport { AttachmentView } from '../models/view/attachmentView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FieldView } from '../models/view/fieldView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { View } from '../models/view/view';\n\nimport { SortedCiphersCache } from '../models/domain/sortedCiphersCache';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService as CipherServiceAbstraction } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    ciphersPrefix: 'ciphers_',\n    localData: 'sitesLocalData',\n    neverDomains: 'neverDomains',\n};\n\nconst DomainMatchBlacklist = new Map<string, Set<string>>([\n    ['google.com', new Set(['script.google.com'])],\n]);\n\nexport class CipherService implements CipherServiceAbstraction {\n    // tslint:disable-next-line\n    _decryptedCipherCache: CipherView[];\n\n    private sortedCiphersCache: SortedCiphersCache = new SortedCiphersCache(this.sortCiphersByLastUsed);\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private settingsService: SettingsService, private apiService: ApiService,\n        private storageService: StorageService, private i18nService: I18nService,\n        private searchService: () => SearchService) {\n    }\n\n    get decryptedCipherCache() {\n        return this._decryptedCipherCache;\n    }\n    set decryptedCipherCache(value: CipherView[]) {\n        this._decryptedCipherCache = value;\n        if (this.searchService != null) {\n            if (value == null) {\n                this.searchService().clearIndex();\n            } else {\n                this.searchService().indexCiphers();\n            }\n        }\n    }\n\n    clearCache(): void {\n        this.decryptedCipherCache = null;\n        this.sortedCiphersCache.clear();\n    }\n\n    async encrypt(model: CipherView, key?: SymmetricCryptoKey, originalCipher: Cipher = null): Promise<Cipher> {\n        // Adjust password history\n        if (model.id != null) {\n            if (originalCipher == null) {\n                originalCipher = await this.get(model.id);\n            }\n            if (originalCipher != null) {\n                const existingCipher = await originalCipher.decrypt();\n                model.passwordHistory = existingCipher.passwordHistory || [];\n                if (model.type === CipherType.Login && existingCipher.type === CipherType.Login) {\n                    if (existingCipher.login.password != null && existingCipher.login.password !== '' &&\n                        existingCipher.login.password !== model.login.password) {\n                        const ph = new PasswordHistoryView();\n                        ph.password = existingCipher.login.password;\n                        ph.lastUsedDate = model.login.passwordRevisionDate = new Date();\n                        model.passwordHistory.splice(0, 0, ph);\n                    } else {\n                        model.login.passwordRevisionDate = existingCipher.login.passwordRevisionDate;\n                    }\n                }\n                if (existingCipher.hasFields) {\n                    const existingHiddenFields = existingCipher.fields.filter((f) => f.type === FieldType.Hidden &&\n                        f.name != null && f.name !== '' && f.value != null && f.value !== '');\n                    const hiddenFields = model.fields == null ? [] :\n                        model.fields.filter((f) => f.type === FieldType.Hidden && f.name != null && f.name !== '');\n                    existingHiddenFields.forEach((ef) => {\n                        const matchedField = hiddenFields.find((f) => f.name === ef.name);\n                        if (matchedField == null || matchedField.value !== ef.value) {\n                            const ph = new PasswordHistoryView();\n                            ph.password = ef.name + ': ' + ef.value;\n                            ph.lastUsedDate = new Date();\n                            model.passwordHistory.splice(0, 0, ph);\n                        }\n                    });\n                }\n            }\n            if (model.passwordHistory != null && model.passwordHistory.length === 0) {\n                model.passwordHistory = null;\n            } else if (model.passwordHistory != null && model.passwordHistory.length > 5) {\n                // only save last 5 history\n                model.passwordHistory = model.passwordHistory.slice(0, 5);\n            }\n        }\n\n        const cipher = new Cipher();\n        cipher.id = model.id;\n        cipher.folderId = model.folderId;\n        cipher.favorite = model.favorite;\n        cipher.organizationId = model.organizationId;\n        cipher.type = model.type;\n        cipher.collectionIds = model.collectionIds;\n\n        if (key == null && cipher.organizationId != null) {\n            key = await this.cryptoService.getOrgKey(cipher.organizationId);\n            if (key == null) {\n                throw new Error('Cannot encrypt cipher for organization. No key.');\n            }\n        }\n        await Promise.all([\n            this.encryptObjProperty(model, cipher, {\n                name: null,\n                notes: null,\n            }, key),\n            this.encryptCipherData(cipher, model, key),\n            this.encryptFields(model.fields, key).then((fields) => {\n                cipher.fields = fields;\n            }),\n            this.encryptPasswordHistories(model.passwordHistory, key).then((ph) => {\n                cipher.passwordHistory = ph;\n            }),\n            this.encryptAttachments(model.attachments, key).then((attachments) => {\n                cipher.attachments = attachments;\n            }),\n        ]);\n\n        return cipher;\n    }\n\n    async encryptAttachments(attachmentsModel: AttachmentView[], key: SymmetricCryptoKey): Promise<Attachment[]> {\n        if (attachmentsModel == null || attachmentsModel.length === 0) {\n            return null;\n        }\n\n        const promises: Promise<any>[] = [];\n        const encAttachments: Attachment[] = [];\n        attachmentsModel.forEach(async (model) => {\n            const attachment = new Attachment();\n            attachment.id = model.id;\n            attachment.size = model.size;\n            attachment.sizeName = model.sizeName;\n            attachment.url = model.url;\n            const promise = this.encryptObjProperty(model, attachment, {\n                fileName: null,\n            }, key).then(async () => {\n                if (model.key != null) {\n                    attachment.key = await this.cryptoService.encrypt(model.key.key, key);\n                }\n                encAttachments.push(attachment);\n            });\n            promises.push(promise);\n        });\n\n        await Promise.all(promises);\n        return encAttachments;\n    }\n\n    async encryptFields(fieldsModel: FieldView[], key: SymmetricCryptoKey): Promise<Field[]> {\n        if (!fieldsModel || !fieldsModel.length) {\n            return null;\n        }\n\n        const self = this;\n        const encFields: Field[] = [];\n        await fieldsModel.reduce((promise, field) => {\n            return promise.then(() => {\n                return self.encryptField(field, key);\n            }).then((encField: Field) => {\n                encFields.push(encField);\n            });\n        }, Promise.resolve());\n\n        return encFields;\n    }\n\n    async encryptField(fieldModel: FieldView, key: SymmetricCryptoKey): Promise<Field> {\n        const field = new Field();\n        field.type = fieldModel.type;\n        // normalize boolean type field values\n        if (fieldModel.type === FieldType.Boolean && fieldModel.value !== 'true') {\n            fieldModel.value = 'false';\n        }\n\n        await this.encryptObjProperty(fieldModel, field, {\n            name: null,\n            value: null,\n        }, key);\n\n        return field;\n    }\n\n    async encryptPasswordHistories(phModels: PasswordHistoryView[], key: SymmetricCryptoKey): Promise<Password[]> {\n        if (!phModels || !phModels.length) {\n            return null;\n        }\n\n        const self = this;\n        const encPhs: Password[] = [];\n        await phModels.reduce((promise, ph) => {\n            return promise.then(() => {\n                return self.encryptPasswordHistory(ph, key);\n            }).then((encPh: Password) => {\n                encPhs.push(encPh);\n            });\n        }, Promise.resolve());\n\n        return encPhs;\n    }\n\n    async encryptPasswordHistory(phModel: PasswordHistoryView, key: SymmetricCryptoKey): Promise<Password> {\n        const ph = new Password();\n        ph.lastUsedDate = phModel.lastUsedDate;\n\n        await this.encryptObjProperty(phModel, ph, {\n            password: null,\n        }, key);\n\n        return ph;\n    }\n\n    async get(id: string): Promise<Cipher> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null || !ciphers.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Cipher(ciphers[id], false, localData ? localData[id] : null);\n    }\n\n    async getAll(): Promise<Cipher[]> {\n        const userId = await this.userService.getUserId();\n        const localData = await this.storageService.get<any>(Keys.localData);\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        const response: Cipher[] = [];\n        for (const id in ciphers) {\n            if (ciphers.hasOwnProperty(id)) {\n                response.push(new Cipher(ciphers[id], false, localData ? localData[id] : null));\n            }\n        }\n        return response;\n    }\n\n    @sequentialize(() => 'getAllDecrypted')\n    async getAllDecrypted(): Promise<CipherView[]> {\n        if (this.decryptedCipherCache != null) {\n            return this.decryptedCipherCache;\n        }\n\n        const decCiphers: CipherView[] = [];\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const promises: any[] = [];\n        const ciphers = await this.getAll();\n        ciphers.forEach((cipher) => {\n            promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n        });\n\n        await Promise.all(promises);\n        decCiphers.sort(this.getLocaleSortingFunction());\n        this.decryptedCipherCache = decCiphers;\n        return this.decryptedCipherCache;\n    }\n\n    async getAllDecryptedForGrouping(groupingId: string, folder: boolean = true): Promise<CipherView[]> {\n        const ciphers = await this.getAllDecrypted();\n\n        return ciphers.filter((cipher) => {\n            if (cipher.isDeleted) {\n                return false;\n            }\n            if (folder && cipher.folderId === groupingId) {\n                return true;\n            } else if (!folder && cipher.collectionIds != null && cipher.collectionIds.indexOf(groupingId) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n\n    async getAllDecryptedForUrl(url: string, includeOtherTypes?: CipherType[]): Promise<CipherView[]> {\n        if (url == null && includeOtherTypes == null) {\n            return Promise.resolve([]);\n        }\n\n        const domain = Utils.getDomain(url);\n        const eqDomainsPromise = domain == null ? Promise.resolve([]) :\n            this.settingsService.getEquivalentDomains().then((eqDomains: any[][]) => {\n                let matches: any[] = [];\n                eqDomains.forEach((eqDomain) => {\n                    if (eqDomain.length && eqDomain.indexOf(domain) >= 0) {\n                        matches = matches.concat(eqDomain);\n                    }\n                });\n\n                if (!matches.length) {\n                    matches.push(domain);\n                }\n\n                return matches;\n            });\n\n        const result = await Promise.all([eqDomainsPromise, this.getAllDecrypted()]);\n        const matchingDomains = result[0];\n        const ciphers = result[1];\n\n        let defaultMatch = await this.storageService.get<UriMatchType>(ConstantsService.defaultUriMatch);\n        if (defaultMatch == null) {\n            defaultMatch = UriMatchType.Domain;\n        }\n\n        return ciphers.filter((cipher) => {\n            if (cipher.deletedDate != null) {\n                return false;\n            }\n            if (includeOtherTypes != null && includeOtherTypes.indexOf(cipher.type) > -1) {\n                return true;\n            }\n\n            if (url != null && cipher.type === CipherType.Login && cipher.login.uris != null) {\n                for (let i = 0; i < cipher.login.uris.length; i++) {\n                    const u = cipher.login.uris[i];\n                    if (u.uri == null) {\n                        continue;\n                    }\n\n                    const match = u.match == null ? defaultMatch : u.match;\n                    switch (match) {\n                        case UriMatchType.Domain:\n                            if (domain != null && u.domain != null && matchingDomains.indexOf(u.domain) > -1) {\n                                if (DomainMatchBlacklist.has(u.domain)) {\n                                    const domainUrlHost = Utils.getHost(url);\n                                    if (!DomainMatchBlacklist.get(u.domain).has(domainUrlHost)) {\n                                        return true;\n                                    }\n                                } else {\n                                    return true;\n                                }\n                            }\n                            break;\n                        case UriMatchType.Host:\n                            const urlHost = Utils.getHost(url);\n                            if (urlHost != null && urlHost === Utils.getHost(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.Exact:\n                            if (url === u.uri) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.StartsWith:\n                            if (url.startsWith(u.uri)) {\n                                return true;\n                            }\n                            break;\n                        case UriMatchType.RegularExpression:\n                            try {\n                                const regex = new RegExp(u.uri, 'i');\n                                if (regex.test(url)) {\n                                    return true;\n                                }\n                            } catch { }\n                            break;\n                        case UriMatchType.Never:\n                        default:\n                            break;\n                    }\n                }\n            }\n\n            return false;\n        });\n    }\n\n    async getAllFromApiForOrganization(organizationId: string): Promise<CipherView[]> {\n        const ciphers = await this.apiService.getCiphersOrganization(organizationId);\n        if (ciphers != null && ciphers.data != null && ciphers.data.length) {\n            const decCiphers: CipherView[] = [];\n            const promises: any[] = [];\n            ciphers.data.forEach((r) => {\n                const data = new CipherData(r);\n                const cipher = new Cipher(data);\n                promises.push(cipher.decrypt().then((c) => decCiphers.push(c)));\n            });\n            await Promise.all(promises);\n            decCiphers.sort(this.getLocaleSortingFunction());\n            return decCiphers;\n        } else {\n            return [];\n        }\n    }\n\n    async getLastUsedForUrl(url: string): Promise<CipherView> {\n        return this.getCipherForUrl(url, true);\n    }\n\n    async getNextCipherForUrl(url: string): Promise<CipherView> {\n        return this.getCipherForUrl(url, false);\n    }\n\n    async updateLastUsedDate(id: string): Promise<void> {\n        let ciphersLocalData = await this.storageService.get<any>(Keys.localData);\n        if (!ciphersLocalData) {\n            ciphersLocalData = {};\n        }\n\n        if (ciphersLocalData[id]) {\n            ciphersLocalData[id].lastUsedDate = new Date().getTime();\n        } else {\n            ciphersLocalData[id] = {\n                lastUsedDate: new Date().getTime(),\n            };\n        }\n\n        await this.storageService.save(Keys.localData, ciphersLocalData);\n\n        if (this.decryptedCipherCache == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.decryptedCipherCache.length; i++) {\n            const cached = this.decryptedCipherCache[i];\n            if (cached.id === id) {\n                cached.localData = ciphersLocalData[id];\n                break;\n            }\n        }\n    }\n\n    async saveNeverDomain(domain: string): Promise<void> {\n        if (domain == null) {\n            return;\n        }\n\n        let domains = await this.storageService.get<{ [id: string]: any; }>(Keys.neverDomains);\n        if (!domains) {\n            domains = {};\n        }\n        domains[domain] = null;\n        await this.storageService.save(Keys.neverDomains, domains);\n    }\n\n    async saveWithServer(cipher: Cipher): Promise<any> {\n        let response: CipherResponse;\n        if (cipher.id == null) {\n            if (cipher.collectionIds != null) {\n                const request = new CipherCreateRequest(cipher);\n                response = await this.apiService.postCipherCreate(request);\n            } else {\n                const request = new CipherRequest(cipher);\n                response = await this.apiService.postCipher(request);\n            }\n            cipher.id = response.id;\n        } else {\n            const request = new CipherRequest(cipher);\n            response = await this.apiService.putCipher(cipher.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, cipher.collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareWithServer(cipher: CipherView, organizationId: string, collectionIds: string[]): Promise<any> {\n        const attachmentPromises: Promise<any>[] = [];\n        if (cipher.attachments != null) {\n            cipher.attachments.forEach((attachment) => {\n                if (attachment.key == null) {\n                    attachmentPromises.push(this.shareAttachmentWithServer(attachment, cipher.id, organizationId));\n                }\n            });\n        }\n        await Promise.all(attachmentPromises);\n\n        cipher.organizationId = organizationId;\n        cipher.collectionIds = collectionIds;\n        const encCipher = await this.encrypt(cipher);\n        const request = new CipherShareRequest(encCipher);\n        const response = await this.apiService.putShareCipher(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = new CipherData(response, userId, collectionIds);\n        await this.upsert(data);\n    }\n\n    async shareManyWithServer(ciphers: CipherView[], organizationId: string, collectionIds: string[]): Promise<any> {\n        const promises: Promise<any>[] = [];\n        const encCiphers: Cipher[] = [];\n        for (const cipher of ciphers) {\n            cipher.organizationId = organizationId;\n            cipher.collectionIds = collectionIds;\n            promises.push(this.encrypt(cipher).then((c) => {\n                encCiphers.push(c);\n            }));\n        }\n        await Promise.all(promises);\n        const request = new CipherBulkShareRequest(encCiphers, collectionIds);\n        await this.apiService.putShareCiphers(request);\n        const userId = await this.userService.getUserId();\n        await this.upsert(encCiphers.map((c) => c.toCipherData(userId)));\n    }\n\n    saveAttachmentWithServer(cipher: Cipher, unencryptedFile: any, admin = false): Promise<Cipher> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsArrayBuffer(unencryptedFile);\n            reader.onload = async (evt: any) => {\n                try {\n                    const cData = await this.saveAttachmentRawWithServer(cipher,\n                        unencryptedFile.name, evt.target.result, admin);\n                    resolve(cData);\n                } catch (e) {\n                    reject(e);\n                }\n            };\n            reader.onerror = (evt) => {\n                reject('Error reading file.');\n            };\n        });\n    }\n\n    async saveAttachmentRawWithServer(cipher: Cipher, filename: string,\n        data: ArrayBuffer, admin = false): Promise<Cipher> {\n        const key = await this.cryptoService.getOrgKey(cipher.organizationId);\n        const encFileName = await this.cryptoService.encrypt(filename, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(data, dataEncKey[0]);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData], { type: 'application/octet-stream' });\n            fd.append('key', dataEncKey[1].encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', dataEncKey[1].encryptedString);\n                fd.append('data', Buffer.from(encData) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        let response: CipherResponse;\n        try {\n            if (admin) {\n                response = await this.apiService.postCipherAttachmentAdmin(cipher.id, fd);\n            } else {\n                response = await this.apiService.postCipherAttachment(cipher.id, fd);\n            }\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n\n        const userId = await this.userService.getUserId();\n        const cData = new CipherData(response, userId, cipher.collectionIds);\n        if (!admin) {\n            await this.upsert(cData);\n        }\n        return new Cipher(cData);\n    }\n\n    async saveCollectionsWithServer(cipher: Cipher): Promise<any> {\n        const request = new CipherCollectionsRequest(cipher.collectionIds);\n        await this.apiService.putCipherCollections(cipher.id, request);\n        const userId = await this.userService.getUserId();\n        const data = cipher.toCipherData(userId);\n        await this.upsert(data);\n    }\n\n    async upsert(cipher: CipherData | CipherData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        if (cipher instanceof CipherData) {\n            const c = cipher as CipherData;\n            ciphers[c.id] = c;\n        } else {\n            (cipher as CipherData[]).forEach((c) => {\n                ciphers[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async replace(ciphers: { [id: string]: CipherData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.ciphersPrefix + userId);\n        this.clearCache();\n    }\n\n    async moveManyWithServer(ids: string[], folderId: string): Promise<any> {\n        await this.apiService.putMoveCiphers(new CipherBulkMoveRequest(ids, folderId));\n\n        const userId = await this.userService.getUserId();\n        let ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            ciphers = {};\n        }\n\n        ids.forEach((id) => {\n            if (ciphers.hasOwnProperty(id)) {\n                ciphers[id].folderId = folderId;\n            }\n        });\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (ciphers[id] == null) {\n                return;\n            }\n            delete ciphers[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete ciphers[i];\n            });\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteCipher(id);\n        await this.delete(id);\n    }\n\n    async deleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.deleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.delete(ids);\n    }\n\n    async deleteAttachment(id: string, attachmentId: string): Promise<void> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n\n        if (ciphers == null || !ciphers.hasOwnProperty(id) || ciphers[id].attachments == null) {\n            return;\n        }\n\n        for (let i = 0; i < ciphers[id].attachments.length; i++) {\n            if (ciphers[id].attachments[i].id === attachmentId) {\n                ciphers[id].attachments.splice(i, 1);\n            }\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async deleteAttachmentWithServer(id: string, attachmentId: string): Promise<void> {\n        try {\n            await this.apiService.deleteCipherAttachment(id, attachmentId);\n        } catch (e) {\n            return Promise.reject((e as ErrorResponse).getSingleMessage());\n        }\n        await this.deleteAttachment(id, attachmentId);\n    }\n\n    sortCiphersByLastUsed(a: CipherView, b: CipherView): number {\n        const aLastUsed = a.localData && a.localData.lastUsedDate ? a.localData.lastUsedDate as number : null;\n        const bLastUsed = b.localData && b.localData.lastUsedDate ? b.localData.lastUsedDate as number : null;\n\n        const bothNotNull = aLastUsed != null && bLastUsed != null;\n        if (bothNotNull && aLastUsed < bLastUsed) {\n            return 1;\n        }\n        if (aLastUsed != null && bLastUsed == null) {\n            return -1;\n        }\n\n        if (bothNotNull && aLastUsed > bLastUsed) {\n            return -1;\n        }\n        if (bLastUsed != null && aLastUsed == null) {\n            return 1;\n        }\n\n        return 0;\n    }\n\n    sortCiphersByLastUsedThenName(a: CipherView, b: CipherView): number {\n        const result = this.sortCiphersByLastUsed(a, b);\n        if (result !== 0) {\n            return result;\n        }\n\n        return this.getLocaleSortingFunction()(a, b);\n    }\n\n    getLocaleSortingFunction(): (a: CipherView, b: CipherView) => number {\n        return (a, b) => {\n            let aName = a.name;\n            let bName = b.name;\n\n            if (aName == null && bName != null) {\n                return -1;\n            }\n            if (aName != null && bName == null) {\n                return 1;\n            }\n            if (aName == null && bName == null) {\n                return 0;\n            }\n\n            const result = this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n\n            if (result !== 0 || a.type !== CipherType.Login || b.type !== CipherType.Login) {\n                return result;\n            }\n\n            if (a.login.username != null) {\n                aName += a.login.username;\n            }\n\n            if (b.login.username != null) {\n                bName += b.login.username;\n            }\n\n            return this.i18nService.collator ? this.i18nService.collator.compare(aName, bName) :\n                aName.localeCompare(bName);\n        };\n    }\n\n    async softDelete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const setDeletedDate = (cipherId: string) => {\n            if (ciphers[cipherId] == null) {\n                return;\n            }\n            ciphers[cipherId].deletedDate = new Date().toISOString();\n        };\n\n        if (typeof id === 'string') {\n            setDeletedDate(id);\n        } else {\n            (id as string[]).forEach(setDeletedDate);\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async softDeleteWithServer(id: string): Promise<any> {\n        await this.apiService.putDeleteCipher(id);\n        await this.softDelete(id);\n    }\n\n    async softDeleteManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.putDeleteManyCiphers(new CipherBulkDeleteRequest(ids));\n        await this.softDelete(ids);\n    }\n\n    async restore(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(\n            Keys.ciphersPrefix + userId);\n        if (ciphers == null) {\n            return;\n        }\n\n        const clearDeletedDate = (cipherId: string) => {\n            if (ciphers[cipherId] == null) {\n                return;\n            }\n            ciphers[cipherId].deletedDate = null;\n        };\n\n        if (typeof id === 'string') {\n            clearDeletedDate(id);\n        } else {\n            (id as string[]).forEach(clearDeletedDate);\n        }\n\n        await this.storageService.save(Keys.ciphersPrefix + userId, ciphers);\n        this.decryptedCipherCache = null;\n    }\n\n    async restoreWithServer(id: string): Promise<any> {\n        await this.apiService.putRestoreCipher(id);\n        await this.restore(id);\n    }\n\n    async restoreManyWithServer(ids: string[]): Promise<any> {\n        await this.apiService.putRestoreManyCiphers(new CipherBulkRestoreRequest(ids));\n        await this.restore(ids);\n    }\n\n    // Helpers\n\n    private async shareAttachmentWithServer(attachmentView: AttachmentView, cipherId: string,\n        organizationId: string): Promise<any> {\n        const attachmentResponse = await this.apiService.nativeFetch(\n            new Request(attachmentView.url, { cache: 'no-store' }));\n        if (attachmentResponse.status !== 200) {\n            throw Error('Failed to download attachment: ' + attachmentResponse.status.toString());\n        }\n\n        const buf = await attachmentResponse.arrayBuffer();\n        const decBuf = await this.cryptoService.decryptFromBytes(buf, null);\n        const key = await this.cryptoService.getOrgKey(organizationId);\n        const encFileName = await this.cryptoService.encrypt(attachmentView.fileName, key);\n\n        const dataEncKey = await this.cryptoService.makeEncKey(key);\n        const encData = await this.cryptoService.encryptToBytes(decBuf, dataEncKey[0]);\n\n        const fd = new FormData();\n        try {\n            const blob = new Blob([encData], { type: 'application/octet-stream' });\n            fd.append('key', dataEncKey[1].encryptedString);\n            fd.append('data', blob, encFileName.encryptedString);\n        } catch (e) {\n            if (Utils.isNode && !Utils.isBrowser) {\n                fd.append('key', dataEncKey[1].encryptedString);\n                fd.append('data', Buffer.from(encData) as any, {\n                    filepath: encFileName.encryptedString,\n                    contentType: 'application/octet-stream',\n                } as any);\n            } else {\n                throw e;\n            }\n        }\n\n        try {\n            await this.apiService.postShareCipherAttachment(cipherId, attachmentView.id, fd, organizationId);\n        } catch (e) {\n            throw new Error((e as ErrorResponse).getSingleMessage());\n        }\n    }\n\n    private async encryptObjProperty<V extends View, D extends Domain>(model: V, obj: D,\n        map: any, key: SymmetricCryptoKey): Promise<void> {\n        const promises = [];\n        const self = this;\n\n        for (const prop in map) {\n            if (!map.hasOwnProperty(prop)) {\n                continue;\n            }\n\n            // tslint:disable-next-line\n            (function (theProp, theObj) {\n                const p = Promise.resolve().then(() => {\n                    const modelProp = (model as any)[(map[theProp] || theProp)];\n                    if (modelProp && modelProp !== '') {\n                        return self.cryptoService.encrypt(modelProp, key);\n                    }\n                    return null;\n                }).then((val: CipherString) => {\n                    (theObj as any)[theProp] = val;\n                });\n                promises.push(p);\n            })(prop, obj);\n        }\n\n        await Promise.all(promises);\n    }\n\n    private async encryptCipherData(cipher: Cipher, model: CipherView, key: SymmetricCryptoKey) {\n        switch (cipher.type) {\n            case CipherType.Login:\n                cipher.login = new Login();\n                cipher.login.passwordRevisionDate = model.login.passwordRevisionDate;\n                await this.encryptObjProperty(model.login, cipher.login, {\n                    username: null,\n                    password: null,\n                    totp: null,\n                }, key);\n\n                if (model.login.uris != null) {\n                    cipher.login.uris = [];\n                    for (let i = 0; i < model.login.uris.length; i++) {\n                        const loginUri = new LoginUri();\n                        loginUri.match = model.login.uris[i].match;\n                        await this.encryptObjProperty(model.login.uris[i], loginUri, {\n                            uri: null,\n                        }, key);\n                        cipher.login.uris.push(loginUri);\n                    }\n                }\n                return;\n            case CipherType.SecureNote:\n                cipher.secureNote = new SecureNote();\n                cipher.secureNote.type = model.secureNote.type;\n                return;\n            case CipherType.Card:\n                cipher.card = new Card();\n                await this.encryptObjProperty(model.card, cipher.card, {\n                    cardholderName: null,\n                    brand: null,\n                    number: null,\n                    expMonth: null,\n                    expYear: null,\n                    code: null,\n                }, key);\n                return;\n            case CipherType.Identity:\n                cipher.identity = new Identity();\n                await this.encryptObjProperty(model.identity, cipher.identity, {\n                    title: null,\n                    firstName: null,\n                    middleName: null,\n                    lastName: null,\n                    address1: null,\n                    address2: null,\n                    address3: null,\n                    city: null,\n                    state: null,\n                    postalCode: null,\n                    country: null,\n                    company: null,\n                    email: null,\n                    phone: null,\n                    ssn: null,\n                    username: null,\n                    passportNumber: null,\n                    licenseNumber: null,\n                }, key);\n                return;\n            default:\n                throw new Error('Unknown cipher type.');\n        }\n    }\n\n    private async getCipherForUrl(url: string, lastUsed: boolean): Promise<CipherView> {\n        if (!this.sortedCiphersCache.isCached(url)) {\n            const ciphers = await this.getAllDecryptedForUrl(url);\n            if (!ciphers) {\n                return null;\n            }\n            this.sortedCiphersCache.addCiphers(url, ciphers);\n        }\n\n        return lastUsed ? this.sortedCiphersCache.getLastUsed(url) : this.sortedCiphersCache.getNext(url);\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will prevent multiple 'active' calls as the same time\n *\n * If a promise was returned from a previous call to this function, that hasn't yet resolved it will\n * be returned, instead of calling the original function again\n *\n * Results are not cached, once the promise has returned, the next call will result in a fresh call\n *\n * Read more at https://github.com/bitwarden/jslib/pull/7\n */\nexport function sequentialize(cacheKey: (args: any[]) => string) {\n    return (target: any, propertyKey: string | symbol, descriptor: PropertyDescriptor) => {\n        const originalMethod: () => Promise<any> = descriptor.value;\n        const caches = new Map<any, Map<string, Promise<any>>>();\n\n        const getCache = (obj: any) => {\n            let cache = caches.get(obj);\n            if (cache != null) {\n                return cache;\n            }\n            cache = new Map<string, Promise<any>>();\n            caches.set(obj, cache);\n            return cache;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const cache = getCache(this);\n                const argsCacheKey = cacheKey(args);\n                let response = cache.get(argsCacheKey);\n                if (response != null) {\n                    return response;\n                }\n\n                const onFinally = () => {\n                    cache.delete(argsCacheKey);\n                    if (cache.size === 0) {\n                        caches.delete(this);\n                    }\n                };\n                response = originalMethod.apply(this, args).then((val: any) => {\n                    onFinally();\n                    return val;\n                }).catch((err: any) => {\n                    onFinally();\n                    throw err;\n                });\n\n                cache.set(argsCacheKey, response);\n                return response;\n            },\n        };\n    };\n}\n","import { CollectionData } from '../models/data/collectionData';\n\nimport { Collection } from '../models/domain/collection';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nimport { CollectionService as CollectionServiceAbstraction } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    collectionsPrefix: 'collections_',\n};\nconst NestingDelimiter = '/';\n\nexport class CollectionService implements CollectionServiceAbstraction {\n    decryptedCollectionCache: CollectionView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private storageService: StorageService, private i18nService: I18nService) {\n    }\n\n    clearCache(): void {\n        this.decryptedCollectionCache = null;\n    }\n\n    async encrypt(model: CollectionView): Promise<Collection> {\n        if (model.organizationId == null) {\n            throw new Error('Collection has no organization id.');\n        }\n        const key = await this.cryptoService.getOrgKey(model.organizationId);\n        if (key == null) {\n            throw new Error('No key for this collection\\'s organization.');\n        }\n        const collection = new Collection();\n        collection.id = model.id;\n        collection.organizationId = model.organizationId;\n        collection.readOnly = model.readOnly;\n        collection.name = await this.cryptoService.encrypt(model.name, key);\n        return collection;\n    }\n\n    async decryptMany(collections: Collection[]): Promise<CollectionView[]> {\n        if (collections == null) {\n            return [];\n        }\n        const decCollections: CollectionView[] = [];\n        const promises: Promise<any>[] = [];\n        collections.forEach((collection) => {\n            promises.push(collection.decrypt().then((c) => decCollections.push(c)));\n        });\n        await Promise.all(promises);\n        return decCollections.sort(Utils.getSortFunction(this.i18nService, 'name'));\n    }\n\n    async get(id: string): Promise<Collection> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null || !collections.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Collection(collections[id]);\n    }\n\n    async getAll(): Promise<Collection[]> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        const response: Collection[] = [];\n        for (const id in collections) {\n            if (collections.hasOwnProperty(id)) {\n                response.push(new Collection(collections[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<CollectionView[]> {\n        if (this.decryptedCollectionCache != null) {\n            return this.decryptedCollectionCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const collections = await this.getAll();\n        this.decryptedCollectionCache = await this.decryptMany(collections);\n        return this.decryptedCollectionCache;\n    }\n\n    async getAllNested(collections: CollectionView[] = null): Promise<TreeNode<CollectionView>[]> {\n        if (collections == null) {\n            collections = await this.getAllDecrypted();\n        }\n        const nodes: TreeNode<CollectionView>[] = [];\n        collections.forEach((c) => {\n            const collectionCopy = new CollectionView();\n            collectionCopy.id = c.id;\n            collectionCopy.organizationId = c.organizationId;\n            const parts = c.name != null ? c.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, collectionCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<CollectionView>> {\n        const collections = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(collections, id) as TreeNode<CollectionView>;\n    }\n\n    async upsert(collection: CollectionData | CollectionData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            collections = {};\n        }\n\n        if (collection instanceof CollectionData) {\n            const c = collection as CollectionData;\n            collections[c.id] = c;\n        } else {\n            (collection as CollectionData[]).forEach((c) => {\n                collections[c.id] = c;\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async replace(collections: { [id: string]: CollectionData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.collectionsPrefix + userId);\n        this.decryptedCollectionCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const collections = await this.storageService.get<{ [id: string]: CollectionData; }>(\n            Keys.collectionsPrefix + userId);\n        if (collections == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            const i = id as string;\n            delete collections[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete collections[i];\n            });\n        }\n\n        await this.storageService.save(Keys.collectionsPrefix + userId, collections);\n        this.decryptedCollectionCache = null;\n    }\n}\n","import {\n    ITreeNodeObject,\n    TreeNode,\n} from '../models/domain/treeNode';\n\nexport class ServiceUtils {\n    static nestedTraverse(nodeTree: TreeNode<ITreeNodeObject>[], partIndex: number, parts: string[],\n        obj: ITreeNodeObject, parent: ITreeNodeObject, delimiter: string) {\n        if (parts.length <= partIndex) {\n            return;\n        }\n\n        const end = partIndex === parts.length - 1;\n        const partName = parts[partIndex];\n\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.name !== parts[partIndex]) {\n                continue;\n            }\n            if (end && nodeTree[i].node.id !== obj.id) {\n                // Another node with the same name.\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            ServiceUtils.nestedTraverse(nodeTree[i].children, partIndex + 1, parts,\n                obj, nodeTree[i].node, delimiter);\n            return;\n        }\n\n        if (nodeTree.filter((n) => n.node.name === partName).length === 0) {\n            if (end) {\n                nodeTree.push(new TreeNode(obj, partName, parent));\n                return;\n            }\n            const newPartName = parts[partIndex] + delimiter + parts[partIndex + 1];\n            ServiceUtils.nestedTraverse(nodeTree, 0, [newPartName, ...parts.slice(partIndex + 2)],\n                obj, parent, delimiter);\n        }\n    }\n\n    static getTreeNodeObject(nodeTree: TreeNode<ITreeNodeObject>[], id: string): TreeNode<ITreeNodeObject> {\n        for (let i = 0; i < nodeTree.length; i++) {\n            if (nodeTree[i].node.id === id) {\n                return nodeTree[i];\n            } else if (nodeTree[i].children != null) {\n                const node = ServiceUtils.getTreeNodeObject(nodeTree[i].children, id);\n                if (node !== null) {\n                    return node;\n                }\n            }\n        }\n        return null;\n    }\n}\n","import { CryptoService } from '../abstractions/crypto.service';\n\nexport class ContainerService {\n    constructor(private cryptoService: CryptoService) {\n    }\n\n    // deprecated, use attachToGlobal instead\n    attachToWindow(win: any) {\n        this.attachToGlobal(win);\n    }\n\n    attachToGlobal(global: any) {\n        if (!global.bitwardenContainerService) {\n            global.bitwardenContainerService = this;\n        }\n    }\n\n    getCryptoService(): CryptoService {\n        return this.cryptoService;\n    }\n}\n","import * as bigInt from 'big-integer';\n\nimport { EncryptionType } from '../enums/encryptionType';\nimport { KdfType } from '../enums/kdfType';\n\nimport { CipherString } from '../models/domain/cipherString';\nimport { EncryptedObject } from '../models/domain/encryptedObject';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { ProfileOrganizationResponse } from '../models/response/profileOrganizationResponse';\n\nimport { CryptoService as CryptoServiceAbstraction } from '../abstractions/crypto.service';\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { ConstantsService } from './constants.service';\n\nimport { sequentialize } from '../misc/sequentialize';\nimport { Utils } from '../misc/utils';\nimport { EEFLongWordList } from '../misc/wordlist';\n\nconst Keys = {\n    key: 'key', // Master Key\n    encOrgKeys: 'encOrgKeys',\n    encPrivateKey: 'encPrivateKey',\n    encKey: 'encKey', // Generated Symmetric Key\n    keyHash: 'keyHash',\n};\n\nexport class CryptoService implements CryptoServiceAbstraction {\n    private key: SymmetricCryptoKey;\n    private encKey: SymmetricCryptoKey;\n    private legacyEtmKey: SymmetricCryptoKey;\n    private keyHash: string;\n    private publicKey: ArrayBuffer;\n    private privateKey: ArrayBuffer;\n    private orgKeys: Map<string, SymmetricCryptoKey>;\n\n    constructor(private storageService: StorageService, private secureStorageService: StorageService,\n        private cryptoFunctionService: CryptoFunctionService) { }\n\n    async setKey(key: SymmetricCryptoKey): Promise<any> {\n        this.key = key;\n\n        const option = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        const biometric = await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n        if (option != null && !biometric) {\n            // if we have a lock option set, we do not store the key\n            return;\n        }\n\n        return this.secureStorageService.save(Keys.key, key.keyB64);\n    }\n\n    setKeyHash(keyHash: string): Promise<{}> {\n        this.keyHash = keyHash;\n        return this.storageService.save(Keys.keyHash, keyHash);\n    }\n\n    async setEncKey(encKey: string): Promise<{}> {\n        if (encKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encKey, encKey);\n        this.encKey = null;\n    }\n\n    async setEncPrivateKey(encPrivateKey: string): Promise<{}> {\n        if (encPrivateKey == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.encPrivateKey, encPrivateKey);\n        this.privateKey = null;\n    }\n\n    setOrgKeys(orgs: ProfileOrganizationResponse[]): Promise<{}> {\n        const orgKeys: any = {};\n        orgs.forEach((org) => {\n            orgKeys[org.id] = org.key;\n        });\n\n        this.orgKeys = null;\n        return this.storageService.save(Keys.encOrgKeys, orgKeys);\n    }\n\n    async getKey(): Promise<SymmetricCryptoKey> {\n        if (this.key != null) {\n            return this.key;\n        }\n\n        const key = await this.secureStorageService.get<string>(Keys.key);\n        if (key != null) {\n            this.key = new SymmetricCryptoKey(Utils.fromB64ToArray(key).buffer);\n        }\n\n        return key == null ? null : this.key;\n    }\n\n    async getKeyHash(): Promise<string> {\n        if (this.keyHash != null) {\n            return this.keyHash;\n        }\n\n        const keyHash = await this.storageService.get<string>(Keys.keyHash);\n        if (keyHash != null) {\n            this.keyHash = keyHash;\n        }\n\n        return keyHash == null ? null : this.keyHash;\n    }\n\n    @sequentialize(() => 'getEncKey')\n    async getEncKey(key: SymmetricCryptoKey = null): Promise<SymmetricCryptoKey> {\n        if (this.encKey != null) {\n            return this.encKey;\n        }\n\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        if (encKey == null) {\n            return null;\n        }\n\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (key == null) {\n            return null;\n        }\n\n        let decEncKey: ArrayBuffer;\n        const encKeyCipher = new CipherString(encKey);\n        if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_B64) {\n            decEncKey = await this.decryptToBytes(encKeyCipher, key);\n        } else if (encKeyCipher.encryptionType === EncryptionType.AesCbc256_HmacSha256_B64) {\n            const newKey = await this.stretchKey(key);\n            decEncKey = await this.decryptToBytes(encKeyCipher, newKey);\n        } else {\n            throw new Error('Unsupported encKey type.');\n        }\n\n        if (decEncKey == null) {\n            return null;\n        }\n        this.encKey = new SymmetricCryptoKey(decEncKey);\n        return this.encKey;\n    }\n\n    async getPublicKey(): Promise<ArrayBuffer> {\n        if (this.publicKey != null) {\n            return this.publicKey;\n        }\n\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            return null;\n        }\n\n        this.publicKey = await this.cryptoFunctionService.rsaExtractPublicKey(privateKey);\n        return this.publicKey;\n    }\n\n    async getPrivateKey(): Promise<ArrayBuffer> {\n        if (this.privateKey != null) {\n            return this.privateKey;\n        }\n\n        const encPrivateKey = await this.storageService.get<string>(Keys.encPrivateKey);\n        if (encPrivateKey == null) {\n            return null;\n        }\n\n        this.privateKey = await this.decryptToBytes(new CipherString(encPrivateKey), null);\n        return this.privateKey;\n    }\n\n    async getFingerprint(userId: string, publicKey?: ArrayBuffer): Promise<string[]> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey === null) {\n            throw new Error('No public key available.');\n        }\n        const keyFingerprint = await this.cryptoFunctionService.hash(publicKey, 'sha256');\n        const userFingerprint = await this.hkdfExpand(keyFingerprint, Utils.fromUtf8ToArray(userId), 32);\n        return this.hashPhrase(userFingerprint.buffer);\n    }\n\n    @sequentialize(() => 'getOrgKeys')\n    async getOrgKeys(): Promise<Map<string, SymmetricCryptoKey>> {\n        if (this.orgKeys != null && this.orgKeys.size > 0) {\n            return this.orgKeys;\n        }\n\n        const encOrgKeys = await this.storageService.get<any>(Keys.encOrgKeys);\n        if (encOrgKeys == null) {\n            return null;\n        }\n\n        const orgKeys: Map<string, SymmetricCryptoKey> = new Map<string, SymmetricCryptoKey>();\n        let setKey = false;\n\n        for (const orgId in encOrgKeys) {\n            if (!encOrgKeys.hasOwnProperty(orgId)) {\n                continue;\n            }\n\n            const decValue = await this.rsaDecrypt(encOrgKeys[orgId]);\n            orgKeys.set(orgId, new SymmetricCryptoKey(decValue));\n            setKey = true;\n        }\n\n        if (setKey) {\n            this.orgKeys = orgKeys;\n        }\n\n        return this.orgKeys;\n    }\n\n    async getOrgKey(orgId: string): Promise<SymmetricCryptoKey> {\n        if (orgId == null) {\n            return null;\n        }\n\n        const orgKeys = await this.getOrgKeys();\n        if (orgKeys == null || !orgKeys.has(orgId)) {\n            return null;\n        }\n\n        return orgKeys.get(orgId);\n    }\n\n    async hasKey(): Promise<boolean> {\n        return (await this.getKey()) != null;\n    }\n\n    async hasEncKey(): Promise<boolean> {\n        const encKey = await this.storageService.get<string>(Keys.encKey);\n        return encKey != null;\n    }\n\n    clearKey(): Promise<any> {\n        this.key = this.legacyEtmKey = null;\n        return this.secureStorageService.remove(Keys.key);\n    }\n\n    clearKeyHash(): Promise<any> {\n        this.keyHash = null;\n        return this.storageService.remove(Keys.keyHash);\n    }\n\n    clearEncKey(memoryOnly?: boolean): Promise<any> {\n        this.encKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encKey);\n    }\n\n    clearKeyPair(memoryOnly?: boolean): Promise<any> {\n        this.privateKey = null;\n        this.publicKey = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encPrivateKey);\n    }\n\n    clearOrgKeys(memoryOnly?: boolean): Promise<any> {\n        this.orgKeys = null;\n        if (memoryOnly) {\n            return Promise.resolve();\n        }\n        return this.storageService.remove(Keys.encOrgKeys);\n    }\n\n    clearPinProtectedKey(): Promise<any> {\n        return this.storageService.remove(ConstantsService.pinProtectedKey);\n    }\n\n    clearKeys(): Promise<any> {\n        return Promise.all([\n            this.clearKey(),\n            this.clearKeyHash(),\n            this.clearOrgKeys(),\n            this.clearEncKey(),\n            this.clearKeyPair(),\n            this.clearPinProtectedKey(),\n        ]);\n    }\n\n    async toggleKey(): Promise<any> {\n        const key = await this.getKey();\n        const option = await this.storageService.get(ConstantsService.vaultTimeoutKey);\n        const biometric = await this.storageService.get(ConstantsService.biometricUnlockKey);\n        if (!biometric && (option != null || option === 0)) {\n            // if we have a lock option set, clear the key\n            await this.clearKey();\n            this.key = key;\n            return;\n        }\n\n        await this.setKey(key);\n    }\n\n    async makeKey(password: string, salt: string, kdf: KdfType, kdfIterations: number):\n        Promise<SymmetricCryptoKey> {\n        let key: ArrayBuffer = null;\n        if (kdf == null || kdf === KdfType.PBKDF2_SHA256) {\n            if (kdfIterations == null) {\n                kdfIterations = 5000;\n            } else if (kdfIterations < 5000) {\n                throw new Error('PBKDF2 iteration minimum is 5000.');\n            }\n            key = await this.cryptoFunctionService.pbkdf2(password, salt, 'sha256', kdfIterations);\n        } else {\n            throw new Error('Unknown Kdf.');\n        }\n        return new SymmetricCryptoKey(key);\n    }\n\n    async makeKeyFromPin(pin: string, salt: string, kdf: KdfType, kdfIterations: number,\n        protectedKeyCs: CipherString = null):\n        Promise<SymmetricCryptoKey> {\n        if (protectedKeyCs == null) {\n            const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n            if (pinProtectedKey == null) {\n                throw new Error('No PIN protected key found.');\n            }\n            protectedKeyCs = new CipherString(pinProtectedKey);\n        }\n        const pinKey = await this.makePinKey(pin, salt, kdf, kdfIterations);\n        const decKey = await this.decryptToBytes(protectedKeyCs, pinKey);\n        return new SymmetricCryptoKey(decKey);\n    }\n\n    async makeShareKey(): Promise<[CipherString, SymmetricCryptoKey]> {\n        const shareKey = await this.cryptoFunctionService.randomBytes(64);\n        const publicKey = await this.getPublicKey();\n        const encShareKey = await this.rsaEncrypt(shareKey, publicKey);\n        return [encShareKey, new SymmetricCryptoKey(shareKey)];\n    }\n\n    async makeKeyPair(key?: SymmetricCryptoKey): Promise<[string, CipherString]> {\n        const keyPair = await this.cryptoFunctionService.rsaGenerateKeyPair(2048);\n        const publicB64 = Utils.fromBufferToB64(keyPair[0]);\n        const privateEnc = await this.encrypt(keyPair[1], key);\n        return [publicB64, privateEnc];\n    }\n\n    async makePinKey(pin: string, salt: string, kdf: KdfType, kdfIterations: number): Promise<SymmetricCryptoKey> {\n        const pinKey = await this.makeKey(pin, salt, kdf, kdfIterations);\n        return await this.stretchKey(pinKey);\n    }\n\n    async hashPassword(password: string, key: SymmetricCryptoKey): Promise<string> {\n        if (key == null) {\n            key = await this.getKey();\n        }\n        if (password == null || key == null) {\n            throw new Error('Invalid parameters.');\n        }\n\n        const hash = await this.cryptoFunctionService.pbkdf2(key.key, password, 'sha256', 1);\n        return Utils.fromBufferToB64(hash);\n    }\n\n    async makeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, CipherString]> {\n        const theKey = await this.getKeyForEncryption(key);\n        const encKey = await this.cryptoFunctionService.randomBytes(64);\n        return this.buildEncKey(theKey, encKey);\n    }\n\n    async remakeEncKey(key: SymmetricCryptoKey): Promise<[SymmetricCryptoKey, CipherString]> {\n        const encKey = await this.getEncKey();\n        return this.buildEncKey(key, encKey.key);\n    }\n\n    async encrypt(plainValue: string | ArrayBuffer, key?: SymmetricCryptoKey): Promise<CipherString> {\n        if (plainValue == null) {\n            return Promise.resolve(null);\n        }\n\n        let plainBuf: ArrayBuffer;\n        if (typeof (plainValue) === 'string') {\n            plainBuf = Utils.fromUtf8ToArray(plainValue).buffer;\n        } else {\n            plainBuf = plainValue;\n        }\n\n        const encObj = await this.aesEncrypt(plainBuf, key);\n        const iv = Utils.fromBufferToB64(encObj.iv);\n        const data = Utils.fromBufferToB64(encObj.data);\n        const mac = encObj.mac != null ? Utils.fromBufferToB64(encObj.mac) : null;\n        return new CipherString(encObj.key.encType, data, iv, mac);\n    }\n\n    async encryptToBytes(plainValue: ArrayBuffer, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const encValue = await this.aesEncrypt(plainValue, key);\n        let macLen = 0;\n        if (encValue.mac != null) {\n            macLen = encValue.mac.byteLength;\n        }\n\n        const encBytes = new Uint8Array(1 + encValue.iv.byteLength + macLen + encValue.data.byteLength);\n        encBytes.set([encValue.key.encType]);\n        encBytes.set(new Uint8Array(encValue.iv), 1);\n        if (encValue.mac != null) {\n            encBytes.set(new Uint8Array(encValue.mac), 1 + encValue.iv.byteLength);\n        }\n\n        encBytes.set(new Uint8Array(encValue.data), 1 + encValue.iv.byteLength + macLen);\n        return encBytes.buffer;\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey?: ArrayBuffer): Promise<CipherString> {\n        if (publicKey == null) {\n            publicKey = await this.getPublicKey();\n        }\n        if (publicKey == null) {\n            throw new Error('Public key unavailable.');\n        }\n\n        const encBytes = await this.cryptoFunctionService.rsaEncrypt(data, publicKey, 'sha1');\n        return new CipherString(EncryptionType.Rsa2048_OaepSha1_B64, Utils.fromBufferToB64(encBytes));\n    }\n\n    async decryptToBytes(cipherString: CipherString, key?: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const iv = Utils.fromB64ToArray(cipherString.iv).buffer;\n        const data = Utils.fromB64ToArray(cipherString.data).buffer;\n        const mac = cipherString.mac ? Utils.fromB64ToArray(cipherString.mac).buffer : null;\n        const decipher = await this.aesDecryptToBytes(cipherString.encryptionType, data, iv, mac, key);\n        if (decipher == null) {\n            return null;\n        }\n\n        return decipher;\n    }\n\n    async decryptToUtf8(cipherString: CipherString, key?: SymmetricCryptoKey): Promise<string> {\n        return await this.aesDecryptToUtf8(cipherString.encryptionType, cipherString.data,\n            cipherString.iv, cipherString.mac, key);\n    }\n\n    async decryptFromBytes(encBuf: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        if (encBuf == null) {\n            throw new Error('no encBuf.');\n        }\n\n        const encBytes = new Uint8Array(encBuf);\n        const encType = encBytes[0];\n        let ctBytes: Uint8Array = null;\n        let ivBytes: Uint8Array = null;\n        let macBytes: Uint8Array = null;\n\n        switch (encType) {\n            case EncryptionType.AesCbc128_HmacSha256_B64:\n            case EncryptionType.AesCbc256_HmacSha256_B64:\n                if (encBytes.length <= 49) { // 1 + 16 + 32 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                macBytes = encBytes.slice(17, 49);\n                ctBytes = encBytes.slice(49);\n                break;\n            case EncryptionType.AesCbc256_B64:\n                if (encBytes.length <= 17) { // 1 + 16 + ctLength\n                    return null;\n                }\n\n                ivBytes = encBytes.slice(1, 17);\n                ctBytes = encBytes.slice(17);\n                break;\n            default:\n                return null;\n        }\n\n        return await this.aesDecryptToBytes(encType, ctBytes.buffer, ivBytes.buffer,\n            macBytes != null ? macBytes.buffer : null, key);\n    }\n\n    // EFForg/OpenWireless\n    // ref https://github.com/EFForg/OpenWireless/blob/master/app/js/diceware.js\n    async randomNumber(min: number, max: number): Promise<number> {\n        let rval = 0;\n        const range = max - min + 1;\n        const bitsNeeded = Math.ceil(Math.log2(range));\n        if (bitsNeeded > 53) {\n            throw new Error('We cannot generate numbers larger than 53 bits.');\n        }\n\n        const bytesNeeded = Math.ceil(bitsNeeded / 8);\n        const mask = Math.pow(2, bitsNeeded) - 1;\n        // 7776 -> (2^13 = 8192) -1 == 8191 or 0x00001111 11111111\n\n        // Fill a byte array with N random numbers\n        const byteArray = new Uint8Array(await this.cryptoFunctionService.randomBytes(bytesNeeded));\n\n        let p = (bytesNeeded - 1) * 8;\n        for (let i = 0; i < bytesNeeded; i++) {\n            rval += byteArray[i] * Math.pow(2, p);\n            p -= 8;\n        }\n\n        // Use & to apply the mask and reduce the number of recursive lookups\n        // tslint:disable-next-line\n        rval = rval & mask;\n\n        if (rval >= range) {\n            // Integer out of acceptable range\n            return this.randomNumber(min, max);\n        }\n\n        // Return an integer that falls within the range\n        return min + rval;\n    }\n\n    // Helpers\n\n    private async aesEncrypt(data: ArrayBuffer, key: SymmetricCryptoKey): Promise<EncryptedObject> {\n        const obj = new EncryptedObject();\n        obj.key = await this.getKeyForEncryption(key);\n        obj.iv = await this.cryptoFunctionService.randomBytes(16);\n        obj.data = await this.cryptoFunctionService.aesEncrypt(data, obj.iv, obj.key.encKey);\n\n        if (obj.key.macKey != null) {\n            const macData = new Uint8Array(obj.iv.byteLength + obj.data.byteLength);\n            macData.set(new Uint8Array(obj.iv), 0);\n            macData.set(new Uint8Array(obj.data), obj.iv.byteLength);\n            obj.mac = await this.cryptoFunctionService.hmac(macData.buffer, obj.key.macKey, 'sha256');\n        }\n\n        return obj;\n    }\n\n    private async aesDecryptToUtf8(encType: EncryptionType, data: string, iv: string, mac: string,\n        key: SymmetricCryptoKey): Promise<string> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            // tslint:disable-next-line\n            console.error('mac required.');\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            // tslint:disable-next-line\n            console.error('encType unavailable.');\n            return null;\n        }\n\n        const fastParams = this.cryptoFunctionService.aesDecryptFastParameters(data, iv, mac, theKey);\n        if (fastParams.macKey != null && fastParams.mac != null) {\n            const computedMac = await this.cryptoFunctionService.hmacFast(fastParams.macData,\n                fastParams.macKey, 'sha256');\n            const macsEqual = await this.cryptoFunctionService.compareFast(fastParams.mac, computedMac);\n            if (!macsEqual) {\n                // tslint:disable-next-line\n                console.error('mac failed.');\n                return null;\n            }\n        }\n\n        return this.cryptoFunctionService.aesDecryptFast(fastParams);\n    }\n\n    private async aesDecryptToBytes(encType: EncryptionType, data: ArrayBuffer, iv: ArrayBuffer,\n        mac: ArrayBuffer, key: SymmetricCryptoKey): Promise<ArrayBuffer> {\n        const keyForEnc = await this.getKeyForEncryption(key);\n        const theKey = this.resolveLegacyKey(encType, keyForEnc);\n\n        if (theKey.macKey != null && mac == null) {\n            return null;\n        }\n\n        if (theKey.encType !== encType) {\n            return null;\n        }\n\n        if (theKey.macKey != null && mac != null) {\n            const macData = new Uint8Array(iv.byteLength + data.byteLength);\n            macData.set(new Uint8Array(iv), 0);\n            macData.set(new Uint8Array(data), iv.byteLength);\n            const computedMac = await this.cryptoFunctionService.hmac(macData.buffer, theKey.macKey, 'sha256');\n            if (computedMac === null) {\n                return null;\n            }\n\n            const macsMatch = await this.cryptoFunctionService.compare(mac, computedMac);\n            if (!macsMatch) {\n                // tslint:disable-next-line\n                console.error('mac failed.');\n                return null;\n            }\n        }\n\n        return await this.cryptoFunctionService.aesDecrypt(data, iv, theKey.encKey);\n    }\n\n    private async rsaDecrypt(encValue: string): Promise<ArrayBuffer> {\n        const headerPieces = encValue.split('.');\n        let encType: EncryptionType = null;\n        let encPieces: string[];\n\n        if (headerPieces.length === 1) {\n            encType = EncryptionType.Rsa2048_OaepSha256_B64;\n            encPieces = [headerPieces[0]];\n        } else if (headerPieces.length === 2) {\n            try {\n                encType = parseInt(headerPieces[0], null);\n                encPieces = headerPieces[1].split('|');\n            } catch (e) { }\n        }\n\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            // HmacSha256 types are deprecated\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        if (encPieces == null || encPieces.length <= 0) {\n            throw new Error('encPieces unavailable.');\n        }\n\n        const data = Utils.fromB64ToArray(encPieces[0]).buffer;\n        const privateKey = await this.getPrivateKey();\n        if (privateKey == null) {\n            throw new Error('No private key.');\n        }\n\n        let alg: 'sha1' | 'sha256' = 'sha1';\n        switch (encType) {\n            case EncryptionType.Rsa2048_OaepSha256_B64:\n            case EncryptionType.Rsa2048_OaepSha256_HmacSha256_B64:\n                alg = 'sha256';\n                break;\n            case EncryptionType.Rsa2048_OaepSha1_B64:\n            case EncryptionType.Rsa2048_OaepSha1_HmacSha256_B64:\n                break;\n            default:\n                throw new Error('encType unavailable.');\n        }\n\n        return this.cryptoFunctionService.rsaDecrypt(data, privateKey, alg);\n    }\n\n    private async getKeyForEncryption(key?: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        if (key != null) {\n            return key;\n        }\n\n        const encKey = await this.getEncKey();\n        if (encKey != null) {\n            return encKey;\n        }\n\n        return await this.getKey();\n    }\n\n    private resolveLegacyKey(encType: EncryptionType, key: SymmetricCryptoKey): SymmetricCryptoKey {\n        if (encType === EncryptionType.AesCbc128_HmacSha256_B64 &&\n            key.encType === EncryptionType.AesCbc256_B64) {\n            // Old encrypt-then-mac scheme, make a new key\n            if (this.legacyEtmKey == null) {\n                this.legacyEtmKey = new SymmetricCryptoKey(key.key, EncryptionType.AesCbc128_HmacSha256_B64);\n            }\n            return this.legacyEtmKey;\n        }\n\n        return key;\n    }\n\n    private async stretchKey(key: SymmetricCryptoKey): Promise<SymmetricCryptoKey> {\n        const newKey = new Uint8Array(64);\n        newKey.set(await this.hkdfExpand(key.key, Utils.fromUtf8ToArray('enc'), 32));\n        newKey.set(await this.hkdfExpand(key.key, Utils.fromUtf8ToArray('mac'), 32), 32);\n        return new SymmetricCryptoKey(newKey.buffer);\n    }\n\n    // ref: https://tools.ietf.org/html/rfc5869\n    private async hkdfExpand(prk: ArrayBuffer, info: Uint8Array, size: number) {\n        const hashLen = 32; // sha256\n        const okm = new Uint8Array(size);\n        let previousT = new Uint8Array(0);\n        const n = Math.ceil(size / hashLen);\n        for (let i = 0; i < n; i++) {\n            const t = new Uint8Array(previousT.length + info.length + 1);\n            t.set(previousT);\n            t.set(info, previousT.length);\n            t.set([i + 1], t.length - 1);\n            previousT = new Uint8Array(await this.cryptoFunctionService.hmac(t.buffer, prk, 'sha256'));\n            okm.set(previousT, i * hashLen);\n        }\n        return okm;\n    }\n\n    private async hashPhrase(hash: ArrayBuffer, minimumEntropy: number = 64) {\n        const entropyPerWord = Math.log(EEFLongWordList.length) / Math.log(2);\n        let numWords = Math.ceil(minimumEntropy / entropyPerWord);\n\n        const hashArr = Array.from(new Uint8Array(hash));\n        const entropyAvailable = hashArr.length * 4;\n        if (numWords * entropyPerWord > entropyAvailable) {\n            throw new Error('Output entropy of hash function is too small');\n        }\n\n        const phrase: string[] = [];\n        let hashNumber = bigInt.fromArray(hashArr, 256);\n        while (numWords--) {\n            const remainder = hashNumber.mod(EEFLongWordList.length);\n            hashNumber = hashNumber.divide(EEFLongWordList.length);\n            phrase.push(EEFLongWordList[remainder as any]);\n        }\n        return phrase;\n    }\n\n    private async buildEncKey(key: SymmetricCryptoKey, encKey: ArrayBuffer)\n        : Promise<[SymmetricCryptoKey, CipherString]> {\n        let encKeyEnc: CipherString = null;\n        if (key.key.byteLength === 32) {\n            const newKey = await this.stretchKey(key);\n            encKeyEnc = await this.encrypt(encKey, newKey);\n        } else if (key.key.byteLength === 64) {\n            encKeyEnc = await this.encrypt(encKey, key);\n        } else {\n            throw new Error('Invalid key size.');\n        }\n        return [new SymmetricCryptoKey(encKey), encKeyEnc];\n    }\n}\n","// EFF's Long Wordlist from https://www.eff.org/dice\nexport const EEFLongWordList = [\n    'abacus',\n    'abdomen',\n    'abdominal',\n    'abide',\n    'abiding',\n    'ability',\n    'ablaze',\n    'able',\n    'abnormal',\n    'abrasion',\n    'abrasive',\n    'abreast',\n    'abridge',\n    'abroad',\n    'abruptly',\n    'absence',\n    'absentee',\n    'absently',\n    'absinthe',\n    'absolute',\n    'absolve',\n    'abstain',\n    'abstract',\n    'absurd',\n    'accent',\n    'acclaim',\n    'acclimate',\n    'accompany',\n    'account',\n    'accuracy',\n    'accurate',\n    'accustom',\n    'acetone',\n    'achiness',\n    'aching',\n    'acid',\n    'acorn',\n    'acquaint',\n    'acquire',\n    'acre',\n    'acrobat',\n    'acronym',\n    'acting',\n    'action',\n    'activate',\n    'activator',\n    'active',\n    'activism',\n    'activist',\n    'activity',\n    'actress',\n    'acts',\n    'acutely',\n    'acuteness',\n    'aeration',\n    'aerobics',\n    'aerosol',\n    'aerospace',\n    'afar',\n    'affair',\n    'affected',\n    'affecting',\n    'affection',\n    'affidavit',\n    'affiliate',\n    'affirm',\n    'affix',\n    'afflicted',\n    'affluent',\n    'afford',\n    'affront',\n    'aflame',\n    'afloat',\n    'aflutter',\n    'afoot',\n    'afraid',\n    'afterglow',\n    'afterlife',\n    'aftermath',\n    'aftermost',\n    'afternoon',\n    'aged',\n    'ageless',\n    'agency',\n    'agenda',\n    'agent',\n    'aggregate',\n    'aghast',\n    'agile',\n    'agility',\n    'aging',\n    'agnostic',\n    'agonize',\n    'agonizing',\n    'agony',\n    'agreeable',\n    'agreeably',\n    'agreed',\n    'agreeing',\n    'agreement',\n    'aground',\n    'ahead',\n    'ahoy',\n    'aide',\n    'aids',\n    'aim',\n    'ajar',\n    'alabaster',\n    'alarm',\n    'albatross',\n    'album',\n    'alfalfa',\n    'algebra',\n    'algorithm',\n    'alias',\n    'alibi',\n    'alienable',\n    'alienate',\n    'aliens',\n    'alike',\n    'alive',\n    'alkaline',\n    'alkalize',\n    'almanac',\n    'almighty',\n    'almost',\n    'aloe',\n    'aloft',\n    'aloha',\n    'alone',\n    'alongside',\n    'aloof',\n    'alphabet',\n    'alright',\n    'although',\n    'altitude',\n    'alto',\n    'aluminum',\n    'alumni',\n    'always',\n    'amaretto',\n    'amaze',\n    'amazingly',\n    'amber',\n    'ambiance',\n    'ambiguity',\n    'ambiguous',\n    'ambition',\n    'ambitious',\n    'ambulance',\n    'ambush',\n    'amendable',\n    'amendment',\n    'amends',\n    'amenity',\n    'amiable',\n    'amicably',\n    'amid',\n    'amigo',\n    'amino',\n    'amiss',\n    'ammonia',\n    'ammonium',\n    'amnesty',\n    'amniotic',\n    'among',\n    'amount',\n    'amperage',\n    'ample',\n    'amplifier',\n    'amplify',\n    'amply',\n    'amuck',\n    'amulet',\n    'amusable',\n    'amused',\n    'amusement',\n    'amuser',\n    'amusing',\n    'anaconda',\n    'anaerobic',\n    'anagram',\n    'anatomist',\n    'anatomy',\n    'anchor',\n    'anchovy',\n    'ancient',\n    'android',\n    'anemia',\n    'anemic',\n    'aneurism',\n    'anew',\n    'angelfish',\n    'angelic',\n    'anger',\n    'angled',\n    'angler',\n    'angles',\n    'angling',\n    'angrily',\n    'angriness',\n    'anguished',\n    'angular',\n    'animal',\n    'animate',\n    'animating',\n    'animation',\n    'animator',\n    'anime',\n    'animosity',\n    'ankle',\n    'annex',\n    'annotate',\n    'announcer',\n    'annoying',\n    'annually',\n    'annuity',\n    'anointer',\n    'another',\n    'answering',\n    'antacid',\n    'antarctic',\n    'anteater',\n    'antelope',\n    'antennae',\n    'anthem',\n    'anthill',\n    'anthology',\n    'antibody',\n    'antics',\n    'antidote',\n    'antihero',\n    'antiquely',\n    'antiques',\n    'antiquity',\n    'antirust',\n    'antitoxic',\n    'antitrust',\n    'antiviral',\n    'antivirus',\n    'antler',\n    'antonym',\n    'antsy',\n    'anvil',\n    'anybody',\n    'anyhow',\n    'anymore',\n    'anyone',\n    'anyplace',\n    'anything',\n    'anytime',\n    'anyway',\n    'anywhere',\n    'aorta',\n    'apache',\n    'apostle',\n    'appealing',\n    'appear',\n    'appease',\n    'appeasing',\n    'appendage',\n    'appendix',\n    'appetite',\n    'appetizer',\n    'applaud',\n    'applause',\n    'apple',\n    'appliance',\n    'applicant',\n    'applied',\n    'apply',\n    'appointee',\n    'appraisal',\n    'appraiser',\n    'apprehend',\n    'approach',\n    'approval',\n    'approve',\n    'apricot',\n    'april',\n    'apron',\n    'aptitude',\n    'aptly',\n    'aqua',\n    'aqueduct',\n    'arbitrary',\n    'arbitrate',\n    'ardently',\n    'area',\n    'arena',\n    'arguable',\n    'arguably',\n    'argue',\n    'arise',\n    'armadillo',\n    'armband',\n    'armchair',\n    'armed',\n    'armful',\n    'armhole',\n    'arming',\n    'armless',\n    'armoire',\n    'armored',\n    'armory',\n    'armrest',\n    'army',\n    'aroma',\n    'arose',\n    'around',\n    'arousal',\n    'arrange',\n    'array',\n    'arrest',\n    'arrival',\n    'arrive',\n    'arrogance',\n    'arrogant',\n    'arson',\n    'art',\n    'ascend',\n    'ascension',\n    'ascent',\n    'ascertain',\n    'ashamed',\n    'ashen',\n    'ashes',\n    'ashy',\n    'aside',\n    'askew',\n    'asleep',\n    'asparagus',\n    'aspect',\n    'aspirate',\n    'aspire',\n    'aspirin',\n    'astonish',\n    'astound',\n    'astride',\n    'astrology',\n    'astronaut',\n    'astronomy',\n    'astute',\n    'atlantic',\n    'atlas',\n    'atom',\n    'atonable',\n    'atop',\n    'atrium',\n    'atrocious',\n    'atrophy',\n    'attach',\n    'attain',\n    'attempt',\n    'attendant',\n    'attendee',\n    'attention',\n    'attentive',\n    'attest',\n    'attic',\n    'attire',\n    'attitude',\n    'attractor',\n    'attribute',\n    'atypical',\n    'auction',\n    'audacious',\n    'audacity',\n    'audible',\n    'audibly',\n    'audience',\n    'audio',\n    'audition',\n    'augmented',\n    'august',\n    'authentic',\n    'author',\n    'autism',\n    'autistic',\n    'autograph',\n    'automaker',\n    'automated',\n    'automatic',\n    'autopilot',\n    'available',\n    'avalanche',\n    'avatar',\n    'avenge',\n    'avenging',\n    'avenue',\n    'average',\n    'aversion',\n    'avert',\n    'aviation',\n    'aviator',\n    'avid',\n    'avoid',\n    'await',\n    'awaken',\n    'award',\n    'aware',\n    'awhile',\n    'awkward',\n    'awning',\n    'awoke',\n    'awry',\n    'axis',\n    'babble',\n    'babbling',\n    'babied',\n    'baboon',\n    'backache',\n    'backboard',\n    'backboned',\n    'backdrop',\n    'backed',\n    'backer',\n    'backfield',\n    'backfire',\n    'backhand',\n    'backing',\n    'backlands',\n    'backlash',\n    'backless',\n    'backlight',\n    'backlit',\n    'backlog',\n    'backpack',\n    'backpedal',\n    'backrest',\n    'backroom',\n    'backshift',\n    'backside',\n    'backslid',\n    'backspace',\n    'backspin',\n    'backstab',\n    'backstage',\n    'backtalk',\n    'backtrack',\n    'backup',\n    'backward',\n    'backwash',\n    'backwater',\n    'backyard',\n    'bacon',\n    'bacteria',\n    'bacterium',\n    'badass',\n    'badge',\n    'badland',\n    'badly',\n    'badness',\n    'baffle',\n    'baffling',\n    'bagel',\n    'bagful',\n    'baggage',\n    'bagged',\n    'baggie',\n    'bagginess',\n    'bagging',\n    'baggy',\n    'bagpipe',\n    'baguette',\n    'baked',\n    'bakery',\n    'bakeshop',\n    'baking',\n    'balance',\n    'balancing',\n    'balcony',\n    'balmy',\n    'balsamic',\n    'bamboo',\n    'banana',\n    'banish',\n    'banister',\n    'banjo',\n    'bankable',\n    'bankbook',\n    'banked',\n    'banker',\n    'banking',\n    'banknote',\n    'bankroll',\n    'banner',\n    'bannister',\n    'banshee',\n    'banter',\n    'barbecue',\n    'barbed',\n    'barbell',\n    'barber',\n    'barcode',\n    'barge',\n    'bargraph',\n    'barista',\n    'baritone',\n    'barley',\n    'barmaid',\n    'barman',\n    'barn',\n    'barometer',\n    'barrack',\n    'barracuda',\n    'barrel',\n    'barrette',\n    'barricade',\n    'barrier',\n    'barstool',\n    'bartender',\n    'barterer',\n    'bash',\n    'basically',\n    'basics',\n    'basil',\n    'basin',\n    'basis',\n    'basket',\n    'batboy',\n    'batch',\n    'bath',\n    'baton',\n    'bats',\n    'battalion',\n    'battered',\n    'battering',\n    'battery',\n    'batting',\n    'battle',\n    'bauble',\n    'bazooka',\n    'blabber',\n    'bladder',\n    'blade',\n    'blah',\n    'blame',\n    'blaming',\n    'blanching',\n    'blandness',\n    'blank',\n    'blaspheme',\n    'blasphemy',\n    'blast',\n    'blatancy',\n    'blatantly',\n    'blazer',\n    'blazing',\n    'bleach',\n    'bleak',\n    'bleep',\n    'blemish',\n    'blend',\n    'bless',\n    'blighted',\n    'blimp',\n    'bling',\n    'blinked',\n    'blinker',\n    'blinking',\n    'blinks',\n    'blip',\n    'blissful',\n    'blitz',\n    'blizzard',\n    'bloated',\n    'bloating',\n    'blob',\n    'blog',\n    'bloomers',\n    'blooming',\n    'blooper',\n    'blot',\n    'blouse',\n    'blubber',\n    'bluff',\n    'bluish',\n    'blunderer',\n    'blunt',\n    'blurb',\n    'blurred',\n    'blurry',\n    'blurt',\n    'blush',\n    'blustery',\n    'boaster',\n    'boastful',\n    'boasting',\n    'boat',\n    'bobbed',\n    'bobbing',\n    'bobble',\n    'bobcat',\n    'bobsled',\n    'bobtail',\n    'bodacious',\n    'body',\n    'bogged',\n    'boggle',\n    'bogus',\n    'boil',\n    'bok',\n    'bolster',\n    'bolt',\n    'bonanza',\n    'bonded',\n    'bonding',\n    'bondless',\n    'boned',\n    'bonehead',\n    'boneless',\n    'bonelike',\n    'boney',\n    'bonfire',\n    'bonnet',\n    'bonsai',\n    'bonus',\n    'bony',\n    'boogeyman',\n    'boogieman',\n    'book',\n    'boondocks',\n    'booted',\n    'booth',\n    'bootie',\n    'booting',\n    'bootlace',\n    'bootleg',\n    'boots',\n    'boozy',\n    'borax',\n    'boring',\n    'borough',\n    'borrower',\n    'borrowing',\n    'boss',\n    'botanical',\n    'botanist',\n    'botany',\n    'botch',\n    'both',\n    'bottle',\n    'bottling',\n    'bottom',\n    'bounce',\n    'bouncing',\n    'bouncy',\n    'bounding',\n    'boundless',\n    'bountiful',\n    'bovine',\n    'boxcar',\n    'boxer',\n    'boxing',\n    'boxlike',\n    'boxy',\n    'breach',\n    'breath',\n    'breeches',\n    'breeching',\n    'breeder',\n    'breeding',\n    'breeze',\n    'breezy',\n    'brethren',\n    'brewery',\n    'brewing',\n    'briar',\n    'bribe',\n    'brick',\n    'bride',\n    'bridged',\n    'brigade',\n    'bright',\n    'brilliant',\n    'brim',\n    'bring',\n    'brink',\n    'brisket',\n    'briskly',\n    'briskness',\n    'bristle',\n    'brittle',\n    'broadband',\n    'broadcast',\n    'broaden',\n    'broadly',\n    'broadness',\n    'broadside',\n    'broadways',\n    'broiler',\n    'broiling',\n    'broken',\n    'broker',\n    'bronchial',\n    'bronco',\n    'bronze',\n    'bronzing',\n    'brook',\n    'broom',\n    'brought',\n    'browbeat',\n    'brownnose',\n    'browse',\n    'browsing',\n    'bruising',\n    'brunch',\n    'brunette',\n    'brunt',\n    'brush',\n    'brussels',\n    'brute',\n    'brutishly',\n    'bubble',\n    'bubbling',\n    'bubbly',\n    'buccaneer',\n    'bucked',\n    'bucket',\n    'buckle',\n    'buckshot',\n    'buckskin',\n    'bucktooth',\n    'buckwheat',\n    'buddhism',\n    'buddhist',\n    'budding',\n    'buddy',\n    'budget',\n    'buffalo',\n    'buffed',\n    'buffer',\n    'buffing',\n    'buffoon',\n    'buggy',\n    'bulb',\n    'bulge',\n    'bulginess',\n    'bulgur',\n    'bulk',\n    'bulldog',\n    'bulldozer',\n    'bullfight',\n    'bullfrog',\n    'bullhorn',\n    'bullion',\n    'bullish',\n    'bullpen',\n    'bullring',\n    'bullseye',\n    'bullwhip',\n    'bully',\n    'bunch',\n    'bundle',\n    'bungee',\n    'bunion',\n    'bunkbed',\n    'bunkhouse',\n    'bunkmate',\n    'bunny',\n    'bunt',\n    'busboy',\n    'bush',\n    'busily',\n    'busload',\n    'bust',\n    'busybody',\n    'buzz',\n    'cabana',\n    'cabbage',\n    'cabbie',\n    'cabdriver',\n    'cable',\n    'caboose',\n    'cache',\n    'cackle',\n    'cacti',\n    'cactus',\n    'caddie',\n    'caddy',\n    'cadet',\n    'cadillac',\n    'cadmium',\n    'cage',\n    'cahoots',\n    'cake',\n    'calamari',\n    'calamity',\n    'calcium',\n    'calculate',\n    'calculus',\n    'caliber',\n    'calibrate',\n    'calm',\n    'caloric',\n    'calorie',\n    'calzone',\n    'camcorder',\n    'cameo',\n    'camera',\n    'camisole',\n    'camper',\n    'campfire',\n    'camping',\n    'campsite',\n    'campus',\n    'canal',\n    'canary',\n    'cancel',\n    'candied',\n    'candle',\n    'candy',\n    'cane',\n    'canine',\n    'canister',\n    'cannabis',\n    'canned',\n    'canning',\n    'cannon',\n    'cannot',\n    'canola',\n    'canon',\n    'canopener',\n    'canopy',\n    'canteen',\n    'canyon',\n    'capable',\n    'capably',\n    'capacity',\n    'cape',\n    'capillary',\n    'capital',\n    'capitol',\n    'capped',\n    'capricorn',\n    'capsize',\n    'capsule',\n    'caption',\n    'captivate',\n    'captive',\n    'captivity',\n    'capture',\n    'caramel',\n    'carat',\n    'caravan',\n    'carbon',\n    'cardboard',\n    'carded',\n    'cardiac',\n    'cardigan',\n    'cardinal',\n    'cardstock',\n    'carefully',\n    'caregiver',\n    'careless',\n    'caress',\n    'caretaker',\n    'cargo',\n    'caring',\n    'carless',\n    'carload',\n    'carmaker',\n    'carnage',\n    'carnation',\n    'carnival',\n    'carnivore',\n    'carol',\n    'carpenter',\n    'carpentry',\n    'carpool',\n    'carport',\n    'carried',\n    'carrot',\n    'carrousel',\n    'carry',\n    'cartel',\n    'cartload',\n    'carton',\n    'cartoon',\n    'cartridge',\n    'cartwheel',\n    'carve',\n    'carving',\n    'carwash',\n    'cascade',\n    'case',\n    'cash',\n    'casing',\n    'casino',\n    'casket',\n    'cassette',\n    'casually',\n    'casualty',\n    'catacomb',\n    'catalog',\n    'catalyst',\n    'catalyze',\n    'catapult',\n    'cataract',\n    'catatonic',\n    'catcall',\n    'catchable',\n    'catcher',\n    'catching',\n    'catchy',\n    'caterer',\n    'catering',\n    'catfight',\n    'catfish',\n    'cathedral',\n    'cathouse',\n    'catlike',\n    'catnap',\n    'catnip',\n    'catsup',\n    'cattail',\n    'cattishly',\n    'cattle',\n    'catty',\n    'catwalk',\n    'caucasian',\n    'caucus',\n    'causal',\n    'causation',\n    'cause',\n    'causing',\n    'cauterize',\n    'caution',\n    'cautious',\n    'cavalier',\n    'cavalry',\n    'caviar',\n    'cavity',\n    'cedar',\n    'celery',\n    'celestial',\n    'celibacy',\n    'celibate',\n    'celtic',\n    'cement',\n    'census',\n    'ceramics',\n    'ceremony',\n    'certainly',\n    'certainty',\n    'certified',\n    'certify',\n    'cesarean',\n    'cesspool',\n    'chafe',\n    'chaffing',\n    'chain',\n    'chair',\n    'chalice',\n    'challenge',\n    'chamber',\n    'chamomile',\n    'champion',\n    'chance',\n    'change',\n    'channel',\n    'chant',\n    'chaos',\n    'chaperone',\n    'chaplain',\n    'chapped',\n    'chaps',\n    'chapter',\n    'character',\n    'charbroil',\n    'charcoal',\n    'charger',\n    'charging',\n    'chariot',\n    'charity',\n    'charm',\n    'charred',\n    'charter',\n    'charting',\n    'chase',\n    'chasing',\n    'chaste',\n    'chastise',\n    'chastity',\n    'chatroom',\n    'chatter',\n    'chatting',\n    'chatty',\n    'cheating',\n    'cheddar',\n    'cheek',\n    'cheer',\n    'cheese',\n    'cheesy',\n    'chef',\n    'chemicals',\n    'chemist',\n    'chemo',\n    'cherisher',\n    'cherub',\n    'chess',\n    'chest',\n    'chevron',\n    'chevy',\n    'chewable',\n    'chewer',\n    'chewing',\n    'chewy',\n    'chief',\n    'chihuahua',\n    'childcare',\n    'childhood',\n    'childish',\n    'childless',\n    'childlike',\n    'chili',\n    'chill',\n    'chimp',\n    'chip',\n    'chirping',\n    'chirpy',\n    'chitchat',\n    'chivalry',\n    'chive',\n    'chloride',\n    'chlorine',\n    'choice',\n    'chokehold',\n    'choking',\n    'chomp',\n    'chooser',\n    'choosing',\n    'choosy',\n    'chop',\n    'chosen',\n    'chowder',\n    'chowtime',\n    'chrome',\n    'chubby',\n    'chuck',\n    'chug',\n    'chummy',\n    'chump',\n    'chunk',\n    'churn',\n    'chute',\n    'cider',\n    'cilantro',\n    'cinch',\n    'cinema',\n    'cinnamon',\n    'circle',\n    'circling',\n    'circular',\n    'circulate',\n    'circus',\n    'citable',\n    'citadel',\n    'citation',\n    'citizen',\n    'citric',\n    'citrus',\n    'city',\n    'civic',\n    'civil',\n    'clad',\n    'claim',\n    'clambake',\n    'clammy',\n    'clamor',\n    'clamp',\n    'clamshell',\n    'clang',\n    'clanking',\n    'clapped',\n    'clapper',\n    'clapping',\n    'clarify',\n    'clarinet',\n    'clarity',\n    'clash',\n    'clasp',\n    'class',\n    'clatter',\n    'clause',\n    'clavicle',\n    'claw',\n    'clay',\n    'clean',\n    'clear',\n    'cleat',\n    'cleaver',\n    'cleft',\n    'clench',\n    'clergyman',\n    'clerical',\n    'clerk',\n    'clever',\n    'clicker',\n    'client',\n    'climate',\n    'climatic',\n    'cling',\n    'clinic',\n    'clinking',\n    'clip',\n    'clique',\n    'cloak',\n    'clobber',\n    'clock',\n    'clone',\n    'cloning',\n    'closable',\n    'closure',\n    'clothes',\n    'clothing',\n    'cloud',\n    'clover',\n    'clubbed',\n    'clubbing',\n    'clubhouse',\n    'clump',\n    'clumsily',\n    'clumsy',\n    'clunky',\n    'clustered',\n    'clutch',\n    'clutter',\n    'coach',\n    'coagulant',\n    'coastal',\n    'coaster',\n    'coasting',\n    'coastland',\n    'coastline',\n    'coat',\n    'coauthor',\n    'cobalt',\n    'cobbler',\n    'cobweb',\n    'cocoa',\n    'coconut',\n    'cod',\n    'coeditor',\n    'coerce',\n    'coexist',\n    'coffee',\n    'cofounder',\n    'cognition',\n    'cognitive',\n    'cogwheel',\n    'coherence',\n    'coherent',\n    'cohesive',\n    'coil',\n    'coke',\n    'cola',\n    'cold',\n    'coleslaw',\n    'coliseum',\n    'collage',\n    'collapse',\n    'collar',\n    'collected',\n    'collector',\n    'collide',\n    'collie',\n    'collision',\n    'colonial',\n    'colonist',\n    'colonize',\n    'colony',\n    'colossal',\n    'colt',\n    'coma',\n    'come',\n    'comfort',\n    'comfy',\n    'comic',\n    'coming',\n    'comma',\n    'commence',\n    'commend',\n    'comment',\n    'commerce',\n    'commode',\n    'commodity',\n    'commodore',\n    'common',\n    'commotion',\n    'commute',\n    'commuting',\n    'compacted',\n    'compacter',\n    'compactly',\n    'compactor',\n    'companion',\n    'company',\n    'compare',\n    'compel',\n    'compile',\n    'comply',\n    'component',\n    'composed',\n    'composer',\n    'composite',\n    'compost',\n    'composure',\n    'compound',\n    'compress',\n    'comprised',\n    'computer',\n    'computing',\n    'comrade',\n    'concave',\n    'conceal',\n    'conceded',\n    'concept',\n    'concerned',\n    'concert',\n    'conch',\n    'concierge',\n    'concise',\n    'conclude',\n    'concrete',\n    'concur',\n    'condense',\n    'condiment',\n    'condition',\n    'condone',\n    'conducive',\n    'conductor',\n    'conduit',\n    'cone',\n    'confess',\n    'confetti',\n    'confidant',\n    'confident',\n    'confider',\n    'confiding',\n    'configure',\n    'confined',\n    'confining',\n    'confirm',\n    'conflict',\n    'conform',\n    'confound',\n    'confront',\n    'confused',\n    'confusing',\n    'confusion',\n    'congenial',\n    'congested',\n    'congrats',\n    'congress',\n    'conical',\n    'conjoined',\n    'conjure',\n    'conjuror',\n    'connected',\n    'connector',\n    'consensus',\n    'consent',\n    'console',\n    'consoling',\n    'consonant',\n    'constable',\n    'constant',\n    'constrain',\n    'constrict',\n    'construct',\n    'consult',\n    'consumer',\n    'consuming',\n    'contact',\n    'container',\n    'contempt',\n    'contend',\n    'contented',\n    'contently',\n    'contents',\n    'contest',\n    'context',\n    'contort',\n    'contour',\n    'contrite',\n    'control',\n    'contusion',\n    'convene',\n    'convent',\n    'copartner',\n    'cope',\n    'copied',\n    'copier',\n    'copilot',\n    'coping',\n    'copious',\n    'copper',\n    'copy',\n    'coral',\n    'cork',\n    'cornball',\n    'cornbread',\n    'corncob',\n    'cornea',\n    'corned',\n    'corner',\n    'cornfield',\n    'cornflake',\n    'cornhusk',\n    'cornmeal',\n    'cornstalk',\n    'corny',\n    'coronary',\n    'coroner',\n    'corporal',\n    'corporate',\n    'corral',\n    'correct',\n    'corridor',\n    'corrode',\n    'corroding',\n    'corrosive',\n    'corsage',\n    'corset',\n    'cortex',\n    'cosigner',\n    'cosmetics',\n    'cosmic',\n    'cosmos',\n    'cosponsor',\n    'cost',\n    'cottage',\n    'cotton',\n    'couch',\n    'cough',\n    'could',\n    'countable',\n    'countdown',\n    'counting',\n    'countless',\n    'country',\n    'county',\n    'courier',\n    'covenant',\n    'cover',\n    'coveted',\n    'coveting',\n    'coyness',\n    'cozily',\n    'coziness',\n    'cozy',\n    'crabbing',\n    'crabgrass',\n    'crablike',\n    'crabmeat',\n    'cradle',\n    'cradling',\n    'crafter',\n    'craftily',\n    'craftsman',\n    'craftwork',\n    'crafty',\n    'cramp',\n    'cranberry',\n    'crane',\n    'cranial',\n    'cranium',\n    'crank',\n    'crate',\n    'crave',\n    'craving',\n    'crawfish',\n    'crawlers',\n    'crawling',\n    'crayfish',\n    'crayon',\n    'crazed',\n    'crazily',\n    'craziness',\n    'crazy',\n    'creamed',\n    'creamer',\n    'creamlike',\n    'crease',\n    'creasing',\n    'creatable',\n    'create',\n    'creation',\n    'creative',\n    'creature',\n    'credible',\n    'credibly',\n    'credit',\n    'creed',\n    'creme',\n    'creole',\n    'crepe',\n    'crept',\n    'crescent',\n    'crested',\n    'cresting',\n    'crestless',\n    'crevice',\n    'crewless',\n    'crewman',\n    'crewmate',\n    'crib',\n    'cricket',\n    'cried',\n    'crier',\n    'crimp',\n    'crimson',\n    'cringe',\n    'cringing',\n    'crinkle',\n    'crinkly',\n    'crisped',\n    'crisping',\n    'crisply',\n    'crispness',\n    'crispy',\n    'criteria',\n    'critter',\n    'croak',\n    'crock',\n    'crook',\n    'croon',\n    'crop',\n    'cross',\n    'crouch',\n    'crouton',\n    'crowbar',\n    'crowd',\n    'crown',\n    'crucial',\n    'crudely',\n    'crudeness',\n    'cruelly',\n    'cruelness',\n    'cruelty',\n    'crumb',\n    'crummiest',\n    'crummy',\n    'crumpet',\n    'crumpled',\n    'cruncher',\n    'crunching',\n    'crunchy',\n    'crusader',\n    'crushable',\n    'crushed',\n    'crusher',\n    'crushing',\n    'crust',\n    'crux',\n    'crying',\n    'cryptic',\n    'crystal',\n    'cubbyhole',\n    'cube',\n    'cubical',\n    'cubicle',\n    'cucumber',\n    'cuddle',\n    'cuddly',\n    'cufflink',\n    'culinary',\n    'culminate',\n    'culpable',\n    'culprit',\n    'cultivate',\n    'cultural',\n    'culture',\n    'cupbearer',\n    'cupcake',\n    'cupid',\n    'cupped',\n    'cupping',\n    'curable',\n    'curator',\n    'curdle',\n    'cure',\n    'curfew',\n    'curing',\n    'curled',\n    'curler',\n    'curliness',\n    'curling',\n    'curly',\n    'curry',\n    'curse',\n    'cursive',\n    'cursor',\n    'curtain',\n    'curtly',\n    'curtsy',\n    'curvature',\n    'curve',\n    'curvy',\n    'cushy',\n    'cusp',\n    'cussed',\n    'custard',\n    'custodian',\n    'custody',\n    'customary',\n    'customer',\n    'customize',\n    'customs',\n    'cut',\n    'cycle',\n    'cyclic',\n    'cycling',\n    'cyclist',\n    'cylinder',\n    'cymbal',\n    'cytoplasm',\n    'cytoplast',\n    'dab',\n    'dad',\n    'daffodil',\n    'dagger',\n    'daily',\n    'daintily',\n    'dainty',\n    'dairy',\n    'daisy',\n    'dallying',\n    'dance',\n    'dancing',\n    'dandelion',\n    'dander',\n    'dandruff',\n    'dandy',\n    'danger',\n    'dangle',\n    'dangling',\n    'daredevil',\n    'dares',\n    'daringly',\n    'darkened',\n    'darkening',\n    'darkish',\n    'darkness',\n    'darkroom',\n    'darling',\n    'darn',\n    'dart',\n    'darwinism',\n    'dash',\n    'dastardly',\n    'data',\n    'datebook',\n    'dating',\n    'daughter',\n    'daunting',\n    'dawdler',\n    'dawn',\n    'daybed',\n    'daybreak',\n    'daycare',\n    'daydream',\n    'daylight',\n    'daylong',\n    'dayroom',\n    'daytime',\n    'dazzler',\n    'dazzling',\n    'deacon',\n    'deafening',\n    'deafness',\n    'dealer',\n    'dealing',\n    'dealmaker',\n    'dealt',\n    'dean',\n    'debatable',\n    'debate',\n    'debating',\n    'debit',\n    'debrief',\n    'debtless',\n    'debtor',\n    'debug',\n    'debunk',\n    'decade',\n    'decaf',\n    'decal',\n    'decathlon',\n    'decay',\n    'deceased',\n    'deceit',\n    'deceiver',\n    'deceiving',\n    'december',\n    'decency',\n    'decent',\n    'deception',\n    'deceptive',\n    'decibel',\n    'decidable',\n    'decimal',\n    'decimeter',\n    'decipher',\n    'deck',\n    'declared',\n    'decline',\n    'decode',\n    'decompose',\n    'decorated',\n    'decorator',\n    'decoy',\n    'decrease',\n    'decree',\n    'dedicate',\n    'dedicator',\n    'deduce',\n    'deduct',\n    'deed',\n    'deem',\n    'deepen',\n    'deeply',\n    'deepness',\n    'deface',\n    'defacing',\n    'defame',\n    'default',\n    'defeat',\n    'defection',\n    'defective',\n    'defendant',\n    'defender',\n    'defense',\n    'defensive',\n    'deferral',\n    'deferred',\n    'defiance',\n    'defiant',\n    'defile',\n    'defiling',\n    'define',\n    'definite',\n    'deflate',\n    'deflation',\n    'deflator',\n    'deflected',\n    'deflector',\n    'defog',\n    'deforest',\n    'defraud',\n    'defrost',\n    'deftly',\n    'defuse',\n    'defy',\n    'degraded',\n    'degrading',\n    'degrease',\n    'degree',\n    'dehydrate',\n    'deity',\n    'dejected',\n    'delay',\n    'delegate',\n    'delegator',\n    'delete',\n    'deletion',\n    'delicacy',\n    'delicate',\n    'delicious',\n    'delighted',\n    'delirious',\n    'delirium',\n    'deliverer',\n    'delivery',\n    'delouse',\n    'delta',\n    'deluge',\n    'delusion',\n    'deluxe',\n    'demanding',\n    'demeaning',\n    'demeanor',\n    'demise',\n    'democracy',\n    'democrat',\n    'demote',\n    'demotion',\n    'demystify',\n    'denatured',\n    'deniable',\n    'denial',\n    'denim',\n    'denote',\n    'dense',\n    'density',\n    'dental',\n    'dentist',\n    'denture',\n    'deny',\n    'deodorant',\n    'deodorize',\n    'departed',\n    'departure',\n    'depict',\n    'deplete',\n    'depletion',\n    'deplored',\n    'deploy',\n    'deport',\n    'depose',\n    'depraved',\n    'depravity',\n    'deprecate',\n    'depress',\n    'deprive',\n    'depth',\n    'deputize',\n    'deputy',\n    'derail',\n    'deranged',\n    'derby',\n    'derived',\n    'desecrate',\n    'deserve',\n    'deserving',\n    'designate',\n    'designed',\n    'designer',\n    'designing',\n    'deskbound',\n    'desktop',\n    'deskwork',\n    'desolate',\n    'despair',\n    'despise',\n    'despite',\n    'destiny',\n    'destitute',\n    'destruct',\n    'detached',\n    'detail',\n    'detection',\n    'detective',\n    'detector',\n    'detention',\n    'detergent',\n    'detest',\n    'detonate',\n    'detonator',\n    'detoxify',\n    'detract',\n    'deuce',\n    'devalue',\n    'deviancy',\n    'deviant',\n    'deviate',\n    'deviation',\n    'deviator',\n    'device',\n    'devious',\n    'devotedly',\n    'devotee',\n    'devotion',\n    'devourer',\n    'devouring',\n    'devoutly',\n    'dexterity',\n    'dexterous',\n    'diabetes',\n    'diabetic',\n    'diabolic',\n    'diagnoses',\n    'diagnosis',\n    'diagram',\n    'dial',\n    'diameter',\n    'diaper',\n    'diaphragm',\n    'diary',\n    'dice',\n    'dicing',\n    'dictate',\n    'dictation',\n    'dictator',\n    'difficult',\n    'diffused',\n    'diffuser',\n    'diffusion',\n    'diffusive',\n    'dig',\n    'dilation',\n    'diligence',\n    'diligent',\n    'dill',\n    'dilute',\n    'dime',\n    'diminish',\n    'dimly',\n    'dimmed',\n    'dimmer',\n    'dimness',\n    'dimple',\n    'diner',\n    'dingbat',\n    'dinghy',\n    'dinginess',\n    'dingo',\n    'dingy',\n    'dining',\n    'dinner',\n    'diocese',\n    'dioxide',\n    'diploma',\n    'dipped',\n    'dipper',\n    'dipping',\n    'directed',\n    'direction',\n    'directive',\n    'directly',\n    'directory',\n    'direness',\n    'dirtiness',\n    'disabled',\n    'disagree',\n    'disallow',\n    'disarm',\n    'disarray',\n    'disaster',\n    'disband',\n    'disbelief',\n    'disburse',\n    'discard',\n    'discern',\n    'discharge',\n    'disclose',\n    'discolor',\n    'discount',\n    'discourse',\n    'discover',\n    'discuss',\n    'disdain',\n    'disengage',\n    'disfigure',\n    'disgrace',\n    'dish',\n    'disinfect',\n    'disjoin',\n    'disk',\n    'dislike',\n    'disliking',\n    'dislocate',\n    'dislodge',\n    'disloyal',\n    'dismantle',\n    'dismay',\n    'dismiss',\n    'dismount',\n    'disobey',\n    'disorder',\n    'disown',\n    'disparate',\n    'disparity',\n    'dispatch',\n    'dispense',\n    'dispersal',\n    'dispersed',\n    'disperser',\n    'displace',\n    'display',\n    'displease',\n    'disposal',\n    'dispose',\n    'disprove',\n    'dispute',\n    'disregard',\n    'disrupt',\n    'dissuade',\n    'distance',\n    'distant',\n    'distaste',\n    'distill',\n    'distinct',\n    'distort',\n    'distract',\n    'distress',\n    'district',\n    'distrust',\n    'ditch',\n    'ditto',\n    'ditzy',\n    'dividable',\n    'divided',\n    'dividend',\n    'dividers',\n    'dividing',\n    'divinely',\n    'diving',\n    'divinity',\n    'divisible',\n    'divisibly',\n    'division',\n    'divisive',\n    'divorcee',\n    'dizziness',\n    'dizzy',\n    'doable',\n    'docile',\n    'dock',\n    'doctrine',\n    'document',\n    'dodge',\n    'dodgy',\n    'doily',\n    'doing',\n    'dole',\n    'dollar',\n    'dollhouse',\n    'dollop',\n    'dolly',\n    'dolphin',\n    'domain',\n    'domelike',\n    'domestic',\n    'dominion',\n    'dominoes',\n    'donated',\n    'donation',\n    'donator',\n    'donor',\n    'donut',\n    'doodle',\n    'doorbell',\n    'doorframe',\n    'doorknob',\n    'doorman',\n    'doormat',\n    'doornail',\n    'doorpost',\n    'doorstep',\n    'doorstop',\n    'doorway',\n    'doozy',\n    'dork',\n    'dormitory',\n    'dorsal',\n    'dosage',\n    'dose',\n    'dotted',\n    'doubling',\n    'douche',\n    'dove',\n    'down',\n    'dowry',\n    'doze',\n    'drab',\n    'dragging',\n    'dragonfly',\n    'dragonish',\n    'dragster',\n    'drainable',\n    'drainage',\n    'drained',\n    'drainer',\n    'drainpipe',\n    'dramatic',\n    'dramatize',\n    'drank',\n    'drapery',\n    'drastic',\n    'draw',\n    'dreaded',\n    'dreadful',\n    'dreadlock',\n    'dreamboat',\n    'dreamily',\n    'dreamland',\n    'dreamless',\n    'dreamlike',\n    'dreamt',\n    'dreamy',\n    'drearily',\n    'dreary',\n    'drench',\n    'dress',\n    'drew',\n    'dribble',\n    'dried',\n    'drier',\n    'drift',\n    'driller',\n    'drilling',\n    'drinkable',\n    'drinking',\n    'dripping',\n    'drippy',\n    'drivable',\n    'driven',\n    'driver',\n    'driveway',\n    'driving',\n    'drizzle',\n    'drizzly',\n    'drone',\n    'drool',\n    'droop',\n    'drop-down',\n    'dropbox',\n    'dropkick',\n    'droplet',\n    'dropout',\n    'dropper',\n    'drove',\n    'drown',\n    'drowsily',\n    'drudge',\n    'drum',\n    'dry',\n    'dubbed',\n    'dubiously',\n    'duchess',\n    'duckbill',\n    'ducking',\n    'duckling',\n    'ducktail',\n    'ducky',\n    'duct',\n    'dude',\n    'duffel',\n    'dugout',\n    'duh',\n    'duke',\n    'duller',\n    'dullness',\n    'duly',\n    'dumping',\n    'dumpling',\n    'dumpster',\n    'duo',\n    'dupe',\n    'duplex',\n    'duplicate',\n    'duplicity',\n    'durable',\n    'durably',\n    'duration',\n    'duress',\n    'during',\n    'dusk',\n    'dust',\n    'dutiful',\n    'duty',\n    'duvet',\n    'dwarf',\n    'dweeb',\n    'dwelled',\n    'dweller',\n    'dwelling',\n    'dwindle',\n    'dwindling',\n    'dynamic',\n    'dynamite',\n    'dynasty',\n    'dyslexia',\n    'dyslexic',\n    'each',\n    'eagle',\n    'earache',\n    'eardrum',\n    'earflap',\n    'earful',\n    'earlobe',\n    'early',\n    'earmark',\n    'earmuff',\n    'earphone',\n    'earpiece',\n    'earplugs',\n    'earring',\n    'earshot',\n    'earthen',\n    'earthlike',\n    'earthling',\n    'earthly',\n    'earthworm',\n    'earthy',\n    'earwig',\n    'easeful',\n    'easel',\n    'easiest',\n    'easily',\n    'easiness',\n    'easing',\n    'eastbound',\n    'eastcoast',\n    'easter',\n    'eastward',\n    'eatable',\n    'eaten',\n    'eatery',\n    'eating',\n    'eats',\n    'ebay',\n    'ebony',\n    'ebook',\n    'ecard',\n    'eccentric',\n    'echo',\n    'eclair',\n    'eclipse',\n    'ecologist',\n    'ecology',\n    'economic',\n    'economist',\n    'economy',\n    'ecosphere',\n    'ecosystem',\n    'edge',\n    'edginess',\n    'edging',\n    'edgy',\n    'edition',\n    'editor',\n    'educated',\n    'education',\n    'educator',\n    'eel',\n    'effective',\n    'effects',\n    'efficient',\n    'effort',\n    'eggbeater',\n    'egging',\n    'eggnog',\n    'eggplant',\n    'eggshell',\n    'egomaniac',\n    'egotism',\n    'egotistic',\n    'either',\n    'eject',\n    'elaborate',\n    'elastic',\n    'elated',\n    'elbow',\n    'eldercare',\n    'elderly',\n    'eldest',\n    'electable',\n    'election',\n    'elective',\n    'elephant',\n    'elevate',\n    'elevating',\n    'elevation',\n    'elevator',\n    'eleven',\n    'elf',\n    'eligible',\n    'eligibly',\n    'eliminate',\n    'elite',\n    'elitism',\n    'elixir',\n    'elk',\n    'ellipse',\n    'elliptic',\n    'elm',\n    'elongated',\n    'elope',\n    'eloquence',\n    'eloquent',\n    'elsewhere',\n    'elude',\n    'elusive',\n    'elves',\n    'email',\n    'embargo',\n    'embark',\n    'embassy',\n    'embattled',\n    'embellish',\n    'ember',\n    'embezzle',\n    'emblaze',\n    'emblem',\n    'embody',\n    'embolism',\n    'emboss',\n    'embroider',\n    'emcee',\n    'emerald',\n    'emergency',\n    'emission',\n    'emit',\n    'emote',\n    'emoticon',\n    'emotion',\n    'empathic',\n    'empathy',\n    'emperor',\n    'emphases',\n    'emphasis',\n    'emphasize',\n    'emphatic',\n    'empirical',\n    'employed',\n    'employee',\n    'employer',\n    'emporium',\n    'empower',\n    'emptier',\n    'emptiness',\n    'empty',\n    'emu',\n    'enable',\n    'enactment',\n    'enamel',\n    'enchanted',\n    'enchilada',\n    'encircle',\n    'enclose',\n    'enclosure',\n    'encode',\n    'encore',\n    'encounter',\n    'encourage',\n    'encroach',\n    'encrust',\n    'encrypt',\n    'endanger',\n    'endeared',\n    'endearing',\n    'ended',\n    'ending',\n    'endless',\n    'endnote',\n    'endocrine',\n    'endorphin',\n    'endorse',\n    'endowment',\n    'endpoint',\n    'endurable',\n    'endurance',\n    'enduring',\n    'energetic',\n    'energize',\n    'energy',\n    'enforced',\n    'enforcer',\n    'engaged',\n    'engaging',\n    'engine',\n    'engorge',\n    'engraved',\n    'engraver',\n    'engraving',\n    'engross',\n    'engulf',\n    'enhance',\n    'enigmatic',\n    'enjoyable',\n    'enjoyably',\n    'enjoyer',\n    'enjoying',\n    'enjoyment',\n    'enlarged',\n    'enlarging',\n    'enlighten',\n    'enlisted',\n    'enquirer',\n    'enrage',\n    'enrich',\n    'enroll',\n    'enslave',\n    'ensnare',\n    'ensure',\n    'entail',\n    'entangled',\n    'entering',\n    'entertain',\n    'enticing',\n    'entire',\n    'entitle',\n    'entity',\n    'entomb',\n    'entourage',\n    'entrap',\n    'entree',\n    'entrench',\n    'entrust',\n    'entryway',\n    'entwine',\n    'enunciate',\n    'envelope',\n    'enviable',\n    'enviably',\n    'envious',\n    'envision',\n    'envoy',\n    'envy',\n    'enzyme',\n    'epic',\n    'epidemic',\n    'epidermal',\n    'epidermis',\n    'epidural',\n    'epilepsy',\n    'epileptic',\n    'epilogue',\n    'epiphany',\n    'episode',\n    'equal',\n    'equate',\n    'equation',\n    'equator',\n    'equinox',\n    'equipment',\n    'equity',\n    'equivocal',\n    'eradicate',\n    'erasable',\n    'erased',\n    'eraser',\n    'erasure',\n    'ergonomic',\n    'errand',\n    'errant',\n    'erratic',\n    'error',\n    'erupt',\n    'escalate',\n    'escalator',\n    'escapable',\n    'escapade',\n    'escapist',\n    'escargot',\n    'eskimo',\n    'esophagus',\n    'espionage',\n    'espresso',\n    'esquire',\n    'essay',\n    'essence',\n    'essential',\n    'establish',\n    'estate',\n    'esteemed',\n    'estimate',\n    'estimator',\n    'estranged',\n    'estrogen',\n    'etching',\n    'eternal',\n    'eternity',\n    'ethanol',\n    'ether',\n    'ethically',\n    'ethics',\n    'euphemism',\n    'evacuate',\n    'evacuee',\n    'evade',\n    'evaluate',\n    'evaluator',\n    'evaporate',\n    'evasion',\n    'evasive',\n    'even',\n    'everglade',\n    'evergreen',\n    'everybody',\n    'everyday',\n    'everyone',\n    'evict',\n    'evidence',\n    'evident',\n    'evil',\n    'evoke',\n    'evolution',\n    'evolve',\n    'exact',\n    'exalted',\n    'example',\n    'excavate',\n    'excavator',\n    'exceeding',\n    'exception',\n    'excess',\n    'exchange',\n    'excitable',\n    'exciting',\n    'exclaim',\n    'exclude',\n    'excluding',\n    'exclusion',\n    'exclusive',\n    'excretion',\n    'excretory',\n    'excursion',\n    'excusable',\n    'excusably',\n    'excuse',\n    'exemplary',\n    'exemplify',\n    'exemption',\n    'exerciser',\n    'exert',\n    'exes',\n    'exfoliate',\n    'exhale',\n    'exhaust',\n    'exhume',\n    'exile',\n    'existing',\n    'exit',\n    'exodus',\n    'exonerate',\n    'exorcism',\n    'exorcist',\n    'expand',\n    'expanse',\n    'expansion',\n    'expansive',\n    'expectant',\n    'expedited',\n    'expediter',\n    'expel',\n    'expend',\n    'expenses',\n    'expensive',\n    'expert',\n    'expire',\n    'expiring',\n    'explain',\n    'expletive',\n    'explicit',\n    'explode',\n    'exploit',\n    'explore',\n    'exploring',\n    'exponent',\n    'exporter',\n    'exposable',\n    'expose',\n    'exposure',\n    'express',\n    'expulsion',\n    'exquisite',\n    'extended',\n    'extending',\n    'extent',\n    'extenuate',\n    'exterior',\n    'external',\n    'extinct',\n    'extortion',\n    'extradite',\n    'extras',\n    'extrovert',\n    'extrude',\n    'extruding',\n    'exuberant',\n    'fable',\n    'fabric',\n    'fabulous',\n    'facebook',\n    'facecloth',\n    'facedown',\n    'faceless',\n    'facelift',\n    'faceplate',\n    'faceted',\n    'facial',\n    'facility',\n    'facing',\n    'facsimile',\n    'faction',\n    'factoid',\n    'factor',\n    'factsheet',\n    'factual',\n    'faculty',\n    'fade',\n    'fading',\n    'failing',\n    'falcon',\n    'fall',\n    'false',\n    'falsify',\n    'fame',\n    'familiar',\n    'family',\n    'famine',\n    'famished',\n    'fanatic',\n    'fancied',\n    'fanciness',\n    'fancy',\n    'fanfare',\n    'fang',\n    'fanning',\n    'fantasize',\n    'fantastic',\n    'fantasy',\n    'fascism',\n    'fastball',\n    'faster',\n    'fasting',\n    'fastness',\n    'faucet',\n    'favorable',\n    'favorably',\n    'favored',\n    'favoring',\n    'favorite',\n    'fax',\n    'feast',\n    'federal',\n    'fedora',\n    'feeble',\n    'feed',\n    'feel',\n    'feisty',\n    'feline',\n    'felt-tip',\n    'feminine',\n    'feminism',\n    'feminist',\n    'feminize',\n    'femur',\n    'fence',\n    'fencing',\n    'fender',\n    'ferment',\n    'fernlike',\n    'ferocious',\n    'ferocity',\n    'ferret',\n    'ferris',\n    'ferry',\n    'fervor',\n    'fester',\n    'festival',\n    'festive',\n    'festivity',\n    'fetal',\n    'fetch',\n    'fever',\n    'fiber',\n    'fiction',\n    'fiddle',\n    'fiddling',\n    'fidelity',\n    'fidgeting',\n    'fidgety',\n    'fifteen',\n    'fifth',\n    'fiftieth',\n    'fifty',\n    'figment',\n    'figure',\n    'figurine',\n    'filing',\n    'filled',\n    'filler',\n    'filling',\n    'film',\n    'filter',\n    'filth',\n    'filtrate',\n    'finale',\n    'finalist',\n    'finalize',\n    'finally',\n    'finance',\n    'financial',\n    'finch',\n    'fineness',\n    'finer',\n    'finicky',\n    'finished',\n    'finisher',\n    'finishing',\n    'finite',\n    'finless',\n    'finlike',\n    'fiscally',\n    'fit',\n    'five',\n    'flaccid',\n    'flagman',\n    'flagpole',\n    'flagship',\n    'flagstick',\n    'flagstone',\n    'flail',\n    'flakily',\n    'flaky',\n    'flame',\n    'flammable',\n    'flanked',\n    'flanking',\n    'flannels',\n    'flap',\n    'flaring',\n    'flashback',\n    'flashbulb',\n    'flashcard',\n    'flashily',\n    'flashing',\n    'flashy',\n    'flask',\n    'flatbed',\n    'flatfoot',\n    'flatly',\n    'flatness',\n    'flatten',\n    'flattered',\n    'flatterer',\n    'flattery',\n    'flattop',\n    'flatware',\n    'flatworm',\n    'flavored',\n    'flavorful',\n    'flavoring',\n    'flaxseed',\n    'fled',\n    'fleshed',\n    'fleshy',\n    'flick',\n    'flier',\n    'flight',\n    'flinch',\n    'fling',\n    'flint',\n    'flip',\n    'flirt',\n    'float',\n    'flock',\n    'flogging',\n    'flop',\n    'floral',\n    'florist',\n    'floss',\n    'flounder',\n    'flyable',\n    'flyaway',\n    'flyer',\n    'flying',\n    'flyover',\n    'flypaper',\n    'foam',\n    'foe',\n    'fog',\n    'foil',\n    'folic',\n    'folk',\n    'follicle',\n    'follow',\n    'fondling',\n    'fondly',\n    'fondness',\n    'fondue',\n    'font',\n    'food',\n    'fool',\n    'footage',\n    'football',\n    'footbath',\n    'footboard',\n    'footer',\n    'footgear',\n    'foothill',\n    'foothold',\n    'footing',\n    'footless',\n    'footman',\n    'footnote',\n    'footpad',\n    'footpath',\n    'footprint',\n    'footrest',\n    'footsie',\n    'footsore',\n    'footwear',\n    'footwork',\n    'fossil',\n    'foster',\n    'founder',\n    'founding',\n    'fountain',\n    'fox',\n    'foyer',\n    'fraction',\n    'fracture',\n    'fragile',\n    'fragility',\n    'fragment',\n    'fragrance',\n    'fragrant',\n    'frail',\n    'frame',\n    'framing',\n    'frantic',\n    'fraternal',\n    'frayed',\n    'fraying',\n    'frays',\n    'freckled',\n    'freckles',\n    'freebase',\n    'freebee',\n    'freebie',\n    'freedom',\n    'freefall',\n    'freehand',\n    'freeing',\n    'freeload',\n    'freely',\n    'freemason',\n    'freeness',\n    'freestyle',\n    'freeware',\n    'freeway',\n    'freewill',\n    'freezable',\n    'freezing',\n    'freight',\n    'french',\n    'frenzied',\n    'frenzy',\n    'frequency',\n    'frequent',\n    'fresh',\n    'fretful',\n    'fretted',\n    'friction',\n    'friday',\n    'fridge',\n    'fried',\n    'friend',\n    'frighten',\n    'frightful',\n    'frigidity',\n    'frigidly',\n    'frill',\n    'fringe',\n    'frisbee',\n    'frisk',\n    'fritter',\n    'frivolous',\n    'frolic',\n    'from',\n    'front',\n    'frostbite',\n    'frosted',\n    'frostily',\n    'frosting',\n    'frostlike',\n    'frosty',\n    'froth',\n    'frown',\n    'frozen',\n    'fructose',\n    'frugality',\n    'frugally',\n    'fruit',\n    'frustrate',\n    'frying',\n    'gab',\n    'gaffe',\n    'gag',\n    'gainfully',\n    'gaining',\n    'gains',\n    'gala',\n    'gallantly',\n    'galleria',\n    'gallery',\n    'galley',\n    'gallon',\n    'gallows',\n    'gallstone',\n    'galore',\n    'galvanize',\n    'gambling',\n    'game',\n    'gaming',\n    'gamma',\n    'gander',\n    'gangly',\n    'gangrene',\n    'gangway',\n    'gap',\n    'garage',\n    'garbage',\n    'garden',\n    'gargle',\n    'garland',\n    'garlic',\n    'garment',\n    'garnet',\n    'garnish',\n    'garter',\n    'gas',\n    'gatherer',\n    'gathering',\n    'gating',\n    'gauging',\n    'gauntlet',\n    'gauze',\n    'gave',\n    'gawk',\n    'gazing',\n    'gear',\n    'gecko',\n    'geek',\n    'geiger',\n    'gem',\n    'gender',\n    'generic',\n    'generous',\n    'genetics',\n    'genre',\n    'gentile',\n    'gentleman',\n    'gently',\n    'gents',\n    'geography',\n    'geologic',\n    'geologist',\n    'geology',\n    'geometric',\n    'geometry',\n    'geranium',\n    'gerbil',\n    'geriatric',\n    'germicide',\n    'germinate',\n    'germless',\n    'germproof',\n    'gestate',\n    'gestation',\n    'gesture',\n    'getaway',\n    'getting',\n    'getup',\n    'giant',\n    'gibberish',\n    'giblet',\n    'giddily',\n    'giddiness',\n    'giddy',\n    'gift',\n    'gigabyte',\n    'gigahertz',\n    'gigantic',\n    'giggle',\n    'giggling',\n    'giggly',\n    'gigolo',\n    'gilled',\n    'gills',\n    'gimmick',\n    'girdle',\n    'giveaway',\n    'given',\n    'giver',\n    'giving',\n    'gizmo',\n    'gizzard',\n    'glacial',\n    'glacier',\n    'glade',\n    'gladiator',\n    'gladly',\n    'glamorous',\n    'glamour',\n    'glance',\n    'glancing',\n    'glandular',\n    'glare',\n    'glaring',\n    'glass',\n    'glaucoma',\n    'glazing',\n    'gleaming',\n    'gleeful',\n    'glider',\n    'gliding',\n    'glimmer',\n    'glimpse',\n    'glisten',\n    'glitch',\n    'glitter',\n    'glitzy',\n    'gloater',\n    'gloating',\n    'gloomily',\n    'gloomy',\n    'glorified',\n    'glorifier',\n    'glorify',\n    'glorious',\n    'glory',\n    'gloss',\n    'glove',\n    'glowing',\n    'glowworm',\n    'glucose',\n    'glue',\n    'gluten',\n    'glutinous',\n    'glutton',\n    'gnarly',\n    'gnat',\n    'goal',\n    'goatskin',\n    'goes',\n    'goggles',\n    'going',\n    'goldfish',\n    'goldmine',\n    'goldsmith',\n    'golf',\n    'goliath',\n    'gonad',\n    'gondola',\n    'gone',\n    'gong',\n    'good',\n    'gooey',\n    'goofball',\n    'goofiness',\n    'goofy',\n    'google',\n    'goon',\n    'gopher',\n    'gore',\n    'gorged',\n    'gorgeous',\n    'gory',\n    'gosling',\n    'gossip',\n    'gothic',\n    'gotten',\n    'gout',\n    'gown',\n    'grab',\n    'graceful',\n    'graceless',\n    'gracious',\n    'gradation',\n    'graded',\n    'grader',\n    'gradient',\n    'grading',\n    'gradually',\n    'graduate',\n    'graffiti',\n    'grafted',\n    'grafting',\n    'grain',\n    'granddad',\n    'grandkid',\n    'grandly',\n    'grandma',\n    'grandpa',\n    'grandson',\n    'granite',\n    'granny',\n    'granola',\n    'grant',\n    'granular',\n    'grape',\n    'graph',\n    'grapple',\n    'grappling',\n    'grasp',\n    'grass',\n    'gratified',\n    'gratify',\n    'grating',\n    'gratitude',\n    'gratuity',\n    'gravel',\n    'graveness',\n    'graves',\n    'graveyard',\n    'gravitate',\n    'gravity',\n    'gravy',\n    'gray',\n    'grazing',\n    'greasily',\n    'greedily',\n    'greedless',\n    'greedy',\n    'green',\n    'greeter',\n    'greeting',\n    'grew',\n    'greyhound',\n    'grid',\n    'grief',\n    'grievance',\n    'grieving',\n    'grievous',\n    'grill',\n    'grimace',\n    'grimacing',\n    'grime',\n    'griminess',\n    'grimy',\n    'grinch',\n    'grinning',\n    'grip',\n    'gristle',\n    'grit',\n    'groggily',\n    'groggy',\n    'groin',\n    'groom',\n    'groove',\n    'grooving',\n    'groovy',\n    'grope',\n    'ground',\n    'grouped',\n    'grout',\n    'grove',\n    'grower',\n    'growing',\n    'growl',\n    'grub',\n    'grudge',\n    'grudging',\n    'grueling',\n    'gruffly',\n    'grumble',\n    'grumbling',\n    'grumbly',\n    'grumpily',\n    'grunge',\n    'grunt',\n    'guacamole',\n    'guidable',\n    'guidance',\n    'guide',\n    'guiding',\n    'guileless',\n    'guise',\n    'gulf',\n    'gullible',\n    'gully',\n    'gulp',\n    'gumball',\n    'gumdrop',\n    'gumminess',\n    'gumming',\n    'gummy',\n    'gurgle',\n    'gurgling',\n    'guru',\n    'gush',\n    'gusto',\n    'gusty',\n    'gutless',\n    'guts',\n    'gutter',\n    'guy',\n    'guzzler',\n    'gyration',\n    'habitable',\n    'habitant',\n    'habitat',\n    'habitual',\n    'hacked',\n    'hacker',\n    'hacking',\n    'hacksaw',\n    'had',\n    'haggler',\n    'haiku',\n    'half',\n    'halogen',\n    'halt',\n    'halved',\n    'halves',\n    'hamburger',\n    'hamlet',\n    'hammock',\n    'hamper',\n    'hamster',\n    'hamstring',\n    'handbag',\n    'handball',\n    'handbook',\n    'handbrake',\n    'handcart',\n    'handclap',\n    'handclasp',\n    'handcraft',\n    'handcuff',\n    'handed',\n    'handful',\n    'handgrip',\n    'handgun',\n    'handheld',\n    'handiness',\n    'handiwork',\n    'handlebar',\n    'handled',\n    'handler',\n    'handling',\n    'handmade',\n    'handoff',\n    'handpick',\n    'handprint',\n    'handrail',\n    'handsaw',\n    'handset',\n    'handsfree',\n    'handshake',\n    'handstand',\n    'handwash',\n    'handwork',\n    'handwoven',\n    'handwrite',\n    'handyman',\n    'hangnail',\n    'hangout',\n    'hangover',\n    'hangup',\n    'hankering',\n    'hankie',\n    'hanky',\n    'haphazard',\n    'happening',\n    'happier',\n    'happiest',\n    'happily',\n    'happiness',\n    'happy',\n    'harbor',\n    'hardcopy',\n    'hardcore',\n    'hardcover',\n    'harddisk',\n    'hardened',\n    'hardener',\n    'hardening',\n    'hardhat',\n    'hardhead',\n    'hardiness',\n    'hardly',\n    'hardness',\n    'hardship',\n    'hardware',\n    'hardwired',\n    'hardwood',\n    'hardy',\n    'harmful',\n    'harmless',\n    'harmonica',\n    'harmonics',\n    'harmonize',\n    'harmony',\n    'harness',\n    'harpist',\n    'harsh',\n    'harvest',\n    'hash',\n    'hassle',\n    'haste',\n    'hastily',\n    'hastiness',\n    'hasty',\n    'hatbox',\n    'hatchback',\n    'hatchery',\n    'hatchet',\n    'hatching',\n    'hatchling',\n    'hate',\n    'hatless',\n    'hatred',\n    'haunt',\n    'haven',\n    'hazard',\n    'hazelnut',\n    'hazily',\n    'haziness',\n    'hazing',\n    'hazy',\n    'headache',\n    'headband',\n    'headboard',\n    'headcount',\n    'headdress',\n    'headed',\n    'header',\n    'headfirst',\n    'headgear',\n    'heading',\n    'headlamp',\n    'headless',\n    'headlock',\n    'headphone',\n    'headpiece',\n    'headrest',\n    'headroom',\n    'headscarf',\n    'headset',\n    'headsman',\n    'headstand',\n    'headstone',\n    'headway',\n    'headwear',\n    'heap',\n    'heat',\n    'heave',\n    'heavily',\n    'heaviness',\n    'heaving',\n    'hedge',\n    'hedging',\n    'heftiness',\n    'hefty',\n    'helium',\n    'helmet',\n    'helper',\n    'helpful',\n    'helping',\n    'helpless',\n    'helpline',\n    'hemlock',\n    'hemstitch',\n    'hence',\n    'henchman',\n    'henna',\n    'herald',\n    'herbal',\n    'herbicide',\n    'herbs',\n    'heritage',\n    'hermit',\n    'heroics',\n    'heroism',\n    'herring',\n    'herself',\n    'hertz',\n    'hesitancy',\n    'hesitant',\n    'hesitate',\n    'hexagon',\n    'hexagram',\n    'hubcap',\n    'huddle',\n    'huddling',\n    'huff',\n    'hug',\n    'hula',\n    'hulk',\n    'hull',\n    'human',\n    'humble',\n    'humbling',\n    'humbly',\n    'humid',\n    'humiliate',\n    'humility',\n    'humming',\n    'hummus',\n    'humongous',\n    'humorist',\n    'humorless',\n    'humorous',\n    'humpback',\n    'humped',\n    'humvee',\n    'hunchback',\n    'hundredth',\n    'hunger',\n    'hungrily',\n    'hungry',\n    'hunk',\n    'hunter',\n    'hunting',\n    'huntress',\n    'huntsman',\n    'hurdle',\n    'hurled',\n    'hurler',\n    'hurling',\n    'hurray',\n    'hurricane',\n    'hurried',\n    'hurry',\n    'hurt',\n    'husband',\n    'hush',\n    'husked',\n    'huskiness',\n    'hut',\n    'hybrid',\n    'hydrant',\n    'hydrated',\n    'hydration',\n    'hydrogen',\n    'hydroxide',\n    'hyperlink',\n    'hypertext',\n    'hyphen',\n    'hypnoses',\n    'hypnosis',\n    'hypnotic',\n    'hypnotism',\n    'hypnotist',\n    'hypnotize',\n    'hypocrisy',\n    'hypocrite',\n    'ibuprofen',\n    'ice',\n    'iciness',\n    'icing',\n    'icky',\n    'icon',\n    'icy',\n    'idealism',\n    'idealist',\n    'idealize',\n    'ideally',\n    'idealness',\n    'identical',\n    'identify',\n    'identity',\n    'ideology',\n    'idiocy',\n    'idiom',\n    'idly',\n    'igloo',\n    'ignition',\n    'ignore',\n    'iguana',\n    'illicitly',\n    'illusion',\n    'illusive',\n    'image',\n    'imaginary',\n    'imagines',\n    'imaging',\n    'imbecile',\n    'imitate',\n    'imitation',\n    'immature',\n    'immerse',\n    'immersion',\n    'imminent',\n    'immobile',\n    'immodest',\n    'immorally',\n    'immortal',\n    'immovable',\n    'immovably',\n    'immunity',\n    'immunize',\n    'impaired',\n    'impale',\n    'impart',\n    'impatient',\n    'impeach',\n    'impeding',\n    'impending',\n    'imperfect',\n    'imperial',\n    'impish',\n    'implant',\n    'implement',\n    'implicate',\n    'implicit',\n    'implode',\n    'implosion',\n    'implosive',\n    'imply',\n    'impolite',\n    'important',\n    'importer',\n    'impose',\n    'imposing',\n    'impotence',\n    'impotency',\n    'impotent',\n    'impound',\n    'imprecise',\n    'imprint',\n    'imprison',\n    'impromptu',\n    'improper',\n    'improve',\n    'improving',\n    'improvise',\n    'imprudent',\n    'impulse',\n    'impulsive',\n    'impure',\n    'impurity',\n    'iodine',\n    'iodize',\n    'ion',\n    'ipad',\n    'iphone',\n    'ipod',\n    'irate',\n    'irk',\n    'iron',\n    'irregular',\n    'irrigate',\n    'irritable',\n    'irritably',\n    'irritant',\n    'irritate',\n    'islamic',\n    'islamist',\n    'isolated',\n    'isolating',\n    'isolation',\n    'isotope',\n    'issue',\n    'issuing',\n    'italicize',\n    'italics',\n    'item',\n    'itinerary',\n    'itunes',\n    'ivory',\n    'ivy',\n    'jab',\n    'jackal',\n    'jacket',\n    'jackknife',\n    'jackpot',\n    'jailbird',\n    'jailbreak',\n    'jailer',\n    'jailhouse',\n    'jalapeno',\n    'jam',\n    'janitor',\n    'january',\n    'jargon',\n    'jarring',\n    'jasmine',\n    'jaundice',\n    'jaunt',\n    'java',\n    'jawed',\n    'jawless',\n    'jawline',\n    'jaws',\n    'jaybird',\n    'jaywalker',\n    'jazz',\n    'jeep',\n    'jeeringly',\n    'jellied',\n    'jelly',\n    'jersey',\n    'jester',\n    'jet',\n    'jiffy',\n    'jigsaw',\n    'jimmy',\n    'jingle',\n    'jingling',\n    'jinx',\n    'jitters',\n    'jittery',\n    'job',\n    'jockey',\n    'jockstrap',\n    'jogger',\n    'jogging',\n    'john',\n    'joining',\n    'jokester',\n    'jokingly',\n    'jolliness',\n    'jolly',\n    'jolt',\n    'jot',\n    'jovial',\n    'joyfully',\n    'joylessly',\n    'joyous',\n    'joyride',\n    'joystick',\n    'jubilance',\n    'jubilant',\n    'judge',\n    'judgingly',\n    'judicial',\n    'judiciary',\n    'judo',\n    'juggle',\n    'juggling',\n    'jugular',\n    'juice',\n    'juiciness',\n    'juicy',\n    'jujitsu',\n    'jukebox',\n    'july',\n    'jumble',\n    'jumbo',\n    'jump',\n    'junction',\n    'juncture',\n    'june',\n    'junior',\n    'juniper',\n    'junkie',\n    'junkman',\n    'junkyard',\n    'jurist',\n    'juror',\n    'jury',\n    'justice',\n    'justifier',\n    'justify',\n    'justly',\n    'justness',\n    'juvenile',\n    'kabob',\n    'kangaroo',\n    'karaoke',\n    'karate',\n    'karma',\n    'kebab',\n    'keenly',\n    'keenness',\n    'keep',\n    'keg',\n    'kelp',\n    'kennel',\n    'kept',\n    'kerchief',\n    'kerosene',\n    'kettle',\n    'kick',\n    'kiln',\n    'kilobyte',\n    'kilogram',\n    'kilometer',\n    'kilowatt',\n    'kilt',\n    'kimono',\n    'kindle',\n    'kindling',\n    'kindly',\n    'kindness',\n    'kindred',\n    'kinetic',\n    'kinfolk',\n    'king',\n    'kinship',\n    'kinsman',\n    'kinswoman',\n    'kissable',\n    'kisser',\n    'kissing',\n    'kitchen',\n    'kite',\n    'kitten',\n    'kitty',\n    'kiwi',\n    'kleenex',\n    'knapsack',\n    'knee',\n    'knelt',\n    'knickers',\n    'knoll',\n    'koala',\n    'kooky',\n    'kosher',\n    'krypton',\n    'kudos',\n    'kung',\n    'labored',\n    'laborer',\n    'laboring',\n    'laborious',\n    'labrador',\n    'ladder',\n    'ladies',\n    'ladle',\n    'ladybug',\n    'ladylike',\n    'lagged',\n    'lagging',\n    'lagoon',\n    'lair',\n    'lake',\n    'lance',\n    'landed',\n    'landfall',\n    'landfill',\n    'landing',\n    'landlady',\n    'landless',\n    'landline',\n    'landlord',\n    'landmark',\n    'landmass',\n    'landmine',\n    'landowner',\n    'landscape',\n    'landside',\n    'landslide',\n    'language',\n    'lankiness',\n    'lanky',\n    'lantern',\n    'lapdog',\n    'lapel',\n    'lapped',\n    'lapping',\n    'laptop',\n    'lard',\n    'large',\n    'lark',\n    'lash',\n    'lasso',\n    'last',\n    'latch',\n    'late',\n    'lather',\n    'latitude',\n    'latrine',\n    'latter',\n    'latticed',\n    'launch',\n    'launder',\n    'laundry',\n    'laurel',\n    'lavender',\n    'lavish',\n    'laxative',\n    'lazily',\n    'laziness',\n    'lazy',\n    'lecturer',\n    'left',\n    'legacy',\n    'legal',\n    'legend',\n    'legged',\n    'leggings',\n    'legible',\n    'legibly',\n    'legislate',\n    'lego',\n    'legroom',\n    'legume',\n    'legwarmer',\n    'legwork',\n    'lemon',\n    'lend',\n    'length',\n    'lens',\n    'lent',\n    'leotard',\n    'lesser',\n    'letdown',\n    'lethargic',\n    'lethargy',\n    'letter',\n    'lettuce',\n    'level',\n    'leverage',\n    'levers',\n    'levitate',\n    'levitator',\n    'liability',\n    'liable',\n    'liberty',\n    'librarian',\n    'library',\n    'licking',\n    'licorice',\n    'lid',\n    'life',\n    'lifter',\n    'lifting',\n    'liftoff',\n    'ligament',\n    'likely',\n    'likeness',\n    'likewise',\n    'liking',\n    'lilac',\n    'lilly',\n    'lily',\n    'limb',\n    'limeade',\n    'limelight',\n    'limes',\n    'limit',\n    'limping',\n    'limpness',\n    'line',\n    'lingo',\n    'linguini',\n    'linguist',\n    'lining',\n    'linked',\n    'linoleum',\n    'linseed',\n    'lint',\n    'lion',\n    'lip',\n    'liquefy',\n    'liqueur',\n    'liquid',\n    'lisp',\n    'list',\n    'litigate',\n    'litigator',\n    'litmus',\n    'litter',\n    'little',\n    'livable',\n    'lived',\n    'lively',\n    'liver',\n    'livestock',\n    'lividly',\n    'living',\n    'lizard',\n    'lubricant',\n    'lubricate',\n    'lucid',\n    'luckily',\n    'luckiness',\n    'luckless',\n    'lucrative',\n    'ludicrous',\n    'lugged',\n    'lukewarm',\n    'lullaby',\n    'lumber',\n    'luminance',\n    'luminous',\n    'lumpiness',\n    'lumping',\n    'lumpish',\n    'lunacy',\n    'lunar',\n    'lunchbox',\n    'luncheon',\n    'lunchroom',\n    'lunchtime',\n    'lung',\n    'lurch',\n    'lure',\n    'luridness',\n    'lurk',\n    'lushly',\n    'lushness',\n    'luster',\n    'lustfully',\n    'lustily',\n    'lustiness',\n    'lustrous',\n    'lusty',\n    'luxurious',\n    'luxury',\n    'lying',\n    'lyrically',\n    'lyricism',\n    'lyricist',\n    'lyrics',\n    'macarena',\n    'macaroni',\n    'macaw',\n    'mace',\n    'machine',\n    'machinist',\n    'magazine',\n    'magenta',\n    'maggot',\n    'magical',\n    'magician',\n    'magma',\n    'magnesium',\n    'magnetic',\n    'magnetism',\n    'magnetize',\n    'magnifier',\n    'magnify',\n    'magnitude',\n    'magnolia',\n    'mahogany',\n    'maimed',\n    'majestic',\n    'majesty',\n    'majorette',\n    'majority',\n    'makeover',\n    'maker',\n    'makeshift',\n    'making',\n    'malformed',\n    'malt',\n    'mama',\n    'mammal',\n    'mammary',\n    'mammogram',\n    'manager',\n    'managing',\n    'manatee',\n    'mandarin',\n    'mandate',\n    'mandatory',\n    'mandolin',\n    'manger',\n    'mangle',\n    'mango',\n    'mangy',\n    'manhandle',\n    'manhole',\n    'manhood',\n    'manhunt',\n    'manicotti',\n    'manicure',\n    'manifesto',\n    'manila',\n    'mankind',\n    'manlike',\n    'manliness',\n    'manly',\n    'manmade',\n    'manned',\n    'mannish',\n    'manor',\n    'manpower',\n    'mantis',\n    'mantra',\n    'manual',\n    'many',\n    'map',\n    'marathon',\n    'marauding',\n    'marbled',\n    'marbles',\n    'marbling',\n    'march',\n    'mardi',\n    'margarine',\n    'margarita',\n    'margin',\n    'marigold',\n    'marina',\n    'marine',\n    'marital',\n    'maritime',\n    'marlin',\n    'marmalade',\n    'maroon',\n    'married',\n    'marrow',\n    'marry',\n    'marshland',\n    'marshy',\n    'marsupial',\n    'marvelous',\n    'marxism',\n    'mascot',\n    'masculine',\n    'mashed',\n    'mashing',\n    'massager',\n    'masses',\n    'massive',\n    'mastiff',\n    'matador',\n    'matchbook',\n    'matchbox',\n    'matcher',\n    'matching',\n    'matchless',\n    'material',\n    'maternal',\n    'maternity',\n    'math',\n    'mating',\n    'matriarch',\n    'matrimony',\n    'matrix',\n    'matron',\n    'matted',\n    'matter',\n    'maturely',\n    'maturing',\n    'maturity',\n    'mauve',\n    'maverick',\n    'maximize',\n    'maximum',\n    'maybe',\n    'mayday',\n    'mayflower',\n    'moaner',\n    'moaning',\n    'mobile',\n    'mobility',\n    'mobilize',\n    'mobster',\n    'mocha',\n    'mocker',\n    'mockup',\n    'modified',\n    'modify',\n    'modular',\n    'modulator',\n    'module',\n    'moisten',\n    'moistness',\n    'moisture',\n    'molar',\n    'molasses',\n    'mold',\n    'molecular',\n    'molecule',\n    'molehill',\n    'mollusk',\n    'mom',\n    'monastery',\n    'monday',\n    'monetary',\n    'monetize',\n    'moneybags',\n    'moneyless',\n    'moneywise',\n    'mongoose',\n    'mongrel',\n    'monitor',\n    'monkhood',\n    'monogamy',\n    'monogram',\n    'monologue',\n    'monopoly',\n    'monorail',\n    'monotone',\n    'monotype',\n    'monoxide',\n    'monsieur',\n    'monsoon',\n    'monstrous',\n    'monthly',\n    'monument',\n    'moocher',\n    'moodiness',\n    'moody',\n    'mooing',\n    'moonbeam',\n    'mooned',\n    'moonlight',\n    'moonlike',\n    'moonlit',\n    'moonrise',\n    'moonscape',\n    'moonshine',\n    'moonstone',\n    'moonwalk',\n    'mop',\n    'morale',\n    'morality',\n    'morally',\n    'morbidity',\n    'morbidly',\n    'morphine',\n    'morphing',\n    'morse',\n    'mortality',\n    'mortally',\n    'mortician',\n    'mortified',\n    'mortify',\n    'mortuary',\n    'mosaic',\n    'mossy',\n    'most',\n    'mothball',\n    'mothproof',\n    'motion',\n    'motivate',\n    'motivator',\n    'motive',\n    'motocross',\n    'motor',\n    'motto',\n    'mountable',\n    'mountain',\n    'mounted',\n    'mounting',\n    'mourner',\n    'mournful',\n    'mouse',\n    'mousiness',\n    'moustache',\n    'mousy',\n    'mouth',\n    'movable',\n    'move',\n    'movie',\n    'moving',\n    'mower',\n    'mowing',\n    'much',\n    'muck',\n    'mud',\n    'mug',\n    'mulberry',\n    'mulch',\n    'mule',\n    'mulled',\n    'mullets',\n    'multiple',\n    'multiply',\n    'multitask',\n    'multitude',\n    'mumble',\n    'mumbling',\n    'mumbo',\n    'mummified',\n    'mummify',\n    'mummy',\n    'mumps',\n    'munchkin',\n    'mundane',\n    'municipal',\n    'muppet',\n    'mural',\n    'murkiness',\n    'murky',\n    'murmuring',\n    'muscular',\n    'museum',\n    'mushily',\n    'mushiness',\n    'mushroom',\n    'mushy',\n    'music',\n    'musket',\n    'muskiness',\n    'musky',\n    'mustang',\n    'mustard',\n    'muster',\n    'mustiness',\n    'musty',\n    'mutable',\n    'mutate',\n    'mutation',\n    'mute',\n    'mutilated',\n    'mutilator',\n    'mutiny',\n    'mutt',\n    'mutual',\n    'muzzle',\n    'myself',\n    'myspace',\n    'mystified',\n    'mystify',\n    'myth',\n    'nacho',\n    'nag',\n    'nail',\n    'name',\n    'naming',\n    'nanny',\n    'nanometer',\n    'nape',\n    'napkin',\n    'napped',\n    'napping',\n    'nappy',\n    'narrow',\n    'nastily',\n    'nastiness',\n    'national',\n    'native',\n    'nativity',\n    'natural',\n    'nature',\n    'naturist',\n    'nautical',\n    'navigate',\n    'navigator',\n    'navy',\n    'nearby',\n    'nearest',\n    'nearly',\n    'nearness',\n    'neatly',\n    'neatness',\n    'nebula',\n    'nebulizer',\n    'nectar',\n    'negate',\n    'negation',\n    'negative',\n    'neglector',\n    'negligee',\n    'negligent',\n    'negotiate',\n    'nemeses',\n    'nemesis',\n    'neon',\n    'nephew',\n    'nerd',\n    'nervous',\n    'nervy',\n    'nest',\n    'net',\n    'neurology',\n    'neuron',\n    'neurosis',\n    'neurotic',\n    'neuter',\n    'neutron',\n    'never',\n    'next',\n    'nibble',\n    'nickname',\n    'nicotine',\n    'niece',\n    'nifty',\n    'nimble',\n    'nimbly',\n    'nineteen',\n    'ninetieth',\n    'ninja',\n    'nintendo',\n    'ninth',\n    'nuclear',\n    'nuclei',\n    'nucleus',\n    'nugget',\n    'nullify',\n    'number',\n    'numbing',\n    'numbly',\n    'numbness',\n    'numeral',\n    'numerate',\n    'numerator',\n    'numeric',\n    'numerous',\n    'nuptials',\n    'nursery',\n    'nursing',\n    'nurture',\n    'nutcase',\n    'nutlike',\n    'nutmeg',\n    'nutrient',\n    'nutshell',\n    'nuttiness',\n    'nutty',\n    'nuzzle',\n    'nylon',\n    'oaf',\n    'oak',\n    'oasis',\n    'oat',\n    'obedience',\n    'obedient',\n    'obituary',\n    'object',\n    'obligate',\n    'obliged',\n    'oblivion',\n    'oblivious',\n    'oblong',\n    'obnoxious',\n    'oboe',\n    'obscure',\n    'obscurity',\n    'observant',\n    'observer',\n    'observing',\n    'obsessed',\n    'obsession',\n    'obsessive',\n    'obsolete',\n    'obstacle',\n    'obstinate',\n    'obstruct',\n    'obtain',\n    'obtrusive',\n    'obtuse',\n    'obvious',\n    'occultist',\n    'occupancy',\n    'occupant',\n    'occupier',\n    'occupy',\n    'ocean',\n    'ocelot',\n    'octagon',\n    'octane',\n    'october',\n    'octopus',\n    'ogle',\n    'oil',\n    'oink',\n    'ointment',\n    'okay',\n    'old',\n    'olive',\n    'olympics',\n    'omega',\n    'omen',\n    'ominous',\n    'omission',\n    'omit',\n    'omnivore',\n    'onboard',\n    'oncoming',\n    'ongoing',\n    'onion',\n    'online',\n    'onlooker',\n    'only',\n    'onscreen',\n    'onset',\n    'onshore',\n    'onslaught',\n    'onstage',\n    'onto',\n    'onward',\n    'onyx',\n    'oops',\n    'ooze',\n    'oozy',\n    'opacity',\n    'opal',\n    'open',\n    'operable',\n    'operate',\n    'operating',\n    'operation',\n    'operative',\n    'operator',\n    'opium',\n    'opossum',\n    'opponent',\n    'oppose',\n    'opposing',\n    'opposite',\n    'oppressed',\n    'oppressor',\n    'opt',\n    'opulently',\n    'osmosis',\n    'other',\n    'otter',\n    'ouch',\n    'ought',\n    'ounce',\n    'outage',\n    'outback',\n    'outbid',\n    'outboard',\n    'outbound',\n    'outbreak',\n    'outburst',\n    'outcast',\n    'outclass',\n    'outcome',\n    'outdated',\n    'outdoors',\n    'outer',\n    'outfield',\n    'outfit',\n    'outflank',\n    'outgoing',\n    'outgrow',\n    'outhouse',\n    'outing',\n    'outlast',\n    'outlet',\n    'outline',\n    'outlook',\n    'outlying',\n    'outmatch',\n    'outmost',\n    'outnumber',\n    'outplayed',\n    'outpost',\n    'outpour',\n    'output',\n    'outrage',\n    'outrank',\n    'outreach',\n    'outright',\n    'outscore',\n    'outsell',\n    'outshine',\n    'outshoot',\n    'outsider',\n    'outskirts',\n    'outsmart',\n    'outsource',\n    'outspoken',\n    'outtakes',\n    'outthink',\n    'outward',\n    'outweigh',\n    'outwit',\n    'oval',\n    'ovary',\n    'oven',\n    'overact',\n    'overall',\n    'overarch',\n    'overbid',\n    'overbill',\n    'overbite',\n    'overblown',\n    'overboard',\n    'overbook',\n    'overbuilt',\n    'overcast',\n    'overcoat',\n    'overcome',\n    'overcook',\n    'overcrowd',\n    'overdraft',\n    'overdrawn',\n    'overdress',\n    'overdrive',\n    'overdue',\n    'overeager',\n    'overeater',\n    'overexert',\n    'overfed',\n    'overfeed',\n    'overfill',\n    'overflow',\n    'overfull',\n    'overgrown',\n    'overhand',\n    'overhang',\n    'overhaul',\n    'overhead',\n    'overhear',\n    'overheat',\n    'overhung',\n    'overjoyed',\n    'overkill',\n    'overlabor',\n    'overlaid',\n    'overlap',\n    'overlay',\n    'overload',\n    'overlook',\n    'overlord',\n    'overlying',\n    'overnight',\n    'overpass',\n    'overpay',\n    'overplant',\n    'overplay',\n    'overpower',\n    'overprice',\n    'overrate',\n    'overreach',\n    'overreact',\n    'override',\n    'overripe',\n    'overrule',\n    'overrun',\n    'overshoot',\n    'overshot',\n    'oversight',\n    'oversized',\n    'oversleep',\n    'oversold',\n    'overspend',\n    'overstate',\n    'overstay',\n    'overstep',\n    'overstock',\n    'overstuff',\n    'oversweet',\n    'overtake',\n    'overthrow',\n    'overtime',\n    'overtly',\n    'overtone',\n    'overture',\n    'overturn',\n    'overuse',\n    'overvalue',\n    'overview',\n    'overwrite',\n    'owl',\n    'oxford',\n    'oxidant',\n    'oxidation',\n    'oxidize',\n    'oxidizing',\n    'oxygen',\n    'oxymoron',\n    'oyster',\n    'ozone',\n    'paced',\n    'pacemaker',\n    'pacific',\n    'pacifier',\n    'pacifism',\n    'pacifist',\n    'pacify',\n    'padded',\n    'padding',\n    'paddle',\n    'paddling',\n    'padlock',\n    'pagan',\n    'pager',\n    'paging',\n    'pajamas',\n    'palace',\n    'palatable',\n    'palm',\n    'palpable',\n    'palpitate',\n    'paltry',\n    'pampered',\n    'pamperer',\n    'pampers',\n    'pamphlet',\n    'panama',\n    'pancake',\n    'pancreas',\n    'panda',\n    'pandemic',\n    'pang',\n    'panhandle',\n    'panic',\n    'panning',\n    'panorama',\n    'panoramic',\n    'panther',\n    'pantomime',\n    'pantry',\n    'pants',\n    'pantyhose',\n    'paparazzi',\n    'papaya',\n    'paper',\n    'paprika',\n    'papyrus',\n    'parabola',\n    'parachute',\n    'parade',\n    'paradox',\n    'paragraph',\n    'parakeet',\n    'paralegal',\n    'paralyses',\n    'paralysis',\n    'paralyze',\n    'paramedic',\n    'parameter',\n    'paramount',\n    'parasail',\n    'parasite',\n    'parasitic',\n    'parcel',\n    'parched',\n    'parchment',\n    'pardon',\n    'parish',\n    'parka',\n    'parking',\n    'parkway',\n    'parlor',\n    'parmesan',\n    'parole',\n    'parrot',\n    'parsley',\n    'parsnip',\n    'partake',\n    'parted',\n    'parting',\n    'partition',\n    'partly',\n    'partner',\n    'partridge',\n    'party',\n    'passable',\n    'passably',\n    'passage',\n    'passcode',\n    'passenger',\n    'passerby',\n    'passing',\n    'passion',\n    'passive',\n    'passivism',\n    'passover',\n    'passport',\n    'password',\n    'pasta',\n    'pasted',\n    'pastel',\n    'pastime',\n    'pastor',\n    'pastrami',\n    'pasture',\n    'pasty',\n    'patchwork',\n    'patchy',\n    'paternal',\n    'paternity',\n    'path',\n    'patience',\n    'patient',\n    'patio',\n    'patriarch',\n    'patriot',\n    'patrol',\n    'patronage',\n    'patronize',\n    'pauper',\n    'pavement',\n    'paver',\n    'pavestone',\n    'pavilion',\n    'paving',\n    'pawing',\n    'payable',\n    'payback',\n    'paycheck',\n    'payday',\n    'payee',\n    'payer',\n    'paying',\n    'payment',\n    'payphone',\n    'payroll',\n    'pebble',\n    'pebbly',\n    'pecan',\n    'pectin',\n    'peculiar',\n    'peddling',\n    'pediatric',\n    'pedicure',\n    'pedigree',\n    'pedometer',\n    'pegboard',\n    'pelican',\n    'pellet',\n    'pelt',\n    'pelvis',\n    'penalize',\n    'penalty',\n    'pencil',\n    'pendant',\n    'pending',\n    'penholder',\n    'penknife',\n    'pennant',\n    'penniless',\n    'penny',\n    'penpal',\n    'pension',\n    'pentagon',\n    'pentagram',\n    'pep',\n    'perceive',\n    'percent',\n    'perch',\n    'percolate',\n    'perennial',\n    'perfected',\n    'perfectly',\n    'perfume',\n    'periscope',\n    'perish',\n    'perjurer',\n    'perjury',\n    'perkiness',\n    'perky',\n    'perm',\n    'peroxide',\n    'perpetual',\n    'perplexed',\n    'persecute',\n    'persevere',\n    'persuaded',\n    'persuader',\n    'pesky',\n    'peso',\n    'pessimism',\n    'pessimist',\n    'pester',\n    'pesticide',\n    'petal',\n    'petite',\n    'petition',\n    'petri',\n    'petroleum',\n    'petted',\n    'petticoat',\n    'pettiness',\n    'petty',\n    'petunia',\n    'phantom',\n    'phobia',\n    'phoenix',\n    'phonebook',\n    'phoney',\n    'phonics',\n    'phoniness',\n    'phony',\n    'phosphate',\n    'photo',\n    'phrase',\n    'phrasing',\n    'placard',\n    'placate',\n    'placidly',\n    'plank',\n    'planner',\n    'plant',\n    'plasma',\n    'plaster',\n    'plastic',\n    'plated',\n    'platform',\n    'plating',\n    'platinum',\n    'platonic',\n    'platter',\n    'platypus',\n    'plausible',\n    'plausibly',\n    'playable',\n    'playback',\n    'player',\n    'playful',\n    'playgroup',\n    'playhouse',\n    'playing',\n    'playlist',\n    'playmaker',\n    'playmate',\n    'playoff',\n    'playpen',\n    'playroom',\n    'playset',\n    'plaything',\n    'playtime',\n    'plaza',\n    'pleading',\n    'pleat',\n    'pledge',\n    'plentiful',\n    'plenty',\n    'plethora',\n    'plexiglas',\n    'pliable',\n    'plod',\n    'plop',\n    'plot',\n    'plow',\n    'ploy',\n    'pluck',\n    'plug',\n    'plunder',\n    'plunging',\n    'plural',\n    'plus',\n    'plutonium',\n    'plywood',\n    'poach',\n    'pod',\n    'poem',\n    'poet',\n    'pogo',\n    'pointed',\n    'pointer',\n    'pointing',\n    'pointless',\n    'pointy',\n    'poise',\n    'poison',\n    'poker',\n    'poking',\n    'polar',\n    'police',\n    'policy',\n    'polio',\n    'polish',\n    'politely',\n    'polka',\n    'polo',\n    'polyester',\n    'polygon',\n    'polygraph',\n    'polymer',\n    'poncho',\n    'pond',\n    'pony',\n    'popcorn',\n    'pope',\n    'poplar',\n    'popper',\n    'poppy',\n    'popsicle',\n    'populace',\n    'popular',\n    'populate',\n    'porcupine',\n    'pork',\n    'porous',\n    'porridge',\n    'portable',\n    'portal',\n    'portfolio',\n    'porthole',\n    'portion',\n    'portly',\n    'portside',\n    'poser',\n    'posh',\n    'posing',\n    'possible',\n    'possibly',\n    'possum',\n    'postage',\n    'postal',\n    'postbox',\n    'postcard',\n    'posted',\n    'poster',\n    'posting',\n    'postnasal',\n    'posture',\n    'postwar',\n    'pouch',\n    'pounce',\n    'pouncing',\n    'pound',\n    'pouring',\n    'pout',\n    'powdered',\n    'powdering',\n    'powdery',\n    'power',\n    'powwow',\n    'pox',\n    'praising',\n    'prance',\n    'prancing',\n    'pranker',\n    'prankish',\n    'prankster',\n    'prayer',\n    'praying',\n    'preacher',\n    'preaching',\n    'preachy',\n    'preamble',\n    'precinct',\n    'precise',\n    'precision',\n    'precook',\n    'precut',\n    'predator',\n    'predefine',\n    'predict',\n    'preface',\n    'prefix',\n    'preflight',\n    'preformed',\n    'pregame',\n    'pregnancy',\n    'pregnant',\n    'preheated',\n    'prelaunch',\n    'prelaw',\n    'prelude',\n    'premiere',\n    'premises',\n    'premium',\n    'prenatal',\n    'preoccupy',\n    'preorder',\n    'prepaid',\n    'prepay',\n    'preplan',\n    'preppy',\n    'preschool',\n    'prescribe',\n    'preseason',\n    'preset',\n    'preshow',\n    'president',\n    'presoak',\n    'press',\n    'presume',\n    'presuming',\n    'preteen',\n    'pretended',\n    'pretender',\n    'pretense',\n    'pretext',\n    'pretty',\n    'pretzel',\n    'prevail',\n    'prevalent',\n    'prevent',\n    'preview',\n    'previous',\n    'prewar',\n    'prewashed',\n    'prideful',\n    'pried',\n    'primal',\n    'primarily',\n    'primary',\n    'primate',\n    'primer',\n    'primp',\n    'princess',\n    'print',\n    'prior',\n    'prism',\n    'prison',\n    'prissy',\n    'pristine',\n    'privacy',\n    'private',\n    'privatize',\n    'prize',\n    'proactive',\n    'probable',\n    'probably',\n    'probation',\n    'probe',\n    'probing',\n    'probiotic',\n    'problem',\n    'procedure',\n    'process',\n    'proclaim',\n    'procreate',\n    'procurer',\n    'prodigal',\n    'prodigy',\n    'produce',\n    'product',\n    'profane',\n    'profanity',\n    'professed',\n    'professor',\n    'profile',\n    'profound',\n    'profusely',\n    'progeny',\n    'prognosis',\n    'program',\n    'progress',\n    'projector',\n    'prologue',\n    'prolonged',\n    'promenade',\n    'prominent',\n    'promoter',\n    'promotion',\n    'prompter',\n    'promptly',\n    'prone',\n    'prong',\n    'pronounce',\n    'pronto',\n    'proofing',\n    'proofread',\n    'proofs',\n    'propeller',\n    'properly',\n    'property',\n    'proponent',\n    'proposal',\n    'propose',\n    'props',\n    'prorate',\n    'protector',\n    'protegee',\n    'proton',\n    'prototype',\n    'protozoan',\n    'protract',\n    'protrude',\n    'proud',\n    'provable',\n    'proved',\n    'proven',\n    'provided',\n    'provider',\n    'providing',\n    'province',\n    'proving',\n    'provoke',\n    'provoking',\n    'provolone',\n    'prowess',\n    'prowler',\n    'prowling',\n    'proximity',\n    'proxy',\n    'prozac',\n    'prude',\n    'prudishly',\n    'prune',\n    'pruning',\n    'pry',\n    'psychic',\n    'public',\n    'publisher',\n    'pucker',\n    'pueblo',\n    'pug',\n    'pull',\n    'pulmonary',\n    'pulp',\n    'pulsate',\n    'pulse',\n    'pulverize',\n    'puma',\n    'pumice',\n    'pummel',\n    'punch',\n    'punctual',\n    'punctuate',\n    'punctured',\n    'pungent',\n    'punisher',\n    'punk',\n    'pupil',\n    'puppet',\n    'puppy',\n    'purchase',\n    'pureblood',\n    'purebred',\n    'purely',\n    'pureness',\n    'purgatory',\n    'purge',\n    'purging',\n    'purifier',\n    'purify',\n    'purist',\n    'puritan',\n    'purity',\n    'purple',\n    'purplish',\n    'purposely',\n    'purr',\n    'purse',\n    'pursuable',\n    'pursuant',\n    'pursuit',\n    'purveyor',\n    'pushcart',\n    'pushchair',\n    'pusher',\n    'pushiness',\n    'pushing',\n    'pushover',\n    'pushpin',\n    'pushup',\n    'pushy',\n    'putdown',\n    'putt',\n    'puzzle',\n    'puzzling',\n    'pyramid',\n    'pyromania',\n    'python',\n    'quack',\n    'quadrant',\n    'quail',\n    'quaintly',\n    'quake',\n    'quaking',\n    'qualified',\n    'qualifier',\n    'qualify',\n    'quality',\n    'qualm',\n    'quantum',\n    'quarrel',\n    'quarry',\n    'quartered',\n    'quarterly',\n    'quarters',\n    'quartet',\n    'quench',\n    'query',\n    'quicken',\n    'quickly',\n    'quickness',\n    'quicksand',\n    'quickstep',\n    'quiet',\n    'quill',\n    'quilt',\n    'quintet',\n    'quintuple',\n    'quirk',\n    'quit',\n    'quiver',\n    'quizzical',\n    'quotable',\n    'quotation',\n    'quote',\n    'rabid',\n    'race',\n    'racing',\n    'racism',\n    'rack',\n    'racoon',\n    'radar',\n    'radial',\n    'radiance',\n    'radiantly',\n    'radiated',\n    'radiation',\n    'radiator',\n    'radio',\n    'radish',\n    'raffle',\n    'raft',\n    'rage',\n    'ragged',\n    'raging',\n    'ragweed',\n    'raider',\n    'railcar',\n    'railing',\n    'railroad',\n    'railway',\n    'raisin',\n    'rake',\n    'raking',\n    'rally',\n    'ramble',\n    'rambling',\n    'ramp',\n    'ramrod',\n    'ranch',\n    'rancidity',\n    'random',\n    'ranged',\n    'ranger',\n    'ranging',\n    'ranked',\n    'ranking',\n    'ransack',\n    'ranting',\n    'rants',\n    'rare',\n    'rarity',\n    'rascal',\n    'rash',\n    'rasping',\n    'ravage',\n    'raven',\n    'ravine',\n    'raving',\n    'ravioli',\n    'ravishing',\n    'reabsorb',\n    'reach',\n    'reacquire',\n    'reaction',\n    'reactive',\n    'reactor',\n    'reaffirm',\n    'ream',\n    'reanalyze',\n    'reappear',\n    'reapply',\n    'reappoint',\n    'reapprove',\n    'rearrange',\n    'rearview',\n    'reason',\n    'reassign',\n    'reassure',\n    'reattach',\n    'reawake',\n    'rebalance',\n    'rebate',\n    'rebel',\n    'rebirth',\n    'reboot',\n    'reborn',\n    'rebound',\n    'rebuff',\n    'rebuild',\n    'rebuilt',\n    'reburial',\n    'rebuttal',\n    'recall',\n    'recant',\n    'recapture',\n    'recast',\n    'recede',\n    'recent',\n    'recess',\n    'recharger',\n    'recipient',\n    'recital',\n    'recite',\n    'reckless',\n    'reclaim',\n    'recliner',\n    'reclining',\n    'recluse',\n    'reclusive',\n    'recognize',\n    'recoil',\n    'recollect',\n    'recolor',\n    'reconcile',\n    'reconfirm',\n    'reconvene',\n    'recopy',\n    'record',\n    'recount',\n    'recoup',\n    'recovery',\n    'recreate',\n    'rectal',\n    'rectangle',\n    'rectified',\n    'rectify',\n    'recycled',\n    'recycler',\n    'recycling',\n    'reemerge',\n    'reenact',\n    'reenter',\n    'reentry',\n    'reexamine',\n    'referable',\n    'referee',\n    'reference',\n    'refill',\n    'refinance',\n    'refined',\n    'refinery',\n    'refining',\n    'refinish',\n    'reflected',\n    'reflector',\n    'reflex',\n    'reflux',\n    'refocus',\n    'refold',\n    'reforest',\n    'reformat',\n    'reformed',\n    'reformer',\n    'reformist',\n    'refract',\n    'refrain',\n    'refreeze',\n    'refresh',\n    'refried',\n    'refueling',\n    'refund',\n    'refurbish',\n    'refurnish',\n    'refusal',\n    'refuse',\n    'refusing',\n    'refutable',\n    'refute',\n    'regain',\n    'regalia',\n    'regally',\n    'reggae',\n    'regime',\n    'region',\n    'register',\n    'registrar',\n    'registry',\n    'regress',\n    'regretful',\n    'regroup',\n    'regular',\n    'regulate',\n    'regulator',\n    'rehab',\n    'reheat',\n    'rehire',\n    'rehydrate',\n    'reimburse',\n    'reissue',\n    'reiterate',\n    'rejoice',\n    'rejoicing',\n    'rejoin',\n    'rekindle',\n    'relapse',\n    'relapsing',\n    'relatable',\n    'related',\n    'relation',\n    'relative',\n    'relax',\n    'relay',\n    'relearn',\n    'release',\n    'relenting',\n    'reliable',\n    'reliably',\n    'reliance',\n    'reliant',\n    'relic',\n    'relieve',\n    'relieving',\n    'relight',\n    'relish',\n    'relive',\n    'reload',\n    'relocate',\n    'relock',\n    'reluctant',\n    'rely',\n    'remake',\n    'remark',\n    'remarry',\n    'rematch',\n    'remedial',\n    'remedy',\n    'remember',\n    'reminder',\n    'remindful',\n    'remission',\n    'remix',\n    'remnant',\n    'remodeler',\n    'remold',\n    'remorse',\n    'remote',\n    'removable',\n    'removal',\n    'removed',\n    'remover',\n    'removing',\n    'rename',\n    'renderer',\n    'rendering',\n    'rendition',\n    'renegade',\n    'renewable',\n    'renewably',\n    'renewal',\n    'renewed',\n    'renounce',\n    'renovate',\n    'renovator',\n    'rentable',\n    'rental',\n    'rented',\n    'renter',\n    'reoccupy',\n    'reoccur',\n    'reopen',\n    'reorder',\n    'repackage',\n    'repacking',\n    'repaint',\n    'repair',\n    'repave',\n    'repaying',\n    'repayment',\n    'repeal',\n    'repeated',\n    'repeater',\n    'repent',\n    'rephrase',\n    'replace',\n    'replay',\n    'replica',\n    'reply',\n    'reporter',\n    'repose',\n    'repossess',\n    'repost',\n    'repressed',\n    'reprimand',\n    'reprint',\n    'reprise',\n    'reproach',\n    'reprocess',\n    'reproduce',\n    'reprogram',\n    'reps',\n    'reptile',\n    'reptilian',\n    'repugnant',\n    'repulsion',\n    'repulsive',\n    'repurpose',\n    'reputable',\n    'reputably',\n    'request',\n    'require',\n    'requisite',\n    'reroute',\n    'rerun',\n    'resale',\n    'resample',\n    'rescuer',\n    'reseal',\n    'research',\n    'reselect',\n    'reseller',\n    'resemble',\n    'resend',\n    'resent',\n    'reset',\n    'reshape',\n    'reshoot',\n    'reshuffle',\n    'residence',\n    'residency',\n    'resident',\n    'residual',\n    'residue',\n    'resigned',\n    'resilient',\n    'resistant',\n    'resisting',\n    'resize',\n    'resolute',\n    'resolved',\n    'resonant',\n    'resonate',\n    'resort',\n    'resource',\n    'respect',\n    'resubmit',\n    'result',\n    'resume',\n    'resupply',\n    'resurface',\n    'resurrect',\n    'retail',\n    'retainer',\n    'retaining',\n    'retake',\n    'retaliate',\n    'retention',\n    'rethink',\n    'retinal',\n    'retired',\n    'retiree',\n    'retiring',\n    'retold',\n    'retool',\n    'retorted',\n    'retouch',\n    'retrace',\n    'retract',\n    'retrain',\n    'retread',\n    'retreat',\n    'retrial',\n    'retrieval',\n    'retriever',\n    'retry',\n    'return',\n    'retying',\n    'retype',\n    'reunion',\n    'reunite',\n    'reusable',\n    'reuse',\n    'reveal',\n    'reveler',\n    'revenge',\n    'revenue',\n    'reverb',\n    'revered',\n    'reverence',\n    'reverend',\n    'reversal',\n    'reverse',\n    'reversing',\n    'reversion',\n    'revert',\n    'revisable',\n    'revise',\n    'revision',\n    'revisit',\n    'revivable',\n    'revival',\n    'reviver',\n    'reviving',\n    'revocable',\n    'revoke',\n    'revolt',\n    'revolver',\n    'revolving',\n    'reward',\n    'rewash',\n    'rewind',\n    'rewire',\n    'reword',\n    'rework',\n    'rewrap',\n    'rewrite',\n    'rhyme',\n    'ribbon',\n    'ribcage',\n    'rice',\n    'riches',\n    'richly',\n    'richness',\n    'rickety',\n    'ricotta',\n    'riddance',\n    'ridden',\n    'ride',\n    'riding',\n    'rifling',\n    'rift',\n    'rigging',\n    'rigid',\n    'rigor',\n    'rimless',\n    'rimmed',\n    'rind',\n    'rink',\n    'rinse',\n    'rinsing',\n    'riot',\n    'ripcord',\n    'ripeness',\n    'ripening',\n    'ripping',\n    'ripple',\n    'rippling',\n    'riptide',\n    'rise',\n    'rising',\n    'risk',\n    'risotto',\n    'ritalin',\n    'ritzy',\n    'rival',\n    'riverbank',\n    'riverbed',\n    'riverboat',\n    'riverside',\n    'riveter',\n    'riveting',\n    'roamer',\n    'roaming',\n    'roast',\n    'robbing',\n    'robe',\n    'robin',\n    'robotics',\n    'robust',\n    'rockband',\n    'rocker',\n    'rocket',\n    'rockfish',\n    'rockiness',\n    'rocking',\n    'rocklike',\n    'rockslide',\n    'rockstar',\n    'rocky',\n    'rogue',\n    'roman',\n    'romp',\n    'rope',\n    'roping',\n    'roster',\n    'rosy',\n    'rotten',\n    'rotting',\n    'rotunda',\n    'roulette',\n    'rounding',\n    'roundish',\n    'roundness',\n    'roundup',\n    'roundworm',\n    'routine',\n    'routing',\n    'rover',\n    'roving',\n    'royal',\n    'rubbed',\n    'rubber',\n    'rubbing',\n    'rubble',\n    'rubdown',\n    'ruby',\n    'ruckus',\n    'rudder',\n    'rug',\n    'ruined',\n    'rule',\n    'rumble',\n    'rumbling',\n    'rummage',\n    'rumor',\n    'runaround',\n    'rundown',\n    'runner',\n    'running',\n    'runny',\n    'runt',\n    'runway',\n    'rupture',\n    'rural',\n    'ruse',\n    'rush',\n    'rust',\n    'rut',\n    'sabbath',\n    'sabotage',\n    'sacrament',\n    'sacred',\n    'sacrifice',\n    'sadden',\n    'saddlebag',\n    'saddled',\n    'saddling',\n    'sadly',\n    'sadness',\n    'safari',\n    'safeguard',\n    'safehouse',\n    'safely',\n    'safeness',\n    'saffron',\n    'saga',\n    'sage',\n    'sagging',\n    'saggy',\n    'said',\n    'saint',\n    'sake',\n    'salad',\n    'salami',\n    'salaried',\n    'salary',\n    'saline',\n    'salon',\n    'saloon',\n    'salsa',\n    'salt',\n    'salutary',\n    'salute',\n    'salvage',\n    'salvaging',\n    'salvation',\n    'same',\n    'sample',\n    'sampling',\n    'sanction',\n    'sanctity',\n    'sanctuary',\n    'sandal',\n    'sandbag',\n    'sandbank',\n    'sandbar',\n    'sandblast',\n    'sandbox',\n    'sanded',\n    'sandfish',\n    'sanding',\n    'sandlot',\n    'sandpaper',\n    'sandpit',\n    'sandstone',\n    'sandstorm',\n    'sandworm',\n    'sandy',\n    'sanitary',\n    'sanitizer',\n    'sank',\n    'santa',\n    'sapling',\n    'sappiness',\n    'sappy',\n    'sarcasm',\n    'sarcastic',\n    'sardine',\n    'sash',\n    'sasquatch',\n    'sassy',\n    'satchel',\n    'satiable',\n    'satin',\n    'satirical',\n    'satisfied',\n    'satisfy',\n    'saturate',\n    'saturday',\n    'sauciness',\n    'saucy',\n    'sauna',\n    'savage',\n    'savanna',\n    'saved',\n    'savings',\n    'savior',\n    'savor',\n    'saxophone',\n    'say',\n    'scabbed',\n    'scabby',\n    'scalded',\n    'scalding',\n    'scale',\n    'scaling',\n    'scallion',\n    'scallop',\n    'scalping',\n    'scam',\n    'scandal',\n    'scanner',\n    'scanning',\n    'scant',\n    'scapegoat',\n    'scarce',\n    'scarcity',\n    'scarecrow',\n    'scared',\n    'scarf',\n    'scarily',\n    'scariness',\n    'scarring',\n    'scary',\n    'scavenger',\n    'scenic',\n    'schedule',\n    'schematic',\n    'scheme',\n    'scheming',\n    'schilling',\n    'schnapps',\n    'scholar',\n    'science',\n    'scientist',\n    'scion',\n    'scoff',\n    'scolding',\n    'scone',\n    'scoop',\n    'scooter',\n    'scope',\n    'scorch',\n    'scorebook',\n    'scorecard',\n    'scored',\n    'scoreless',\n    'scorer',\n    'scoring',\n    'scorn',\n    'scorpion',\n    'scotch',\n    'scoundrel',\n    'scoured',\n    'scouring',\n    'scouting',\n    'scouts',\n    'scowling',\n    'scrabble',\n    'scraggly',\n    'scrambled',\n    'scrambler',\n    'scrap',\n    'scratch',\n    'scrawny',\n    'screen',\n    'scribble',\n    'scribe',\n    'scribing',\n    'scrimmage',\n    'script',\n    'scroll',\n    'scrooge',\n    'scrounger',\n    'scrubbed',\n    'scrubber',\n    'scruffy',\n    'scrunch',\n    'scrutiny',\n    'scuba',\n    'scuff',\n    'sculptor',\n    'sculpture',\n    'scurvy',\n    'scuttle',\n    'secluded',\n    'secluding',\n    'seclusion',\n    'second',\n    'secrecy',\n    'secret',\n    'sectional',\n    'sector',\n    'secular',\n    'securely',\n    'security',\n    'sedan',\n    'sedate',\n    'sedation',\n    'sedative',\n    'sediment',\n    'seduce',\n    'seducing',\n    'segment',\n    'seismic',\n    'seizing',\n    'seldom',\n    'selected',\n    'selection',\n    'selective',\n    'selector',\n    'self',\n    'seltzer',\n    'semantic',\n    'semester',\n    'semicolon',\n    'semifinal',\n    'seminar',\n    'semisoft',\n    'semisweet',\n    'senate',\n    'senator',\n    'send',\n    'senior',\n    'senorita',\n    'sensation',\n    'sensitive',\n    'sensitize',\n    'sensually',\n    'sensuous',\n    'sepia',\n    'september',\n    'septic',\n    'septum',\n    'sequel',\n    'sequence',\n    'sequester',\n    'series',\n    'sermon',\n    'serotonin',\n    'serpent',\n    'serrated',\n    'serve',\n    'service',\n    'serving',\n    'sesame',\n    'sessions',\n    'setback',\n    'setting',\n    'settle',\n    'settling',\n    'setup',\n    'sevenfold',\n    'seventeen',\n    'seventh',\n    'seventy',\n    'severity',\n    'shabby',\n    'shack',\n    'shaded',\n    'shadily',\n    'shadiness',\n    'shading',\n    'shadow',\n    'shady',\n    'shaft',\n    'shakable',\n    'shakily',\n    'shakiness',\n    'shaking',\n    'shaky',\n    'shale',\n    'shallot',\n    'shallow',\n    'shame',\n    'shampoo',\n    'shamrock',\n    'shank',\n    'shanty',\n    'shape',\n    'shaping',\n    'share',\n    'sharpener',\n    'sharper',\n    'sharpie',\n    'sharply',\n    'sharpness',\n    'shawl',\n    'sheath',\n    'shed',\n    'sheep',\n    'sheet',\n    'shelf',\n    'shell',\n    'shelter',\n    'shelve',\n    'shelving',\n    'sherry',\n    'shield',\n    'shifter',\n    'shifting',\n    'shiftless',\n    'shifty',\n    'shimmer',\n    'shimmy',\n    'shindig',\n    'shine',\n    'shingle',\n    'shininess',\n    'shining',\n    'shiny',\n    'ship',\n    'shirt',\n    'shivering',\n    'shock',\n    'shone',\n    'shoplift',\n    'shopper',\n    'shopping',\n    'shoptalk',\n    'shore',\n    'shortage',\n    'shortcake',\n    'shortcut',\n    'shorten',\n    'shorter',\n    'shorthand',\n    'shortlist',\n    'shortly',\n    'shortness',\n    'shorts',\n    'shortwave',\n    'shorty',\n    'shout',\n    'shove',\n    'showbiz',\n    'showcase',\n    'showdown',\n    'shower',\n    'showgirl',\n    'showing',\n    'showman',\n    'shown',\n    'showoff',\n    'showpiece',\n    'showplace',\n    'showroom',\n    'showy',\n    'shrank',\n    'shrapnel',\n    'shredder',\n    'shredding',\n    'shrewdly',\n    'shriek',\n    'shrill',\n    'shrimp',\n    'shrine',\n    'shrink',\n    'shrivel',\n    'shrouded',\n    'shrubbery',\n    'shrubs',\n    'shrug',\n    'shrunk',\n    'shucking',\n    'shudder',\n    'shuffle',\n    'shuffling',\n    'shun',\n    'shush',\n    'shut',\n    'shy',\n    'siamese',\n    'siberian',\n    'sibling',\n    'siding',\n    'sierra',\n    'siesta',\n    'sift',\n    'sighing',\n    'silenced',\n    'silencer',\n    'silent',\n    'silica',\n    'silicon',\n    'silk',\n    'silliness',\n    'silly',\n    'silo',\n    'silt',\n    'silver',\n    'similarly',\n    'simile',\n    'simmering',\n    'simple',\n    'simplify',\n    'simply',\n    'sincere',\n    'sincerity',\n    'singer',\n    'singing',\n    'single',\n    'singular',\n    'sinister',\n    'sinless',\n    'sinner',\n    'sinuous',\n    'sip',\n    'siren',\n    'sister',\n    'sitcom',\n    'sitter',\n    'sitting',\n    'situated',\n    'situation',\n    'sixfold',\n    'sixteen',\n    'sixth',\n    'sixties',\n    'sixtieth',\n    'sixtyfold',\n    'sizable',\n    'sizably',\n    'size',\n    'sizing',\n    'sizzle',\n    'sizzling',\n    'skater',\n    'skating',\n    'skedaddle',\n    'skeletal',\n    'skeleton',\n    'skeptic',\n    'sketch',\n    'skewed',\n    'skewer',\n    'skid',\n    'skied',\n    'skier',\n    'skies',\n    'skiing',\n    'skilled',\n    'skillet',\n    'skillful',\n    'skimmed',\n    'skimmer',\n    'skimming',\n    'skimpily',\n    'skincare',\n    'skinhead',\n    'skinless',\n    'skinning',\n    'skinny',\n    'skintight',\n    'skipper',\n    'skipping',\n    'skirmish',\n    'skirt',\n    'skittle',\n    'skydiver',\n    'skylight',\n    'skyline',\n    'skype',\n    'skyrocket',\n    'skyward',\n    'slab',\n    'slacked',\n    'slacker',\n    'slacking',\n    'slackness',\n    'slacks',\n    'slain',\n    'slam',\n    'slander',\n    'slang',\n    'slapping',\n    'slapstick',\n    'slashed',\n    'slashing',\n    'slate',\n    'slather',\n    'slaw',\n    'sled',\n    'sleek',\n    'sleep',\n    'sleet',\n    'sleeve',\n    'slept',\n    'sliceable',\n    'sliced',\n    'slicer',\n    'slicing',\n    'slick',\n    'slider',\n    'slideshow',\n    'sliding',\n    'slighted',\n    'slighting',\n    'slightly',\n    'slimness',\n    'slimy',\n    'slinging',\n    'slingshot',\n    'slinky',\n    'slip',\n    'slit',\n    'sliver',\n    'slobbery',\n    'slogan',\n    'sloped',\n    'sloping',\n    'sloppily',\n    'sloppy',\n    'slot',\n    'slouching',\n    'slouchy',\n    'sludge',\n    'slug',\n    'slum',\n    'slurp',\n    'slush',\n    'sly',\n    'small',\n    'smartly',\n    'smartness',\n    'smasher',\n    'smashing',\n    'smashup',\n    'smell',\n    'smelting',\n    'smile',\n    'smilingly',\n    'smirk',\n    'smite',\n    'smith',\n    'smitten',\n    'smock',\n    'smog',\n    'smoked',\n    'smokeless',\n    'smokiness',\n    'smoking',\n    'smoky',\n    'smolder',\n    'smooth',\n    'smother',\n    'smudge',\n    'smudgy',\n    'smuggler',\n    'smuggling',\n    'smugly',\n    'smugness',\n    'snack',\n    'snagged',\n    'snaking',\n    'snap',\n    'snare',\n    'snarl',\n    'snazzy',\n    'sneak',\n    'sneer',\n    'sneeze',\n    'sneezing',\n    'snide',\n    'sniff',\n    'snippet',\n    'snipping',\n    'snitch',\n    'snooper',\n    'snooze',\n    'snore',\n    'snoring',\n    'snorkel',\n    'snort',\n    'snout',\n    'snowbird',\n    'snowboard',\n    'snowbound',\n    'snowcap',\n    'snowdrift',\n    'snowdrop',\n    'snowfall',\n    'snowfield',\n    'snowflake',\n    'snowiness',\n    'snowless',\n    'snowman',\n    'snowplow',\n    'snowshoe',\n    'snowstorm',\n    'snowsuit',\n    'snowy',\n    'snub',\n    'snuff',\n    'snuggle',\n    'snugly',\n    'snugness',\n    'speak',\n    'spearfish',\n    'spearhead',\n    'spearman',\n    'spearmint',\n    'species',\n    'specimen',\n    'specked',\n    'speckled',\n    'specks',\n    'spectacle',\n    'spectator',\n    'spectrum',\n    'speculate',\n    'speech',\n    'speed',\n    'spellbind',\n    'speller',\n    'spelling',\n    'spendable',\n    'spender',\n    'spending',\n    'spent',\n    'spew',\n    'sphere',\n    'spherical',\n    'sphinx',\n    'spider',\n    'spied',\n    'spiffy',\n    'spill',\n    'spilt',\n    'spinach',\n    'spinal',\n    'spindle',\n    'spinner',\n    'spinning',\n    'spinout',\n    'spinster',\n    'spiny',\n    'spiral',\n    'spirited',\n    'spiritism',\n    'spirits',\n    'spiritual',\n    'splashed',\n    'splashing',\n    'splashy',\n    'splatter',\n    'spleen',\n    'splendid',\n    'splendor',\n    'splice',\n    'splicing',\n    'splinter',\n    'splotchy',\n    'splurge',\n    'spoilage',\n    'spoiled',\n    'spoiler',\n    'spoiling',\n    'spoils',\n    'spoken',\n    'spokesman',\n    'sponge',\n    'spongy',\n    'sponsor',\n    'spoof',\n    'spookily',\n    'spooky',\n    'spool',\n    'spoon',\n    'spore',\n    'sporting',\n    'sports',\n    'sporty',\n    'spotless',\n    'spotlight',\n    'spotted',\n    'spotter',\n    'spotting',\n    'spotty',\n    'spousal',\n    'spouse',\n    'spout',\n    'sprain',\n    'sprang',\n    'sprawl',\n    'spray',\n    'spree',\n    'sprig',\n    'spring',\n    'sprinkled',\n    'sprinkler',\n    'sprint',\n    'sprite',\n    'sprout',\n    'spruce',\n    'sprung',\n    'spry',\n    'spud',\n    'spur',\n    'sputter',\n    'spyglass',\n    'squabble',\n    'squad',\n    'squall',\n    'squander',\n    'squash',\n    'squatted',\n    'squatter',\n    'squatting',\n    'squeak',\n    'squealer',\n    'squealing',\n    'squeamish',\n    'squeegee',\n    'squeeze',\n    'squeezing',\n    'squid',\n    'squiggle',\n    'squiggly',\n    'squint',\n    'squire',\n    'squirt',\n    'squishier',\n    'squishy',\n    'stability',\n    'stabilize',\n    'stable',\n    'stack',\n    'stadium',\n    'staff',\n    'stage',\n    'staging',\n    'stagnant',\n    'stagnate',\n    'stainable',\n    'stained',\n    'staining',\n    'stainless',\n    'stalemate',\n    'staleness',\n    'stalling',\n    'stallion',\n    'stamina',\n    'stammer',\n    'stamp',\n    'stand',\n    'stank',\n    'staple',\n    'stapling',\n    'starboard',\n    'starch',\n    'stardom',\n    'stardust',\n    'starfish',\n    'stargazer',\n    'staring',\n    'stark',\n    'starless',\n    'starlet',\n    'starlight',\n    'starlit',\n    'starring',\n    'starry',\n    'starship',\n    'starter',\n    'starting',\n    'startle',\n    'startling',\n    'startup',\n    'starved',\n    'starving',\n    'stash',\n    'state',\n    'static',\n    'statistic',\n    'statue',\n    'stature',\n    'status',\n    'statute',\n    'statutory',\n    'staunch',\n    'stays',\n    'steadfast',\n    'steadier',\n    'steadily',\n    'steadying',\n    'steam',\n    'steed',\n    'steep',\n    'steerable',\n    'steering',\n    'steersman',\n    'stegosaur',\n    'stellar',\n    'stem',\n    'stench',\n    'stencil',\n    'step',\n    'stereo',\n    'sterile',\n    'sterility',\n    'sterilize',\n    'sterling',\n    'sternness',\n    'sternum',\n    'stew',\n    'stick',\n    'stiffen',\n    'stiffly',\n    'stiffness',\n    'stifle',\n    'stifling',\n    'stillness',\n    'stilt',\n    'stimulant',\n    'stimulate',\n    'stimuli',\n    'stimulus',\n    'stinger',\n    'stingily',\n    'stinging',\n    'stingray',\n    'stingy',\n    'stinking',\n    'stinky',\n    'stipend',\n    'stipulate',\n    'stir',\n    'stitch',\n    'stock',\n    'stoic',\n    'stoke',\n    'stole',\n    'stomp',\n    'stonewall',\n    'stoneware',\n    'stonework',\n    'stoning',\n    'stony',\n    'stood',\n    'stooge',\n    'stool',\n    'stoop',\n    'stoplight',\n    'stoppable',\n    'stoppage',\n    'stopped',\n    'stopper',\n    'stopping',\n    'stopwatch',\n    'storable',\n    'storage',\n    'storeroom',\n    'storewide',\n    'storm',\n    'stout',\n    'stove',\n    'stowaway',\n    'stowing',\n    'straddle',\n    'straggler',\n    'strained',\n    'strainer',\n    'straining',\n    'strangely',\n    'stranger',\n    'strangle',\n    'strategic',\n    'strategy',\n    'stratus',\n    'straw',\n    'stray',\n    'streak',\n    'stream',\n    'street',\n    'strength',\n    'strenuous',\n    'strep',\n    'stress',\n    'stretch',\n    'strewn',\n    'stricken',\n    'strict',\n    'stride',\n    'strife',\n    'strike',\n    'striking',\n    'strive',\n    'striving',\n    'strobe',\n    'strode',\n    'stroller',\n    'strongbox',\n    'strongly',\n    'strongman',\n    'struck',\n    'structure',\n    'strudel',\n    'struggle',\n    'strum',\n    'strung',\n    'strut',\n    'stubbed',\n    'stubble',\n    'stubbly',\n    'stubborn',\n    'stucco',\n    'stuck',\n    'student',\n    'studied',\n    'studio',\n    'study',\n    'stuffed',\n    'stuffing',\n    'stuffy',\n    'stumble',\n    'stumbling',\n    'stump',\n    'stung',\n    'stunned',\n    'stunner',\n    'stunning',\n    'stunt',\n    'stupor',\n    'sturdily',\n    'sturdy',\n    'styling',\n    'stylishly',\n    'stylist',\n    'stylized',\n    'stylus',\n    'suave',\n    'subarctic',\n    'subatomic',\n    'subdivide',\n    'subdued',\n    'subduing',\n    'subfloor',\n    'subgroup',\n    'subheader',\n    'subject',\n    'sublease',\n    'sublet',\n    'sublevel',\n    'sublime',\n    'submarine',\n    'submerge',\n    'submersed',\n    'submitter',\n    'subpanel',\n    'subpar',\n    'subplot',\n    'subprime',\n    'subscribe',\n    'subscript',\n    'subsector',\n    'subside',\n    'subsiding',\n    'subsidize',\n    'subsidy',\n    'subsoil',\n    'subsonic',\n    'substance',\n    'subsystem',\n    'subtext',\n    'subtitle',\n    'subtly',\n    'subtotal',\n    'subtract',\n    'subtype',\n    'suburb',\n    'subway',\n    'subwoofer',\n    'subzero',\n    'succulent',\n    'such',\n    'suction',\n    'sudden',\n    'sudoku',\n    'suds',\n    'sufferer',\n    'suffering',\n    'suffice',\n    'suffix',\n    'suffocate',\n    'suffrage',\n    'sugar',\n    'suggest',\n    'suing',\n    'suitable',\n    'suitably',\n    'suitcase',\n    'suitor',\n    'sulfate',\n    'sulfide',\n    'sulfite',\n    'sulfur',\n    'sulk',\n    'sullen',\n    'sulphate',\n    'sulphuric',\n    'sultry',\n    'superbowl',\n    'superglue',\n    'superhero',\n    'superior',\n    'superjet',\n    'superman',\n    'supermom',\n    'supernova',\n    'supervise',\n    'supper',\n    'supplier',\n    'supply',\n    'support',\n    'supremacy',\n    'supreme',\n    'surcharge',\n    'surely',\n    'sureness',\n    'surface',\n    'surfacing',\n    'surfboard',\n    'surfer',\n    'surgery',\n    'surgical',\n    'surging',\n    'surname',\n    'surpass',\n    'surplus',\n    'surprise',\n    'surreal',\n    'surrender',\n    'surrogate',\n    'surround',\n    'survey',\n    'survival',\n    'survive',\n    'surviving',\n    'survivor',\n    'sushi',\n    'suspect',\n    'suspend',\n    'suspense',\n    'sustained',\n    'sustainer',\n    'swab',\n    'swaddling',\n    'swagger',\n    'swampland',\n    'swan',\n    'swapping',\n    'swarm',\n    'sway',\n    'swear',\n    'sweat',\n    'sweep',\n    'swell',\n    'swept',\n    'swerve',\n    'swifter',\n    'swiftly',\n    'swiftness',\n    'swimmable',\n    'swimmer',\n    'swimming',\n    'swimsuit',\n    'swimwear',\n    'swinger',\n    'swinging',\n    'swipe',\n    'swirl',\n    'switch',\n    'swivel',\n    'swizzle',\n    'swooned',\n    'swoop',\n    'swoosh',\n    'swore',\n    'sworn',\n    'swung',\n    'sycamore',\n    'sympathy',\n    'symphonic',\n    'symphony',\n    'symptom',\n    'synapse',\n    'syndrome',\n    'synergy',\n    'synopses',\n    'synopsis',\n    'synthesis',\n    'synthetic',\n    'syrup',\n    'system',\n    't-shirt',\n    'tabasco',\n    'tabby',\n    'tableful',\n    'tables',\n    'tablet',\n    'tableware',\n    'tabloid',\n    'tackiness',\n    'tacking',\n    'tackle',\n    'tackling',\n    'tacky',\n    'taco',\n    'tactful',\n    'tactical',\n    'tactics',\n    'tactile',\n    'tactless',\n    'tadpole',\n    'taekwondo',\n    'tag',\n    'tainted',\n    'take',\n    'taking',\n    'talcum',\n    'talisman',\n    'tall',\n    'talon',\n    'tamale',\n    'tameness',\n    'tamer',\n    'tamper',\n    'tank',\n    'tanned',\n    'tannery',\n    'tanning',\n    'tantrum',\n    'tapeless',\n    'tapered',\n    'tapering',\n    'tapestry',\n    'tapioca',\n    'tapping',\n    'taps',\n    'tarantula',\n    'target',\n    'tarmac',\n    'tarnish',\n    'tarot',\n    'tartar',\n    'tartly',\n    'tartness',\n    'task',\n    'tassel',\n    'taste',\n    'tastiness',\n    'tasting',\n    'tasty',\n    'tattered',\n    'tattle',\n    'tattling',\n    'tattoo',\n    'taunt',\n    'tavern',\n    'thank',\n    'that',\n    'thaw',\n    'theater',\n    'theatrics',\n    'thee',\n    'theft',\n    'theme',\n    'theology',\n    'theorize',\n    'thermal',\n    'thermos',\n    'thesaurus',\n    'these',\n    'thesis',\n    'thespian',\n    'thicken',\n    'thicket',\n    'thickness',\n    'thieving',\n    'thievish',\n    'thigh',\n    'thimble',\n    'thing',\n    'think',\n    'thinly',\n    'thinner',\n    'thinness',\n    'thinning',\n    'thirstily',\n    'thirsting',\n    'thirsty',\n    'thirteen',\n    'thirty',\n    'thong',\n    'thorn',\n    'those',\n    'thousand',\n    'thrash',\n    'thread',\n    'threaten',\n    'threefold',\n    'thrift',\n    'thrill',\n    'thrive',\n    'thriving',\n    'throat',\n    'throbbing',\n    'throng',\n    'throttle',\n    'throwaway',\n    'throwback',\n    'thrower',\n    'throwing',\n    'thud',\n    'thumb',\n    'thumping',\n    'thursday',\n    'thus',\n    'thwarting',\n    'thyself',\n    'tiara',\n    'tibia',\n    'tidal',\n    'tidbit',\n    'tidiness',\n    'tidings',\n    'tidy',\n    'tiger',\n    'tighten',\n    'tightly',\n    'tightness',\n    'tightrope',\n    'tightwad',\n    'tigress',\n    'tile',\n    'tiling',\n    'till',\n    'tilt',\n    'timid',\n    'timing',\n    'timothy',\n    'tinderbox',\n    'tinfoil',\n    'tingle',\n    'tingling',\n    'tingly',\n    'tinker',\n    'tinkling',\n    'tinsel',\n    'tinsmith',\n    'tint',\n    'tinwork',\n    'tiny',\n    'tipoff',\n    'tipped',\n    'tipper',\n    'tipping',\n    'tiptoeing',\n    'tiptop',\n    'tiring',\n    'tissue',\n    'trace',\n    'tracing',\n    'track',\n    'traction',\n    'tractor',\n    'trade',\n    'trading',\n    'tradition',\n    'traffic',\n    'tragedy',\n    'trailing',\n    'trailside',\n    'train',\n    'traitor',\n    'trance',\n    'tranquil',\n    'transfer',\n    'transform',\n    'translate',\n    'transpire',\n    'transport',\n    'transpose',\n    'trapdoor',\n    'trapeze',\n    'trapezoid',\n    'trapped',\n    'trapper',\n    'trapping',\n    'traps',\n    'trash',\n    'travel',\n    'traverse',\n    'travesty',\n    'tray',\n    'treachery',\n    'treading',\n    'treadmill',\n    'treason',\n    'treat',\n    'treble',\n    'tree',\n    'trekker',\n    'tremble',\n    'trembling',\n    'tremor',\n    'trench',\n    'trend',\n    'trespass',\n    'triage',\n    'trial',\n    'triangle',\n    'tribesman',\n    'tribunal',\n    'tribune',\n    'tributary',\n    'tribute',\n    'triceps',\n    'trickery',\n    'trickily',\n    'tricking',\n    'trickle',\n    'trickster',\n    'tricky',\n    'tricolor',\n    'tricycle',\n    'trident',\n    'tried',\n    'trifle',\n    'trifocals',\n    'trillion',\n    'trilogy',\n    'trimester',\n    'trimmer',\n    'trimming',\n    'trimness',\n    'trinity',\n    'trio',\n    'tripod',\n    'tripping',\n    'triumph',\n    'trivial',\n    'trodden',\n    'trolling',\n    'trombone',\n    'trophy',\n    'tropical',\n    'tropics',\n    'trouble',\n    'troubling',\n    'trough',\n    'trousers',\n    'trout',\n    'trowel',\n    'truce',\n    'truck',\n    'truffle',\n    'trump',\n    'trunks',\n    'trustable',\n    'trustee',\n    'trustful',\n    'trusting',\n    'trustless',\n    'truth',\n    'try',\n    'tubby',\n    'tubeless',\n    'tubular',\n    'tucking',\n    'tuesday',\n    'tug',\n    'tuition',\n    'tulip',\n    'tumble',\n    'tumbling',\n    'tummy',\n    'turban',\n    'turbine',\n    'turbofan',\n    'turbojet',\n    'turbulent',\n    'turf',\n    'turkey',\n    'turmoil',\n    'turret',\n    'turtle',\n    'tusk',\n    'tutor',\n    'tutu',\n    'tux',\n    'tweak',\n    'tweed',\n    'tweet',\n    'tweezers',\n    'twelve',\n    'twentieth',\n    'twenty',\n    'twerp',\n    'twice',\n    'twiddle',\n    'twiddling',\n    'twig',\n    'twilight',\n    'twine',\n    'twins',\n    'twirl',\n    'twistable',\n    'twisted',\n    'twister',\n    'twisting',\n    'twisty',\n    'twitch',\n    'twitter',\n    'tycoon',\n    'tying',\n    'tyke',\n    'udder',\n    'ultimate',\n    'ultimatum',\n    'ultra',\n    'umbilical',\n    'umbrella',\n    'umpire',\n    'unabashed',\n    'unable',\n    'unadorned',\n    'unadvised',\n    'unafraid',\n    'unaired',\n    'unaligned',\n    'unaltered',\n    'unarmored',\n    'unashamed',\n    'unaudited',\n    'unawake',\n    'unaware',\n    'unbaked',\n    'unbalance',\n    'unbeaten',\n    'unbend',\n    'unbent',\n    'unbiased',\n    'unbitten',\n    'unblended',\n    'unblessed',\n    'unblock',\n    'unbolted',\n    'unbounded',\n    'unboxed',\n    'unbraided',\n    'unbridle',\n    'unbroken',\n    'unbuckled',\n    'unbundle',\n    'unburned',\n    'unbutton',\n    'uncanny',\n    'uncapped',\n    'uncaring',\n    'uncertain',\n    'unchain',\n    'unchanged',\n    'uncharted',\n    'uncheck',\n    'uncivil',\n    'unclad',\n    'unclaimed',\n    'unclamped',\n    'unclasp',\n    'uncle',\n    'unclip',\n    'uncloak',\n    'unclog',\n    'unclothed',\n    'uncoated',\n    'uncoiled',\n    'uncolored',\n    'uncombed',\n    'uncommon',\n    'uncooked',\n    'uncork',\n    'uncorrupt',\n    'uncounted',\n    'uncouple',\n    'uncouth',\n    'uncover',\n    'uncross',\n    'uncrown',\n    'uncrushed',\n    'uncured',\n    'uncurious',\n    'uncurled',\n    'uncut',\n    'undamaged',\n    'undated',\n    'undaunted',\n    'undead',\n    'undecided',\n    'undefined',\n    'underage',\n    'underarm',\n    'undercoat',\n    'undercook',\n    'undercut',\n    'underdog',\n    'underdone',\n    'underfed',\n    'underfeed',\n    'underfoot',\n    'undergo',\n    'undergrad',\n    'underhand',\n    'underline',\n    'underling',\n    'undermine',\n    'undermost',\n    'underpaid',\n    'underpass',\n    'underpay',\n    'underrate',\n    'undertake',\n    'undertone',\n    'undertook',\n    'undertow',\n    'underuse',\n    'underwear',\n    'underwent',\n    'underwire',\n    'undesired',\n    'undiluted',\n    'undivided',\n    'undocked',\n    'undoing',\n    'undone',\n    'undrafted',\n    'undress',\n    'undrilled',\n    'undusted',\n    'undying',\n    'unearned',\n    'unearth',\n    'unease',\n    'uneasily',\n    'uneasy',\n    'uneatable',\n    'uneaten',\n    'unedited',\n    'unelected',\n    'unending',\n    'unengaged',\n    'unenvied',\n    'unequal',\n    'unethical',\n    'uneven',\n    'unexpired',\n    'unexposed',\n    'unfailing',\n    'unfair',\n    'unfasten',\n    'unfazed',\n    'unfeeling',\n    'unfiled',\n    'unfilled',\n    'unfitted',\n    'unfitting',\n    'unfixable',\n    'unfixed',\n    'unflawed',\n    'unfocused',\n    'unfold',\n    'unfounded',\n    'unframed',\n    'unfreeze',\n    'unfrosted',\n    'unfrozen',\n    'unfunded',\n    'unglazed',\n    'ungloved',\n    'unglue',\n    'ungodly',\n    'ungraded',\n    'ungreased',\n    'unguarded',\n    'unguided',\n    'unhappily',\n    'unhappy',\n    'unharmed',\n    'unhealthy',\n    'unheard',\n    'unhearing',\n    'unheated',\n    'unhelpful',\n    'unhidden',\n    'unhinge',\n    'unhitched',\n    'unholy',\n    'unhook',\n    'unicorn',\n    'unicycle',\n    'unified',\n    'unifier',\n    'uniformed',\n    'uniformly',\n    'unify',\n    'unimpeded',\n    'uninjured',\n    'uninstall',\n    'uninsured',\n    'uninvited',\n    'union',\n    'uniquely',\n    'unisexual',\n    'unison',\n    'unissued',\n    'unit',\n    'universal',\n    'universe',\n    'unjustly',\n    'unkempt',\n    'unkind',\n    'unknotted',\n    'unknowing',\n    'unknown',\n    'unlaced',\n    'unlatch',\n    'unlawful',\n    'unleaded',\n    'unlearned',\n    'unleash',\n    'unless',\n    'unleveled',\n    'unlighted',\n    'unlikable',\n    'unlimited',\n    'unlined',\n    'unlinked',\n    'unlisted',\n    'unlit',\n    'unlivable',\n    'unloaded',\n    'unloader',\n    'unlocked',\n    'unlocking',\n    'unlovable',\n    'unloved',\n    'unlovely',\n    'unloving',\n    'unluckily',\n    'unlucky',\n    'unmade',\n    'unmanaged',\n    'unmanned',\n    'unmapped',\n    'unmarked',\n    'unmasked',\n    'unmasking',\n    'unmatched',\n    'unmindful',\n    'unmixable',\n    'unmixed',\n    'unmolded',\n    'unmoral',\n    'unmovable',\n    'unmoved',\n    'unmoving',\n    'unnamable',\n    'unnamed',\n    'unnatural',\n    'unneeded',\n    'unnerve',\n    'unnerving',\n    'unnoticed',\n    'unopened',\n    'unopposed',\n    'unpack',\n    'unpadded',\n    'unpaid',\n    'unpainted',\n    'unpaired',\n    'unpaved',\n    'unpeeled',\n    'unpicked',\n    'unpiloted',\n    'unpinned',\n    'unplanned',\n    'unplanted',\n    'unpleased',\n    'unpledged',\n    'unplowed',\n    'unplug',\n    'unpopular',\n    'unproven',\n    'unquote',\n    'unranked',\n    'unrated',\n    'unraveled',\n    'unreached',\n    'unread',\n    'unreal',\n    'unreeling',\n    'unrefined',\n    'unrelated',\n    'unrented',\n    'unrest',\n    'unretired',\n    'unrevised',\n    'unrigged',\n    'unripe',\n    'unrivaled',\n    'unroasted',\n    'unrobed',\n    'unroll',\n    'unruffled',\n    'unruly',\n    'unrushed',\n    'unsaddle',\n    'unsafe',\n    'unsaid',\n    'unsalted',\n    'unsaved',\n    'unsavory',\n    'unscathed',\n    'unscented',\n    'unscrew',\n    'unsealed',\n    'unseated',\n    'unsecured',\n    'unseeing',\n    'unseemly',\n    'unseen',\n    'unselect',\n    'unselfish',\n    'unsent',\n    'unsettled',\n    'unshackle',\n    'unshaken',\n    'unshaved',\n    'unshaven',\n    'unsheathe',\n    'unshipped',\n    'unsightly',\n    'unsigned',\n    'unskilled',\n    'unsliced',\n    'unsmooth',\n    'unsnap',\n    'unsocial',\n    'unsoiled',\n    'unsold',\n    'unsolved',\n    'unsorted',\n    'unspoiled',\n    'unspoken',\n    'unstable',\n    'unstaffed',\n    'unstamped',\n    'unsteady',\n    'unsterile',\n    'unstirred',\n    'unstitch',\n    'unstopped',\n    'unstuck',\n    'unstuffed',\n    'unstylish',\n    'unsubtle',\n    'unsubtly',\n    'unsuited',\n    'unsure',\n    'unsworn',\n    'untagged',\n    'untainted',\n    'untaken',\n    'untamed',\n    'untangled',\n    'untapped',\n    'untaxed',\n    'unthawed',\n    'unthread',\n    'untidy',\n    'untie',\n    'until',\n    'untimed',\n    'untimely',\n    'untitled',\n    'untoasted',\n    'untold',\n    'untouched',\n    'untracked',\n    'untrained',\n    'untreated',\n    'untried',\n    'untrimmed',\n    'untrue',\n    'untruth',\n    'unturned',\n    'untwist',\n    'untying',\n    'unusable',\n    'unused',\n    'unusual',\n    'unvalued',\n    'unvaried',\n    'unvarying',\n    'unveiled',\n    'unveiling',\n    'unvented',\n    'unviable',\n    'unvisited',\n    'unvocal',\n    'unwanted',\n    'unwarlike',\n    'unwary',\n    'unwashed',\n    'unwatched',\n    'unweave',\n    'unwed',\n    'unwelcome',\n    'unwell',\n    'unwieldy',\n    'unwilling',\n    'unwind',\n    'unwired',\n    'unwitting',\n    'unwomanly',\n    'unworldly',\n    'unworn',\n    'unworried',\n    'unworthy',\n    'unwound',\n    'unwoven',\n    'unwrapped',\n    'unwritten',\n    'unzip',\n    'upbeat',\n    'upchuck',\n    'upcoming',\n    'upcountry',\n    'update',\n    'upfront',\n    'upgrade',\n    'upheaval',\n    'upheld',\n    'uphill',\n    'uphold',\n    'uplifted',\n    'uplifting',\n    'upload',\n    'upon',\n    'upper',\n    'upright',\n    'uprising',\n    'upriver',\n    'uproar',\n    'uproot',\n    'upscale',\n    'upside',\n    'upstage',\n    'upstairs',\n    'upstart',\n    'upstate',\n    'upstream',\n    'upstroke',\n    'upswing',\n    'uptake',\n    'uptight',\n    'uptown',\n    'upturned',\n    'upward',\n    'upwind',\n    'uranium',\n    'urban',\n    'urchin',\n    'urethane',\n    'urgency',\n    'urgent',\n    'urging',\n    'urologist',\n    'urology',\n    'usable',\n    'usage',\n    'useable',\n    'used',\n    'uselessly',\n    'user',\n    'usher',\n    'usual',\n    'utensil',\n    'utility',\n    'utilize',\n    'utmost',\n    'utopia',\n    'utter',\n    'vacancy',\n    'vacant',\n    'vacate',\n    'vacation',\n    'vagabond',\n    'vagrancy',\n    'vagrantly',\n    'vaguely',\n    'vagueness',\n    'valiant',\n    'valid',\n    'valium',\n    'valley',\n    'valuables',\n    'value',\n    'vanilla',\n    'vanish',\n    'vanity',\n    'vanquish',\n    'vantage',\n    'vaporizer',\n    'variable',\n    'variably',\n    'varied',\n    'variety',\n    'various',\n    'varmint',\n    'varnish',\n    'varsity',\n    'varying',\n    'vascular',\n    'vaseline',\n    'vastly',\n    'vastness',\n    'veal',\n    'vegan',\n    'veggie',\n    'vehicular',\n    'velcro',\n    'velocity',\n    'velvet',\n    'vendetta',\n    'vending',\n    'vendor',\n    'veneering',\n    'vengeful',\n    'venomous',\n    'ventricle',\n    'venture',\n    'venue',\n    'venus',\n    'verbalize',\n    'verbally',\n    'verbose',\n    'verdict',\n    'verify',\n    'verse',\n    'version',\n    'versus',\n    'vertebrae',\n    'vertical',\n    'vertigo',\n    'very',\n    'vessel',\n    'vest',\n    'veteran',\n    'veto',\n    'vexingly',\n    'viability',\n    'viable',\n    'vibes',\n    'vice',\n    'vicinity',\n    'victory',\n    'video',\n    'viewable',\n    'viewer',\n    'viewing',\n    'viewless',\n    'viewpoint',\n    'vigorous',\n    'village',\n    'villain',\n    'vindicate',\n    'vineyard',\n    'vintage',\n    'violate',\n    'violation',\n    'violator',\n    'violet',\n    'violin',\n    'viper',\n    'viral',\n    'virtual',\n    'virtuous',\n    'virus',\n    'visa',\n    'viscosity',\n    'viscous',\n    'viselike',\n    'visible',\n    'visibly',\n    'vision',\n    'visiting',\n    'visitor',\n    'visor',\n    'vista',\n    'vitality',\n    'vitalize',\n    'vitally',\n    'vitamins',\n    'vivacious',\n    'vividly',\n    'vividness',\n    'vixen',\n    'vocalist',\n    'vocalize',\n    'vocally',\n    'vocation',\n    'voice',\n    'voicing',\n    'void',\n    'volatile',\n    'volley',\n    'voltage',\n    'volumes',\n    'voter',\n    'voting',\n    'voucher',\n    'vowed',\n    'vowel',\n    'voyage',\n    'wackiness',\n    'wad',\n    'wafer',\n    'waffle',\n    'waged',\n    'wager',\n    'wages',\n    'waggle',\n    'wagon',\n    'wake',\n    'waking',\n    'walk',\n    'walmart',\n    'walnut',\n    'walrus',\n    'waltz',\n    'wand',\n    'wannabe',\n    'wanted',\n    'wanting',\n    'wasabi',\n    'washable',\n    'washbasin',\n    'washboard',\n    'washbowl',\n    'washcloth',\n    'washday',\n    'washed',\n    'washer',\n    'washhouse',\n    'washing',\n    'washout',\n    'washroom',\n    'washstand',\n    'washtub',\n    'wasp',\n    'wasting',\n    'watch',\n    'water',\n    'waviness',\n    'waving',\n    'wavy',\n    'whacking',\n    'whacky',\n    'wham',\n    'wharf',\n    'wheat',\n    'whenever',\n    'whiff',\n    'whimsical',\n    'whinny',\n    'whiny',\n    'whisking',\n    'whoever',\n    'whole',\n    'whomever',\n    'whoopee',\n    'whooping',\n    'whoops',\n    'why',\n    'wick',\n    'widely',\n    'widen',\n    'widget',\n    'widow',\n    'width',\n    'wieldable',\n    'wielder',\n    'wife',\n    'wifi',\n    'wikipedia',\n    'wildcard',\n    'wildcat',\n    'wilder',\n    'wildfire',\n    'wildfowl',\n    'wildland',\n    'wildlife',\n    'wildly',\n    'wildness',\n    'willed',\n    'willfully',\n    'willing',\n    'willow',\n    'willpower',\n    'wilt',\n    'wimp',\n    'wince',\n    'wincing',\n    'wind',\n    'wing',\n    'winking',\n    'winner',\n    'winnings',\n    'winter',\n    'wipe',\n    'wired',\n    'wireless',\n    'wiring',\n    'wiry',\n    'wisdom',\n    'wise',\n    'wish',\n    'wisplike',\n    'wispy',\n    'wistful',\n    'wizard',\n    'wobble',\n    'wobbling',\n    'wobbly',\n    'wok',\n    'wolf',\n    'wolverine',\n    'womanhood',\n    'womankind',\n    'womanless',\n    'womanlike',\n    'womanly',\n    'womb',\n    'woof',\n    'wooing',\n    'wool',\n    'woozy',\n    'word',\n    'work',\n    'worried',\n    'worrier',\n    'worrisome',\n    'worry',\n    'worsening',\n    'worshiper',\n    'worst',\n    'wound',\n    'woven',\n    'wow',\n    'wrangle',\n    'wrath',\n    'wreath',\n    'wreckage',\n    'wrecker',\n    'wrecking',\n    'wrench',\n    'wriggle',\n    'wriggly',\n    'wrinkle',\n    'wrinkly',\n    'wrist',\n    'writing',\n    'written',\n    'wrongdoer',\n    'wronged',\n    'wrongful',\n    'wrongly',\n    'wrongness',\n    'wrought',\n    'xbox',\n    'xerox',\n    'yahoo',\n    'yam',\n    'yanking',\n    'yapping',\n    'yard',\n    'yarn',\n    'yeah',\n    'yearbook',\n    'yearling',\n    'yearly',\n    'yearning',\n    'yeast',\n    'yelling',\n    'yelp',\n    'yen',\n    'yesterday',\n    'yiddish',\n    'yield',\n    'yin',\n    'yippee',\n    'yo-yo',\n    'yodel',\n    'yoga',\n    'yogurt',\n    'yonder',\n    'yoyo',\n    'yummy',\n    'zap',\n    'zealous',\n    'zebra',\n    'zen',\n    'zeppelin',\n    'zero',\n    'zestfully',\n    'zesty',\n    'zigzagged',\n    'zipfile',\n    'zipping',\n    'zippy',\n    'zips',\n    'zit',\n    'zodiac',\n    'zombie',\n    'zone',\n    'zoning',\n    'zookeeper',\n    'zoologist',\n    'zoology',\n    'zoom',\n];\n","import { EnvironmentUrls } from '../models/domain/environmentUrls';\n\nimport { ConstantsService } from './constants.service';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from '../abstractions/environment.service';\nimport { NotificationsService } from '../abstractions/notifications.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nexport class EnvironmentService implements EnvironmentServiceAbstraction {\n    baseUrl: string;\n    webVaultUrl: string;\n    apiUrl: string;\n    identityUrl: string;\n    iconsUrl: string;\n    notificationsUrl: string;\n    eventsUrl: string;\n    enterpriseUrl: string;\n\n    constructor(private apiService: ApiService, private storageService: StorageService,\n        private notificationsService: NotificationsService) { }\n\n    getWebVaultUrl(): string {\n        if (this.webVaultUrl != null) {\n            return this.webVaultUrl;\n        } else if (this.baseUrl) {\n            return this.baseUrl;\n        }\n        return null;\n    }\n\n    async setUrlsFromStorage(): Promise<void> {\n        const urlsObj: any = await this.storageService.get(ConstantsService.environmentUrlsKey);\n        const urls = urlsObj || {\n            base: null,\n            api: null,\n            identity: null,\n            icons: null,\n            notifications: null,\n            events: null,\n            webVault: null,\n            enterprise: null,\n        };\n\n        const envUrls = new EnvironmentUrls();\n\n        if (urls.base) {\n            this.baseUrl = envUrls.base = urls.base;\n            this.apiService.setUrls(envUrls);\n            return;\n        }\n\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = envUrls.api = urls.api;\n        this.identityUrl = envUrls.identity = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = envUrls.events = urls.events;\n        this.enterpriseUrl = urls.enterprise;\n        this.apiService.setUrls(envUrls);\n    }\n\n    async setUrls(urls: any): Promise<any> {\n        urls.base = this.formatUrl(urls.base);\n        urls.webVault = this.formatUrl(urls.webVault);\n        urls.api = this.formatUrl(urls.api);\n        urls.identity = this.formatUrl(urls.identity);\n        urls.icons = this.formatUrl(urls.icons);\n        urls.notifications = this.formatUrl(urls.notifications);\n        urls.events = this.formatUrl(urls.events);\n        urls.enterprise = this.formatUrl(urls.enterprise);\n\n        await this.storageService.save(ConstantsService.environmentUrlsKey, {\n            base: urls.base,\n            api: urls.api,\n            identity: urls.identity,\n            webVault: urls.webVault,\n            icons: urls.icons,\n            notifications: urls.notifications,\n            events: urls.events,\n            enterprise: urls.enterprise,\n        });\n\n        this.baseUrl = urls.base;\n        this.webVaultUrl = urls.webVault;\n        this.apiUrl = urls.api;\n        this.identityUrl = urls.identity;\n        this.iconsUrl = urls.icons;\n        this.notificationsUrl = urls.notifications;\n        this.eventsUrl = urls.events;\n        this.enterpriseUrl = urls.enterprise;\n\n        const envUrls = new EnvironmentUrls();\n        if (this.baseUrl) {\n            envUrls.base = this.baseUrl;\n        } else {\n            envUrls.api = this.apiUrl;\n            envUrls.identity = this.identityUrl;\n            envUrls.events = this.eventsUrl;\n        }\n\n        this.apiService.setUrls(envUrls);\n        if (this.notificationsService != null) {\n            this.notificationsService.init(this);\n        }\n        return urls;\n    }\n\n    private formatUrl(url: string): string {\n        if (url == null || url === '') {\n            return null;\n        }\n\n        url = url.replace(/\\/+$/g, '');\n        if (!url.startsWith('http://') && !url.startsWith('https://')) {\n            url = 'https://' + url;\n        }\n\n        return url.trim();\n    }\n}\n","import { FolderData } from '../models/data/folderData';\n\nimport { Folder } from '../models/domain/folder';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\nimport { TreeNode } from '../models/domain/treeNode';\n\nimport { FolderRequest } from '../models/request/folderRequest';\n\nimport { FolderResponse } from '../models/response/folderResponse';\n\nimport { FolderView } from '../models/view/folderView';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService as FolderServiceAbstraction } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\nimport { CipherData } from '../models/data/cipherData';\n\nimport { ServiceUtils } from '../misc/serviceUtils';\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    foldersPrefix: 'folders_',\n    ciphersPrefix: 'ciphers_',\n};\nconst NestingDelimiter = '/';\n\nexport class FolderService implements FolderServiceAbstraction {\n    decryptedFolderCache: FolderView[];\n\n    constructor(private cryptoService: CryptoService, private userService: UserService,\n        private apiService: ApiService, private storageService: StorageService,\n        private i18nService: I18nService, private cipherService: CipherService) { }\n\n    clearCache(): void {\n        this.decryptedFolderCache = null;\n    }\n\n    async encrypt(model: FolderView, key?: SymmetricCryptoKey): Promise<Folder> {\n        const folder = new Folder();\n        folder.id = model.id;\n        folder.name = await this.cryptoService.encrypt(model.name, key);\n        return folder;\n    }\n\n    async get(id: string): Promise<Folder> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null || !folders.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Folder(folders[id]);\n    }\n\n    async getAll(): Promise<Folder[]> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        const response: Folder[] = [];\n        for (const id in folders) {\n            if (folders.hasOwnProperty(id)) {\n                response.push(new Folder(folders[id]));\n            }\n        }\n        return response;\n    }\n\n    async getAllDecrypted(): Promise<FolderView[]> {\n        if (this.decryptedFolderCache != null) {\n            return this.decryptedFolderCache;\n        }\n\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            throw new Error('No key.');\n        }\n\n        const decFolders: FolderView[] = [];\n        const promises: Promise<any>[] = [];\n        const folders = await this.getAll();\n        folders.forEach((folder) => {\n            promises.push(folder.decrypt().then((f) => decFolders.push(f)));\n        });\n\n        await Promise.all(promises);\n        decFolders.sort(Utils.getSortFunction(this.i18nService, 'name'));\n\n        const noneFolder = new FolderView();\n        noneFolder.name = this.i18nService.t('noneFolder');\n        decFolders.push(noneFolder);\n\n        this.decryptedFolderCache = decFolders;\n        return this.decryptedFolderCache;\n    }\n\n    async getAllNested(): Promise<TreeNode<FolderView>[]> {\n        const folders = await this.getAllDecrypted();\n        const nodes: TreeNode<FolderView>[] = [];\n        folders.forEach((f) => {\n            const folderCopy = new FolderView();\n            folderCopy.id = f.id;\n            folderCopy.revisionDate = f.revisionDate;\n            const parts = f.name != null ? f.name.replace(/^\\/+|\\/+$/g, '').split(NestingDelimiter) : [];\n            ServiceUtils.nestedTraverse(nodes, 0, parts, folderCopy, null, NestingDelimiter);\n        });\n        return nodes;\n    }\n\n    async getNested(id: string): Promise<TreeNode<FolderView>> {\n        const folders = await this.getAllNested();\n        return ServiceUtils.getTreeNodeObject(folders, id) as TreeNode<FolderView>;\n    }\n\n    async saveWithServer(folder: Folder): Promise<any> {\n        const request = new FolderRequest(folder);\n\n        let response: FolderResponse;\n        if (folder.id == null) {\n            response = await this.apiService.postFolder(request);\n            folder.id = response.id;\n        } else {\n            response = await this.apiService.putFolder(folder.id, request);\n        }\n\n        const userId = await this.userService.getUserId();\n        const data = new FolderData(response, userId);\n        await this.upsert(data);\n    }\n\n    async upsert(folder: FolderData | FolderData[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        let folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            folders = {};\n        }\n\n        if (folder instanceof FolderData) {\n            const f = folder as FolderData;\n            folders[f.id] = f;\n        } else {\n            (folder as FolderData[]).forEach((f) => {\n                folders[f.id] = f;\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async replace(folders: { [id: string]: FolderData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.foldersPrefix + userId);\n        this.decryptedFolderCache = null;\n    }\n\n    async delete(id: string | string[]): Promise<any> {\n        const userId = await this.userService.getUserId();\n        const folders = await this.storageService.get<{ [id: string]: FolderData; }>(\n            Keys.foldersPrefix + userId);\n        if (folders == null) {\n            return;\n        }\n\n        if (typeof id === 'string') {\n            if (folders[id] == null) {\n                return;\n            }\n            delete folders[id];\n        } else {\n            (id as string[]).forEach((i) => {\n                delete folders[i];\n            });\n        }\n\n        await this.storageService.save(Keys.foldersPrefix + userId, folders);\n        this.decryptedFolderCache = null;\n\n        // Items in a deleted folder are re-assigned to \"No Folder\"\n        const ciphers = await this.storageService.get<{ [id: string]: CipherData; }>(Keys.ciphersPrefix + userId);\n        if (ciphers != null) {\n            const updates: CipherData[] = [];\n            for (const cId in ciphers) {\n                if (ciphers[cId].folderId === id) {\n                    ciphers[cId].folderId = null;\n                    updates.push(ciphers[cId]);\n                }\n            }\n            if (updates.length > 0) {\n                this.cipherService.upsert(updates);\n            }\n        }\n    }\n\n    async deleteWithServer(id: string): Promise<any> {\n        await this.apiService.deleteFolder(id);\n        await this.delete(id);\n    }\n}\n","import { FolderResponse } from '../response/folderResponse';\n\nexport class FolderData {\n    id: string;\n    userId: string;\n    name: string;\n    revisionDate: string;\n\n    constructor(response: FolderResponse, userId: string) {\n        this.userId = userId;\n        this.name = response.name;\n        this.id = response.id;\n        this.revisionDate = response.revisionDate;\n    }\n}\n","import { I18nService as I18nServiceAbstraction } from '../abstractions/i18n.service';\n\nexport class I18nService implements I18nServiceAbstraction {\n    locale: string;\n    // First locale is the default (English)\n    supportedTranslationLocales: string[] = ['en'];\n    translationLocale: string;\n    collator: Intl.Collator;\n    localeNames = new Map<string, string>([\n        ['af', 'Afrikaans'],\n        ['bg', 'български'],\n        ['ca', 'català'],\n        ['cs', 'čeština'],\n        ['da', 'dansk'],\n        ['de', 'Deutsch'],\n        ['el', 'Ελληνικά'],\n        ['en', 'English'],\n        ['en-GB', 'English (British)'],\n        ['eo', 'Esperanto'],\n        ['es', 'español'],\n        ['et', 'eesti'],\n        ['fa', 'فارسی'],\n        ['fi', 'suomi'],\n        ['fr', 'français'],\n        ['he', 'עברית'],\n        ['hi', 'हिन्दी'],\n        ['hr', 'hrvatski'],\n        ['hu', 'magyar'],\n        ['id', 'Bahasa Indonesia'],\n        ['it', 'italiano'],\n        ['ja', '日本語'],\n        ['ko', '한국어'],\n        ['nb', 'norsk (bokmål)'],\n        ['nl', 'Nederlands'],\n        ['pl', 'polski'],\n        ['pt-BR', 'português do Brasil'],\n        ['pt-PT', 'português'],\n        ['ro', 'română'],\n        ['ru', 'русский'],\n        ['sk', 'slovenčina'],\n        ['sv', 'svenska'],\n        ['th', 'ไทย'],\n        ['tr', 'Türkçe'],\n        ['uk', 'українська'],\n        ['vi', 'Tiếng Việt'],\n        ['zh-CN', '中文（中国大陆）'],\n        ['zh-TW', '中文（台灣）'],\n    ]);\n\n    protected inited: boolean;\n    protected defaultMessages: any = {};\n    protected localeMessages: any = {};\n\n    constructor(protected systemLanguage: string, protected localesDirectory: string,\n        protected getLocalesJson: (formattedLocale: string) => Promise<any>) {\n        this.systemLanguage = systemLanguage.replace('_', '-');\n    }\n\n    async init(locale?: string) {\n        if (this.inited) {\n            throw new Error('i18n already initialized.');\n        }\n        if (this.supportedTranslationLocales == null || this.supportedTranslationLocales.length === 0) {\n            throw new Error('supportedTranslationLocales not set.');\n        }\n\n        this.inited = true;\n        this.locale = this.translationLocale = locale != null ? locale : this.systemLanguage;\n\n        try {\n            this.collator = new Intl.Collator(this.locale, { numeric: true, sensitivity: 'base' });\n        } catch {\n            this.collator = null;\n        }\n\n        if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n            this.translationLocale = this.translationLocale.slice(0, 2);\n\n            if (this.supportedTranslationLocales.indexOf(this.translationLocale) === -1) {\n                this.translationLocale = this.supportedTranslationLocales[0];\n            }\n        }\n\n        if (this.localesDirectory != null) {\n            await this.loadMessages(this.translationLocale, this.localeMessages);\n            if (this.translationLocale !== this.supportedTranslationLocales[0]) {\n                await this.loadMessages(this.supportedTranslationLocales[0], this.defaultMessages);\n            }\n        }\n    }\n\n    t(id: string, p1?: string, p2?: string, p3?: string): string {\n        return this.translate(id, p1, p2, p3);\n    }\n\n    translate(id: string, p1?: string, p2?: string, p3?: string): string {\n        let result: string;\n        if (this.localeMessages.hasOwnProperty(id) && this.localeMessages[id]) {\n            result = this.localeMessages[id];\n        } else if (this.defaultMessages.hasOwnProperty(id) && this.defaultMessages[id]) {\n            result = this.defaultMessages[id];\n        } else {\n            result = '';\n        }\n\n        if (result !== '') {\n            if (p1 != null) {\n                result = result.split('__$1__').join(p1);\n            }\n            if (p2 != null) {\n                result = result.split('__$2__').join(p2);\n            }\n            if (p3 != null) {\n                result = result.split('__$3__').join(p3);\n            }\n        }\n\n        return result;\n    }\n\n    private async loadMessages(locale: string, messagesObj: any): Promise<any> {\n        const formattedLocale = locale.replace('-', '_');\n        const locales = await this.getLocalesJson(formattedLocale);\n        for (const prop in locales) {\n            if (!locales.hasOwnProperty(prop)) {\n                continue;\n            }\n            messagesObj[prop] = locales[prop].message;\n\n            if (locales[prop].placeholders) {\n                for (const placeProp in locales[prop].placeholders) {\n                    if (!locales[prop].placeholders.hasOwnProperty(placeProp) ||\n                        !locales[prop].placeholders[placeProp].content) {\n                        continue;\n                    }\n\n                    const replaceToken = '\\\\$' + placeProp.toUpperCase() + '\\\\$';\n                    let replaceContent = locales[prop].placeholders[placeProp].content;\n                    if (replaceContent === '$1' || replaceContent === '$2' || replaceContent === '$3') {\n                        replaceContent = '__$' + replaceContent + '__';\n                    }\n                    messagesObj[prop] = messagesObj[prop].replace(new RegExp(replaceToken, 'g'), replaceContent);\n                }\n            }\n        }\n    }\n\n}\n","import * as zxcvbn from 'zxcvbn';\n\nimport { CipherString } from '../models/domain/cipherString';\nimport { GeneratedPasswordHistory } from '../models/domain/generatedPasswordHistory';\nimport { PasswordGeneratorPolicyOptions } from '../models/domain/passwordGeneratorPolicyOptions';\nimport { Policy } from '../models/domain/policy';\n\nimport { CryptoService } from '../abstractions/crypto.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from '../abstractions/passwordGeneration.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { EEFLongWordList } from '../misc/wordlist';\n\nimport { PolicyType } from '../enums/policyType';\n\nconst DefaultOptions = {\n    length: 14,\n    ambiguous: false,\n    number: true,\n    minNumber: 1,\n    uppercase: true,\n    minUppercase: 0,\n    lowercase: true,\n    minLowercase: 0,\n    special: false,\n    minSpecial: 1,\n    type: 'password',\n    numWords: 3,\n    wordSeparator: '-',\n    capitalize: false,\n    includeNumber: false,\n};\n\nconst Keys = {\n    options: 'passwordGenerationOptions',\n    history: 'generatedPasswordHistory',\n};\n\nconst MaxPasswordsInHistory = 100;\n\nexport class PasswordGenerationService implements PasswordGenerationServiceAbstraction {\n    private optionsCache: any;\n    private history: GeneratedPasswordHistory[];\n\n    constructor(private cryptoService: CryptoService, private storageService: StorageService,\n        private policyService: PolicyService) { }\n\n    async generatePassword(options: any): Promise<string> {\n        // overload defaults with given options\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.type === 'passphrase') {\n            return this.generatePassphrase(options);\n        }\n\n        // sanitize\n        this.sanitizePasswordLength(o, true);\n\n        const minLength: number = o.minUppercase + o.minLowercase + o.minNumber + o.minSpecial;\n        if (o.length < minLength) {\n            o.length = minLength;\n        }\n\n        const positions: string[] = [];\n        if (o.lowercase && o.minLowercase > 0) {\n            for (let i = 0; i < o.minLowercase; i++) {\n                positions.push('l');\n            }\n        }\n        if (o.uppercase && o.minUppercase > 0) {\n            for (let i = 0; i < o.minUppercase; i++) {\n                positions.push('u');\n            }\n        }\n        if (o.number && o.minNumber > 0) {\n            for (let i = 0; i < o.minNumber; i++) {\n                positions.push('n');\n            }\n        }\n        if (o.special && o.minSpecial > 0) {\n            for (let i = 0; i < o.minSpecial; i++) {\n                positions.push('s');\n            }\n        }\n        while (positions.length < o.length) {\n            positions.push('a');\n        }\n\n        // shuffle\n        await this.shuffleArray(positions);\n\n        // build out the char sets\n        let allCharSet = '';\n\n        let lowercaseCharSet = 'abcdefghijkmnopqrstuvwxyz';\n        if (o.ambiguous) {\n            lowercaseCharSet += 'l';\n        }\n        if (o.lowercase) {\n            allCharSet += lowercaseCharSet;\n        }\n\n        let uppercaseCharSet = 'ABCDEFGHJKLMNPQRSTUVWXYZ';\n        if (o.ambiguous) {\n            uppercaseCharSet += 'IO';\n        }\n        if (o.uppercase) {\n            allCharSet += uppercaseCharSet;\n        }\n\n        let numberCharSet = '23456789';\n        if (o.ambiguous) {\n            numberCharSet += '01';\n        }\n        if (o.number) {\n            allCharSet += numberCharSet;\n        }\n\n        const specialCharSet = '!@#$%^&*';\n        if (o.special) {\n            allCharSet += specialCharSet;\n        }\n\n        let password = '';\n        for (let i = 0; i < o.length; i++) {\n            let positionChars: string;\n            switch (positions[i]) {\n                case 'l':\n                    positionChars = lowercaseCharSet;\n                    break;\n                case 'u':\n                    positionChars = uppercaseCharSet;\n                    break;\n                case 'n':\n                    positionChars = numberCharSet;\n                    break;\n                case 's':\n                    positionChars = specialCharSet;\n                    break;\n                case 'a':\n                    positionChars = allCharSet;\n                    break;\n                default:\n                    break;\n            }\n\n            const randomCharIndex = await this.cryptoService.randomNumber(0, positionChars.length - 1);\n            password += positionChars.charAt(randomCharIndex);\n        }\n\n        return password;\n    }\n\n    async generatePassphrase(options: any): Promise<string> {\n        const o = Object.assign({}, DefaultOptions, options);\n\n        if (o.numWords == null || o.numWords <= 2) {\n            o.numWords = DefaultOptions.numWords;\n        }\n        if (o.wordSeparator == null || o.wordSeparator.length === 0 || o.wordSeparator.length > 1) {\n            o.wordSeparator = ' ';\n        }\n        if (o.capitalize == null) {\n            o.capitalize = false;\n        }\n        if (o.includeNumber == null) {\n            o.includeNumber = false;\n        }\n\n        const listLength = EEFLongWordList.length - 1;\n        const wordList = new Array(o.numWords);\n        for (let i = 0; i < o.numWords; i++) {\n            const wordIndex = await this.cryptoService.randomNumber(0, listLength);\n            if (o.capitalize) {\n                wordList[i] = this.capitalize(EEFLongWordList[wordIndex]);\n            } else {\n                wordList[i] = EEFLongWordList[wordIndex];\n            }\n        }\n\n        if (o.includeNumber) {\n            await this.appendRandomNumberToRandomWord(wordList);\n        }\n        return wordList.join(o.wordSeparator);\n    }\n\n    async getOptions(): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        if (this.optionsCache == null) {\n            const options = await this.storageService.get(Keys.options);\n            if (options == null) {\n                this.optionsCache = DefaultOptions;\n            } else {\n                this.optionsCache = Object.assign({}, DefaultOptions, options);\n            }\n        }\n        const enforcedOptions = await this.enforcePasswordGeneratorPoliciesOnOptions(this.optionsCache);\n        this.optionsCache = enforcedOptions[0];\n        return [this.optionsCache, enforcedOptions[1]];\n    }\n\n    async enforcePasswordGeneratorPoliciesOnOptions(options: any): Promise<[any, PasswordGeneratorPolicyOptions]> {\n        let enforcedPolicyOptions = await this.getPasswordGeneratorPolicyOptions();\n        if (enforcedPolicyOptions != null) {\n            if (options.length < enforcedPolicyOptions.minLength) {\n                options.length = enforcedPolicyOptions.minLength;\n            }\n\n            if (enforcedPolicyOptions.useUppercase) {\n                options.uppercase = true;\n            }\n\n            if (enforcedPolicyOptions.useLowercase) {\n                options.lowercase = true;\n            }\n\n            if (enforcedPolicyOptions.useNumbers) {\n                options.number = true;\n            }\n\n            if (options.minNumber < enforcedPolicyOptions.numberCount) {\n                options.minNumber = enforcedPolicyOptions.numberCount;\n            }\n\n            if (enforcedPolicyOptions.useSpecial) {\n                options.special = true;\n            }\n\n            if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n                options.minSpecial = enforcedPolicyOptions.specialCount;\n            }\n\n            // Must normalize these fields because the receiving call expects all options to pass the current rules\n            if (options.minSpecial + options.minNumber > options.length) {\n                options.minSpecial = options.length - options.minNumber;\n            }\n\n            if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n                options.numWords = enforcedPolicyOptions.minNumberWords;\n            }\n\n            if (enforcedPolicyOptions.capitalize) {\n                options.capitalize = true;\n            }\n\n            if (enforcedPolicyOptions.includeNumber) {\n                options.includeNumber = true;\n            }\n\n            // Force default type if password/passphrase selected via policy\n            if (enforcedPolicyOptions.defaultType === 'password' ||\n                enforcedPolicyOptions.defaultType === 'passphrase') {\n                options.type = enforcedPolicyOptions.defaultType;\n            }\n        } else { // UI layer expects an instantiated object to prevent more explicit null checks\n            enforcedPolicyOptions = new PasswordGeneratorPolicyOptions();\n        }\n        return [options, enforcedPolicyOptions];\n    }\n\n    async getPasswordGeneratorPolicyOptions(): Promise<PasswordGeneratorPolicyOptions> {\n        const policies: Policy[] = this.policyService == null ? null :\n            await this.policyService.getAll(PolicyType.PasswordGenerator);\n        let enforcedOptions: PasswordGeneratorPolicyOptions = null;\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach((currentPolicy) => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new PasswordGeneratorPolicyOptions();\n            }\n\n            // Password wins in multi-org collisions\n            if (currentPolicy.data.defaultType != null && enforcedOptions.defaultType !== 'password') {\n                enforcedOptions.defaultType = currentPolicy.data.defaultType;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.useUpper) {\n                enforcedOptions.useUppercase = true;\n            }\n\n            if (currentPolicy.data.useLower) {\n                enforcedOptions.useLowercase = true;\n            }\n\n            if (currentPolicy.data.useNumbers) {\n                enforcedOptions.useNumbers = true;\n            }\n\n            if (currentPolicy.data.minNumbers != null\n                && currentPolicy.data.minNumbers > enforcedOptions.numberCount) {\n                enforcedOptions.numberCount = currentPolicy.data.minNumbers;\n            }\n\n            if (currentPolicy.data.useSpecial) {\n                enforcedOptions.useSpecial = true;\n            }\n\n            if (currentPolicy.data.minSpecial != null\n                && currentPolicy.data.minSpecial > enforcedOptions.specialCount) {\n                enforcedOptions.specialCount = currentPolicy.data.minSpecial;\n            }\n\n            if (currentPolicy.data.minNumberWords != null\n                && currentPolicy.data.minNumberWords > enforcedOptions.minNumberWords) {\n                enforcedOptions.minNumberWords = currentPolicy.data.minNumberWords;\n            }\n\n            if (currentPolicy.data.capitalize) {\n                enforcedOptions.capitalize = true;\n            }\n\n            if (currentPolicy.data.includeNumber) {\n                enforcedOptions.includeNumber = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    async saveOptions(options: any) {\n        await this.storageService.save(Keys.options, options);\n        this.optionsCache = options;\n    }\n\n    async getHistory(): Promise<GeneratedPasswordHistory[]> {\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return new Array<GeneratedPasswordHistory>();\n        }\n\n        if (!this.history) {\n            const encrypted = await this.storageService.get<GeneratedPasswordHistory[]>(Keys.history);\n            this.history = await this.decryptHistory(encrypted);\n        }\n\n        return this.history || new Array<GeneratedPasswordHistory>();\n    }\n\n    async addHistory(password: string): Promise<any> {\n        // Cannot add new history if no key is available\n        const hasKey = await this.cryptoService.hasKey();\n        if (!hasKey) {\n            return;\n        }\n\n        const currentHistory = await this.getHistory();\n\n        // Prevent duplicates\n        if (this.matchesPrevious(password, currentHistory)) {\n            return;\n        }\n\n        currentHistory.unshift(new GeneratedPasswordHistory(password, Date.now()));\n\n        // Remove old items.\n        if (currentHistory.length > MaxPasswordsInHistory) {\n            currentHistory.pop();\n        }\n\n        const newHistory = await this.encryptHistory(currentHistory);\n        return await this.storageService.save(Keys.history, newHistory);\n    }\n\n    async clear(): Promise<any> {\n        this.history = [];\n        return await this.storageService.remove(Keys.history);\n    }\n\n    passwordStrength(password: string, userInputs: string[] = null): zxcvbn.ZXCVBNResult {\n        if (password == null || password.length === 0) {\n            return null;\n        }\n        let globalUserInputs = ['bitwarden', 'bit', 'warden'];\n        if (userInputs != null && userInputs.length > 0) {\n            globalUserInputs = globalUserInputs.concat(userInputs);\n        }\n        // Use a hash set to get rid of any duplicate user inputs\n        const finalUserInputs = Array.from(new Set(globalUserInputs));\n        const result = zxcvbn(password, finalUserInputs);\n        return result;\n    }\n\n    normalizeOptions(options: any, enforcedPolicyOptions: PasswordGeneratorPolicyOptions) {\n        options.minLowercase = 0;\n        options.minUppercase = 0;\n\n        if (!options.length || options.length < 5) {\n            options.length = 5;\n        } else if (options.length > 128) {\n            options.length = 128;\n        }\n\n        if (options.length < enforcedPolicyOptions.minLength) {\n            options.length = enforcedPolicyOptions.minLength;\n        }\n\n        if (!options.minNumber) {\n            options.minNumber = 0;\n        } else if (options.minNumber > options.length) {\n            options.minNumber = options.length;\n        } else if (options.minNumber > 9) {\n            options.minNumber = 9;\n        }\n\n        if (options.minNumber < enforcedPolicyOptions.numberCount) {\n            options.minNumber = enforcedPolicyOptions.numberCount;\n        }\n\n        if (!options.minSpecial) {\n            options.minSpecial = 0;\n        } else if (options.minSpecial > options.length) {\n            options.minSpecial = options.length;\n        } else if (options.minSpecial > 9) {\n            options.minSpecial = 9;\n        }\n\n        if (options.minSpecial < enforcedPolicyOptions.specialCount) {\n            options.minSpecial = enforcedPolicyOptions.specialCount;\n        }\n\n        if (options.minSpecial + options.minNumber > options.length) {\n            options.minSpecial = options.length - options.minNumber;\n        }\n\n        if (options.numWords == null || options.length < 3) {\n            options.numWords = 3;\n        } else if (options.numWords > 20) {\n            options.numWords = 20;\n        }\n\n        if (options.numWords < enforcedPolicyOptions.minNumberWords) {\n            options.numWords = enforcedPolicyOptions.minNumberWords;\n        }\n\n        if (options.wordSeparator != null && options.wordSeparator.length > 1) {\n            options.wordSeparator = options.wordSeparator[0];\n        }\n\n        this.sanitizePasswordLength(options, false);\n    }\n\n    private capitalize(str: string) {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n\n    private async appendRandomNumberToRandomWord(wordList: string[]) {\n        if (wordList == null || wordList.length <= 0) {\n            return;\n        }\n        const index = await this.cryptoService.randomNumber(0, wordList.length - 1);\n        const num = await this.cryptoService.randomNumber(0, 9);\n        wordList[index] = wordList[index] + num;\n    }\n\n    private async encryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async (item) => {\n            const encrypted = await this.cryptoService.encrypt(item.password);\n            return new GeneratedPasswordHistory(encrypted.encryptedString, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private async decryptHistory(history: GeneratedPasswordHistory[]): Promise<GeneratedPasswordHistory[]> {\n        if (history == null || history.length === 0) {\n            return Promise.resolve([]);\n        }\n\n        const promises = history.map(async (item) => {\n            const decrypted = await this.cryptoService.decryptToUtf8(new CipherString(item.password));\n            return new GeneratedPasswordHistory(decrypted, item.date);\n        });\n\n        return await Promise.all(promises);\n    }\n\n    private matchesPrevious(password: string, history: GeneratedPasswordHistory[]): boolean {\n        if (history == null || history.length === 0) {\n            return false;\n        }\n\n        return history[history.length - 1].password === password;\n    }\n\n    // ref: https://stackoverflow.com/a/12646864/1090359\n    private async shuffleArray(array: string[]) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = await this.cryptoService.randomNumber(0, i);\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n    }\n\n    private sanitizePasswordLength(options: any, forGeneration: boolean) {\n        let minUppercaseCalc = 0;\n        let minLowercaseCalc = 0;\n        let minNumberCalc: number = options.minNumber;\n        let minSpecialCalc: number = options.minSpecial;\n\n        if (options.uppercase && options.minUppercase <= 0) {\n            minUppercaseCalc = 1;\n        } else if (!options.uppercase) {\n            minUppercaseCalc = 0;\n        }\n\n        if (options.lowercase && options.minLowercase <= 0) {\n            minLowercaseCalc = 1;\n        } else if (!options.lowercase) {\n            minLowercaseCalc = 0;\n        }\n\n        if (options.number && options.minNumber <= 0) {\n            minNumberCalc = 1;\n        } else if (!options.number) {\n            minNumberCalc = 0;\n        }\n\n        if (options.special && options.minSpecial <= 0) {\n            minSpecialCalc = 1;\n        } else if (!options.special) {\n            minSpecialCalc = 0;\n        }\n\n        // This should never happen but is a final safety net\n        if (!options.length || options.length < 1) {\n            options.length = 10;\n        }\n\n        const minLength: number = minUppercaseCalc + minLowercaseCalc + minNumberCalc + minSpecialCalc;\n        // Normalize and Generation both require this modification\n        if (options.length < minLength) {\n            options.length = minLength;\n        }\n\n        // Apply other changes if the options object passed in is for generation\n        if (forGeneration) {\n            options.minUppercase = minUppercaseCalc;\n            options.minLowercase = minLowercaseCalc;\n            options.minNumber = minNumberCalc;\n            options.minSpecial = minSpecialCalc;\n        }\n    }\n}\n","import { SettingsService as SettingsServiceAbstraction } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nconst Keys = {\n    settingsPrefix: 'settings_',\n    equivalentDomains: 'equivalentDomains',\n};\n\nexport class SettingsService implements SettingsServiceAbstraction {\n    private settingsCache: any;\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.settingsCache = null;\n    }\n\n    getEquivalentDomains(): Promise<any> {\n        return this.getSettingsKey(Keys.equivalentDomains);\n    }\n\n    async setEquivalentDomains(equivalentDomains: string[][]): Promise<void> {\n        await this.setSettingsKey(Keys.equivalentDomains, equivalentDomains);\n    }\n\n    async clear(userId: string): Promise<void> {\n        await this.storageService.remove(Keys.settingsPrefix + userId);\n        this.clearCache();\n    }\n\n    // Helpers\n\n    private async getSettings(): Promise<any> {\n        if (this.settingsCache == null) {\n            const userId = await this.userService.getUserId();\n            this.settingsCache = this.storageService.get(Keys.settingsPrefix + userId);\n        }\n        return this.settingsCache;\n    }\n\n    private async getSettingsKey(key: string): Promise<any> {\n        const settings = await this.getSettings();\n        if (settings != null && settings[key]) {\n            return settings[key];\n        }\n        return null;\n    }\n\n    private async setSettingsKey(key: string, value: any): Promise<void> {\n        const userId = await this.userService.getUserId();\n        let settings = await this.getSettings();\n        if (!settings) {\n            settings = {};\n        }\n\n        settings[key] = value;\n        await this.storageService.save(Keys.settingsPrefix + userId, settings);\n        this.settingsCache = settings;\n    }\n}\n","import { StateService as StateServiceAbstraction } from '../abstractions/state.service';\n\nexport class StateService implements StateServiceAbstraction {\n    private state: any = {};\n\n    get<T>(key: string): Promise<T> {\n        if (this.state.hasOwnProperty(key)) {\n            return Promise.resolve(this.state[key]);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        this.state[key] = obj;\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        delete this.state[key];\n        return Promise.resolve();\n    }\n\n    purge(): Promise<any> {\n        this.state = {};\n        return Promise.resolve();\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PolicyService } from '../abstractions/policy.service';\nimport { SettingsService } from '../abstractions/settings.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { FolderData } from '../models/data/folderData';\nimport { OrganizationData } from '../models/data/organizationData';\nimport { PolicyData } from '../models/data/policyData';\n\nimport { CipherResponse } from '../models/response/cipherResponse';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\nimport { DomainsResponse } from '../models/response/domainsResponse';\nimport { FolderResponse } from '../models/response/folderResponse';\nimport {\n    SyncCipherNotification,\n    SyncFolderNotification,\n} from '../models/response/notificationResponse';\nimport { PolicyResponse } from '../models/response/policyResponse';\nimport { ProfileResponse } from '../models/response/profileResponse';\n\nconst Keys = {\n    lastSyncPrefix: 'lastSync_',\n};\n\nexport class SyncService implements SyncServiceAbstraction {\n    syncInProgress: boolean = false;\n\n    constructor(private userService: UserService, private apiService: ApiService,\n        private settingsService: SettingsService, private folderService: FolderService,\n        private cipherService: CipherService, private cryptoService: CryptoService,\n        private collectionService: CollectionService, private storageService: StorageService,\n        private messagingService: MessagingService, private policyService: PolicyService,\n        private logoutCallback: (expired: boolean) => Promise<void>) {\n    }\n\n    async getLastSync(): Promise<Date> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return null;\n        }\n\n        const lastSync = await this.storageService.get<any>(Keys.lastSyncPrefix + userId);\n        if (lastSync) {\n            return new Date(lastSync);\n        }\n\n        return null;\n    }\n\n    async setLastSync(date: Date): Promise<any> {\n        const userId = await this.userService.getUserId();\n        if (userId == null) {\n            return;\n        }\n\n        await this.storageService.save(Keys.lastSyncPrefix + userId, date.toJSON());\n    }\n\n    async fullSync(forceSync: boolean, allowThrowOnError = false): Promise<boolean> {\n        this.syncStarted();\n        const isAuthenticated = await this.userService.isAuthenticated();\n        if (!isAuthenticated) {\n            return this.syncCompleted(false);\n        }\n\n        const now = new Date();\n        const needsSyncResult = await this.needsSyncing(forceSync);\n        const needsSync = needsSyncResult[0];\n        const skipped = needsSyncResult[1];\n\n        if (skipped) {\n            return this.syncCompleted(false);\n        }\n\n        if (!needsSync) {\n            await this.setLastSync(now);\n            return this.syncCompleted(false);\n        }\n\n        const userId = await this.userService.getUserId();\n        try {\n            const response = await this.apiService.getSync();\n\n            await this.syncProfile(response.profile);\n            await this.syncFolders(userId, response.folders);\n            await this.syncCollections(response.collections);\n            await this.syncCiphers(userId, response.ciphers);\n            await this.syncSettings(userId, response.domains);\n            await this.syncPolicies(response.policies);\n\n            await this.setLastSync(now);\n            return this.syncCompleted(true);\n        } catch (e) {\n            if (allowThrowOnError) {\n                throw e;\n            } else {\n                return this.syncCompleted(false);\n            }\n        }\n    }\n\n    async syncUpsertFolder(notification: SyncFolderNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                const localFolder = await this.folderService.get(notification.id);\n                if ((!isEdit && localFolder == null) ||\n                    (isEdit && localFolder != null && localFolder.revisionDate < notification.revisionDate)) {\n                    const remoteFolder = await this.apiService.getFolder(notification.id);\n                    if (remoteFolder != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.folderService.upsert(new FolderData(remoteFolder, userId));\n                        this.messagingService.send('syncedUpsertedFolder', { folderId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch { }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteFolder(notification: SyncFolderNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.folderService.delete(notification.id);\n            this.messagingService.send('syncedDeletedFolder', { folderId: notification.id });\n            this.syncCompleted(true);\n            return true;\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncUpsertCipher(notification: SyncCipherNotification, isEdit: boolean): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            try {\n                let shouldUpdate = true;\n                const localCipher = await this.cipherService.get(notification.id);\n                if (localCipher != null && localCipher.revisionDate >= notification.revisionDate) {\n                    shouldUpdate = false;\n                }\n\n                let checkCollections = false;\n                if (shouldUpdate) {\n                    if (isEdit) {\n                        shouldUpdate = localCipher != null;\n                        checkCollections = true;\n                    } else {\n                        if (notification.collectionIds == null || notification.organizationId == null) {\n                            shouldUpdate = localCipher == null;\n                        } else {\n                            shouldUpdate = false;\n                            checkCollections = true;\n                        }\n                    }\n                }\n\n                if (!shouldUpdate && checkCollections && notification.organizationId != null &&\n                    notification.collectionIds != null && notification.collectionIds.length > 0) {\n                    const collections = await this.collectionService.getAll();\n                    if (collections != null) {\n                        for (let i = 0; i < collections.length; i++) {\n                            if (notification.collectionIds.indexOf(collections[i].id) > -1) {\n                                shouldUpdate = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (shouldUpdate) {\n                    const remoteCipher = await this.apiService.getCipher(notification.id);\n                    if (remoteCipher != null) {\n                        const userId = await this.userService.getUserId();\n                        await this.cipherService.upsert(new CipherData(remoteCipher, userId));\n                        this.messagingService.send('syncedUpsertedCipher', { cipherId: notification.id });\n                        return this.syncCompleted(true);\n                    }\n                }\n            } catch (e) {\n                if (e != null && e.statusCode === 404 && isEdit) {\n                    await this.cipherService.delete(notification.id);\n                    this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n                    return this.syncCompleted(true);\n                }\n            }\n        }\n        return this.syncCompleted(false);\n    }\n\n    async syncDeleteCipher(notification: SyncCipherNotification): Promise<boolean> {\n        this.syncStarted();\n        if (await this.userService.isAuthenticated()) {\n            await this.cipherService.delete(notification.id);\n            this.messagingService.send('syncedDeletedCipher', { cipherId: notification.id });\n            return this.syncCompleted(true);\n        }\n        return this.syncCompleted(false);\n    }\n\n    // Helpers\n\n    private syncStarted() {\n        this.syncInProgress = true;\n        this.messagingService.send('syncStarted');\n    }\n\n    private syncCompleted(successfully: boolean): boolean {\n        this.syncInProgress = false;\n        this.messagingService.send('syncCompleted', { successfully: successfully });\n        return successfully;\n    }\n\n    private async needsSyncing(forceSync: boolean) {\n        if (forceSync) {\n            return [true, false];\n        }\n\n        const lastSync = await this.getLastSync();\n        if (lastSync == null || lastSync.getTime() === 0) {\n            return [true, false];\n        }\n\n        try {\n            const response = await this.apiService.getAccountRevisionDate();\n            if (new Date(response) <= lastSync) {\n                return [false, false];\n            }\n            return [true, false];\n        } catch (e) {\n            return [false, true];\n        }\n    }\n\n    private async syncProfile(response: ProfileResponse) {\n        const stamp = await this.userService.getSecurityStamp();\n        if (stamp != null && stamp !== response.securityStamp) {\n            if (this.logoutCallback != null) {\n                await this.logoutCallback(true);\n            }\n\n            throw new Error('Stamp has changed');\n        }\n\n        await this.cryptoService.setEncKey(response.key);\n        await this.cryptoService.setEncPrivateKey(response.privateKey);\n        await this.cryptoService.setOrgKeys(response.organizations);\n        await this.userService.setSecurityStamp(response.securityStamp);\n\n        const organizations: { [id: string]: OrganizationData; } = {};\n        response.organizations.forEach((o) => {\n            organizations[o.id] = new OrganizationData(o);\n        });\n        return await this.userService.replaceOrganizations(organizations);\n    }\n\n    private async syncFolders(userId: string, response: FolderResponse[]) {\n        const folders: { [id: string]: FolderData; } = {};\n        response.forEach((f) => {\n            folders[f.id] = new FolderData(f, userId);\n        });\n        return await this.folderService.replace(folders);\n    }\n\n    private async syncCollections(response: CollectionDetailsResponse[]) {\n        const collections: { [id: string]: CollectionData; } = {};\n        response.forEach((c) => {\n            collections[c.id] = new CollectionData(c);\n        });\n        return await this.collectionService.replace(collections);\n    }\n\n    private async syncCiphers(userId: string, response: CipherResponse[]) {\n        const ciphers: { [id: string]: CipherData; } = {};\n        response.forEach((c) => {\n            ciphers[c.id] = new CipherData(c, userId);\n        });\n        return await this.cipherService.replace(ciphers);\n    }\n\n    private async syncSettings(userId: string, response: DomainsResponse) {\n        let eqDomains: string[][] = [];\n        if (response != null && response.equivalentDomains != null) {\n            eqDomains = eqDomains.concat(response.equivalentDomains);\n        }\n\n        if (response != null && response.globalEquivalentDomains != null) {\n            response.globalEquivalentDomains.forEach((global) => {\n                if (global.domains.length > 0) {\n                    eqDomains.push(global.domains);\n                }\n            });\n        }\n\n        return this.settingsService.setEquivalentDomains(eqDomains);\n    }\n\n    private async syncPolicies(response: PolicyResponse[]) {\n        const policies: { [id: string]: PolicyData; } = {};\n        if (response != null) {\n            response.forEach((p) => {\n                policies[p.id] = new PolicyData(p);\n            });\n        }\n        return await this.policyService.replace(policies);\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService as TokenServiceAbstraction } from '../abstractions/token.service';\n\nimport { Utils } from '../misc/utils';\n\nconst Keys = {\n    accessToken: 'accessToken',\n    refreshToken: 'refreshToken',\n    twoFactorTokenPrefix: 'twoFactorToken_',\n};\n\nexport class TokenService implements TokenServiceAbstraction {\n    token: string;\n    decodedToken: any;\n    refreshToken: string;\n\n    constructor(private storageService: StorageService) {\n    }\n\n    setTokens(accessToken: string, refreshToken: string): Promise<any> {\n        return Promise.all([\n            this.setToken(accessToken),\n            this.setRefreshToken(refreshToken),\n        ]);\n    }\n\n    async setToken(token: string): Promise<any> {\n        this.token = token;\n        this.decodedToken = null;\n\n        if (await this.skipTokenStorage()) {\n            // if we have a vault timeout and the action is log out, don't store token\n            return;\n        }\n\n        return this.storageService.save(Keys.accessToken, token);\n    }\n\n    async getToken(): Promise<string> {\n        if (this.token != null) {\n            return this.token;\n        }\n\n        this.token = await this.storageService.get<string>(Keys.accessToken);\n        return this.token;\n    }\n\n    async setRefreshToken(refreshToken: string): Promise<any> {\n        this.refreshToken = refreshToken;\n\n        if (await this.skipTokenStorage()) {\n            // if we have a vault timeout and the action is log out, don't store token\n            return;\n        }\n\n        return this.storageService.save(Keys.refreshToken, refreshToken);\n    }\n\n    async getRefreshToken(): Promise<string> {\n        if (this.refreshToken != null) {\n            return this.refreshToken;\n        }\n\n        this.refreshToken = await this.storageService.get<string>(Keys.refreshToken);\n        return this.refreshToken;\n    }\n\n    async toggleTokens(): Promise<any> {\n        const token = await this.getToken();\n        const refreshToken = await this.getRefreshToken();\n        const timeout = await this.storageService.get(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get(ConstantsService.vaultTimeoutActionKey);\n        if ((timeout != null || timeout === 0) && action === 'logOut') {\n            // if we have a vault timeout and the action is log out, reset tokens\n            await this.clearToken();\n            this.token = token;\n            this.refreshToken = refreshToken;\n            return;\n        }\n\n        await this.setToken(token);\n        await this.setRefreshToken(refreshToken);\n    }\n\n    setTwoFactorToken(token: string, email: string): Promise<any> {\n        return this.storageService.save(Keys.twoFactorTokenPrefix + email, token);\n    }\n\n    getTwoFactorToken(email: string): Promise<string> {\n        return this.storageService.get<string>(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearTwoFactorToken(email: string): Promise<any> {\n        return this.storageService.remove(Keys.twoFactorTokenPrefix + email);\n    }\n\n    clearToken(): Promise<any> {\n        this.token = null;\n        this.decodedToken = null;\n        this.refreshToken = null;\n\n        return Promise.all([\n            this.storageService.remove(Keys.accessToken),\n            this.storageService.remove(Keys.refreshToken),\n        ]);\n    }\n\n    // jwthelper methods\n    // ref https://github.com/auth0/angular-jwt/blob/master/src/angularJwt/services/jwt.js\n\n    decodeToken(): any {\n        if (this.decodedToken) {\n            return this.decodedToken;\n        }\n\n        if (this.token == null) {\n            throw new Error('Token not found.');\n        }\n\n        const parts = this.token.split('.');\n        if (parts.length !== 3) {\n            throw new Error('JWT must have 3 parts');\n        }\n\n        const decoded = Utils.fromUrlB64ToUtf8(parts[1]);\n        if (decoded == null) {\n            throw new Error('Cannot decode the token');\n        }\n\n        this.decodedToken = JSON.parse(decoded);\n        return this.decodedToken;\n    }\n\n    getTokenExpirationDate(): Date {\n        const decoded = this.decodeToken();\n        if (typeof decoded.exp === 'undefined') {\n            return null;\n        }\n\n        const d = new Date(0); // The 0 here is the key, which sets the date to the epoch\n        d.setUTCSeconds(decoded.exp);\n        return d;\n    }\n\n    tokenSecondsRemaining(offsetSeconds: number = 0): number {\n        const d = this.getTokenExpirationDate();\n        if (d == null) {\n            return 0;\n        }\n\n        const msRemaining = d.valueOf() - (new Date().valueOf() + (offsetSeconds * 1000));\n        return Math.round(msRemaining / 1000);\n    }\n\n    tokenNeedsRefresh(minutes: number = 5): boolean {\n        const sRemaining = this.tokenSecondsRemaining();\n        return sRemaining < (60 * minutes);\n    }\n\n    getUserId(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.sub === 'undefined') {\n            throw new Error('No user id found');\n        }\n\n        return decoded.sub as string;\n    }\n\n    getEmail(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email === 'undefined') {\n            throw new Error('No email found');\n        }\n\n        return decoded.email as string;\n    }\n\n    getEmailVerified(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.email_verified === 'undefined') {\n            throw new Error('No email verification found');\n        }\n\n        return decoded.email_verified as boolean;\n    }\n\n    getName(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.name === 'undefined') {\n            return null;\n        }\n\n        return decoded.name as string;\n    }\n\n    getPremium(): boolean {\n        const decoded = this.decodeToken();\n        if (typeof decoded.premium === 'undefined') {\n            return false;\n        }\n\n        return decoded.premium as boolean;\n    }\n\n    getIssuer(): string {\n        const decoded = this.decodeToken();\n        if (typeof decoded.iss === 'undefined') {\n            throw new Error('No issuer found');\n        }\n\n        return decoded.iss as string;\n    }\n\n    private async skipTokenStorage(): Promise<boolean> {\n        const timeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        const action = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n        return timeout != null && action === 'logOut';\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TotpService as TotpServiceAbstraction } from '../abstractions/totp.service';\n\nimport { Utils } from '../misc/utils';\n\nconst B32Chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567';\nconst SteamChars = '23456789BCDFGHJKMNPQRTVWXY';\n\nexport class TotpService implements TotpServiceAbstraction {\n    constructor(private storageService: StorageService, private cryptoFunctionService: CryptoFunctionService) { }\n\n    async getCode(key: string): Promise<string> {\n        if (key == null) {\n            return null;\n        }\n        let period = 30;\n        let alg: 'sha1' | 'sha256' | 'sha512' = 'sha1';\n        let digits = 6;\n        let keyB32 = key;\n        const isOtpAuth = key.toLowerCase().indexOf('otpauth://') === 0;\n        const isSteamAuth = !isOtpAuth && key.toLowerCase().indexOf('steam://') === 0;\n        if (isOtpAuth) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('digits') && params.get('digits') != null) {\n                try {\n                    const digitParams = parseInt(params.get('digits').trim(), null);\n                    if (digitParams > 10) {\n                        digits = 10;\n                    } else if (digitParams > 0) {\n                        digits = digitParams;\n                    }\n                } catch { }\n            }\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    const periodParam = parseInt(params.get('period').trim(), null);\n                    if (periodParam > 0) {\n                        period = periodParam;\n                    }\n                } catch { }\n            }\n            if (params.has('secret') && params.get('secret') != null) {\n                keyB32 = params.get('secret');\n            }\n            if (params.has('algorithm') && params.get('algorithm') != null) {\n                const algParam = params.get('algorithm').toLowerCase();\n                if (algParam === 'sha1' || algParam === 'sha256' || algParam === 'sha512') {\n                    alg = algParam;\n                }\n            }\n        } else if (isSteamAuth) {\n            keyB32 = key.substr('steam://'.length);\n            digits = 5;\n        }\n\n        const epoch = Math.round(new Date().getTime() / 1000.0);\n        const timeHex = this.leftPad(this.decToHex(Math.floor(epoch / period)), 16, '0');\n        const timeBytes = Utils.fromHexToArray(timeHex);\n        const keyBytes = this.b32ToBytes(keyB32);\n\n        if (!keyBytes.length || !timeBytes.length) {\n            return null;\n        }\n\n        const hash = await this.sign(keyBytes, timeBytes, alg);\n        if (hash.length === 0) {\n            return null;\n        }\n\n        /* tslint:disable */\n        const offset = (hash[hash.length - 1] & 0xf);\n        const binary = ((hash[offset] & 0x7f) << 24) | ((hash[offset + 1] & 0xff) << 16) |\n            ((hash[offset + 2] & 0xff) << 8) | (hash[offset + 3] & 0xff);\n        /* tslint:enable */\n\n        let otp = '';\n        if (isSteamAuth) {\n            // tslint:disable-next-line\n            let fullCode = binary & 0x7fffffff;\n            for (let i = 0; i < digits; i++) {\n                otp += SteamChars[fullCode % SteamChars.length];\n                fullCode = Math.trunc(fullCode / SteamChars.length);\n            }\n        } else {\n            otp = (binary % Math.pow(10, digits)).toString();\n            otp = this.leftPad(otp, digits, '0');\n        }\n\n        return otp;\n    }\n\n    getTimeInterval(key: string): number {\n        let period = 30;\n        if (key != null && key.toLowerCase().indexOf('otpauth://') === 0) {\n            const params = Utils.getQueryParams(key);\n            if (params.has('period') && params.get('period') != null) {\n                try {\n                    period = parseInt(params.get('period').trim(), null);\n                } catch { }\n            }\n        }\n        return period;\n    }\n\n    async isAutoCopyEnabled(): Promise<boolean> {\n        return !(await this.storageService.get<boolean>(ConstantsService.disableAutoTotpCopyKey));\n    }\n\n    // Helpers\n\n    private leftPad(s: string, l: number, p: string): string {\n        if (l + 1 >= s.length) {\n            s = Array(l + 1 - s.length).join(p) + s;\n        }\n        return s;\n    }\n\n    private decToHex(d: number): string {\n        return (d < 15.5 ? '0' : '') + Math.round(d).toString(16);\n    }\n\n    private b32ToHex(s: string): string {\n        s = s.toUpperCase();\n        let cleanedInput = '';\n\n        for (let i = 0; i < s.length; i++) {\n            if (B32Chars.indexOf(s[i]) < 0) {\n                continue;\n            }\n\n            cleanedInput += s[i];\n        }\n        s = cleanedInput;\n\n        let bits = '';\n        let hex = '';\n        for (let i = 0; i < s.length; i++) {\n            const byteIndex = B32Chars.indexOf(s.charAt(i));\n            if (byteIndex < 0) {\n                continue;\n            }\n            bits += this.leftPad(byteIndex.toString(2), 5, '0');\n        }\n        for (let i = 0; i + 4 <= bits.length; i += 4) {\n            const chunk = bits.substr(i, 4);\n            hex = hex + parseInt(chunk, 2).toString(16);\n        }\n        return hex;\n    }\n\n    private b32ToBytes(s: string): Uint8Array {\n        return Utils.fromHexToArray(this.b32ToHex(s));\n    }\n\n    private async sign(keyBytes: Uint8Array, timeBytes: Uint8Array, alg: 'sha1' | 'sha256' | 'sha512') {\n        const signature = await this.cryptoFunctionService.hmac(timeBytes.buffer, keyBytes.buffer, alg);\n        return new Uint8Array(signature);\n    }\n}\n","import { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService as UserServiceAbstraction } from '../abstractions/user.service';\n\nimport { OrganizationData } from '../models/data/organizationData';\nimport { Organization } from '../models/domain/organization';\n\nimport { KdfType } from '../enums/kdfType';\n\nconst Keys = {\n    userId: 'userId',\n    userEmail: 'userEmail',\n    stamp: 'securityStamp',\n    kdf: 'kdf',\n    kdfIterations: 'kdfIterations',\n    organizationsPrefix: 'organizations_',\n};\n\nexport class UserService implements UserServiceAbstraction {\n    private userId: string;\n    private email: string;\n    private stamp: string;\n    private kdf: KdfType;\n    private kdfIterations: number;\n\n    constructor(private tokenService: TokenService, private storageService: StorageService) { }\n\n    setInformation(userId: string, email: string, kdf: KdfType, kdfIterations: number): Promise<any> {\n        this.email = email;\n        this.userId = userId;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n\n        return Promise.all([\n            this.storageService.save(Keys.userEmail, email),\n            this.storageService.save(Keys.userId, userId),\n            this.storageService.save(Keys.kdf, kdf),\n            this.storageService.save(Keys.kdfIterations, kdfIterations),\n        ]);\n    }\n\n    setSecurityStamp(stamp: string): Promise<any> {\n        this.stamp = stamp;\n        return this.storageService.save(Keys.stamp, stamp);\n    }\n\n    async getUserId(): Promise<string> {\n        if (this.userId == null) {\n            this.userId = await this.storageService.get<string>(Keys.userId);\n        }\n        return this.userId;\n    }\n\n    async getEmail(): Promise<string> {\n        if (this.email == null) {\n            this.email = await this.storageService.get<string>(Keys.userEmail);\n        }\n        return this.email;\n    }\n\n    async getSecurityStamp(): Promise<string> {\n        if (this.stamp == null) {\n            this.stamp = await this.storageService.get<string>(Keys.stamp);\n        }\n        return this.stamp;\n    }\n\n    async getKdf(): Promise<KdfType> {\n        if (this.kdf == null) {\n            this.kdf = await this.storageService.get<KdfType>(Keys.kdf);\n        }\n        return this.kdf;\n    }\n\n    async getKdfIterations(): Promise<number> {\n        if (this.kdfIterations == null) {\n            this.kdfIterations = await this.storageService.get<number>(Keys.kdfIterations);\n        }\n        return this.kdfIterations;\n    }\n\n    async clear(): Promise<any> {\n        const userId = await this.getUserId();\n\n        await Promise.all([\n            this.storageService.remove(Keys.userId),\n            this.storageService.remove(Keys.userEmail),\n            this.storageService.remove(Keys.stamp),\n            this.storageService.remove(Keys.kdf),\n            this.storageService.remove(Keys.kdfIterations),\n            this.clearOrganizations(userId),\n        ]);\n\n        this.userId = this.email = this.stamp = null;\n        this.kdf = null;\n        this.kdfIterations = null;\n    }\n\n    async isAuthenticated(): Promise<boolean> {\n        const token = await this.tokenService.getToken();\n        if (token == null) {\n            return false;\n        }\n\n        const userId = await this.getUserId();\n        return userId != null;\n    }\n\n    async canAccessPremium(): Promise<boolean> {\n        const tokenPremium = this.tokenService.getPremium();\n        if (tokenPremium) {\n            return true;\n        }\n\n        const orgs = await this.getAllOrganizations();\n        for (let i = 0; i < orgs.length; i++) {\n            if (orgs[i].usersGetPremium && orgs[i].enabled) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    async getOrganization(id: string): Promise<Organization> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        if (organizations == null || !organizations.hasOwnProperty(id)) {\n            return null;\n        }\n\n        return new Organization(organizations[id]);\n    }\n\n    async getAllOrganizations(): Promise<Organization[]> {\n        const userId = await this.getUserId();\n        const organizations = await this.storageService.get<{ [id: string]: OrganizationData; }>(\n            Keys.organizationsPrefix + userId);\n        const response: Organization[] = [];\n        for (const id in organizations) {\n            if (organizations.hasOwnProperty(id)) {\n                response.push(new Organization(organizations[id]));\n            }\n        }\n        return response;\n    }\n\n    async replaceOrganizations(organizations: { [id: string]: OrganizationData; }): Promise<any> {\n        const userId = await this.getUserId();\n        await this.storageService.save(Keys.organizationsPrefix + userId, organizations);\n    }\n\n    async clearOrganizations(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.organizationsPrefix + userId);\n    }\n}\n","import { ConstantsService } from './constants.service';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { CryptoService } from '../abstractions/crypto.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { MessagingService } from '../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { SearchService } from '../abstractions/search.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { TokenService } from '../abstractions/token.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from '../abstractions/vaultTimeout.service';\n\nimport { CipherString } from '../models/domain/cipherString';\n\nexport class VaultTimeoutService implements VaultTimeoutServiceAbstraction {\n    pinProtectedKey: CipherString = null;\n    biometricLocked: boolean = true;\n\n    private inited = false;\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private collectionService: CollectionService, private cryptoService: CryptoService,\n        private platformUtilsService: PlatformUtilsService, private storageService: StorageService,\n        private messagingService: MessagingService, private searchService: SearchService,\n        private userService: UserService, private tokenService: TokenService,\n        private lockedCallback: () => Promise<void> = null, private loggedOutCallback: () => Promise<void> = null) {\n    }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.checkVaultTimeout();\n            setInterval(() => this.checkVaultTimeout(), 10 * 1000); // check every 10 seconds\n        }\n    }\n\n    // Keys aren't stored for a device that is locked or logged out.\n    async isLocked(): Promise<boolean> {\n        const hasKey = await this.cryptoService.hasKey();\n        if (hasKey) {\n            if (await this.isBiometricLockSet() && this.biometricLocked) {\n                return true;\n            }\n        }\n        return !hasKey;\n    }\n\n    async checkVaultTimeout(): Promise<void> {\n        if (await this.platformUtilsService.isViewOpen()) {\n            // Do not lock\n            return;\n        }\n\n        // \"is logged out check\" - similar to isLocked, below\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        if (await this.isLocked()) {\n            return;\n        }\n\n        // This has the potential to be removed. Evaluate after all platforms complete with auto-logout\n        let vaultTimeout = this.platformUtilsService.lockTimeout();\n        if (vaultTimeout == null) {\n            vaultTimeout = await this.storageService.get<number>(ConstantsService.vaultTimeoutKey);\n        }\n\n        if (vaultTimeout == null || vaultTimeout < 0) {\n            return;\n        }\n\n        const lastActive = await this.storageService.get<number>(ConstantsService.lastActiveKey);\n        if (lastActive == null) {\n            return;\n        }\n\n        const vaultTimeoutSeconds = vaultTimeout * 60;\n        const diffSeconds = ((new Date()).getTime() - lastActive) / 1000;\n        if (diffSeconds >= vaultTimeoutSeconds) {\n            // Pivot based on the saved vault timeout action\n            const timeoutAction = await this.storageService.get<string>(ConstantsService.vaultTimeoutActionKey);\n            timeoutAction === 'logOut' ? await this.logOut() : await this.lock(true);\n        }\n    }\n\n    async lock(allowSoftLock = false): Promise<void> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n\n        if (allowSoftLock) {\n            const biometricLocked = await this.isBiometricLockSet();\n            if (biometricLocked) {\n                this.messagingService.send('locked');\n                if (this.lockedCallback != null) {\n                    await this.lockedCallback();\n                }\n                return;\n            }\n        }\n\n        await Promise.all([\n            this.cryptoService.clearKey(),\n            this.cryptoService.clearOrgKeys(true),\n            this.cryptoService.clearKeyPair(true),\n            this.cryptoService.clearEncKey(true),\n        ]);\n\n        this.folderService.clearCache();\n        this.cipherService.clearCache();\n        this.collectionService.clearCache();\n        this.searchService.clearIndex();\n        this.messagingService.send('locked');\n        if (this.lockedCallback != null) {\n            await this.lockedCallback();\n        }\n    }\n\n    async logOut(): Promise<void> {\n        if (this.loggedOutCallback != null) {\n            await this.loggedOutCallback();\n        }\n    }\n\n    async setVaultTimeoutOptions(timeout: number, action: string): Promise<void> {\n        await this.storageService.save(ConstantsService.vaultTimeoutKey, timeout);\n        await this.storageService.save(ConstantsService.vaultTimeoutActionKey, action);\n        await this.cryptoService.toggleKey();\n        await this.tokenService.toggleTokens();\n    }\n\n    async isPinLockSet(): Promise<[boolean, boolean]> {\n        const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n        const pinProtectedKey = await this.storageService.get<string>(ConstantsService.pinProtectedKey);\n        return [protectedPin != null, pinProtectedKey != null];\n    }\n\n    async isBiometricLockSet(): Promise<boolean> {\n        return await this.storageService.get<boolean>(ConstantsService.biometricUnlockKey);\n    }\n\n    clear(): Promise<any> {\n        this.pinProtectedKey = null;\n        return this.storageService.remove(ConstantsService.protectedPin);\n    }\n}\n","import { Cipher } from './cipher';\n\nimport { CipherView } from '../view/cipherView';\n\nexport class CipherWithIds extends Cipher {\n    id: string;\n    collectionIds: string[];\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView) {\n        this.id = o.id;\n        super.build(o);\n        this.collectionIds = o.collectionIds;\n    }\n}\n","import { Collection } from './collection';\n\nimport { CollectionView } from '../view/collectionView';\n\nexport class CollectionWithId extends Collection {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","import { Folder } from './folder';\n\nimport { FolderView } from '../view/folderView';\n\nexport class FolderWithId extends Folder {\n    id: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView) {\n        this.id = o.id;\n        super.build(o);\n    }\n}\n","export enum NotificationType {\n    SyncCipherUpdate = 0,\n    SyncCipherCreate = 1,\n    SyncLoginDelete = 2,\n    SyncFolderDelete = 3,\n    SyncCiphers = 4,\n\n    SyncVault = 5,\n    SyncOrgKeys = 6,\n    SyncFolderCreate = 7,\n    SyncFolderUpdate = 8,\n    SyncCipherDelete = 9,\n    SyncSettings = 10,\n\n    LogOut = 11,\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport 'bootstrap';\nimport 'jquery';\nimport 'popper.js';\n\n// tslint:disable-next-line\nrequire('../scss/styles.scss');\n\nimport { AppModule } from './app.module';\n\nif (process.env.ENV === 'production') {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule, { preserveWhitespaces: true });\n","import 'core-js';\n\nimport { ToasterModule } from 'angular2-toaster';\nimport { Angulartics2Module } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { ServicesModule } from './services/services.module';\n\nimport { AppComponent } from './app.component';\nimport { ModalComponent } from './modal.component';\n\nimport { AvatarComponent } from './components/avatar.component';\nimport { PasswordStrengthComponent } from './components/password-strength.component';\n\nimport { FooterComponent } from './layouts/footer.component';\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { NavbarComponent } from './layouts/navbar.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorOptionsComponent } from './accounts/two-factor-options.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport {\n    CollectionAddEditComponent as OrgCollectionAddEditComponent,\n} from './organizations/manage/collection-add-edit.component';\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EntityEventsComponent as OrgEntityEventsComponent } from './organizations/manage/entity-events.component';\nimport { EntityUsersComponent as OrgEntityUsersComponent } from './organizations/manage/entity-users.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupAddEditComponent as OrgGroupAddEditComponent } from './organizations/manage/group-add-edit.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\nimport { PolicyEditComponent as OrgPolicyEditComponent } from './organizations/manage/policy-edit.component';\nimport { UserAddEditComponent as OrgUserAddEditComponent } from './organizations/manage/user-add-edit.component';\nimport { UserConfirmComponent as OrgUserConfirmComponent } from './organizations/manage/user-confirm.component';\nimport { UserGroupsComponent as OrgUserGroupsComponent } from './organizations/manage/user-groups.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { AdjustSeatsComponent } from './organizations/settings/adjust-seats.component';\nimport { ApiKeyComponent as OrgApiKeyComponent } from './organizations/settings/api-key.component';\nimport { ChangePlanComponent } from './organizations/settings/change-plan.component';\nimport { DeleteOrganizationComponent } from './organizations/settings/delete-organization.component';\nimport { DownloadLicenseComponent } from './organizations/settings/download-license.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { RotateApiKeyComponent as OrgRotateApiKeyComponent } from './organizations/settings/rotate-api-key.component';\nimport { SettingsComponent as OrgSettingComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { AddEditComponent as OrgAddEditComponent } from './organizations/vault/add-edit.component';\nimport { AttachmentsComponent as OrgAttachmentsComponent } from './organizations/vault/attachments.component';\nimport { CiphersComponent as OrgCiphersComponent } from './organizations/vault/ciphers.component';\nimport { CollectionsComponent as OrgCollectionsComponent } from './organizations/vault/collections.component';\nimport { GroupingsComponent as OrgGroupingsComponent } from './organizations/vault/groupings.component';\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { AddCreditComponent } from './settings/add-credit.component';\nimport { AdjustPaymentComponent } from './settings/adjust-payment.component';\nimport { AdjustStorageComponent } from './settings/adjust-storage.component';\nimport { ChangeEmailComponent } from './settings/change-email.component';\nimport { ChangeKdfComponent } from './settings/change-kdf.component';\nimport { ChangePasswordComponent } from './settings/change-password.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DeauthorizeSessionsComponent } from './settings/deauthorize-sessions.component';\nimport { DeleteAccountComponent } from './settings/delete-account.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { LinkSsoComponent } from './settings/link-sso.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationPlansComponent } from './settings/organization-plans.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PaymentComponent } from './settings/payment.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { ProfileComponent } from './settings/profile.component';\nimport { PurgeVaultComponent } from './settings/purge-vault.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TaxInfoComponent } from './settings/tax-info.component';\nimport { TwoFactorAuthenticatorComponent } from './settings/two-factor-authenticator.component';\nimport { TwoFactorDuoComponent } from './settings/two-factor-duo.component';\nimport { TwoFactorEmailComponent } from './settings/two-factor-email.component';\nimport { TwoFactorRecoveryComponent } from './settings/two-factor-recovery.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { TwoFactorU2fComponent } from './settings/two-factor-u2f.component';\nimport { TwoFactorVerifyComponent } from './settings/two-factor-verify.component';\nimport { TwoFactorYubiKeyComponent } from './settings/two-factor-yubikey.component';\nimport { UpdateKeyComponent } from './settings/update-key.component';\nimport { UpdateLicenseComponent } from './settings/update-license.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\nimport { VerifyEmailComponent } from './settings/verify-email.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorHistoryComponent } from './tools/password-generator-history.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { AddEditComponent } from './vault/add-edit.component';\nimport { AttachmentsComponent } from './vault/attachments.component';\nimport { BulkActionsComponent } from './vault/bulk-actions.component';\nimport { BulkDeleteComponent } from './vault/bulk-delete.component';\nimport { BulkMoveComponent } from './vault/bulk-move.component';\nimport { BulkRestoreComponent } from './vault/bulk-restore.component';\nimport { BulkShareComponent } from './vault/bulk-share.component';\nimport { CiphersComponent } from './vault/ciphers.component';\nimport { CollectionsComponent } from './vault/collections.component';\nimport { FolderAddEditComponent } from './vault/folder-add-edit.component';\nimport { GroupingsComponent } from './vault/groupings.component';\nimport { ShareComponent } from './vault/share.component';\nimport { VaultComponent } from './vault/vault.component';\n\nimport { CalloutComponent } from 'jslib/angular/components/callout.component';\nimport { IconComponent } from 'jslib/angular/components/icon.component';\n\nimport { A11yTitleDirective } from 'jslib/angular/directives/a11y-title.directive';\nimport { ApiActionDirective } from 'jslib/angular/directives/api-action.directive';\nimport { AutofocusDirective } from 'jslib/angular/directives/autofocus.directive';\nimport { BlurClickDirective } from 'jslib/angular/directives/blur-click.directive';\nimport { BoxRowDirective } from 'jslib/angular/directives/box-row.directive';\nimport { FallbackSrcDirective } from 'jslib/angular/directives/fallback-src.directive';\nimport { InputVerbatimDirective } from 'jslib/angular/directives/input-verbatim.directive';\nimport { SelectCopyDirective } from 'jslib/angular/directives/select-copy.directive';\nimport { StopClickDirective } from 'jslib/angular/directives/stop-click.directive';\nimport { StopPropDirective } from 'jslib/angular/directives/stop-prop.directive';\nimport { TrueFalseValueDirective } from 'jslib/angular/directives/true-false-value.directive';\n\nimport { ColorPasswordPipe } from 'jslib/angular/pipes/color-password.pipe';\nimport { I18nPipe } from 'jslib/angular/pipes/i18n.pipe';\nimport { SearchCiphersPipe } from 'jslib/angular/pipes/search-ciphers.pipe';\nimport { SearchPipe } from 'jslib/angular/pipes/search.pipe';\n\nimport { registerLocaleData } from '@angular/common';\nimport localeCa from '@angular/common/locales/ca';\nimport localeCs from '@angular/common/locales/cs';\nimport localeDa from '@angular/common/locales/da';\nimport localeDe from '@angular/common/locales/de';\nimport localeEl from '@angular/common/locales/el';\nimport localeEnGb from '@angular/common/locales/en-GB';\nimport localeEs from '@angular/common/locales/es';\nimport localeEt from '@angular/common/locales/et';\nimport localeFr from '@angular/common/locales/fr';\nimport localeHe from '@angular/common/locales/he';\nimport localeIt from '@angular/common/locales/it';\nimport localeJa from '@angular/common/locales/ja';\nimport localeKo from '@angular/common/locales/ko';\nimport localeLv from '@angular/common/locales/lv';\nimport localeMl from '@angular/common/locales/ml';\nimport localeNb from '@angular/common/locales/nb';\nimport localeNl from '@angular/common/locales/nl';\nimport localePl from '@angular/common/locales/pl';\nimport localePtBr from '@angular/common/locales/pt';\nimport localePtPt from '@angular/common/locales/pt-PT';\nimport localeRu from '@angular/common/locales/ru';\nimport localeSk from '@angular/common/locales/sk';\nimport localeSv from '@angular/common/locales/sv';\nimport localeUk from '@angular/common/locales/uk';\nimport localeZhCn from '@angular/common/locales/zh-Hans';\nimport localeZhTw from '@angular/common/locales/zh-Hant';\n\nregisterLocaleData(localeCa, 'ca');\nregisterLocaleData(localeCs, 'cs');\nregisterLocaleData(localeDa, 'da');\nregisterLocaleData(localeDe, 'de');\nregisterLocaleData(localeEl, 'el');\nregisterLocaleData(localeEnGb, 'en-GB');\nregisterLocaleData(localeEs, 'es');\nregisterLocaleData(localeEt, 'et');\nregisterLocaleData(localeFr, 'fr');\nregisterLocaleData(localeHe, 'he');\nregisterLocaleData(localeIt, 'it');\nregisterLocaleData(localeJa, 'ja');\nregisterLocaleData(localeKo, 'ko');\nregisterLocaleData(localeLv, 'lv');\nregisterLocaleData(localeMl, 'ml');\nregisterLocaleData(localeNb, 'nb');\nregisterLocaleData(localeNl, 'nl');\nregisterLocaleData(localePl, 'pl');\nregisterLocaleData(localePtBr, 'pt-BR');\nregisterLocaleData(localePtPt, 'pt-PT');\nregisterLocaleData(localeRu, 'ru');\nregisterLocaleData(localeSk, 'sk');\nregisterLocaleData(localeSv, 'sv');\nregisterLocaleData(localeUk, 'uk');\nregisterLocaleData(localeZhCn, 'zh-CN');\nregisterLocaleData(localeZhTw, 'zh-TW');\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        AppRoutingModule,\n        ServicesModule,\n        Angulartics2Module.forRoot({\n            pageTracking: {\n                clearQueryParams: true,\n            },\n        }),\n        ToasterModule.forRoot(),\n        InfiniteScrollModule,\n        DragDropModule,\n    ],\n    declarations: [\n        A11yTitleDirective,\n        AcceptOrganizationComponent,\n        AccountComponent,\n        SetPasswordComponent,\n        AddCreditComponent,\n        AddEditComponent,\n        AdjustPaymentComponent,\n        AdjustSeatsComponent,\n        AdjustStorageComponent,\n        ApiActionDirective,\n        AppComponent,\n        AttachmentsComponent,\n        AutofocusDirective,\n        AvatarComponent,\n        BlurClickDirective,\n        BoxRowDirective,\n        BreachReportComponent,\n        BulkActionsComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkRestoreComponent,\n        BulkShareComponent,\n        CalloutComponent,\n        ChangeEmailComponent,\n        ChangeKdfComponent,\n        ChangePasswordComponent,\n        ChangePlanComponent,\n        CiphersComponent,\n        CollectionsComponent,\n        ColorPasswordPipe,\n        CreateOrganizationComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        DomainRulesComponent,\n        DownloadLicenseComponent,\n        ExportComponent,\n        ExposedPasswordsReportComponent,\n        FallbackSrcDirective,\n        FolderAddEditComponent,\n        FooterComponent,\n        FrontendLayoutComponent,\n        GroupingsComponent,\n        HintComponent,\n        I18nPipe,\n        IconComponent,\n        ImportComponent,\n        InactiveTwoFactorReportComponent,\n        InputVerbatimDirective,\n        LinkSsoComponent,\n        LockComponent,\n        LoginComponent,\n        ModalComponent,\n        NavbarComponent,\n        OptionsComponent,\n        OrgAccountComponent,\n        OrgAddEditComponent,\n        OrgApiKeyComponent,\n        OrganizationBillingComponent,\n        OrganizationPlansComponent,\n        OrganizationSubscriptionComponent,\n        OrgAttachmentsComponent,\n        OrgCiphersComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgEventsComponent,\n        OrgExportComponent,\n        OrgExposedPasswordsReportComponent,\n        OrgImportComponent,\n        OrgInactiveTwoFactorReportComponent,\n        OrgGroupAddEditComponent,\n        OrgGroupingsComponent,\n        OrgGroupsComponent,\n        OrgManageCollectionsComponent,\n        OrgManageComponent,\n        OrgPeopleComponent,\n        OrgPolicyEditComponent,\n        OrgPoliciesComponent,\n        OrgReusedPasswordsReportComponent,\n        OrgRotateApiKeyComponent,\n        OrgSettingComponent,\n        OrgToolsComponent,\n        OrgTwoFactorSetupComponent,\n        OrgUserAddEditComponent,\n        OrgUserConfirmComponent,\n        OrgUserGroupsComponent,\n        OrganizationsComponent,\n        OrganizationLayoutComponent,\n        OrgUnsecuredWebsitesReportComponent,\n        OrgVaultComponent,\n        OrgWeakPasswordsReportComponent,\n        PasswordGeneratorComponent,\n        PasswordGeneratorHistoryComponent,\n        PasswordStrengthComponent,\n        PaymentComponent,\n        PremiumComponent,\n        ProfileComponent,\n        PurgeVaultComponent,\n        RecoverDeleteComponent,\n        RecoverTwoFactorComponent,\n        RegisterComponent,\n        ReusedPasswordsReportComponent,\n        SearchCiphersPipe,\n        SearchPipe,\n        SelectCopyDirective,\n        SettingsComponent,\n        ShareComponent,\n        SsoComponent,\n        StopClickDirective,\n        StopPropDirective,\n        TaxInfoComponent,\n        ToolsComponent,\n        TrueFalseValueDirective,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorSetupComponent,\n        TwoFactorU2fComponent,\n        TwoFactorVerifyComponent,\n        TwoFactorYubiKeyComponent,\n        UnsecuredWebsitesReportComponent,\n        UpdateKeyComponent,\n        UpdateLicenseComponent,\n        UserBillingComponent,\n        UserLayoutComponent,\n        UserSubscriptionComponent,\n        VaultComponent,\n        VerifyEmailComponent,\n        VerifyEmailTokenComponent,\n        VerifyRecoverDeleteComponent,\n        WeakPasswordsReportComponent,\n    ],\n    entryComponents: [\n        AddEditComponent,\n        AttachmentsComponent,\n        BulkActionsComponent,\n        BulkDeleteComponent,\n        BulkMoveComponent,\n        BulkRestoreComponent,\n        BulkShareComponent,\n        CollectionsComponent,\n        DeauthorizeSessionsComponent,\n        DeleteAccountComponent,\n        DeleteOrganizationComponent,\n        FolderAddEditComponent,\n        ModalComponent,\n        OrgAddEditComponent,\n        OrgApiKeyComponent,\n        OrgAttachmentsComponent,\n        OrgCollectionAddEditComponent,\n        OrgCollectionsComponent,\n        OrgEntityEventsComponent,\n        OrgEntityUsersComponent,\n        OrgGroupAddEditComponent,\n        OrgPolicyEditComponent,\n        OrgRotateApiKeyComponent,\n        OrgUserAddEditComponent,\n        OrgUserConfirmComponent,\n        OrgUserGroupsComponent,\n        PasswordGeneratorHistoryComponent,\n        PurgeVaultComponent,\n        ShareComponent,\n        TwoFactorAuthenticatorComponent,\n        TwoFactorDuoComponent,\n        TwoFactorEmailComponent,\n        TwoFactorOptionsComponent,\n        TwoFactorRecoveryComponent,\n        TwoFactorU2fComponent,\n        TwoFactorYubiKeyComponent,\n        UpdateKeyComponent,\n    ],\n    providers: [],\n    bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport {\n    RouterModule,\n    Routes,\n} from '@angular/router';\n\nimport { FrontendLayoutComponent } from './layouts/frontend-layout.component';\nimport { OrganizationLayoutComponent } from './layouts/organization-layout.component';\nimport { UserLayoutComponent } from './layouts/user-layout.component';\n\nimport { AcceptOrganizationComponent } from './accounts/accept-organization.component';\nimport { HintComponent } from './accounts/hint.component';\nimport { LockComponent } from './accounts/lock.component';\nimport { LoginComponent } from './accounts/login.component';\nimport { RecoverDeleteComponent } from './accounts/recover-delete.component';\nimport { RecoverTwoFactorComponent } from './accounts/recover-two-factor.component';\nimport { RegisterComponent } from './accounts/register.component';\nimport { SetPasswordComponent } from './accounts/set-password.component';\nimport { SsoComponent } from './accounts/sso.component';\nimport { TwoFactorComponent } from './accounts/two-factor.component';\nimport { VerifyEmailTokenComponent } from './accounts/verify-email-token.component';\nimport { VerifyRecoverDeleteComponent } from './accounts/verify-recover-delete.component';\n\nimport { CollectionsComponent as OrgManageCollectionsComponent } from './organizations/manage/collections.component';\nimport { EventsComponent as OrgEventsComponent } from './organizations/manage/events.component';\nimport { GroupsComponent as OrgGroupsComponent } from './organizations/manage/groups.component';\nimport { ManageComponent as OrgManageComponent } from './organizations/manage/manage.component';\nimport { PeopleComponent as OrgPeopleComponent } from './organizations/manage/people.component';\nimport { PoliciesComponent as OrgPoliciesComponent } from './organizations/manage/policies.component';\n\nimport { AccountComponent as OrgAccountComponent } from './organizations/settings/account.component';\nimport { OrganizationBillingComponent } from './organizations/settings/organization-billing.component';\nimport { OrganizationSubscriptionComponent } from './organizations/settings/organization-subscription.component';\nimport { SettingsComponent as OrgSettingsComponent } from './organizations/settings/settings.component';\nimport {\n    TwoFactorSetupComponent as OrgTwoFactorSetupComponent,\n} from './organizations/settings/two-factor-setup.component';\n\nimport { ExportComponent as OrgExportComponent } from './organizations/tools/export.component';\nimport {\n    ExposedPasswordsReportComponent as OrgExposedPasswordsReportComponent,\n} from './organizations/tools/exposed-passwords-report.component';\nimport { ImportComponent as OrgImportComponent } from './organizations/tools/import.component';\nimport {\n    InactiveTwoFactorReportComponent as OrgInactiveTwoFactorReportComponent,\n} from './organizations/tools/inactive-two-factor-report.component';\nimport {\n    ReusedPasswordsReportComponent as OrgReusedPasswordsReportComponent,\n} from './organizations/tools/reused-passwords-report.component';\nimport { ToolsComponent as OrgToolsComponent } from './organizations/tools/tools.component';\nimport {\n    UnsecuredWebsitesReportComponent as OrgUnsecuredWebsitesReportComponent,\n} from './organizations/tools/unsecured-websites-report.component';\nimport {\n    WeakPasswordsReportComponent as OrgWeakPasswordsReportComponent,\n} from './organizations/tools/weak-passwords-report.component';\n\nimport { VaultComponent as OrgVaultComponent } from './organizations/vault/vault.component';\n\nimport { AccountComponent } from './settings/account.component';\nimport { CreateOrganizationComponent } from './settings/create-organization.component';\nimport { DomainRulesComponent } from './settings/domain-rules.component';\nimport { OptionsComponent } from './settings/options.component';\nimport { OrganizationsComponent } from './settings/organizations.component';\nimport { PremiumComponent } from './settings/premium.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { TwoFactorSetupComponent } from './settings/two-factor-setup.component';\nimport { UserBillingComponent } from './settings/user-billing.component';\nimport { UserSubscriptionComponent } from './settings/user-subscription.component';\n\nimport { BreachReportComponent } from './tools/breach-report.component';\nimport { ExportComponent } from './tools/export.component';\nimport { ExposedPasswordsReportComponent } from './tools/exposed-passwords-report.component';\nimport { ImportComponent } from './tools/import.component';\nimport { InactiveTwoFactorReportComponent } from './tools/inactive-two-factor-report.component';\nimport { PasswordGeneratorComponent } from './tools/password-generator.component';\nimport { ReusedPasswordsReportComponent } from './tools/reused-passwords-report.component';\nimport { ToolsComponent } from './tools/tools.component';\nimport { UnsecuredWebsitesReportComponent } from './tools/unsecured-websites-report.component';\nimport { WeakPasswordsReportComponent } from './tools/weak-passwords-report.component';\n\nimport { VaultComponent } from './vault/vault.component';\n\nimport { OrganizationGuardService } from './services/organization-guard.service';\nimport { OrganizationTypeGuardService } from './services/organization-type-guard.service';\nimport { UnauthGuardService } from './services/unauth-guard.service';\n\nimport { AuthGuardService } from 'jslib/angular/services/auth-guard.service';\n\nimport { OrganizationUserType } from 'jslib/enums/organizationUserType';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FrontendLayoutComponent,\n        children: [\n            { path: '', pathMatch: 'full', component: LoginComponent, canActivate: [UnauthGuardService] },\n            { path: '2fa', component: TwoFactorComponent, canActivate: [UnauthGuardService] },\n            {\n                path: 'register', component: RegisterComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'createAccount' },\n            },\n            {\n                path: 'sso', component: SsoComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'enterpriseSingleSignOn' },\n            },\n            {\n                path: 'set-password', component: SetPasswordComponent,\n                data: { titleId: 'setMasterPassword' },\n            },\n            {\n                path: 'hint', component: HintComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'passwordHint' },\n            },\n            { path: 'lock', component: LockComponent },\n            { path: 'verify-email', component: VerifyEmailTokenComponent },\n            {\n                path: 'accept-organization',\n                component: AcceptOrganizationComponent,\n                data: { titleId: 'joinOrganization' },\n            },\n            { path: 'recover', pathMatch: 'full', redirectTo: 'recover-2fa' },\n            {\n                path: 'recover-2fa',\n                component: RecoverTwoFactorComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'recoverAccountTwoStep' },\n            },\n            {\n                path: 'recover-delete',\n                component: RecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n            {\n                path: 'verify-recover-delete',\n                component: VerifyRecoverDeleteComponent,\n                canActivate: [UnauthGuardService],\n                data: { titleId: 'deleteAccount' },\n            },\n        ],\n    },\n    {\n        path: '',\n        component: UserLayoutComponent,\n        canActivate: [AuthGuardService],\n        children: [\n            { path: 'vault', component: VaultComponent, data: { titleId: 'myVault' } },\n            {\n                path: 'settings',\n                component: SettingsComponent,\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: AccountComponent, data: { titleId: 'myAccount' } },\n                    { path: 'options', component: OptionsComponent, data: { titleId: 'options' } },\n                    { path: 'domain-rules', component: DomainRulesComponent, data: { titleId: 'domainRules' } },\n                    { path: 'two-factor', component: TwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    { path: 'premium', component: PremiumComponent, data: { titleId: 'goPremium' } },\n                    { path: 'billing', component: UserBillingComponent, data: { titleId: 'billing' } },\n                    {\n                        path: 'subscription',\n                        component: UserSubscriptionComponent,\n                        data: { titleId: 'premiumMembership' },\n                    },\n                    { path: 'organizations', component: OrganizationsComponent, data: { titleId: 'organizations' } },\n                    {\n                        path: 'create-organization',\n                        component: CreateOrganizationComponent,\n                        data: { titleId: 'newOrganization' },\n                    },\n                ],\n            },\n            {\n                path: 'tools',\n                component: ToolsComponent,\n                canActivate: [AuthGuardService],\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'generator' },\n                    { path: 'import', component: ImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: ExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'generator',\n                        component: PasswordGeneratorComponent,\n                        data: { titleId: 'passwordGenerator' },\n                    },\n                    { path: 'breach-report', component: BreachReportComponent, data: { titleId: 'dataBreachReport' } },\n                    {\n                        path: 'reused-passwords-report',\n                        component: ReusedPasswordsReportComponent,\n                        data: { titleId: 'reusedPasswordsReport' },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: UnsecuredWebsitesReportComponent,\n                        data: { titleId: 'unsecuredWebsitesReport' },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: WeakPasswordsReportComponent,\n                        data: { titleId: 'weakPasswordsReport' },\n                    },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: ExposedPasswordsReportComponent,\n                        data: { titleId: 'exposedPasswordsReport' },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: InactiveTwoFactorReportComponent,\n                        data: { titleId: 'inactive2faReport' },\n                    },\n                ],\n            },\n        ],\n    },\n    {\n        path: 'organizations/:organizationId',\n        component: OrganizationLayoutComponent,\n        canActivate: [AuthGuardService, OrganizationGuardService],\n        children: [\n            { path: '', pathMatch: 'full', redirectTo: 'vault' },\n            { path: 'vault', component: OrgVaultComponent, data: { titleId: 'vault' } },\n            {\n                path: 'tools',\n                component: OrgToolsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { allowedTypes: [OrganizationUserType.Owner, OrganizationUserType.Admin] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'import' },\n                    { path: 'import', component: OrgImportComponent, data: { titleId: 'importData' } },\n                    { path: 'export', component: OrgExportComponent, data: { titleId: 'exportVault' } },\n                    {\n                        path: 'exposed-passwords-report',\n                        component: OrgExposedPasswordsReportComponent,\n                        data: { titleId: 'exposedPasswordsReport' },\n                    },\n                    {\n                        path: 'inactive-two-factor-report',\n                        component: OrgInactiveTwoFactorReportComponent,\n                        data: { titleId: 'inactive2faReport' },\n                    },\n                    {\n                        path: 'reused-passwords-report',\n                        component: OrgReusedPasswordsReportComponent,\n                        data: { titleId: 'reusedPasswordsReport' },\n                    },\n                    {\n                        path: 'unsecured-websites-report',\n                        component: OrgUnsecuredWebsitesReportComponent,\n                        data: { titleId: 'unsecuredWebsitesReport' },\n                    },\n                    {\n                        path: 'weak-passwords-report',\n                        component: OrgWeakPasswordsReportComponent,\n                        data: { titleId: 'weakPasswordsReport' },\n                    },\n                ],\n            },\n            {\n                path: 'manage',\n                component: OrgManageComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: {\n                    allowedTypes: [\n                        OrganizationUserType.Owner,\n                        OrganizationUserType.Admin,\n                        OrganizationUserType.Manager,\n                    ],\n                },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'people' },\n                    { path: 'collections', component: OrgManageCollectionsComponent, data: { titleId: 'collections' } },\n                    { path: 'events', component: OrgEventsComponent, data: { titleId: 'eventLogs' } },\n                    { path: 'groups', component: OrgGroupsComponent, data: { titleId: 'groups' } },\n                    { path: 'people', component: OrgPeopleComponent, data: { titleId: 'people' } },\n                    { path: 'policies', component: OrgPoliciesComponent, data: { titleId: 'policies' } },\n                ],\n            },\n            {\n                path: 'settings',\n                component: OrgSettingsComponent,\n                canActivate: [OrganizationTypeGuardService],\n                data: { allowedTypes: [OrganizationUserType.Owner] },\n                children: [\n                    { path: '', pathMatch: 'full', redirectTo: 'account' },\n                    { path: 'account', component: OrgAccountComponent, data: { titleId: 'myOrganization' } },\n                    { path: 'two-factor', component: OrgTwoFactorSetupComponent, data: { titleId: 'twoStepLogin' } },\n                    {\n                        path: 'billing',\n                        component: OrganizationBillingComponent,\n                        data: { titleId: 'billing' },\n                    },\n                    {\n                        path: 'subscription',\n                        component: OrganizationSubscriptionComponent,\n                        data: { titleId: 'subscription' },\n                    },\n                ],\n            },\n        ],\n    },\n    { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true,\n        /*enableTracing: true,*/\n    })],\n    exports: [RouterModule],\n})\nexport class AppRoutingModule { }\n","import { BroadcasterService as BroadcasterServiceAbstraction } from '../abstractions/broadcaster.service';\n\nexport class BroadcasterService implements BroadcasterServiceAbstraction {\n    subscribers: Map<string, (message: any) => any> = new Map<string, (message: any) => any>();\n\n    send(message: any, id?: string) {\n        if (id != null) {\n            if (this.subscribers.has(id)) {\n                this.subscribers.get(id)(message);\n            }\n            return;\n        }\n\n        this.subscribers.forEach((value) => {\n            value(message);\n        });\n    }\n\n    subscribe(id: string, messageCallback: (message: any) => any) {\n        this.subscribers.set(id, messageCallback);\n    }\n\n    unsubscribe(id: string) {\n        if (this.subscribers.has(id)) {\n            this.subscribers.delete(id);\n        }\n    }\n}\n","export function getDomain(host: string): string | null {\n    return null;\n}\n","export class OrganizationUserAcceptRequest {\n    token: string;\n}\n","import { Router } from '@angular/router';\n\nimport { PasswordHintRequest } from '../../models/request/passwordHintRequest';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class HintComponent {\n    email: string = '';\n    formPromise: Promise<any>;\n\n    protected successRoute = 'login';\n    protected onSuccessfulSubmit: () => void;\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected apiService: ApiService, protected platformUtilsService: PlatformUtilsService) { }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.apiService.postPasswordHint(new PasswordHintRequest(this.email));\n            await this.formPromise;\n            this.platformUtilsService.eventTrack('Requested Hint');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('masterPassSent'));\n            if (this.onSuccessfulSubmit != null) {\n                this.onSuccessfulSubmit();\n            } else if (this.router != null) {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch { }\n    }\n}\n","export class PasswordHintRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { StorageService } from '../../abstractions/storage.service';\nimport { UserService } from '../../abstractions/user.service';\nimport { VaultTimeoutService } from '../../abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nimport { CipherString } from '../../models/domain/cipherString';\nimport { SymmetricCryptoKey } from '../../models/domain/symmetricCryptoKey';\n\nimport { PasswordVerificationRequest } from '../../models/request/passwordVerificationRequest';\n\nimport { Utils } from '../../misc/utils';\n\nexport class LockComponent implements OnInit {\n    masterPassword: string = '';\n    pin: string = '';\n    showPassword: boolean = false;\n    email: string;\n    pinLock: boolean = false;\n    webVaultHostname: string = '';\n    formPromise: Promise<any>;\n    supportsBiometric: boolean;\n    biometricLock: boolean;\n    biometricText: string;\n\n    protected successRoute: string = 'vault';\n    protected onSuccessfulSubmit: () => void;\n\n    private invalidPinAttempts = 0;\n    private pinSet: [boolean, boolean];\n\n    constructor(protected router: Router, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected messagingService: MessagingService,\n        protected userService: UserService, protected cryptoService: CryptoService,\n        protected storageService: StorageService, protected vaultTimeoutService: VaultTimeoutService,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected apiService: ApiService) { }\n\n    async ngOnInit() {\n        this.pinSet = await this.vaultTimeoutService.isPinLockSet();\n        this.pinLock = (this.pinSet[0] && this.vaultTimeoutService.pinProtectedKey != null) || this.pinSet[1];\n        this.supportsBiometric = await this.platformUtilsService.supportsBiometric();\n        this.biometricLock = await this.vaultTimeoutService.isBiometricLockSet();\n        this.biometricText = await this.storageService.get(ConstantsService.biometricText);\n        this.email = await this.userService.getEmail();\n        let vaultUrl = this.environmentService.getWebVaultUrl();\n        if (vaultUrl == null) {\n            vaultUrl = 'https://bitwarden.com';\n        }\n        this.webVaultHostname = Utils.getHostname(vaultUrl);\n    }\n\n    async submit() {\n        if (this.pinLock && (this.pin == null || this.pin === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('pinRequired'));\n            return;\n        }\n        if (!this.pinLock && (this.masterPassword == null || this.masterPassword === '')) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        const kdf = await this.userService.getKdf();\n        const kdfIterations = await this.userService.getKdfIterations();\n\n        if (this.pinLock) {\n            let failed = true;\n            try {\n                if (this.pinSet[0]) {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations,\n                        this.vaultTimeoutService.pinProtectedKey);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const decPin = await this.cryptoService.decryptToUtf8(new CipherString(protectedPin), encKey);\n                    failed = decPin !== this.pin;\n                    if (!failed) {\n                        await this.setKeyAndContinue(key);\n                    }\n                } else {\n                    const key = await this.cryptoService.makeKeyFromPin(this.pin, this.email, kdf, kdfIterations);\n                    failed = false;\n                    await this.setKeyAndContinue(key);\n                }\n            } catch {\n                failed = true;\n            }\n\n            if (failed) {\n                this.invalidPinAttempts++;\n                if (this.invalidPinAttempts >= 5) {\n                    this.messagingService.send('logout');\n                    return;\n                }\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidPin'));\n            }\n        } else {\n            const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n            const keyHash = await this.cryptoService.hashPassword(this.masterPassword, key);\n\n            let passwordValid = false;\n\n            if (keyHash != null) {\n                const storedKeyHash = await this.cryptoService.getKeyHash();\n                if (storedKeyHash != null) {\n                    passwordValid = storedKeyHash === keyHash;\n                } else {\n                    const request = new PasswordVerificationRequest();\n                    request.masterPasswordHash = keyHash;\n                    try {\n                        this.formPromise = this.apiService.postAccountVerifyPassword(request);\n                        await this.formPromise;\n                        passwordValid = true;\n                        await this.cryptoService.setKeyHash(keyHash);\n                    } catch { }\n                }\n            }\n\n            if (passwordValid) {\n                if (this.pinSet[0]) {\n                    const protectedPin = await this.storageService.get<string>(ConstantsService.protectedPin);\n                    const encKey = await this.cryptoService.getEncKey(key);\n                    const decPin = await this.cryptoService.decryptToUtf8(new CipherString(protectedPin), encKey);\n                    const pinKey = await this.cryptoService.makePinKey(decPin, this.email, kdf, kdfIterations);\n                    this.vaultTimeoutService.pinProtectedKey = await this.cryptoService.encrypt(key.key, pinKey);\n                }\n                this.setKeyAndContinue(key);\n            } else {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                    this.i18nService.t('invalidMasterPassword'));\n            }\n        }\n    }\n\n    async logOut() {\n        const confirmed = await this.platformUtilsService.showDialog(this.i18nService.t('logOutConfirmation'),\n            this.i18nService.t('logOut'), this.i18nService.t('logOut'), this.i18nService.t('cancel'));\n        if (confirmed) {\n            this.messagingService.send('logout');\n        }\n    }\n\n    async unlockBiometric() {\n        if (!this.biometricLock) {\n            return;\n        }\n        const success = await this.platformUtilsService.authenticateBiometric();\n\n        this.vaultTimeoutService.biometricLocked = !success;\n        if (success) {\n            await this.doContinue();\n        }\n    }\n\n    togglePassword() {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Unlock');\n        this.showPassword = !this.showPassword;\n        document.getElementById(this.pinLock ? 'pin' : 'masterPassword').focus();\n    }\n\n    private async setKeyAndContinue(key: SymmetricCryptoKey) {\n        await this.cryptoService.setKey(key);\n        this.doContinue();\n    }\n\n    private async doContinue() {\n        this.vaultTimeoutService.biometricLocked = false;\n        const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n        await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n        this.messagingService.send('unlocked');\n        if (this.onSuccessfulSubmit != null) {\n            this.onSuccessfulSubmit();\n        } else if (this.router != null) {\n            this.router.navigate([this.successRoute]);\n        }\n    }\n}\n","import {\n    Directive,\n    Input,\n    OnInit,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { AuthResult } from '../../models/domain/authResult';\n\nimport { AuthService } from '../../abstractions/auth.service';\nimport { CryptoFunctionService } from '../../abstractions/cryptoFunction.service';\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { StorageService } from '../../abstractions/storage.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\nimport { Utils } from '../../misc/utils';\n\nconst Keys = {\n    rememberedEmail: 'rememberedEmail',\n    rememberEmail: 'rememberEmail',\n};\n\n@Directive()\nexport class LoginComponent implements OnInit {\n    @Input() email: string = '';\n    @Input() rememberEmail = true;\n\n    masterPassword: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<AuthResult>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n    onSuccessfulLoginTwoFactorNavigate: () => Promise<any>;\n\n    protected twoFactorRoute = '2fa';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        protected stateService: StateService, protected environmentService: EnvironmentService,\n        protected passwordGenerationService: PasswordGenerationService,\n        protected cryptoFunctionService: CryptoFunctionService, private storageService: StorageService) { }\n\n    async ngOnInit() {\n        if (this.email == null || this.email === '') {\n            this.email = await this.storageService.get<string>(Keys.rememberedEmail);\n            if (this.email == null) {\n                this.email = '';\n            }\n        }\n        this.rememberEmail = await this.storageService.get<boolean>(Keys.rememberEmail);\n        if (this.rememberEmail == null) {\n            this.rememberEmail = true;\n        }\n        if (Utils.isBrowser) {\n            document.getElementById(this.email == null || this.email === '' ? 'email' : 'masterPassword').focus();\n        }\n    }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.authService.logIn(this.email, this.masterPassword);\n            const response = await this.formPromise;\n            await this.storageService.save(Keys.rememberEmail, this.rememberEmail);\n            if (this.rememberEmail) {\n                await this.storageService.save(Keys.rememberedEmail, this.email);\n            } else {\n                await this.storageService.remove(Keys.rememberedEmail);\n            }\n            if (response.twoFactor) {\n                this.platformUtilsService.eventTrack('Logged In To Two-step');\n                if (this.onSuccessfulLoginTwoFactorNavigate != null) {\n                    this.onSuccessfulLoginTwoFactorNavigate();\n                } else {\n                    this.router.navigate([this.twoFactorRoute]);\n                }\n            } else {\n                const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n                await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n                if (this.onSuccessfulLogin != null) {\n                    this.onSuccessfulLogin();\n                }\n                this.platformUtilsService.eventTrack('Logged In');\n                if (this.onSuccessfulLoginNavigate != null) {\n                    this.onSuccessfulLoginNavigate();\n                } else {\n                    this.router.navigate([this.successRoute]);\n                }\n            }\n        } catch { }\n    }\n\n    togglePassword() {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Login');\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    async launchSsoBrowser(clientId: string, ssoRedirectUri: string) {\n        // Generate necessary sso params\n        const passwordOptions: any = {\n            type: 'password',\n            length: 64,\n            uppercase: true,\n            lowercase: true,\n            numbers: true,\n            special: false,\n        };\n        const state = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const ssoCodeVerifier = await this.passwordGenerationService.generatePassword(passwordOptions);\n        const codeVerifierHash = await this.cryptoFunctionService.hash(ssoCodeVerifier, 'sha256');\n        const codeChallenge = Utils.fromBufferToUrlB64(codeVerifierHash);\n\n        // Save sso params\n        await this.storageService.save(ConstantsService.ssoStateKey, state);\n        await this.storageService.save(ConstantsService.ssoCodeVerifierKey, ssoCodeVerifier);\n\n        // Build URI\n        const webUrl = this.environmentService.webVaultUrl == null ? 'https://vault.bitwarden.com' :\n            this.environmentService.webVaultUrl;\n\n        // Launch browser\n        this.platformUtilsService.launchUri(webUrl + '/#/sso?clientId=' + clientId +\n            '&redirectUri=' + encodeURIComponent(ssoRedirectUri) +\n            '&state=' + state + '&codeChallenge=' + codeChallenge);\n    }\n}\n","export class DeleteRecoverRequest {\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class TwoFactorRecoveryRequest extends PasswordVerificationRequest {\n    recoveryCode: string;\n    email: string;\n}\n","import { Router } from '@angular/router';\n\nimport { KeysRequest } from '../../models/request/keysRequest';\nimport { ReferenceEventRequest } from '../../models/request/referenceEventRequest';\nimport { RegisterRequest } from '../../models/request/registerRequest';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { AuthService } from '../../abstractions/auth.service';\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class RegisterComponent {\n    name: string = '';\n    email: string = '';\n    masterPassword: string = '';\n    confirmMasterPassword: string = '';\n    hint: string = '';\n    showPassword: boolean = false;\n    formPromise: Promise<any>;\n    masterPasswordScore: number;\n    referenceData: ReferenceEventRequest;\n\n    protected successRoute = 'login';\n    private masterPasswordStrengthTimeout: any;\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected cryptoService: CryptoService,\n        protected apiService: ApiService, protected stateService: StateService,\n        protected platformUtilsService: PlatformUtilsService,\n        protected passwordGenerationService: PasswordGenerationService) { }\n\n    get masterPasswordScoreWidth() {\n        return this.masterPasswordScore == null ? 0 : (this.masterPasswordScore + 1) * 20;\n    }\n\n    get masterPasswordScoreColor() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return 'success';\n            case 3:\n                return 'primary';\n            case 2:\n                return 'warning';\n            default:\n                return 'danger';\n        }\n    }\n\n    get masterPasswordScoreText() {\n        switch (this.masterPasswordScore) {\n            case 4:\n                return this.i18nService.t('strong');\n            case 3:\n                return this.i18nService.t('good');\n            case 2:\n                return this.i18nService.t('weak');\n            default:\n                return this.masterPasswordScore != null ? this.i18nService.t('weak') : null;\n        }\n    }\n\n    async submit() {\n        if (this.email == null || this.email === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('emailRequired'));\n            return;\n        }\n        if (this.email.indexOf('@') === -1) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidEmail'));\n            return;\n        }\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassRequired'));\n            return;\n        }\n        if (this.masterPassword.length < 8) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassLength'));\n            return;\n        }\n        if (this.masterPassword !== this.confirmMasterPassword) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('masterPassDoesntMatch'));\n            return;\n        }\n\n        const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n            this.getPasswordStrengthUserInput());\n        if (strengthResult != null && strengthResult.score < 3) {\n            const result = await this.platformUtilsService.showDialog(this.i18nService.t('weakMasterPasswordDesc'),\n                this.i18nService.t('weakMasterPassword'), this.i18nService.t('yes'), this.i18nService.t('no'),\n                'warning');\n            if (!result) {\n                return;\n            }\n        }\n\n        this.name = this.name === '' ? null : this.name;\n        this.email = this.email.trim().toLowerCase();\n        const kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        const kdfIterations = useLowerKdf ? 10000 : 100000;\n        const key = await this.cryptoService.makeKey(this.masterPassword, this.email, kdf, kdfIterations);\n        const encKey = await this.cryptoService.makeEncKey(key);\n        const hashedPassword = await this.cryptoService.hashPassword(this.masterPassword, key);\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        const request = new RegisterRequest(this.email, this.name, hashedPassword,\n            this.hint, encKey[1].encryptedString, kdf, kdfIterations, this.referenceData);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n        const orgInvite = await this.stateService.get<any>('orgInvitation');\n        if (orgInvite != null && orgInvite.token != null && orgInvite.organizationUserId != null) {\n            request.token = orgInvite.token;\n            request.organizationUserId = orgInvite.organizationUserId;\n        }\n\n        try {\n            this.formPromise = this.apiService.postRegister(request);\n            await this.formPromise;\n            this.platformUtilsService.eventTrack('Registered');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('newAccountCreated'));\n            this.router.navigate([this.successRoute], { queryParams: { email: this.email } });\n        } catch { }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Register');\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n\n    updatePasswordStrength() {\n        if (this.masterPasswordStrengthTimeout != null) {\n            clearTimeout(this.masterPasswordStrengthTimeout);\n        }\n        this.masterPasswordStrengthTimeout = setTimeout(() => {\n            const strengthResult = this.passwordGenerationService.passwordStrength(this.masterPassword,\n                this.getPasswordStrengthUserInput());\n            this.masterPasswordScore = strengthResult == null ? null : strengthResult.score;\n        }, 300);\n    }\n\n    private getPasswordStrengthUserInput() {\n        let userInput: string[] = [];\n        const atPosition = this.email.indexOf('@');\n        if (atPosition > -1) {\n            userInput = userInput.concat(this.email.substr(0, atPosition).trim().toLowerCase().split(/[^A-Za-z0-9]/));\n        }\n        if (this.name != null && this.name !== '') {\n            userInput = userInput.concat(this.name.trim().toLowerCase().split(' '));\n        }\n        return userInput;\n    }\n}\n","import { KeysRequest } from './keysRequest';\nimport { ReferenceEventRequest } from './referenceEventRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class RegisterRequest {\n    name: string;\n    email: string;\n    masterPasswordHash: string;\n    masterPasswordHint: string;\n    key: string;\n    keys: KeysRequest;\n    token: string;\n    organizationUserId: string;\n    kdf: KdfType;\n    kdfIterations: number;\n    referenceData: ReferenceEventRequest;\n\n    constructor(email: string, name: string, masterPasswordHash: string, masterPasswordHint: string, key: string,\n        kdf: KdfType, kdfIterations: number, referenceData: ReferenceEventRequest) {\n        this.name = name;\n        this.email = email;\n        this.masterPasswordHash = masterPasswordHash;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n        this.key = key;\n        this.kdf = kdf;\n        this.kdfIterations = kdfIterations;\n        this.referenceData = referenceData;\n    }\n}\n","export class ReferenceEventRequest {\n    id: string;\n    layout: string;\n    flow: string;\n}\n","import { Router } from '@angular/router';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { PolicyService } from '../../abstractions/policy.service';\nimport { SyncService } from '../../abstractions/sync.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { CipherString } from '../../models/domain/cipherString';\nimport { SymmetricCryptoKey } from '../../models/domain/symmetricCryptoKey';\n\nimport { KeysRequest } from '../../models/request/keysRequest';\nimport { SetPasswordRequest } from '../../models/request/setPasswordRequest';\n\nimport { ChangePasswordComponent as BaseChangePasswordComponent } from './change-password.component';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class SetPasswordComponent extends BaseChangePasswordComponent {\n    syncLoading: boolean = true;\n    showPassword: boolean = false;\n    hint: string = '';\n\n    onSuccessfulChangePassword: () => Promise<any>;\n    successRoute = 'vault';\n\n    constructor(i18nService: I18nService, cryptoService: CryptoService, messagingService: MessagingService,\n        userService: UserService, passwordGenerationService: PasswordGenerationService,\n        platformUtilsService: PlatformUtilsService, policyService: PolicyService, private router: Router,\n        private apiService: ApiService, private syncService: SyncService) {\n        super(i18nService, cryptoService, messagingService, userService, passwordGenerationService,\n            platformUtilsService, policyService);\n    }\n\n    async ngOnInit() {\n        await this.syncService.fullSync(true);\n        this.syncLoading = false;\n        super.ngOnInit();\n    }\n\n    async setupSubmitActions() {\n        this.kdf = KdfType.PBKDF2_SHA256;\n        const useLowerKdf = this.platformUtilsService.isIE();\n        this.kdfIterations = useLowerKdf ? 10000 : 100000;\n        return true;\n    }\n\n    async performSubmitActions(masterPasswordHash: string, key: SymmetricCryptoKey,\n        encKey: [SymmetricCryptoKey, CipherString]) {\n        const request = new SetPasswordRequest();\n        request.masterPasswordHash = masterPasswordHash;\n        request.key = encKey[1].encryptedString;\n        request.masterPasswordHint = this.hint;\n        request.kdf = this.kdf;\n        request.kdfIterations = this.kdfIterations;\n\n        const keys = await this.cryptoService.makeKeyPair(encKey[0]);\n        request.keys = new KeysRequest(keys[0], keys[1].encryptedString);\n\n        try {\n            this.formPromise = this.apiService.setPassword(request);\n            await this.formPromise;\n\n            await this.userService.setInformation(await this.userService.getUserId(), await this.userService.getEmail(),\n                this.kdf, this.kdfIterations);\n            await this.cryptoService.setKey(key);\n            await this.cryptoService.setKeyHash(masterPasswordHash);\n            await this.cryptoService.setEncKey(encKey[1].encryptedString);\n            await this.cryptoService.setEncPrivateKey(keys[1].encryptedString);\n\n            if (this.onSuccessfulChangePassword != null) {\n                this.onSuccessfulChangePassword();\n            } else {\n                this.router.navigate([this.successRoute]);\n            }\n        } catch {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n    }\n\n    togglePassword(confirmField: boolean) {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Set Password');\n        this.showPassword = !this.showPassword;\n        document.getElementById(confirmField ? 'masterPasswordRetype' : 'masterPassword').focus();\n    }\n}\n","import { KeysRequest } from './keysRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class SetPasswordRequest {\n    masterPasswordHash: string;\n    key: string;\n    masterPasswordHint: string;\n    keys: KeysRequest;\n    kdf: KdfType;\n    kdfIterations: number;\n}\n","import {\n    Directive,\n    EventEmitter,\n    OnInit,\n    Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { AuthService } from '../../abstractions/auth.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\n@Directive()\nexport class TwoFactorOptionsComponent implements OnInit {\n    @Output() onProviderSelected = new EventEmitter<TwoFactorProviderType>();\n    @Output() onRecoverSelected = new EventEmitter();\n\n    providers: any[] = [];\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected win: Window) { }\n\n    ngOnInit() {\n        this.providers = this.authService.getSupportedTwoFactorProviders(this.win);\n    }\n\n    choose(p: any) {\n        this.onProviderSelected.emit(p.type);\n    }\n\n    recover() {\n        this.platformUtilsService.eventTrack('Selected Recover');\n        this.platformUtilsService.launchUri('https://help.bitwarden.com/article/lost-two-step-device/');\n        this.onRecoverSelected.emit();\n    }\n}\n","import {\n    Component,\n    ComponentFactoryResolver,\n    EventEmitter,\n    OnDestroy,\n    Output,\n    Type,\n    ViewChild,\n    ViewContainerRef,\n} from '@angular/core';\n\nimport { MessagingService } from '../../abstractions/messaging.service';\n\n@Component({\n    selector: 'app-modal',\n    template: `<ng-template #container></ng-template>`,\n})\nexport class ModalComponent implements OnDestroy {\n    @Output() onClose = new EventEmitter();\n    @Output() onClosed = new EventEmitter();\n    @Output() onShow = new EventEmitter();\n    @Output() onShown = new EventEmitter();\n    @ViewChild('container', { read: ViewContainerRef, static: true }) container: ViewContainerRef;\n    parentContainer: ViewContainerRef = null;\n    fade: boolean = true;\n\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n        protected messagingService: MessagingService) { }\n\n    ngOnDestroy() {\n        document.body.classList.remove('modal-open');\n        document.body.removeChild(document.querySelector('.modal-backdrop'));\n    }\n\n    show<T>(type: Type<T>, parentContainer: ViewContainerRef, fade: boolean = true,\n        setComponentParameters: (component: T) => void = null): T {\n        this.onShow.emit();\n        this.messagingService.send('modalShow');\n        this.parentContainer = parentContainer;\n        this.fade = fade;\n\n        document.body.classList.add('modal-open');\n        const backdrop = document.createElement('div');\n        backdrop.className = 'modal-backdrop' + (this.fade ? ' fade' : '');\n        document.body.appendChild(backdrop);\n\n        const factory = this.componentFactoryResolver.resolveComponentFactory<T>(type);\n        const componentRef = this.container.createComponent<T>(factory);\n        if (setComponentParameters != null) {\n            setComponentParameters(componentRef.instance);\n        }\n\n        document.querySelector('.modal-dialog').addEventListener('click', (e: Event) => {\n            e.stopPropagation();\n        });\n\n        const modals = Array.from(document.querySelectorAll('.modal, .modal *[data-dismiss=\"modal\"]'));\n        for (const closeElement of modals) {\n            closeElement.addEventListener('click', (event) => {\n                this.close();\n            });\n        }\n\n        this.onShown.emit();\n        this.messagingService.send('modalShown');\n        return componentRef.instance;\n    }\n\n    close() {\n        this.onClose.emit();\n        this.messagingService.send('modalClose');\n        this.onClosed.emit();\n        this.messagingService.send('modalClosed');\n        if (this.parentContainer != null) {\n            this.parentContainer.clear();\n        }\n    }\n}\n","import {\n    OnDestroy,\n    OnInit,\n} from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { TwoFactorEmailRequest } from '../../models/request/twoFactorEmailRequest';\n\nimport { AuthResult } from '../../models/domain';\n\nimport { ApiService } from '../../abstractions/api.service';\nimport { AuthService } from '../../abstractions/auth.service';\nimport { EnvironmentService } from '../../abstractions/environment.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { StorageService } from '../../abstractions/storage.service';\n\nimport { TwoFactorProviders } from '../../services/auth.service';\nimport { ConstantsService } from '../../services/constants.service';\n\nimport * as DuoWebSDK from 'duo_web_sdk';\nimport { U2f } from '../../misc/u2f';\n\nexport class TwoFactorComponent implements OnInit, OnDestroy {\n    token: string = '';\n    remember: boolean = false;\n    u2fReady: boolean = false;\n    initU2f: boolean = true;\n    providers = TwoFactorProviders;\n    providerType = TwoFactorProviderType;\n    selectedProviderType: TwoFactorProviderType = TwoFactorProviderType.Authenticator;\n    u2fSupported: boolean = false;\n    u2f: U2f = null;\n    title: string = '';\n    twoFactorEmail: string = null;\n    formPromise: Promise<any>;\n    emailPromise: Promise<any>;\n    onSuccessfulLogin: () => Promise<any>;\n    onSuccessfulLoginNavigate: () => Promise<any>;\n\n    protected loginRoute = 'login';\n    protected successRoute = 'vault';\n\n    constructor(protected authService: AuthService, protected router: Router,\n        protected i18nService: I18nService, protected apiService: ApiService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window,\n        protected environmentService: EnvironmentService, protected stateService: StateService,\n        protected storageService: StorageService) {\n        this.u2fSupported = this.platformUtilsService.supportsU2f(win);\n    }\n\n    async ngOnInit() {\n        if ((!this.authService.authingWithSso() && !this.authService.authingWithPassword()) ||\n            this.authService.twoFactorProvidersData == null) {\n            this.router.navigate([this.loginRoute]);\n            return;\n        }\n\n        if (this.authService.authingWithSso()) {\n            this.successRoute = 'lock';\n        }\n\n        if (this.initU2f && this.win != null && this.u2fSupported) {\n            let customWebVaultUrl: string = null;\n            if (this.environmentService.baseUrl != null) {\n                customWebVaultUrl = this.environmentService.baseUrl;\n            } else if (this.environmentService.webVaultUrl != null) {\n                customWebVaultUrl = this.environmentService.webVaultUrl;\n            }\n\n            this.u2f = new U2f(this.win, customWebVaultUrl, (token: string) => {\n                this.token = token;\n                this.submit();\n            }, (error: string) => {\n                this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'), error);\n            }, (info: string) => {\n                if (info === 'ready') {\n                    this.u2fReady = true;\n                }\n            });\n        }\n\n        this.selectedProviderType = this.authService.getDefaultTwoFactorProvider(this.u2fSupported);\n        await this.init();\n    }\n\n    ngOnDestroy(): void {\n        this.cleanupU2f();\n        this.u2f = null;\n    }\n\n    async init() {\n        if (this.selectedProviderType == null) {\n            this.title = this.i18nService.t('loginUnavailable');\n            return;\n        }\n\n        this.cleanupU2f();\n        this.title = (TwoFactorProviders as any)[this.selectedProviderType].name;\n        const providerData = this.authService.twoFactorProvidersData.get(this.selectedProviderType);\n        switch (this.selectedProviderType) {\n            case TwoFactorProviderType.U2f:\n                if (!this.u2fSupported || this.u2f == null) {\n                    break;\n                }\n\n                if (providerData.Challenge != null) {\n                    setTimeout(() => {\n                        this.u2f.init(JSON.parse(providerData.Challenge));\n                    }, 500);\n                } else {\n                    // TODO: Deprecated. Remove in future version.\n                    const challenges = JSON.parse(providerData.Challenges);\n                    if (challenges != null && challenges.length > 0) {\n                        this.u2f.init({\n                            appId: challenges[0].appId,\n                            challenge: challenges[0].challenge,\n                            keys: challenges.map((c: any) => {\n                                return {\n                                    version: c.version,\n                                    keyHandle: c.keyHandle,\n                                };\n                            }),\n                        });\n                    }\n                }\n                break;\n            case TwoFactorProviderType.Duo:\n            case TwoFactorProviderType.OrganizationDuo:\n                setTimeout(() => {\n                    DuoWebSDK.init({\n                        iframe: undefined,\n                        host: providerData.Host,\n                        sig_request: providerData.Signature,\n                        submit_callback: async (f: HTMLFormElement) => {\n                            const sig = f.querySelector('input[name=\"sig_response\"]') as HTMLInputElement;\n                            if (sig != null) {\n                                this.token = sig.value;\n                                await this.submit();\n                            }\n                        },\n                    });\n                }, 0);\n                break;\n            case TwoFactorProviderType.Email:\n                this.twoFactorEmail = providerData.Email;\n                if (this.authService.twoFactorProvidersData.size > 1) {\n                    await this.sendEmail(false);\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    async submit() {\n        if (this.token == null || this.token === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('verificationCodeRequired'));\n            return;\n        }\n\n        if (this.selectedProviderType === TwoFactorProviderType.U2f) {\n            if (this.u2f != null) {\n                this.u2f.stop();\n            } else {\n                return;\n            }\n        } else if (this.selectedProviderType === TwoFactorProviderType.Email ||\n            this.selectedProviderType === TwoFactorProviderType.Authenticator) {\n            this.token = this.token.replace(' ', '').trim();\n        }\n\n        try {\n            this.formPromise = this.authService.logInTwoFactor(this.selectedProviderType, this.token, this.remember);\n            const response: AuthResult = await this.formPromise;\n            const disableFavicon = await this.storageService.get<boolean>(ConstantsService.disableFaviconKey);\n            await this.stateService.save(ConstantsService.disableFaviconKey, !!disableFavicon);\n            if (this.onSuccessfulLogin != null) {\n                this.onSuccessfulLogin();\n            }\n            this.platformUtilsService.eventTrack('Logged In From Two-step');\n            if (this.onSuccessfulLoginNavigate != null) {\n                this.onSuccessfulLoginNavigate();\n            } else {\n                if (response.resetMasterPassword) {\n                    this.successRoute = 'set-password';\n                }\n                this.router.navigate([this.successRoute]);\n            }\n        } catch {\n            if (this.selectedProviderType === TwoFactorProviderType.U2f && this.u2f != null) {\n                this.u2f.start();\n            }\n        }\n    }\n\n    async sendEmail(doToast: boolean) {\n        if (this.selectedProviderType !== TwoFactorProviderType.Email) {\n            return;\n        }\n\n        if (this.emailPromise != null) {\n            return;\n        }\n\n        try {\n            const request = new TwoFactorEmailRequest(this.authService.email, this.authService.masterPasswordHash);\n            this.emailPromise = this.apiService.postTwoFactorEmail(request);\n            await this.emailPromise;\n            if (doToast) {\n                this.platformUtilsService.showToast('success', null,\n                    this.i18nService.t('verificationCodeEmailSent', this.twoFactorEmail));\n            }\n        } catch { }\n\n        this.emailPromise = null;\n    }\n\n    private cleanupU2f() {\n        if (this.u2f != null) {\n            this.u2f.stop();\n            this.u2f.cleanup();\n        }\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class AuthResult {\n    twoFactor: boolean = false;\n    resetMasterPassword: boolean = false;\n    twoFactorProviders: Map<TwoFactorProviderType, { [key: string]: string; }> = null;\n}\n","import { DeviceType } from '../../enums/deviceType';\n\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nexport class DeviceRequest {\n    type: DeviceType;\n    name: string;\n    identifier: string;\n    pushToken?: string;\n\n    constructor(appId: string, platformUtilsService: PlatformUtilsService) {\n        this.type = platformUtilsService.getDevice();\n        this.name = platformUtilsService.getDeviceString();\n        this.identifier = appId;\n        this.pushToken = null;\n    }\n}\n","export class PreloginRequest {\n    email: string;\n\n    constructor(email: string) {\n        this.email = email;\n    }\n}\n","import { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nimport { DeviceRequest } from './deviceRequest';\n\nexport class TokenRequest {\n    email: string;\n    masterPasswordHash: string;\n    code: string;\n    codeVerifier: string;\n    redirectUri: string;\n    token: string;\n    provider: TwoFactorProviderType;\n    remember: boolean;\n    device?: DeviceRequest;\n\n    constructor(credentials: string[], codes: string[], provider: TwoFactorProviderType,\n        token: string, remember: boolean, device?: DeviceRequest) {\n        if (credentials != null && credentials.length > 1) {\n            this.email = credentials[0];\n            this.masterPasswordHash = credentials[1];\n        } else if (codes != null && codes.length > 2) {\n            this.code = codes[0];\n            this.codeVerifier = codes[1];\n            this.redirectUri = codes[2];\n        }\n        this.token = token;\n        this.provider = provider;\n        this.remember = remember;\n        this.device = device != null ? device : null;\n    }\n\n    toIdentityToken(clientId: string) {\n        const obj: any = {\n            scope: 'api offline_access',\n            client_id: clientId,\n        };\n\n        if (this.masterPasswordHash != null && this.email != null) {\n            obj.grant_type = 'password';\n            obj.username = this.email;\n            obj.password = this.masterPasswordHash;\n        } else if (this.code != null && this.codeVerifier != null && this.redirectUri != null) {\n            obj.grant_type = 'authorization_code';\n            obj.code = this.code;\n            obj.code_verifier = this.codeVerifier;\n            obj.redirect_uri = this.redirectUri;\n        } else {\n            throw new Error('must provide credentials or codes');\n        }\n\n        if (this.device) {\n            obj.deviceType = this.device.type;\n            obj.deviceIdentifier = this.device.identifier;\n            obj.deviceName = this.device.name;\n            // no push tokens for browser apps yet\n            // obj.devicePushToken = this.device.pushToken;\n        }\n\n        if (this.token && this.provider != null) {\n            obj.twoFactorToken = this.token;\n            obj.twoFactorProvider = this.provider;\n            obj.twoFactorRemember = this.remember ? '1' : '0';\n        }\n\n        return obj;\n    }\n}\n","export class U2f {\n    private iframe: HTMLIFrameElement = null;\n    private connectorLink: HTMLAnchorElement;\n    private parseFunction = this.parseMessage.bind(this);\n\n    constructor(private win: Window, private webVaultUrl: string, private successCallback: Function,\n        private errorCallback: Function, private infoCallback: Function) {\n        this.connectorLink = win.document.createElement('a');\n        this.webVaultUrl = webVaultUrl != null && webVaultUrl !== '' ? webVaultUrl : 'https://vault.bitwarden.com';\n    }\n\n    init(data: any): void {\n        this.connectorLink.href = this.webVaultUrl + '/u2f-connector.html' +\n            '?data=' + this.base64Encode(JSON.stringify(data)) +\n            '&parent=' + encodeURIComponent(this.win.document.location.href) +\n            '&v=1';\n\n        this.iframe = this.win.document.getElementById('u2f_iframe') as HTMLIFrameElement;\n        this.iframe.src = this.connectorLink.href;\n\n        this.win.addEventListener('message', this.parseFunction, false);\n    }\n\n    stop() {\n        this.sendMessage('stop');\n    }\n\n    start() {\n        this.sendMessage('start');\n    }\n\n    sendMessage(message: any) {\n        if (!this.iframe || !this.iframe.src || !this.iframe.contentWindow) {\n            return;\n        }\n\n        this.iframe.contentWindow.postMessage(message, this.iframe.src);\n    }\n\n    base64Encode(str: string): string {\n        return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, (match, p1) => {\n            return String.fromCharCode(('0x' + p1) as any);\n        }));\n    }\n\n    cleanup() {\n        this.win.removeEventListener('message', this.parseFunction, false);\n    }\n\n    private parseMessage(event: MessageEvent) {\n        if (!this.validMessage(event)) {\n            return;\n        }\n\n        const parts: string[] = event.data.split('|');\n        if (parts[0] === 'success' && this.successCallback) {\n            this.successCallback(parts[1]);\n        } else if (parts[0] === 'error' && this.errorCallback) {\n            this.errorCallback(parts[1]);\n        } else if (parts[0] === 'info' && this.infoCallback) {\n            this.infoCallback(parts[1]);\n        }\n    }\n\n    private validMessage(event: MessageEvent) {\n        if (event.origin == null || event.origin === '' || event.origin !== (this.connectorLink as any).origin ||\n            event.data == null || typeof (event.data) !== 'string') {\n            return false;\n        }\n\n        return event.data.indexOf('success|') === 0 || event.data.indexOf('error|') === 0 ||\n            event.data.indexOf('info|') === 0;\n    }\n}\n","export class VerifyEmailRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","export class VerifyDeleteRecoverRequest {\n    userId: string;\n    token: string;\n\n    constructor(userId: string, token: string) {\n        this.userId = userId;\n        this.token = token;\n    }\n}\n","import { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class GroupRequest {\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","import { OrganizationUserType } from '../../enums/organizationUserType';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class OrganizationUserInviteRequest {\n    emails: string[] = [];\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","import { OrganizationUserType } from '../../enums/organizationUserType';\n\nimport { SelectionReadOnlyRequest } from './selectionReadOnlyRequest';\n\nexport class OrganizationUserUpdateRequest {\n    type: OrganizationUserType;\n    accessAll: boolean;\n    collections: SelectionReadOnlyRequest[] = [];\n}\n","export class OrganizationUserUpdateGroupsRequest {\n    groupIds: string[] = [];\n}\n","import { PolicyType } from '../../enums/policyType';\n\nexport class PolicyRequest {\n    type: PolicyType;\n    enabled: boolean;\n    data: any;\n}\n","export class OrganizationUpdateRequest {\n    name: string;\n    identifier: string;\n    businessName: string;\n    billingEmail: string;\n}\n","export enum TransactionType {\n    Charge = 0,\n    Credit = 1,\n    PromotionalCredit = 2,\n    ReferralCredit = 3,\n    Refund = 4,\n}\n","export class VerifyBankRequest {\n    amount1: number;\n    amount2: number;\n}\n","export class BitPayInvoiceRequest {\n    userId: string;\n    organizationId: string;\n    credit: boolean;\n    amount: number;\n    returnUrl: string;\n    name: string;\n    email: string;\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { OrganizationTaxInfoUpdateRequest } from '../request/organizationTaxInfoUpdateRequest';\n\nexport class PaymentRequest extends OrganizationTaxInfoUpdateRequest {\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n}\n","export enum ProductType {\n    Free = 0,\n    Families = 1,\n    Teams = 2,\n    Enterprise = 3,\n}\n","import { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { PlanType } from '../../enums/planType';\n\nexport class OrganizationCreateRequest {\n    name: string;\n    businessName: string;\n    billingEmail: string;\n    planType: PlanType;\n    key: string;\n    paymentMethodType: PaymentMethodType;\n    paymentToken: string;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n    collectionName: string;\n    taxIdNumber: string;\n    billingAddressLine1: string;\n    billingAddressLine2: string;\n    billingAddressCity: string;\n    billingAddressState: string;\n    billingAddressPostalCode: string;\n    billingAddressCountry: string;\n}\n","import { PlanType } from '../../enums/planType';\n\nexport class OrganizationUpgradeRequest {\n    businessName: string;\n    planType: PlanType;\n    additionalSeats: number;\n    additionalStorageGb: number;\n    premiumAccessAddon: boolean;\n}\n","export class SeatRequest {\n    seatAdjustment: number;\n}\n","export class StorageRequest {\n    storageGbAdjustment: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorDuoRequest extends PasswordVerificationRequest {\n    integrationKey: string;\n    secretKey: string;\n    host: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderRequest extends PasswordVerificationRequest {\n    type: TwoFactorProviderType;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorAuthenticatorRequest extends PasswordVerificationRequest {\n    token: string;\n    key: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorEmailRequest extends PasswordVerificationRequest {\n    token: string;\n    email: string;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorU2fDeleteRequest extends PasswordVerificationRequest {\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorU2fRequest extends PasswordVerificationRequest {\n    deviceResponse: string;\n    name: string;\n    id: number;\n}\n","import { PasswordVerificationRequest } from './passwordVerificationRequest';\n\nexport class UpdateTwoFactorYubioOtpRequest extends PasswordVerificationRequest {\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n}\n","import {\n    Directive,\n    EventEmitter,\n    Output,\n} from '@angular/core';\n\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { EventService } from '../../abstractions/event.service';\nimport { ExportService } from '../../abstractions/export.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { EventType } from '../../enums/eventType';\n\n@Directive()\nexport class ExportComponent {\n    @Output() onSaved = new EventEmitter();\n\n    formPromise: Promise<string>;\n    masterPassword: string;\n    format: 'json' | 'csv' = 'json';\n    showPassword = false;\n\n    constructor(protected cryptoService: CryptoService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService, protected exportService: ExportService,\n        protected eventService: EventService, protected win: Window) { }\n\n    async submit() {\n        if (this.masterPassword == null || this.masterPassword === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n            return;\n        }\n\n        const keyHash = await this.cryptoService.hashPassword(this.masterPassword, null);\n        const storedKeyHash = await this.cryptoService.getKeyHash();\n        if (storedKeyHash != null && keyHash != null && storedKeyHash === keyHash) {\n            try {\n                this.formPromise = this.getExportData();\n                const data = await this.formPromise;\n                this.platformUtilsService.eventTrack('Exported Data');\n                this.downloadFile(data);\n                this.saved();\n                await this.collectEvent();\n            } catch { }\n        } else {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('invalidMasterPassword'));\n        }\n    }\n\n    togglePassword() {\n        this.platformUtilsService.eventTrack('Toggled Master Password on Export');\n        this.showPassword = !this.showPassword;\n        document.getElementById('masterPassword').focus();\n    }\n\n    protected saved() {\n        this.onSaved.emit();\n    }\n\n    protected getExportData() {\n        return this.exportService.getExport(this.format);\n    }\n\n    protected getFileName(prefix?: string) {\n        return this.exportService.getFileName(prefix, this.format);\n    }\n\n    protected async collectEvent(): Promise<any> {\n        await this.eventService.collect(EventType.User_ClientExportedVault);\n    }\n\n    private downloadFile(csv: string): void {\n        const fileName = this.getFileName();\n        this.platformUtilsService.saveFile(this.win, csv, { type: 'text/plain' }, fileName);\n    }\n}\n","export class AttachmentRequest {\n    fileName: string;\n    key: string;\n}\n","import {\n    CdkDragDrop,\n    moveItemInArray,\n} from '@angular/cdk/drag-drop';\nimport {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from '../../enums/cipherType';\nimport { EventType } from '../../enums/eventType';\nimport { FieldType } from '../../enums/fieldType';\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { SecureNoteType } from '../../enums/secureNoteType';\nimport { UriMatchType } from '../../enums/uriMatchType';\n\nimport { AuditService } from '../../abstractions/audit.service';\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { EventService } from '../../abstractions/event.service';\nimport { FolderService } from '../../abstractions/folder.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { MessagingService } from '../../abstractions/messaging.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { StateService } from '../../abstractions/state.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { Cipher } from '../../models/domain/cipher';\n\nimport { CardView } from '../../models/view/cardView';\nimport { CipherView } from '../../models/view/cipherView';\nimport { CollectionView } from '../../models/view/collectionView';\nimport { FieldView } from '../../models/view/fieldView';\nimport { FolderView } from '../../models/view/folderView';\nimport { IdentityView } from '../../models/view/identityView';\nimport { LoginUriView } from '../../models/view/loginUriView';\nimport { LoginView } from '../../models/view/loginView';\nimport { SecureNoteView } from '../../models/view/secureNoteView';\n\nimport { Utils } from '../../misc/utils';\n\n@Directive()\nexport class AddEditComponent implements OnInit {\n    @Input() cloneMode: boolean = false;\n    @Input() folderId: string = null;\n    @Input() cipherId: string;\n    @Input() type: CipherType;\n    @Input() collectionIds: string[];\n    @Input() organizationId: string = null;\n    @Output() onSavedCipher = new EventEmitter<CipherView>();\n    @Output() onDeletedCipher = new EventEmitter<CipherView>();\n    @Output() onRestoredCipher = new EventEmitter<CipherView>();\n    @Output() onCancelled = new EventEmitter<CipherView>();\n    @Output() onEditAttachments = new EventEmitter<CipherView>();\n    @Output() onShareCipher = new EventEmitter<CipherView>();\n    @Output() onEditCollections = new EventEmitter<CipherView>();\n    @Output() onGeneratePassword = new EventEmitter();\n\n    editMode: boolean = false;\n    cipher: CipherView;\n    folders: FolderView[];\n    collections: CollectionView[] = [];\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n    restorePromise: Promise<any>;\n    checkPasswordPromise: Promise<number>;\n    showPassword: boolean = false;\n    showCardCode: boolean = false;\n    cipherType = CipherType;\n    fieldType = FieldType;\n    addFieldType: FieldType = FieldType.Text;\n    typeOptions: any[];\n    cardBrandOptions: any[];\n    cardExpMonthOptions: any[];\n    identityTitleOptions: any[];\n    addFieldTypeOptions: any[];\n    uriMatchOptions: any[];\n    ownershipOptions: any[] = [];\n    currentDate = new Date();\n\n    protected writeableCollections: CollectionView[];\n    private previousCipherId: string;\n\n    constructor(protected cipherService: CipherService, protected folderService: FolderService,\n        protected i18nService: I18nService, protected platformUtilsService: PlatformUtilsService,\n        protected auditService: AuditService, protected stateService: StateService,\n        protected userService: UserService, protected collectionService: CollectionService,\n        protected messagingService: MessagingService, protected eventService: EventService) {\n        this.typeOptions = [\n            { name: i18nService.t('typeLogin'), value: CipherType.Login },\n            { name: i18nService.t('typeCard'), value: CipherType.Card },\n            { name: i18nService.t('typeIdentity'), value: CipherType.Identity },\n            { name: i18nService.t('typeSecureNote'), value: CipherType.SecureNote },\n        ];\n        this.cardBrandOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: 'Visa', value: 'Visa' },\n            { name: 'Mastercard', value: 'Mastercard' },\n            { name: 'American Express', value: 'Amex' },\n            { name: 'Discover', value: 'Discover' },\n            { name: 'Diners Club', value: 'Diners Club' },\n            { name: 'JCB', value: 'JCB' },\n            { name: 'Maestro', value: 'Maestro' },\n            { name: 'UnionPay', value: 'UnionPay' },\n            { name: i18nService.t('other'), value: 'Other' },\n        ];\n        this.cardExpMonthOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: '01 - ' + i18nService.t('january'), value: '1' },\n            { name: '02 - ' + i18nService.t('february'), value: '2' },\n            { name: '03 - ' + i18nService.t('march'), value: '3' },\n            { name: '04 - ' + i18nService.t('april'), value: '4' },\n            { name: '05 - ' + i18nService.t('may'), value: '5' },\n            { name: '06 - ' + i18nService.t('june'), value: '6' },\n            { name: '07 - ' + i18nService.t('july'), value: '7' },\n            { name: '08 - ' + i18nService.t('august'), value: '8' },\n            { name: '09 - ' + i18nService.t('september'), value: '9' },\n            { name: '10 - ' + i18nService.t('october'), value: '10' },\n            { name: '11 - ' + i18nService.t('november'), value: '11' },\n            { name: '12 - ' + i18nService.t('december'), value: '12' },\n        ];\n        this.identityTitleOptions = [\n            { name: '-- ' + i18nService.t('select') + ' --', value: null },\n            { name: i18nService.t('mr'), value: i18nService.t('mr') },\n            { name: i18nService.t('mrs'), value: i18nService.t('mrs') },\n            { name: i18nService.t('ms'), value: i18nService.t('ms') },\n            { name: i18nService.t('dr'), value: i18nService.t('dr') },\n        ];\n        this.addFieldTypeOptions = [\n            { name: i18nService.t('cfTypeText'), value: FieldType.Text },\n            { name: i18nService.t('cfTypeHidden'), value: FieldType.Hidden },\n            { name: i18nService.t('cfTypeBoolean'), value: FieldType.Boolean },\n        ];\n        this.uriMatchOptions = [\n            { name: i18nService.t('defaultMatchDetection'), value: null },\n            { name: i18nService.t('baseDomain'), value: UriMatchType.Domain },\n            { name: i18nService.t('host'), value: UriMatchType.Host },\n            { name: i18nService.t('startsWith'), value: UriMatchType.StartsWith },\n            { name: i18nService.t('regEx'), value: UriMatchType.RegularExpression },\n            { name: i18nService.t('exact'), value: UriMatchType.Exact },\n            { name: i18nService.t('never'), value: UriMatchType.Never },\n        ];\n    }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async init() {\n        const myEmail = await this.userService.getEmail();\n        this.ownershipOptions.push({ name: myEmail, value: null });\n        const orgs = await this.userService.getAllOrganizations();\n        orgs.sort(Utils.getSortFunction(this.i18nService, 'name')).forEach((o) => {\n            if (o.enabled && o.status === OrganizationUserStatusType.Confirmed) {\n                this.ownershipOptions.push({ name: o.name, value: o.id });\n            }\n        });\n        this.writeableCollections = await this.loadCollections();\n    }\n\n    async load() {\n        this.editMode = this.cipherId != null;\n        if (this.editMode) {\n            this.editMode = true;\n            if (this.cloneMode) {\n                this.cloneMode = true;\n                this.title = this.i18nService.t('addItem');\n            } else {\n                this.title = this.i18nService.t('editItem');\n            }\n        } else {\n            this.title = this.i18nService.t('addItem');\n        }\n\n        const addEditCipherInfo: any = await this.stateService.get<any>('addEditCipherInfo');\n        if (addEditCipherInfo != null) {\n            this.cipher = addEditCipherInfo.cipher;\n            this.collectionIds = addEditCipherInfo.collectionIds;\n        }\n        await this.stateService.remove('addEditCipherInfo');\n\n        if (this.cipher == null) {\n            if (this.editMode) {\n                const cipher = await this.loadCipher();\n                this.cipher = await cipher.decrypt();\n\n                // Adjust Cipher Name if Cloning\n                if (this.cloneMode) {\n                    this.cipher.name += ' - ' + this.i18nService.t('clone');\n                }\n            } else {\n                this.cipher = new CipherView();\n                this.cipher.organizationId = this.organizationId == null ? null : this.organizationId;\n                this.cipher.folderId = this.folderId;\n                this.cipher.type = this.type == null ? CipherType.Login : this.type;\n                this.cipher.login = new LoginView();\n                this.cipher.login.uris = [new LoginUriView()];\n                this.cipher.card = new CardView();\n                this.cipher.identity = new IdentityView();\n                this.cipher.secureNote = new SecureNoteView();\n                this.cipher.secureNote.type = SecureNoteType.Generic;\n            }\n        }\n\n        if (this.cipher != null && (!this.editMode || addEditCipherInfo != null || this.cloneMode)) {\n            await this.organizationChanged();\n            if (this.collectionIds != null && this.collectionIds.length > 0 && this.collections.length > 0) {\n                this.collections.forEach((c) => {\n                    if (this.collectionIds.indexOf(c.id) > -1) {\n                        (c as any).checked = true;\n                    }\n                });\n            }\n        }\n\n        this.folders = await this.folderService.getAllDecrypted();\n\n        if (this.editMode && this.previousCipherId !== this.cipherId) {\n            this.eventService.collect(EventType.Cipher_ClientViewed, this.cipherId);\n        }\n        this.previousCipherId = this.cipherId;\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.cipher.isDeleted) {\n            return this.restore();\n        }\n\n        if (this.cipher.name == null || this.cipher.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        if ((!this.editMode || this.cloneMode) && this.cipher.type === CipherType.Login &&\n            this.cipher.login.uris != null && this.cipher.login.uris.length === 1 &&\n            (this.cipher.login.uris[0].uri == null || this.cipher.login.uris[0].uri === '')) {\n            this.cipher.login.uris = null;\n        }\n\n        // Allows saving of selected collections during \"Add\" and \"Clone\" flows\n        if ((!this.editMode || this.cloneMode) && this.cipher.organizationId != null) {\n            this.cipher.collectionIds = this.collections == null ? [] :\n                this.collections.filter((c) => (c as any).checked).map((c) => c.id);\n        }\n\n        // Clear current Cipher Id to trigger \"Add\" cipher flow\n        if (this.cloneMode) {\n            this.cipher.id = null;\n        }\n\n        const cipher = await this.encryptCipher();\n        try {\n            this.formPromise = this.saveCipher(cipher);\n            await this.formPromise;\n            this.cipher.id = cipher.id;\n            this.platformUtilsService.eventTrack(this.editMode && !this.cloneMode ? 'Edited Cipher' : 'Added Cipher');\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode && !this.cloneMode ? 'editedItem' : 'addedItem'));\n            this.onSavedCipher.emit(this.cipher);\n            this.messagingService.send(this.editMode && !this.cloneMode ? 'editedCipher' : 'addedCipher');\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    addUri() {\n        if (this.cipher.type !== CipherType.Login) {\n            return;\n        }\n\n        if (this.cipher.login.uris == null) {\n            this.cipher.login.uris = [];\n        }\n\n        this.cipher.login.uris.push(new LoginUriView());\n    }\n\n    removeUri(uri: LoginUriView) {\n        if (this.cipher.type !== CipherType.Login || this.cipher.login.uris == null) {\n            return;\n        }\n\n        const i = this.cipher.login.uris.indexOf(uri);\n        if (i > -1) {\n            this.cipher.login.uris.splice(i, 1);\n        }\n    }\n\n    addField() {\n        if (this.cipher.fields == null) {\n            this.cipher.fields = [];\n        }\n\n        const f = new FieldView();\n        f.type = this.addFieldType;\n        f.newField = true;\n        this.cipher.fields.push(f);\n    }\n\n    removeField(field: FieldView) {\n        const i = this.cipher.fields.indexOf(field);\n        if (i > -1) {\n            this.cipher.fields.splice(i, 1);\n        }\n    }\n\n    trackByFunction(index: number, item: any) {\n        return index;\n    }\n\n    cancel() {\n        this.onCancelled.emit(this.cipher);\n    }\n\n    attachments() {\n        this.onEditAttachments.emit(this.cipher);\n    }\n\n    share() {\n        this.onShareCipher.emit(this.cipher);\n    }\n\n    editCollections() {\n        this.onEditCollections.emit(this.cipher);\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeleteItemConfirmation' : 'deleteItemConfirmation'),\n            this.i18nService.t('deleteItem'), this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.deleteCipher();\n            await this.deletePromise;\n            this.platformUtilsService.eventTrack((this.cipher.isDeleted ? 'Permanently ' : '') + 'Deleted Cipher');\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.cipher.isDeleted ? 'permanentlyDeletedItem' : 'deletedItem'));\n            this.onDeletedCipher.emit(this.cipher);\n            this.messagingService.send(this.cipher.isDeleted ? 'permanentlyDeletedCipher' : 'deletedCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async restore(): Promise<boolean> {\n        if (!this.cipher.isDeleted) {\n            return false;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('restoreItemConfirmation'), this.i18nService.t('restoreItem'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.restorePromise = this.restoreCipher();\n            await this.restorePromise;\n            this.platformUtilsService.eventTrack('Restored Cipher');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('restoredItem'));\n            this.onRestoredCipher.emit(this.cipher);\n            this.messagingService.send('restoredCipher');\n        } catch { }\n\n        return true;\n    }\n\n    async generatePassword(): Promise<boolean> {\n        if (this.cipher.login != null && this.cipher.login.password != null && this.cipher.login.password.length) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('overwritePasswordConfirmation'), this.i18nService.t('overwritePassword'),\n                this.i18nService.t('yes'), this.i18nService.t('no'));\n            if (!confirmed) {\n                return false;\n            }\n        }\n\n        this.onGeneratePassword.emit();\n        return true;\n    }\n\n    togglePassword() {\n        this.platformUtilsService.eventTrack('Toggled Password on Edit');\n        this.showPassword = !this.showPassword;\n        document.getElementById('loginPassword').focus();\n        if (this.editMode && this.showPassword) {\n            this.eventService.collect(EventType.Cipher_ClientToggledPasswordVisible, this.cipherId);\n        }\n    }\n\n    toggleCardCode() {\n        this.platformUtilsService.eventTrack('Toggled CardCode on Edit');\n        this.showCardCode = !this.showCardCode;\n        document.getElementById('cardCode').focus();\n        if (this.editMode && this.showCardCode) {\n            this.eventService.collect(EventType.Cipher_ClientToggledCardCodeVisible, this.cipherId);\n        }\n    }\n\n    toggleFieldValue(field: FieldView) {\n        const f = (field as any);\n        f.showValue = !f.showValue;\n        if (this.editMode && f.showValue) {\n            this.eventService.collect(EventType.Cipher_ClientToggledHiddenFieldVisible, this.cipherId);\n        }\n    }\n\n    toggleUriOptions(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null && uri.match != null ? false : !u.showOptions;\n    }\n\n    loginUriMatchChanged(uri: LoginUriView) {\n        const u = (uri as any);\n        u.showOptions = u.showOptions == null ? true : u.showOptions;\n    }\n\n    drop(event: CdkDragDrop<string[]>) {\n        moveItemInArray(this.cipher.fields, event.previousIndex, event.currentIndex);\n    }\n\n    async organizationChanged() {\n        if (this.writeableCollections != null) {\n            this.writeableCollections.forEach((c) => (c as any).checked = false);\n        }\n        if (this.cipher.organizationId != null) {\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.cipher.organizationId);\n            const org = await this.userService.getOrganization(this.cipher.organizationId);\n            if (org != null) {\n                this.cipher.organizationUseTotp = org.useTotp;\n            }\n        } else {\n            this.collections = [];\n        }\n    }\n\n    async checkPassword() {\n        if (this.checkPasswordPromise != null) {\n            return;\n        }\n\n        if (this.cipher.login == null || this.cipher.login.password == null || this.cipher.login.password === '') {\n            return;\n        }\n\n        this.platformUtilsService.eventTrack('Check Password');\n        this.checkPasswordPromise = this.auditService.passwordLeaked(this.cipher.login.password);\n        const matches = await this.checkPasswordPromise;\n        this.checkPasswordPromise = null;\n\n        if (matches > 0) {\n            this.platformUtilsService.showToast('warning', null,\n                this.i18nService.t('passwordExposed', matches.toString()));\n        } else {\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('passwordSafe'));\n        }\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter((c) => !c.readOnly);\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected encryptCipher() {\n        return this.cipherService.encrypt(this.cipher);\n    }\n\n    protected saveCipher(cipher: Cipher) {\n        return this.cipherService.saveWithServer(cipher);\n    }\n\n    protected deleteCipher() {\n        return this.cipher.isDeleted ? this.cipherService.deleteWithServer(this.cipher.id)\n            : this.cipherService.softDeleteWithServer(this.cipher.id);\n    }\n\n    protected restoreCipher() {\n        return this.cipherService.restoreWithServer(this.cipher.id);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CryptoService } from '../../abstractions/crypto.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { Cipher } from '../../models/domain/cipher';\n\nimport { AttachmentView } from '../../models/view/attachmentView';\nimport { CipherView } from '../../models/view/cipherView';\n\n@Directive()\nexport class AttachmentsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Output() onUploadedAttachment = new EventEmitter();\n    @Output() onDeletedAttachment = new EventEmitter();\n    @Output() onReuploadedAttachment = new EventEmitter();\n\n    cipher: CipherView;\n    cipherDomain: Cipher;\n    hasUpdatedKey: boolean;\n    canAccessAttachments: boolean;\n    formPromise: Promise<any>;\n    deletePromises: { [id: string]: Promise<any>; } = {};\n    reuploadPromises: { [id: string]: Promise<any>; } = {};\n\n    constructor(protected cipherService: CipherService, protected i18nService: I18nService,\n        protected cryptoService: CryptoService, protected userService: UserService,\n        protected platformUtilsService: PlatformUtilsService, protected win: Window) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit() {\n        if (!this.hasUpdatedKey) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('updateKey'));\n            return;\n        }\n\n        const fileEl = document.getElementById('file') as HTMLInputElement;\n        const files = fileEl.files;\n        if (files == null || files.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectFile'));\n            return;\n        }\n\n        if (files[0].size > 104857600) { // 100 MB\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('maxFileSize'));\n            return;\n        }\n\n        try {\n            this.formPromise = this.saveCipherAttachment(files[0]);\n            this.cipherDomain = await this.formPromise;\n            this.cipher = await this.cipherDomain.decrypt();\n            this.platformUtilsService.eventTrack('Added Attachment');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n            this.onUploadedAttachment.emit();\n        } catch { }\n\n        // reset file input\n        // ref: https://stackoverflow.com/a/20552042\n        fileEl.type = '';\n        fileEl.type = 'file';\n        fileEl.value = '';\n    }\n\n    async delete(attachment: AttachmentView) {\n        if (this.deletePromises[attachment.id] != null) {\n            return;\n        }\n\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteAttachmentConfirmation'), this.i18nService.t('deleteAttachment'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return;\n        }\n\n        try {\n            this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n            await this.deletePromises[attachment.id];\n            this.platformUtilsService.eventTrack('Deleted Attachment');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedAttachment'));\n            const i = this.cipher.attachments.indexOf(attachment);\n            if (i > -1) {\n                this.cipher.attachments.splice(i, 1);\n            }\n        } catch { }\n\n        this.deletePromises[attachment.id] = null;\n        this.onDeletedAttachment.emit();\n    }\n\n    async download(attachment: AttachmentView) {\n        const a = (attachment as any);\n        if (a.downloading) {\n            return;\n        }\n\n        if (!this.canAccessAttachments) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('premiumRequired'),\n                this.i18nService.t('premiumRequiredDesc'));\n            return;\n        }\n\n        a.downloading = true;\n        const response = await fetch(new Request(attachment.url, { cache: 'no-store' }));\n        if (response.status !== 200) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n            a.downloading = false;\n            return;\n        }\n\n        try {\n            const buf = await response.arrayBuffer();\n            const key = attachment.key != null ? attachment.key :\n                await this.cryptoService.getOrgKey(this.cipher.organizationId);\n            const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n            this.platformUtilsService.saveFile(this.win, decBuf, null, attachment.fileName);\n        } catch (e) {\n            this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n        }\n\n        a.downloading = false;\n    }\n\n    protected async init() {\n        this.cipherDomain = await this.loadCipher();\n        this.cipher = await this.cipherDomain.decrypt();\n\n        this.hasUpdatedKey = await this.cryptoService.hasEncKey();\n        const canAccessPremium = await this.userService.canAccessPremium();\n        this.canAccessAttachments = canAccessPremium || this.cipher.organizationId != null;\n\n        if (!this.canAccessAttachments) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://vault.bitwarden.com/#/?premium=purchase');\n            }\n        } else if (!this.hasUpdatedKey) {\n            const confirmed = await this.platformUtilsService.showDialog(\n                this.i18nService.t('updateKey'), this.i18nService.t('featureUnavailable'),\n                this.i18nService.t('learnMore'), this.i18nService.t('cancel'), 'warning');\n            if (confirmed) {\n                this.platformUtilsService.launchUri('https://help.bitwarden.com/article/update-encryption-key/');\n            }\n        }\n    }\n\n    protected async reuploadCipherAttachment(attachment: AttachmentView, admin: boolean) {\n        const a = (attachment as any);\n        if (attachment.key != null || a.downloading || this.reuploadPromises[attachment.id] != null) {\n            return;\n        }\n\n        try {\n            this.reuploadPromises[attachment.id] = Promise.resolve().then(async () => {\n                // 1. Download\n                a.downloading = true;\n                const response = await fetch(new Request(attachment.url, { cache: 'no-store' }));\n                if (response.status !== 200) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                    a.downloading = false;\n                    return;\n                }\n\n                try {\n                    // 2. Resave\n                    const buf = await response.arrayBuffer();\n                    const key = attachment.key != null ? attachment.key :\n                        await this.cryptoService.getOrgKey(this.cipher.organizationId);\n                    const decBuf = await this.cryptoService.decryptFromBytes(buf, key);\n                    this.cipherDomain = await this.cipherService.saveAttachmentRawWithServer(\n                        this.cipherDomain, attachment.fileName, decBuf, admin);\n                    this.cipher = await this.cipherDomain.decrypt();\n\n                    // 3. Delete old\n                    this.deletePromises[attachment.id] = this.deleteCipherAttachment(attachment.id);\n                    await this.deletePromises[attachment.id];\n                    const foundAttachment = this.cipher.attachments.filter((a2) => a2.id === attachment.id);\n                    if (foundAttachment.length > 0) {\n                        const i = this.cipher.attachments.indexOf(foundAttachment[0]);\n                        if (i > -1) {\n                            this.cipher.attachments.splice(i, 1);\n                        }\n                    }\n\n                    this.platformUtilsService.eventTrack('Reuploaded Attachment');\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('attachmentSaved'));\n                    this.onReuploadedAttachment.emit();\n                } catch (e) {\n                    this.platformUtilsService.showToast('error', null, this.i18nService.t('errorOccurred'));\n                }\n\n                a.downloading = false;\n            });\n            await this.reuploadPromises[attachment.id];\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected saveCipherAttachment(file: File) {\n        return this.cipherService.saveAttachmentWithServer(this.cipherDomain, file);\n    }\n\n    protected deleteCipherAttachment(attachmentId: string) {\n        return this.cipherService.deleteAttachmentWithServer(this.cipher.id, attachmentId);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { SearchService } from '../../abstractions/search.service';\n\nimport { CipherView } from '../../models/view/cipherView';\n\n@Directive()\nexport class CiphersComponent {\n    @Input() activeCipherId: string = null;\n    @Output() onCipherClicked = new EventEmitter<CipherView>();\n    @Output() onCipherRightClicked = new EventEmitter<CipherView>();\n    @Output() onAddCipher = new EventEmitter();\n    @Output() onAddCipherOptions = new EventEmitter();\n\n    loaded: boolean = false;\n    ciphers: CipherView[] = [];\n    pagedCiphers: CipherView[] = [];\n    searchText: string;\n    searchPlaceholder: string = null;\n    filter: (cipher: CipherView) => boolean = null;\n    deleted: boolean = false;\n\n    protected searchPending = false;\n    protected didScroll = false;\n    protected pageSize = 100;\n\n    private searchTimeout: any = null;\n    private pagedCiphersCount = 0;\n    private refreshing = false;\n\n    constructor(protected searchService: SearchService) { }\n\n    async load(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.deleted = deleted || false;\n        await this.applyFilter(filter);\n        this.loaded = true;\n    }\n\n    loadMore() {\n        if (this.ciphers.length <= this.pageSize) {\n            return;\n        }\n        const pagedLength = this.pagedCiphers.length;\n        let pagedSize = this.pageSize;\n        if (this.refreshing && pagedLength === 0 && this.pagedCiphersCount > this.pageSize) {\n            pagedSize = this.pagedCiphersCount;\n        }\n        if (this.ciphers.length > pagedLength) {\n            this.pagedCiphers = this.pagedCiphers.concat(this.ciphers.slice(pagedLength, pagedLength + pagedSize));\n        }\n        this.pagedCiphersCount = this.pagedCiphers.length;\n        this.didScroll = this.pagedCiphers.length > this.pageSize;\n    }\n\n    async reload(filter: (cipher: CipherView) => boolean = null, deleted: boolean = false) {\n        this.loaded = false;\n        this.ciphers = [];\n        await this.load(filter, deleted);\n    }\n\n    async refresh() {\n        try {\n            this.refreshing = true;\n            await this.reload(this.filter, this.deleted);\n        } finally {\n            this.refreshing = false;\n        }\n    }\n\n    async applyFilter(filter: (cipher: CipherView) => boolean = null) {\n        this.filter = filter;\n        await this.search(null);\n    }\n\n    async search(timeout: number = null) {\n        this.searchPending = false;\n        if (this.searchTimeout != null) {\n            clearTimeout(this.searchTimeout);\n        }\n        const deletedFilter: (cipher: CipherView) => boolean = (c) => c.isDeleted === this.deleted;\n        if (timeout == null) {\n            this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, deletedFilter], null);\n            await this.resetPaging();\n            return;\n        }\n        this.searchPending = true;\n        this.searchTimeout = setTimeout(async () => {\n            this.ciphers = await this.searchService.searchCiphers(this.searchText, [this.filter, deletedFilter], null);\n            await this.resetPaging();\n            this.searchPending = false;\n        }, timeout);\n    }\n\n    selectCipher(cipher: CipherView) {\n        this.onCipherClicked.emit(cipher);\n    }\n\n    rightClickCipher(cipher: CipherView) {\n        this.onCipherRightClicked.emit(cipher);\n    }\n\n    addCipher() {\n        this.onAddCipher.emit();\n    }\n\n    addCipherOptions() {\n        this.onAddCipherOptions.emit();\n    }\n\n    isSearching() {\n        return !this.searchPending && this.searchService.isSearchable(this.searchText);\n    }\n\n    isPaging() {\n        const searching = this.isSearching();\n        if (searching && this.didScroll) {\n            this.resetPaging();\n        }\n        return !searching && this.ciphers.length > this.pageSize;\n    }\n\n    async resetPaging() {\n        this.pagedCiphers = [];\n        this.loadMore();\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { CipherView } from '../../models/view/cipherView';\nimport { CollectionView } from '../../models/view/collectionView';\n\nimport { Cipher } from '../../models/domain/cipher';\n\n@Directive()\nexport class CollectionsComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() allowSelectNone = false;\n    @Output() onSavedCollections = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collectionIds: string[];\n    collections: CollectionView[] = [];\n\n    protected cipherDomain: Cipher;\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        this.cipherDomain = await this.loadCipher();\n        this.collectionIds = this.loadCipherCollections();\n        this.cipher = await this.cipherDomain.decrypt();\n        this.collections = await this.loadCollections();\n\n        this.collections.forEach((c) => (c as any).checked = false);\n        if (this.collectionIds != null) {\n            this.collections.forEach((c) => {\n                (c as any).checked = this.collectionIds != null && this.collectionIds.indexOf(c.id) > -1;\n            });\n        }\n    }\n\n    async submit() {\n        const selectedCollectionIds = this.collections\n            .filter((c) => !!(c as any).checked)\n            .map((c) => c.id);\n        if (!this.allowSelectNone && selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n        this.cipherDomain.collectionIds = selectedCollectionIds;\n        try {\n            this.formPromise = this.saveCollections();\n            await this.formPromise;\n            this.onSavedCollections.emit();\n            this.platformUtilsService.eventTrack('Edited Cipher Collections');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('editedItem'));\n        } catch { }\n    }\n\n    protected loadCipher() {\n        return this.cipherService.get(this.cipherId);\n    }\n\n    protected loadCipherCollections() {\n        return this.cipherDomain.collectionIds;\n    }\n\n    protected async loadCollections() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        return allCollections.filter((c) => !c.readOnly && c.organizationId === this.cipher.organizationId);\n    }\n\n    protected saveCollections() {\n        return this.cipherService.saveCollectionsWithServer(this.cipherDomain);\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    Output,\n} from '@angular/core';\n\nimport { CipherType } from '../../enums/cipherType';\n\nimport { CollectionView } from '../../models/view/collectionView';\nimport { FolderView } from '../../models/view/folderView';\n\nimport { TreeNode } from '../../models/domain/treeNode';\n\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { FolderService } from '../../abstractions/folder.service';\nimport { StorageService } from '../../abstractions/storage.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { ConstantsService } from '../../services/constants.service';\n\n@Directive()\nexport class GroupingsComponent {\n    @Input() showFolders = true;\n    @Input() showCollections = true;\n    @Input() showFavorites = true;\n    @Input() showTrash = true;\n\n    @Output() onAllClicked = new EventEmitter();\n    @Output() onFavoritesClicked = new EventEmitter();\n    @Output() onTrashClicked = new EventEmitter();\n    @Output() onCipherTypeClicked = new EventEmitter<CipherType>();\n    @Output() onFolderClicked = new EventEmitter<FolderView>();\n    @Output() onAddFolder = new EventEmitter();\n    @Output() onEditFolder = new EventEmitter<FolderView>();\n    @Output() onCollectionClicked = new EventEmitter<CollectionView>();\n\n    folders: FolderView[];\n    nestedFolders: TreeNode<FolderView>[];\n    collections: CollectionView[];\n    nestedCollections: TreeNode<CollectionView>[];\n    loaded: boolean = false;\n    cipherType = CipherType;\n    selectedAll: boolean = false;\n    selectedFavorites: boolean = false;\n    selectedTrash: boolean = false;\n    selectedType: CipherType = null;\n    selectedFolder: boolean = false;\n    selectedFolderId: string = null;\n    selectedCollectionId: string = null;\n\n    private collapsedGroupings: Set<string>;\n    private collapsedGroupingsKey: string;\n\n    constructor(protected collectionService: CollectionService, protected folderService: FolderService,\n        protected storageService: StorageService, protected userService: UserService) { }\n\n    async load(setLoaded = true) {\n        const userId = await this.userService.getUserId();\n        this.collapsedGroupingsKey = ConstantsService.collapsedGroupingsKey + '_' + userId;\n        const collapsedGroupings = await this.storageService.get<string[]>(this.collapsedGroupingsKey);\n        if (collapsedGroupings == null) {\n            this.collapsedGroupings = new Set<string>();\n        } else {\n            this.collapsedGroupings = new Set(collapsedGroupings);\n        }\n\n        await this.loadFolders();\n        await this.loadCollections();\n\n        if (setLoaded) {\n            this.loaded = true;\n        }\n    }\n\n    async loadCollections(organizationId?: string) {\n        if (!this.showCollections) {\n            return;\n        }\n        const collections = await this.collectionService.getAllDecrypted();\n        if (organizationId != null) {\n            this.collections = collections.filter((c) => c.organizationId === organizationId);\n        } else {\n            this.collections = collections;\n        }\n        this.nestedCollections = await this.collectionService.getAllNested(this.collections);\n    }\n\n    async loadFolders() {\n        if (!this.showFolders) {\n            return;\n        }\n        this.folders = await this.folderService.getAllDecrypted();\n        this.nestedFolders = await this.folderService.getAllNested();\n    }\n\n    selectAll() {\n        this.clearSelections();\n        this.selectedAll = true;\n        this.onAllClicked.emit();\n    }\n\n    selectFavorites() {\n        this.clearSelections();\n        this.selectedFavorites = true;\n        this.onFavoritesClicked.emit();\n    }\n\n    selectTrash() {\n        this.clearSelections();\n        this.selectedTrash = true;\n        this.onTrashClicked.emit();\n    }\n\n    selectType(type: CipherType) {\n        this.clearSelections();\n        this.selectedType = type;\n        this.onCipherTypeClicked.emit(type);\n    }\n\n    selectFolder(folder: FolderView) {\n        this.clearSelections();\n        this.selectedFolder = true;\n        this.selectedFolderId = folder.id;\n        this.onFolderClicked.emit(folder);\n    }\n\n    addFolder() {\n        this.onAddFolder.emit();\n    }\n\n    editFolder(folder: FolderView) {\n        this.onEditFolder.emit(folder);\n    }\n\n    selectCollection(collection: CollectionView) {\n        this.clearSelections();\n        this.selectedCollectionId = collection.id;\n        this.onCollectionClicked.emit(collection);\n    }\n\n    clearSelections() {\n        this.selectedAll = false;\n        this.selectedFavorites = false;\n        this.selectedTrash = false;\n        this.selectedType = null;\n        this.selectedFolder = false;\n        this.selectedFolderId = null;\n        this.selectedCollectionId = null;\n    }\n\n    collapse(grouping: FolderView | CollectionView, idPrefix = '') {\n        if (grouping.id == null) {\n            return;\n        }\n        const id = idPrefix + grouping.id;\n        if (this.isCollapsed(grouping, idPrefix)) {\n            this.collapsedGroupings.delete(id);\n        } else {\n            this.collapsedGroupings.add(id);\n        }\n        this.storageService.save(this.collapsedGroupingsKey, this.collapsedGroupings);\n    }\n\n    isCollapsed(grouping: FolderView | CollectionView, idPrefix = '') {\n        return this.collapsedGroupings.has(idPrefix + grouping.id);\n    }\n}\n","export class UpdateProfileRequest {\n    name: string;\n    masterPasswordHint: string;\n    culture = 'en-US'; // deprecated\n\n    constructor(name: string, masterPasswordHint: string) {\n        this.name = name;\n        this.masterPasswordHint = masterPasswordHint ? masterPasswordHint : null;\n    }\n}\n","import { EmailTokenRequest } from './emailTokenRequest';\n\nexport class EmailRequest extends EmailTokenRequest {\n    newMasterPasswordHash: string;\n    token: string;\n    key: string;\n}\n","import { PasswordRequest } from './passwordRequest';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class KdfRequest extends PasswordRequest {\n    kdf: KdfType;\n    kdfIterations: number;\n}\n","export class UpdateDomainsRequest {\n    equivalentDomains: string[][];\n    excludedGlobalEquivalentDomains: number[];\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { PasswordGeneratorPolicyOptions } from '../../models/domain/passwordGeneratorPolicyOptions';\n\n@Directive()\nexport class PasswordGeneratorComponent implements OnInit {\n    @Input() showSelect: boolean = false;\n    @Output() onSelected = new EventEmitter<string>();\n\n    options: any = {};\n    password: string = '-';\n    showOptions = false;\n    avoidAmbiguous = false;\n    enforcedPolicyOptions: PasswordGeneratorPolicyOptions;\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) { }\n\n    async ngOnInit() {\n        const optionsResponse = await this.passwordGenerationService.getOptions();\n        this.options = optionsResponse[0];\n        this.enforcedPolicyOptions = optionsResponse[1];\n        this.avoidAmbiguous = !this.options.ambiguous;\n        this.options.type = this.options.type === 'passphrase' ? 'passphrase' : 'password';\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        this.platformUtilsService.eventTrack('Generated Password');\n        await this.passwordGenerationService.addHistory(this.password);\n    }\n\n    async sliderChanged() {\n        this.saveOptions(false);\n        await this.passwordGenerationService.addHistory(this.password);\n        this.platformUtilsService.eventTrack('Regenerated Password');\n    }\n\n    async sliderInput() {\n        this.normalizeOptions();\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n    }\n\n    async saveOptions(regenerate: boolean = true) {\n        this.normalizeOptions();\n        await this.passwordGenerationService.saveOptions(this.options);\n\n        if (regenerate) {\n            await this.regenerate();\n        }\n    }\n\n    async regenerate() {\n        this.password = await this.passwordGenerationService.generatePassword(this.options);\n        await this.passwordGenerationService.addHistory(this.password);\n        this.platformUtilsService.eventTrack('Regenerated Password');\n    }\n\n    copy() {\n        this.platformUtilsService.eventTrack('Copied Generated Password');\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(this.password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n\n    select() {\n        this.platformUtilsService.eventTrack('Selected Generated Password');\n        this.onSelected.emit(this.password);\n    }\n\n    toggleOptions() {\n        this.showOptions = !this.showOptions;\n    }\n\n    private normalizeOptions() {\n        // Application level normalize options depedent on class variables\n        this.options.ambiguous = !this.avoidAmbiguous;\n\n        if (!this.options.uppercase && !this.options.lowercase && !this.options.number && !this.options.special) {\n            this.options.lowercase = true;\n            if (this.win != null) {\n                const lowercase = this.win.document.querySelector('#lowercase') as HTMLInputElement;\n                if (lowercase) {\n                    lowercase.checked = true;\n                }\n            }\n        }\n\n        this.passwordGenerationService.normalizeOptions(this.options, this.enforcedPolicyOptions);\n    }\n}\n","import { OnInit } from '@angular/core';\n\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PasswordGenerationService } from '../../abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { GeneratedPasswordHistory } from '../../models/domain/generatedPasswordHistory';\n\nexport class PasswordGeneratorHistoryComponent implements OnInit {\n    history: GeneratedPasswordHistory[] = [];\n\n    constructor(protected passwordGenerationService: PasswordGenerationService,\n        protected platformUtilsService: PlatformUtilsService, protected i18nService: I18nService,\n        private win: Window) { }\n\n    async ngOnInit() {\n        this.history = await this.passwordGenerationService.getHistory();\n    }\n\n    clear() {\n        this.history = [];\n        this.passwordGenerationService.clear();\n    }\n\n    copy(password: string) {\n        this.platformUtilsService.eventTrack('Copied Historical Password');\n        const copyOptions = this.win != null ? { window: this.win } : null;\n        this.platformUtilsService.copyToClipboard(password, copyOptions);\n        this.platformUtilsService.showToast('info', null,\n            this.i18nService.t('valueCopied', this.i18nService.t('password')));\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { FolderService } from '../../abstractions/folder.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\n\nimport { FolderView } from '../../models/view/folderView';\n\n@Directive()\nexport class FolderAddEditComponent implements OnInit {\n    @Input() folderId: string;\n    @Output() onSavedFolder = new EventEmitter<FolderView>();\n    @Output() onDeletedFolder = new EventEmitter<FolderView>();\n\n    editMode: boolean = false;\n    folder: FolderView = new FolderView();\n    title: string;\n    formPromise: Promise<any>;\n    deletePromise: Promise<any>;\n\n    constructor(protected folderService: FolderService, protected i18nService: I18nService,\n        protected platformUtilsService: PlatformUtilsService) { }\n\n    async ngOnInit() {\n        await this.init();\n    }\n\n    async submit(): Promise<boolean> {\n        if (this.folder.name == null || this.folder.name === '') {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('nameRequired'));\n            return false;\n        }\n\n        try {\n            const folder = await this.folderService.encrypt(this.folder);\n            this.formPromise = this.folderService.saveWithServer(folder);\n            await this.formPromise;\n            this.platformUtilsService.eventTrack(this.editMode ? 'Edited Folder' : 'Added Folder');\n            this.platformUtilsService.showToast('success', null,\n                this.i18nService.t(this.editMode ? 'editedFolder' : 'addedFolder'));\n            this.onSavedFolder.emit(this.folder);\n            return true;\n        } catch { }\n\n        return false;\n    }\n\n    async delete(): Promise<boolean> {\n        const confirmed = await this.platformUtilsService.showDialog(\n            this.i18nService.t('deleteFolderConfirmation'), this.i18nService.t('deleteFolder'),\n            this.i18nService.t('yes'), this.i18nService.t('no'), 'warning');\n        if (!confirmed) {\n            return false;\n        }\n\n        try {\n            this.deletePromise = this.folderService.deleteWithServer(this.folder.id);\n            await this.deletePromise;\n            this.platformUtilsService.eventTrack('Deleted Folder');\n            this.platformUtilsService.showToast('success', null, this.i18nService.t('deletedFolder'));\n            this.onDeletedFolder.emit(this.folder);\n        } catch { }\n\n        return true;\n    }\n\n    protected async init() {\n        this.editMode = this.folderId != null;\n\n        if (this.editMode) {\n            this.editMode = true;\n            this.title = this.i18nService.t('editFolder');\n            const folder = await this.folderService.get(this.folderId);\n            this.folder = await folder.decrypt();\n        } else {\n            this.title = this.i18nService.t('addFolder');\n        }\n    }\n}\n","import {\n    Directive,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n} from '@angular/core';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\n\nimport { CipherService } from '../../abstractions/cipher.service';\nimport { CollectionService } from '../../abstractions/collection.service';\nimport { I18nService } from '../../abstractions/i18n.service';\nimport { PlatformUtilsService } from '../../abstractions/platformUtils.service';\nimport { UserService } from '../../abstractions/user.service';\n\nimport { Organization } from '../../models/domain/organization';\nimport { CipherView } from '../../models/view/cipherView';\nimport { CollectionView } from '../../models/view/collectionView';\n\nimport { Utils } from '../../misc/utils';\n\n@Directive()\nexport class ShareComponent implements OnInit {\n    @Input() cipherId: string;\n    @Input() organizationId: string;\n    @Output() onSharedCipher = new EventEmitter();\n\n    formPromise: Promise<any>;\n    cipher: CipherView;\n    collections: CollectionView[] = [];\n    organizations: Organization[] = [];\n\n    protected writeableCollections: CollectionView[] = [];\n\n    constructor(protected collectionService: CollectionService, protected platformUtilsService: PlatformUtilsService,\n        protected i18nService: I18nService, protected userService: UserService,\n        protected cipherService: CipherService) { }\n\n    async ngOnInit() {\n        await this.load();\n    }\n\n    async load() {\n        const allCollections = await this.collectionService.getAllDecrypted();\n        this.writeableCollections = allCollections.map((c) => c).filter((c) => !c.readOnly);\n        const orgs = await this.userService.getAllOrganizations();\n        this.organizations = orgs.sort(Utils.getSortFunction(this.i18nService, 'name'))\n            .filter((o) => o.enabled && o.status === OrganizationUserStatusType.Confirmed);\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        this.cipher = await cipherDomain.decrypt();\n        if (this.organizationId == null && this.organizations.length > 0) {\n            this.organizationId = this.organizations[0].id;\n        }\n        this.filterCollections();\n    }\n\n    filterCollections() {\n        this.writeableCollections.forEach((c) => (c as any).checked = false);\n        if (this.organizationId == null || this.writeableCollections.length === 0) {\n            this.collections = [];\n        } else {\n            this.collections = this.writeableCollections.filter((c) => c.organizationId === this.organizationId);\n        }\n    }\n\n    async submit(): Promise<boolean> {\n        const selectedCollectionIds = this.collections\n            .filter((c) => !!(c as any).checked)\n            .map((c) => c.id);\n        if (selectedCollectionIds.length === 0) {\n            this.platformUtilsService.showToast('error', this.i18nService.t('errorOccurred'),\n                this.i18nService.t('selectOneCollection'));\n            return;\n        }\n\n        const cipherDomain = await this.cipherService.get(this.cipherId);\n        const cipherView = await cipherDomain.decrypt();\n\n        try {\n            this.formPromise = this.cipherService.shareWithServer(cipherView, this.organizationId,\n                selectedCollectionIds).then(async () => {\n                    this.onSharedCipher.emit();\n                    this.platformUtilsService.eventTrack('Shared Cipher');\n                    this.platformUtilsService.showToast('success', null, this.i18nService.t('sharedItem'));\n                });\n            await this.formPromise;\n            return true;\n        } catch { }\n        return false;\n    }\n\n    get canSave() {\n        if (this.collections != null) {\n            for (let i = 0; i < this.collections.length; i++) {\n                if ((this.collections[i] as any).checked) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n","import {\n    APP_INITIALIZER,\n    LOCALE_ID,\n    NgModule,\n} from '@angular/core';\n\nimport { ToasterModule } from 'angular2-toaster';\n\nimport { BroadcasterMessagingService } from '../../services/broadcasterMessaging.service';\nimport { HtmlStorageService } from '../../services/htmlStorage.service';\nimport { I18nService } from '../../services/i18n.service';\nimport { MemoryStorageService } from '../../services/memoryStorage.service';\nimport { WebPlatformUtilsService } from '../../services/webPlatformUtils.service';\n\nimport { EventService } from './event.service';\nimport { OrganizationGuardService } from './organization-guard.service';\nimport { OrganizationTypeGuardService } from './organization-type-guard.service';\nimport { RouterService } from './router.service';\nimport { UnauthGuardService } from './unauth-guard.service';\n\nimport { AuthGuardService } from 'jslib/angular/services/auth-guard.service';\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\nimport { ValidationService } from 'jslib/angular/services/validation.service';\n\nimport { Analytics } from 'jslib/misc/analytics';\n\nimport { ApiService } from 'jslib/services/api.service';\nimport { AppIdService } from 'jslib/services/appId.service';\nimport { AuditService } from 'jslib/services/audit.service';\nimport { AuthService } from 'jslib/services/auth.service';\nimport { CipherService } from 'jslib/services/cipher.service';\nimport { CollectionService } from 'jslib/services/collection.service';\nimport { ConstantsService } from 'jslib/services/constants.service';\nimport { ContainerService } from 'jslib/services/container.service';\nimport { CryptoService } from 'jslib/services/crypto.service';\nimport { EnvironmentService } from 'jslib/services/environment.service';\nimport { EventService as EventLoggingService } from 'jslib/services/event.service';\nimport { ExportService } from 'jslib/services/export.service';\nimport { FolderService } from 'jslib/services/folder.service';\nimport { ImportService } from 'jslib/services/import.service';\nimport { NotificationsService } from 'jslib/services/notifications.service';\nimport { PasswordGenerationService } from 'jslib/services/passwordGeneration.service';\nimport { PolicyService } from 'jslib/services/policy.service';\nimport { SearchService } from 'jslib/services/search.service';\nimport { SettingsService } from 'jslib/services/settings.service';\nimport { StateService } from 'jslib/services/state.service';\nimport { SyncService } from 'jslib/services/sync.service';\nimport { TokenService } from 'jslib/services/token.service';\nimport { TotpService } from 'jslib/services/totp.service';\nimport { UserService } from 'jslib/services/user.service';\nimport { VaultTimeoutService } from 'jslib/services/vaultTimeout.service';\nimport { WebCryptoFunctionService } from 'jslib/services/webCryptoFunction.service';\n\nimport { ApiService as ApiServiceAbstraction } from 'jslib/abstractions/api.service';\nimport { AppIdService as AppIdServiceAbstraction } from 'jslib/abstractions/appId.service';\nimport { AuditService as AuditServiceAbstraction } from 'jslib/abstractions/audit.service';\nimport { AuthService as AuthServiceAbstraction } from 'jslib/abstractions/auth.service';\nimport { CipherService as CipherServiceAbstraction } from 'jslib/abstractions/cipher.service';\nimport { CollectionService as CollectionServiceAbstraction } from 'jslib/abstractions/collection.service';\nimport { CryptoService as CryptoServiceAbstraction } from 'jslib/abstractions/crypto.service';\nimport { CryptoFunctionService as CryptoFunctionServiceAbstraction } from 'jslib/abstractions/cryptoFunction.service';\nimport { EnvironmentService as EnvironmentServiceAbstraction } from 'jslib/abstractions/environment.service';\nimport { EventService as EventLoggingServiceAbstraction } from 'jslib/abstractions/event.service';\nimport { ExportService as ExportServiceAbstraction } from 'jslib/abstractions/export.service';\nimport { FolderService as FolderServiceAbstraction } from 'jslib/abstractions/folder.service';\nimport { I18nService as I18nServiceAbstraction } from 'jslib/abstractions/i18n.service';\nimport { ImportService as ImportServiceAbstraction } from 'jslib/abstractions/import.service';\nimport { LogService as LogServiceAbstraction } from 'jslib/abstractions/log.service';\nimport { MessagingService as MessagingServiceAbstraction } from 'jslib/abstractions/messaging.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from 'jslib/abstractions/notifications.service';\nimport {\n    PasswordGenerationService as PasswordGenerationServiceAbstraction,\n} from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService as PlatformUtilsServiceAbstraction } from 'jslib/abstractions/platformUtils.service';\nimport { PolicyService as PolicyServiceAbstraction } from 'jslib/abstractions/policy.service';\nimport { SearchService as SearchServiceAbstraction } from 'jslib/abstractions/search.service';\nimport { SettingsService as SettingsServiceAbstraction } from 'jslib/abstractions/settings.service';\nimport { StateService as StateServiceAbstraction } from 'jslib/abstractions/state.service';\nimport { StorageService as StorageServiceAbstraction } from 'jslib/abstractions/storage.service';\nimport { SyncService as SyncServiceAbstraction } from 'jslib/abstractions/sync.service';\nimport { TokenService as TokenServiceAbstraction } from 'jslib/abstractions/token.service';\nimport { TotpService as TotpServiceAbstraction } from 'jslib/abstractions/totp.service';\nimport { UserService as UserServiceAbstraction } from 'jslib/abstractions/user.service';\nimport { VaultTimeoutService as VaultTimeoutServiceAbstraction } from 'jslib/abstractions/vaultTimeout.service';\n\nconst i18nService = new I18nService(window.navigator.language, 'locales');\nconst stateService = new StateService();\nconst broadcasterService = new BroadcasterService();\nconst messagingService = new BroadcasterMessagingService(broadcasterService);\nconst platformUtilsService = new WebPlatformUtilsService(i18nService, messagingService);\nconst storageService: StorageServiceAbstraction = new HtmlStorageService(platformUtilsService);\nconst secureStorageService: StorageServiceAbstraction = new MemoryStorageService();\nconst cryptoFunctionService: CryptoFunctionServiceAbstraction = new WebCryptoFunctionService(window,\n    platformUtilsService);\nconst cryptoService = new CryptoService(storageService,\n    platformUtilsService.isDev() ? storageService : secureStorageService, cryptoFunctionService);\nconst tokenService = new TokenService(storageService);\nconst appIdService = new AppIdService(storageService);\nconst apiService = new ApiService(tokenService, platformUtilsService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst userService = new UserService(tokenService, storageService);\nconst settingsService = new SettingsService(userService, storageService);\nexport let searchService: SearchService = null;\nconst cipherService = new CipherService(cryptoService, userService, settingsService,\n    apiService, storageService, i18nService, () => searchService);\nconst folderService = new FolderService(cryptoService, userService, apiService, storageService,\n    i18nService, cipherService);\nconst collectionService = new CollectionService(cryptoService, userService, storageService, i18nService);\nsearchService = new SearchService(cipherService);\nconst policyService = new PolicyService(userService, storageService);\nconst vaultTimeoutService = new VaultTimeoutService(cipherService, folderService, collectionService,\n    cryptoService, platformUtilsService, storageService, messagingService, searchService, userService, tokenService,\n    null, async () => messagingService.send('logout', { expired: false }));\nconst syncService = new SyncService(userService, apiService, settingsService,\n    folderService, cipherService, cryptoService, collectionService, storageService, messagingService, policyService,\n    async (expired: boolean) => messagingService.send('logout', { expired: expired }));\nconst passwordGenerationService = new PasswordGenerationService(cryptoService, storageService, policyService);\nconst totpService = new TotpService(storageService, cryptoFunctionService);\nconst containerService = new ContainerService(cryptoService);\nconst authService = new AuthService(cryptoService, apiService,\n    userService, tokenService, appIdService, i18nService, platformUtilsService, messagingService, vaultTimeoutService);\nconst exportService = new ExportService(folderService, cipherService, apiService);\nconst importService = new ImportService(cipherService, folderService, apiService, i18nService, collectionService);\nconst notificationsService = new NotificationsService(userService, syncService, appIdService,\n    apiService, vaultTimeoutService, async () => messagingService.send('logout', { expired: true }));\nconst environmentService = new EnvironmentService(apiService, storageService, notificationsService);\nconst auditService = new AuditService(cryptoFunctionService, apiService);\nconst eventLoggingService = new EventLoggingService(storageService, apiService, userService, cipherService);\n\nconst analytics = new Analytics(window, () => platformUtilsService.isDev() || platformUtilsService.isSelfHost() || true,\n    platformUtilsService, storageService, appIdService);\ncontainerService.attachToWindow(window);\n\nexport function initFactory(): Function {\n    function getBaseUrl() {\n        // If the base URL is `https://bitwarden.example.com/base/path/`,\n        // `window.location.href` should have one of the following forms:\n        //\n        // - `https://bitwarden.example.com/base/path/`\n        // - `https://bitwarden.example.com/base/path/#/some/route[?queryParam=...]`\n        //\n        // We want to get to just `https://bitwarden.example.com/base/path`.\n        let baseUrl = window.location.href;\n        baseUrl = baseUrl.replace(/#.*/, '');  // Strip off `#` and everything after.\n        baseUrl = baseUrl.replace(/\\/+$/, ''); // Trim any trailing `/` chars.\n        return baseUrl;\n    }\n    return async () => {\n        await (storageService as HtmlStorageService).init();\n        const isDev = false;\n        environmentService.baseUrl = getBaseUrl();\n        environmentService.notificationsUrl = environmentService.baseUrl + '/notifications';\n        environmentService.enterpriseUrl = environmentService.baseUrl + '/portal';\n        apiService.setUrls({\n            base: isDev ? null : environmentService.baseUrl,\n            api: isDev ? 'http://localhost:4000' : null,\n            identity: isDev ? 'http://localhost:33656' : null,\n            events: isDev ? 'http://localhost:46273' : null,\n\n            // Uncomment these (and comment out the above) if you want to target production\n            // servers for local development.\n\n            // base: null,\n            // api: 'https://api.bitwarden.com',\n            // identity: 'https://identity.bitwarden.com',\n            // events: 'https://events.bitwarden.com',\n        });\n        setTimeout(() => notificationsService.init(environmentService), 3000);\n\n        vaultTimeoutService.init(true);\n        const locale = await storageService.get<string>(ConstantsService.localeKey);\n        await i18nService.init(locale);\n        eventLoggingService.init(true);\n        authService.init();\n        const htmlEl = window.document.documentElement;\n        htmlEl.classList.add('locale_' + i18nService.translationLocale);\n        let theme = await storageService.get<string>(ConstantsService.themeKey);\n        if (theme == null) {\n            theme = 'light';\n        }\n        htmlEl.classList.add('theme_' + theme);\n        stateService.save(ConstantsService.disableFaviconKey,\n            await storageService.get<boolean>(ConstantsService.disableFaviconKey));\n        stateService.save('enableGravatars', await storageService.get<boolean>('enableGravatars'));\n    };\n}\n\n@NgModule({\n    imports: [\n        ToasterModule,\n    ],\n    declarations: [],\n    providers: [\n        ValidationService,\n        AuthGuardService,\n        OrganizationGuardService,\n        OrganizationTypeGuardService,\n        UnauthGuardService,\n        RouterService,\n        EventService,\n        { provide: AuditServiceAbstraction, useValue: auditService },\n        { provide: AuthServiceAbstraction, useValue: authService },\n        { provide: CipherServiceAbstraction, useValue: cipherService },\n        { provide: FolderServiceAbstraction, useValue: folderService },\n        { provide: CollectionServiceAbstraction, useValue: collectionService },\n        { provide: EnvironmentServiceAbstraction, useValue: environmentService },\n        { provide: TotpServiceAbstraction, useValue: totpService },\n        { provide: TokenServiceAbstraction, useValue: tokenService },\n        { provide: I18nServiceAbstraction, useValue: i18nService },\n        { provide: CryptoServiceAbstraction, useValue: cryptoService },\n        { provide: PlatformUtilsServiceAbstraction, useValue: platformUtilsService },\n        { provide: PasswordGenerationServiceAbstraction, useValue: passwordGenerationService },\n        { provide: ApiServiceAbstraction, useValue: apiService },\n        { provide: SyncServiceAbstraction, useValue: syncService },\n        { provide: UserServiceAbstraction, useValue: userService },\n        { provide: MessagingServiceAbstraction, useValue: messagingService },\n        { provide: BroadcasterService, useValue: broadcasterService },\n        { provide: SettingsServiceAbstraction, useValue: settingsService },\n        { provide: VaultTimeoutServiceAbstraction, useValue: vaultTimeoutService },\n        { provide: StorageServiceAbstraction, useValue: storageService },\n        { provide: StateServiceAbstraction, useValue: stateService },\n        { provide: ExportServiceAbstraction, useValue: exportService },\n        { provide: SearchServiceAbstraction, useValue: searchService },\n        { provide: ImportServiceAbstraction, useValue: importService },\n        { provide: NotificationsServiceAbstraction, useValue: notificationsService },\n        { provide: CryptoFunctionServiceAbstraction, useValue: cryptoFunctionService },\n        { provide: EventLoggingServiceAbstraction, useValue: eventLoggingService },\n        { provide: PolicyServiceAbstraction, useValue: policyService },\n        {\n            provide: APP_INITIALIZER,\n            useFactory: initFactory,\n            deps: [],\n            multi: true,\n        },\n        {\n            provide: LOCALE_ID,\n            useFactory: () => i18nService.translationLocale,\n            deps: [],\n        },\n    ],\n})\nexport class ServicesModule {\n}\n","import { MessagingService } from 'jslib/abstractions/messaging.service';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nexport class BroadcasterMessagingService implements MessagingService {\n    constructor(private broadcasterService: BroadcasterService) { }\n\n    send(subscriber: string, arg: any = {}) {\n        const message = Object.assign({}, { command: subscriber }, arg);\n        this.broadcasterService.send(message);\n    }\n}\n","import { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { StorageService } from 'jslib/abstractions/storage.service';\nimport { ConstantsService } from 'jslib/services';\n\nexport class HtmlStorageService implements StorageService {\n    private localStorageKeys = new Set(['appId', 'anonymousAppId', 'rememberedEmail', 'passwordGenerationOptions',\n        ConstantsService.disableFaviconKey, 'rememberEmail', 'enableGravatars', 'enableFullWidth',\n        ConstantsService.localeKey, ConstantsService.autoConfirmFingerprints,\n        ConstantsService.vaultTimeoutKey, ConstantsService.vaultTimeoutActionKey, ConstantsService.ssoCodeVerifierKey,\n        ConstantsService.ssoStateKey, 'ssoOrgIdentifier']);\n    private localStorageStartsWithKeys = ['twoFactorToken_', ConstantsService.collapsedGroupingsKey + '_'];\n    private memoryStorageStartsWithKeys = ['ciphers_', 'folders_', 'collections_', 'settings_', 'lastSync_'];\n    private memoryStorage = new Map<string, string>()\n\n    constructor(private platformUtilsService: PlatformUtilsService) { }\n\n    async init() {\n        // LockOption -> VaultTimeout (uses the same legacy string value for backwards compat)\n        const vaultTimeout = await this.get<number>(ConstantsService.vaultTimeoutKey);\n        if (vaultTimeout == null && !this.platformUtilsService.isDev()) {\n            await this.save(ConstantsService.vaultTimeoutKey, 15);\n        }\n\n        // Default Action to lock\n        const vaultTimeoutAction = await this.get<string>(ConstantsService.vaultTimeoutActionKey);\n        if (vaultTimeoutAction == null) {\n            await this.save(ConstantsService.vaultTimeoutActionKey, 'lock');\n        }\n    }\n\n    get<T>(key: string): Promise<T> {\n        let json: string = null;\n        if (this.isLocalStorage(key)) {\n            json = window.localStorage.getItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            json = this.memoryStorage.get(key);\n        } else {\n            json = window.sessionStorage.getItem(key);\n        }\n        if (json != null) {\n            const obj = JSON.parse(json);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n\n        const json = JSON.stringify(obj);\n        if (this.isLocalStorage(key)) {\n            window.localStorage.setItem(key, json);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.set(key, json);\n        } else {\n            window.sessionStorage.setItem(key, json);\n        }\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        if (this.isLocalStorage(key)) {\n            window.localStorage.removeItem(key);\n        } else if (this.isMemoryStorage(key)) {\n            this.memoryStorage.delete(key);\n        } else {\n            window.sessionStorage.removeItem(key);\n        }\n        return Promise.resolve();\n    }\n\n    private isLocalStorage(key: string): boolean {\n        if (this.localStorageKeys.has(key)) {\n            return true;\n        }\n        for (const swKey of this.localStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    private isMemoryStorage(key: string): boolean {\n        for (const swKey of this.memoryStorageStartsWithKeys) {\n            if (key.startsWith(swKey)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n","export { ApiService } from './api.service';\nexport { AppIdService } from './appId.service';\nexport { AuditService } from './audit.service';\nexport { AuthService } from './auth.service';\nexport { CipherService } from './cipher.service';\nexport { CollectionService } from './collection.service';\nexport { ConstantsService } from './constants.service';\nexport { ContainerService } from './container.service';\nexport { CryptoService } from './crypto.service';\nexport { EnvironmentService } from './environment.service';\nexport { FolderService } from './folder.service';\nexport { I18nService } from './i18n.service';\nexport { PasswordGenerationService } from './passwordGeneration.service';\nexport { SettingsService } from './settings.service';\nexport { StateService } from './state.service';\nexport { SyncService } from './sync.service';\nexport { TokenService } from './token.service';\nexport { TotpService } from './totp.service';\nexport { UserService } from './user.service';\nexport { VaultTimeoutService } from './vaultTimeout.service';\n","import { BaseResponse } from './baseResponse';\n\nexport class ApiKeyResponse extends BaseResponse {\n    apiKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.apiKey = this.getResponseProperty('ApiKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { PaymentMethodType } from '../../enums/paymentMethodType';\nimport { TransactionType } from '../../enums/transactionType';\n\nexport class BillingResponse extends BaseResponse {\n    balance: number;\n    paymentSource: BillingSourceResponse;\n    invoices: BillingInvoiceResponse[] = [];\n    transactions: BillingTransactionResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        this.balance = this.getResponseProperty('Balance');\n        const paymentSource = this.getResponseProperty('PaymentSource');\n        const transactions = this.getResponseProperty('Transactions');\n        const invoices = this.getResponseProperty('Invoices');\n        this.paymentSource = paymentSource == null ? null : new BillingSourceResponse(paymentSource);\n        if (transactions != null) {\n            this.transactions = transactions.map((t: any) => new BillingTransactionResponse(t));\n        }\n        if (invoices != null) {\n            this.invoices = invoices.map((i: any) => new BillingInvoiceResponse(i));\n        }\n    }\n}\n\nexport class BillingSourceResponse extends BaseResponse {\n    type: PaymentMethodType;\n    cardBrand: string;\n    description: string;\n    needsVerification: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.cardBrand = this.getResponseProperty('CardBrand');\n        this.description = this.getResponseProperty('Description');\n        this.needsVerification = this.getResponseProperty('NeedsVerification');\n    }\n}\n\nexport class BillingInvoiceResponse extends BaseResponse {\n    url: string;\n    pdfUrl: string;\n    number: string;\n    paid: boolean;\n    date: string;\n    amount: number;\n\n    constructor(response: any) {\n        super(response);\n        this.url = this.getResponseProperty('Url');\n        this.pdfUrl = this.getResponseProperty('PdfUrl');\n        this.number = this.getResponseProperty('Number');\n        this.paid = this.getResponseProperty('Paid');\n        this.date = this.getResponseProperty('Date');\n        this.amount = this.getResponseProperty('Amount');\n    }\n}\n\nexport class BillingTransactionResponse extends BaseResponse {\n    createdDate: string;\n    amount: number;\n    refunded: boolean;\n    partiallyRefunded: boolean;\n    refundedAmount: number;\n    type: TransactionType;\n    paymentMethodType: PaymentMethodType;\n    details: string;\n\n    constructor(response: any) {\n        super(response);\n        this.createdDate = this.getResponseProperty('CreatedDate');\n        this.amount = this.getResponseProperty('Amount');\n        this.refunded = this.getResponseProperty('Refunded');\n        this.partiallyRefunded = this.getResponseProperty('PartiallyRefunded');\n        this.refundedAmount = this.getResponseProperty('RefundedAmount');\n        this.type = this.getResponseProperty('Type');\n        this.paymentMethodType = this.getResponseProperty('PaymentMethodType');\n        this.details = this.getResponseProperty('Details');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class BreachAccountResponse extends BaseResponse {\n    addedDate: string;\n    breachDate: string;\n    dataClasses: string[];\n    description: string;\n    domain: string;\n    isActive: boolean;\n    isVerified: boolean;\n    logoPath: string;\n    modifiedDate: string;\n    name: string;\n    pwnCount: number;\n    title: string;\n\n    constructor(response: any) {\n        super(response);\n        this.addedDate = this.getResponseProperty('AddedDate');\n        this.breachDate = this.getResponseProperty('BreachDate');\n        this.dataClasses = this.getResponseProperty('DataClasses');\n        this.description = this.getResponseProperty('Description');\n        this.domain = this.getResponseProperty('Domain');\n        this.isActive = this.getResponseProperty('IsActive');\n        this.isVerified = this.getResponseProperty('IsVerified');\n        this.logoPath = this.getResponseProperty('LogoPath');\n        this.modifiedDate = this.getResponseProperty('ModifiedDate');\n        this.name = this.getResponseProperty('Name');\n        this.pwnCount = this.getResponseProperty('PwnCount');\n        this.title = this.getResponseProperty('Title');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class AttachmentResponse extends BaseResponse {\n    id: string;\n    url: string;\n    fileName: string;\n    key: string;\n    size: string;\n    sizeName: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.url = this.getResponseProperty('Url');\n        this.fileName = this.getResponseProperty('FileName');\n        this.key = this.getResponseProperty('Key');\n        this.size = this.getResponseProperty('Size');\n        this.sizeName = this.getResponseProperty('SizeName');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class PasswordHistoryResponse extends BaseResponse {\n    password: string;\n    lastUsedDate: string;\n\n    constructor(response: any) {\n        super(response);\n        this.password = this.getResponseProperty('Password');\n        this.lastUsedDate = this.getResponseProperty('LastUsedDate');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class GlobalDomainResponse extends BaseResponse {\n    type: number;\n    domains: string[];\n    excluded: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.domains = this.getResponseProperty('Domains');\n        this.excluded = this.getResponseProperty('Excluded');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ErrorResponse extends BaseResponse {\n    message: string;\n    validationErrors: { [key: string]: string[]; };\n    statusCode: number;\n\n    constructor(response: any, status: number, identityResponse?: boolean) {\n        super(response);\n        let errorModel = null;\n        if (response != null) {\n            const responseErrorModel = this.getResponseProperty('ErrorModel');\n            if (responseErrorModel && identityResponse) {\n                errorModel = responseErrorModel;\n            } else {\n                errorModel = response;\n            }\n        }\n\n        if (errorModel) {\n            this.message = this.getResponseProperty('Message', errorModel);\n            this.validationErrors = this.getResponseProperty('ValidationErrors', errorModel);\n        } else {\n            if (status === 429) {\n                this.message = 'Rate limit exceeded. Try again later.';\n            }\n        }\n        this.statusCode = status;\n    }\n\n    getSingleMessage(): string {\n        if (this.validationErrors == null) {\n            return this.message;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            if (this.validationErrors[key].length) {\n                return this.validationErrors[key][0];\n            }\n        }\n        return this.message;\n    }\n\n    getAllMessages(): string[] {\n        const messages: string[] = [];\n        if (this.validationErrors == null) {\n            return messages;\n        }\n        for (const key in this.validationErrors) {\n            if (!this.validationErrors.hasOwnProperty(key)) {\n                continue;\n            }\n            this.validationErrors[key].forEach((item: string) => {\n                let prefix = '';\n                if (key.indexOf('[') > -1 && key.indexOf(']') > -1) {\n                    const lastSep = key.lastIndexOf('.');\n                    prefix = key.substr(0, lastSep > -1 ? lastSep : key.length) + ': ';\n                }\n                messages.push(prefix + item);\n            });\n        }\n        return messages;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { DeviceType } from '../../enums/deviceType';\nimport { EventType } from '../../enums/eventType';\n\nexport class EventResponse extends BaseResponse {\n    type: EventType;\n    userId: string;\n    organizationId: string;\n    cipherId: string;\n    collectionId: string;\n    groupId: string;\n    organizationUserId: string;\n    actingUserId: string;\n    date: string;\n    deviceType: DeviceType;\n    ipAddress: string;\n\n    constructor(response: any) {\n        super(response);\n        this.type = this.getResponseProperty('Type');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.cipherId = this.getResponseProperty('CipherId');\n        this.collectionId = this.getResponseProperty('CollectionId');\n        this.groupId = this.getResponseProperty('GroupId');\n        this.organizationUserId = this.getResponseProperty('OrganizationUserId');\n        this.actingUserId = this.getResponseProperty('ActingUserId');\n        this.date = this.getResponseProperty('Date');\n        this.deviceType = this.getResponseProperty('DeviceType');\n        this.ipAddress = this.getResponseProperty('IpAddress');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class GroupResponse extends BaseResponse {\n    id: string;\n    organizationId: string;\n    name: string;\n    accessAll: boolean;\n    externalId: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.name = this.getResponseProperty('Name');\n        this.accessAll = this.getResponseProperty('AccessAll');\n        this.externalId = this.getResponseProperty('ExternalId');\n    }\n}\n\nexport class GroupDetailsResponse extends GroupResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class IdentityTokenResponse extends BaseResponse {\n    accessToken: string;\n    expiresIn: number;\n    refreshToken: string;\n    tokenType: string;\n\n    resetMasterPassword: boolean;\n    privateKey: string;\n    key: string;\n    twoFactorToken: string;\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.accessToken = response.access_token;\n        this.expiresIn = response.expires_in;\n        this.refreshToken = response.refresh_token;\n        this.tokenType = response.token_type;\n\n        this.resetMasterPassword = this.getResponseProperty('ResetMasterPassword');\n        this.privateKey = this.getResponseProperty('PrivateKey');\n        this.key = this.getResponseProperty('Key');\n        this.twoFactorToken = this.getResponseProperty('TwoFactorToken');\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class IdentityTwoFactorResponse extends BaseResponse {\n    twoFactorProviders: TwoFactorProviderType[];\n    twoFactorProviders2 = new Map<TwoFactorProviderType, { [key: string]: string; }>();\n\n    constructor(response: any) {\n        super(response);\n        this.twoFactorProviders = this.getResponseProperty('TwoFactorProviders');\n        const twoFactorProviders2 = this.getResponseProperty('TwoFactorProviders2');\n        if (twoFactorProviders2 != null) {\n            for (const prop in twoFactorProviders2) {\n                if (twoFactorProviders2.hasOwnProperty(prop)) {\n                    this.twoFactorProviders2.set(parseInt(prop, null), twoFactorProviders2[prop]);\n                }\n            }\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class ListResponse<T> extends BaseResponse {\n    data: T[];\n    continuationToken: string;\n\n    constructor(response: any, t: new (dataResponse: any) => T) {\n        super(response);\n        const data = this.getResponseProperty('Data');\n        this.data = data == null ? [] : data.map((dr: any) => new t(dr));\n        this.continuationToken = this.getResponseProperty('ContinuationToken');\n    }\n}\n","import { OrganizationResponse } from './organizationResponse';\nimport {\n    BillingSubscriptionResponse,\n    BillingSubscriptionUpcomingInvoiceResponse,\n} from './subscriptionResponse';\n\nexport class OrganizationSubscriptionResponse extends OrganizationResponse {\n    storageName: string;\n    storageGb: number;\n    subscription: BillingSubscriptionResponse;\n    upcomingInvoice: BillingSubscriptionUpcomingInvoiceResponse;\n    expiration: string;\n\n    constructor(response: any) {\n        super(response);\n        this.storageName = this.getResponseProperty('StorageName');\n        this.storageGb = this.getResponseProperty('StorageGb');\n        const subscription = this.getResponseProperty('Subscription');\n        this.subscription = subscription == null ? null : new BillingSubscriptionResponse(subscription);\n        const upcomingInvoice = this.getResponseProperty('UpcomingInvoice');\n        this.upcomingInvoice = upcomingInvoice == null ? null :\n            new BillingSubscriptionUpcomingInvoiceResponse(upcomingInvoice);\n        this.expiration = this.getResponseProperty('Expiration');\n    }\n}\n","import { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nimport { BaseResponse } from './baseResponse';\nimport { SelectionReadOnlyResponse } from './selectionReadOnlyResponse';\n\nexport class OrganizationUserResponse extends BaseResponse {\n    id: string;\n    userId: string;\n    type: OrganizationUserType;\n    status: OrganizationUserStatusType;\n    accessAll: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.type = this.getResponseProperty('Type');\n        this.status = this.getResponseProperty('Status');\n        this.accessAll = this.getResponseProperty('AccessAll');\n    }\n}\n\nexport class OrganizationUserUserDetailsResponse extends OrganizationUserResponse {\n    name: string;\n    email: string;\n    twoFactorEnabled: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.email = this.getResponseProperty('Email');\n        this.twoFactorEnabled = this.getResponseProperty('TwoFactorEnabled');\n    }\n}\n\nexport class OrganizationUserDetailsResponse extends OrganizationUserResponse {\n    collections: SelectionReadOnlyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new SelectionReadOnlyResponse(c));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class PaymentResponse extends BaseResponse {\n    userProfile: ProfileResponse;\n    paymentIntentClientSecret: string;\n    success: boolean;\n\n    constructor(response: any) {\n        super(response);\n        const userProfile = this.getResponseProperty('UserProfile');\n        if (userProfile != null) {\n            this.userProfile = new ProfileResponse(userProfile);\n        }\n        this.paymentIntentClientSecret = this.getResponseProperty('PaymentIntentClientSecret');\n        this.success = this.getResponseProperty('Success');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class ProfileOrganizationResponse extends BaseResponse {\n    id: string;\n    name: string;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    key: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    ssoBound: boolean;\n    identifier: string;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.name = this.getResponseProperty('Name');\n        this.usePolicies = this.getResponseProperty('UsePolicies');\n        this.useGroups = this.getResponseProperty('UseGroups');\n        this.useDirectory = this.getResponseProperty('UseDirectory');\n        this.useEvents = this.getResponseProperty('UseEvents');\n        this.useTotp = this.getResponseProperty('UseTotp');\n        this.use2fa = this.getResponseProperty('Use2fa');\n        this.useApi = this.getResponseProperty('UseApi');\n        this.useBusinessPortal = this.getResponseProperty('UseBusinessPortal');\n        this.useSso = this.getResponseProperty('UseSso');\n        this.selfHost = this.getResponseProperty('SelfHost');\n        this.usersGetPremium = this.getResponseProperty('UsersGetPremium');\n        this.seats = this.getResponseProperty('Seats');\n        this.maxCollections = this.getResponseProperty('MaxCollections');\n        this.maxStorageGb = this.getResponseProperty('MaxStorageGb');\n        this.key = this.getResponseProperty('Key');\n        this.status = this.getResponseProperty('Status');\n        this.type = this.getResponseProperty('Type');\n        this.enabled = this.getResponseProperty('Enabled');\n        this.ssoBound = this.getResponseProperty('SsoBound');\n        this.identifier = this.getResponseProperty('Identifier');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { KdfType } from '../../enums/kdfType';\n\nexport class PreloginResponse extends BaseResponse {\n    kdf: KdfType;\n    kdfIterations: number;\n\n    constructor(response: any) {\n        super(response);\n        this.kdf = this.getResponseProperty('Kdf');\n        this.kdfIterations = this.getResponseProperty('KdfIterations');\n    }\n}\n","import { BaseResponse } from './baseResponse';\nimport { CipherResponse } from './cipherResponse';\nimport { CollectionDetailsResponse } from './collectionResponse';\nimport { DomainsResponse } from './domainsResponse';\nimport { FolderResponse } from './folderResponse';\nimport { PolicyResponse } from './policyResponse';\nimport { ProfileResponse } from './profileResponse';\n\nexport class SyncResponse extends BaseResponse {\n    profile?: ProfileResponse;\n    folders: FolderResponse[] = [];\n    collections: CollectionDetailsResponse[] = [];\n    ciphers: CipherResponse[] = [];\n    domains?: DomainsResponse;\n    policies?: PolicyResponse[] = [];\n\n    constructor(response: any) {\n        super(response);\n\n        const profile = this.getResponseProperty('Profile');\n        if (profile != null) {\n            this.profile = new ProfileResponse(profile);\n        }\n\n        const folders = this.getResponseProperty('Folders');\n        if (folders != null) {\n            this.folders = folders.map((f: any) => new FolderResponse(f));\n        }\n\n        const collections = this.getResponseProperty('Collections');\n        if (collections != null) {\n            this.collections = collections.map((c: any) => new CollectionDetailsResponse(c));\n        }\n\n        const ciphers = this.getResponseProperty('Ciphers');\n        if (ciphers != null) {\n            this.ciphers = ciphers.map((c: any) => new CipherResponse(c));\n        }\n\n        const domains = this.getResponseProperty('Domains');\n        if (domains != null) {\n            this.domains = new DomainsResponse(domains);\n        }\n\n        const policies = this.getResponseProperty('Policies');\n        if (policies != null) {\n            this.policies = policies.map((p: any) => new PolicyResponse(p));\n        }\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TaxInfoResponse extends BaseResponse {\n    taxId: string;\n    taxIdType: string;\n    line1: string;\n    line2: string;\n    city: string;\n    state: string;\n    country: string;\n    postalCode: string;\n\n    constructor(response: any) {\n        super(response);\n        this.taxId = this.getResponseProperty('TaxIdNumber');\n        this.taxIdType = this.getResponseProperty('TaxIdType');\n        this.line1 = this.getResponseProperty('Line1');\n        this.line2 = this.getResponseProperty('Line2');\n        this.city = this.getResponseProperty('City');\n        this.state = this.getResponseProperty('State');\n        this.postalCode = this.getResponseProperty('PostalCode');\n        this.country = this.getResponseProperty('Country');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorAuthenticatorResponse extends BaseResponse {\n    enabled: boolean;\n    key: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key = this.getResponseProperty('Key');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorDuoResponse extends BaseResponse {\n    enabled: boolean;\n    host: string;\n    secretKey: string;\n    integrationKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.host = this.getResponseProperty('Host');\n        this.secretKey = this.getResponseProperty('SecretKey');\n        this.integrationKey = this.getResponseProperty('IntegrationKey');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorEmailResponse extends BaseResponse {\n    enabled: boolean;\n    email: string;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.email = this.getResponseProperty('Email');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { TwoFactorProviderType } from '../../enums/twoFactorProviderType';\n\nexport class TwoFactorProviderResponse extends BaseResponse {\n    enabled: boolean;\n    type: TwoFactorProviderType;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.type = this.getResponseProperty('Type');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorRecoverResponse extends BaseResponse {\n    code: string;\n\n    constructor(response: any) {\n        super(response);\n        this.code = this.getResponseProperty('Code');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorU2fResponse extends BaseResponse {\n    enabled: boolean;\n    keys: KeyResponse[];\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        const keys = this.getResponseProperty('Keys');\n        this.keys = keys == null ? null : keys.map((k: any) => new KeyResponse(k));\n    }\n}\n\nexport class KeyResponse extends BaseResponse {\n    name: string;\n    id: number;\n    compromised: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.name = this.getResponseProperty('Name');\n        this.id = this.getResponseProperty('Id');\n        this.compromised = this.getResponseProperty('Compromised');\n    }\n}\n\nexport class ChallengeResponse extends BaseResponse {\n    userId: string;\n    appId: string;\n    challenge: string;\n    version: string;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.appId = this.getResponseProperty('AppId');\n        this.challenge = this.getResponseProperty('Challenge');\n        this.version = this.getResponseProperty('Version');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class TwoFactorYubiKeyResponse extends BaseResponse {\n    enabled: boolean;\n    key1: string;\n    key2: string;\n    key3: string;\n    key4: string;\n    key5: string;\n    nfc: boolean;\n\n    constructor(response: any) {\n        super(response);\n        this.enabled = this.getResponseProperty('Enabled');\n        this.key1 = this.getResponseProperty('Key1');\n        this.key2 = this.getResponseProperty('Key2');\n        this.key3 = this.getResponseProperty('Key3');\n        this.key4 = this.getResponseProperty('Key4');\n        this.key5 = this.getResponseProperty('Key5');\n        this.nfc = this.getResponseProperty('Nfc');\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nexport class UserKeyResponse extends BaseResponse {\n    userId: string;\n    publicKey: string;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.publicKey = this.getResponseProperty('PublicKey');\n    }\n}\n","/**\n * Use as a Decorator on async functions, it will limit how many times the function can be\n * in-flight at a time.\n *\n * Calls beyond the limit will be queued, and run when one of the active calls finishes\n */\nexport function throttle(limit: number, throttleKey: (args: any[]) => string) {\n    return <T>(target: any, propertyKey: string | symbol,\n        descriptor: TypedPropertyDescriptor<(...args: any[]) => Promise<T>>) => {\n        const originalMethod: () => Promise<T> = descriptor.value;\n        const allThrottles = new Map<any, Map<string, (() => void)[]>>();\n\n        const getThrottles = (obj: any) => {\n            let throttles = allThrottles.get(obj);\n            if (throttles != null) {\n                return throttles;\n            }\n            throttles = new Map<string, (() => void)[]>();\n            allThrottles.set(obj, throttles);\n            return throttles;\n        };\n\n        return {\n            value: function(...args: any[]) {\n                const throttles = getThrottles(this);\n                const argsThrottleKey = throttleKey(args);\n                let queue = throttles.get(argsThrottleKey);\n                if (queue == null) {\n                    queue = [];\n                    throttles.set(argsThrottleKey, queue);\n                }\n\n                return new Promise<T>((resolve, reject) => {\n                    const exec = () => {\n                        const onFinally = () => {\n                            queue.splice(queue.indexOf(exec), 1);\n                            if (queue.length >= limit) {\n                                queue[limit - 1]();\n                            } else if (queue.length === 0) {\n                                throttles.delete(argsThrottleKey);\n                                if (throttles.size === 0) {\n                                    allThrottles.delete(this);\n                                }\n                            }\n                        };\n                        originalMethod.apply(this, args).then((val: any) => {\n                            onFinally();\n                            return val;\n                        }).catch((err: any) => {\n                            onFinally();\n                            throw err;\n                        }).then(resolve, reject);\n                    };\n                    queue.push(exec);\n                    if (queue.length <= limit) {\n                        exec();\n                    }\n                });\n            },\n        };\n    };\n}\n","export class CipherBulkMoveRequest {\n    ids: string[];\n    folderId: string;\n\n    constructor(ids: string[], folderId: string) {\n        this.ids = ids == null ? [] : ids;\n        this.folderId = folderId;\n    }\n}\n","export class CipherBulkRestoreRequest {\n    ids: string[];\n\n    constructor(ids: string[]) {\n        this.ids = ids == null ? [] : ids;\n    }\n}\n","import { CipherWithIdRequest } from './cipherWithIdRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherBulkShareRequest {\n    ciphers: CipherWithIdRequest[];\n    collectionIds: string[];\n\n    constructor(ciphers: Cipher[], collectionIds: string[]) {\n        if (ciphers != null) {\n            this.ciphers = [];\n            ciphers.forEach((c) => {\n                this.ciphers.push(new CipherWithIdRequest(c));\n            });\n        }\n        this.collectionIds = collectionIds;\n    }\n}\n","import { CipherRequest } from './cipherRequest';\n\nimport { Cipher } from '../domain/cipher';\n\nexport class CipherShareRequest {\n    cipher: CipherRequest;\n    collectionIds: string[];\n\n    constructor(cipher: Cipher) {\n        this.cipher = new CipherRequest(cipher);\n        this.collectionIds = cipher.collectionIds;\n    }\n}\n","import { CipherView } from '../view';\n\nconst CacheTTL = 3000;\n\nexport class SortedCiphersCache {\n    private readonly sortedCiphersByUrl: Map<string, Ciphers> = new Map<string, Ciphers>();\n    private readonly timeouts: Map<string, any> = new Map<string, any>();\n\n    constructor(private readonly comparator: (a: CipherView, b: CipherView) => number) { }\n\n    isCached(url: string) {\n        return this.sortedCiphersByUrl.has(url);\n    }\n\n    addCiphers(url: string, ciphers: CipherView[]) {\n        ciphers.sort(this.comparator);\n        this.sortedCiphersByUrl.set(url, new Ciphers(ciphers));\n        this.resetTimer(url);\n    }\n\n    getLastUsed(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getLastUsed() : null;\n    }\n\n    getNext(url: string) {\n        this.resetTimer(url);\n        return this.isCached(url) ? this.sortedCiphersByUrl.get(url).getNext() : null;\n    }\n\n    clear() {\n        this.sortedCiphersByUrl.clear();\n        this.timeouts.clear();\n    }\n\n    private resetTimer(url: string) {\n        clearTimeout(this.timeouts.get(url));\n        this.timeouts.set(url, setTimeout(() => {\n            this.sortedCiphersByUrl.delete(url);\n            this.timeouts.delete(url);\n        }, CacheTTL));\n    }\n}\n\nclass Ciphers {\n    lastUsedIndex = -1;\n\n    constructor(private readonly ciphers: CipherView[]) { }\n\n    getLastUsed() {\n        this.lastUsedIndex = Math.max(this.lastUsedIndex, 0);\n        return this.ciphers[this.lastUsedIndex];\n    }\n\n    getNext() {\n        const nextIndex = (this.lastUsedIndex + 1) % this.ciphers.length;\n        this.lastUsedIndex = nextIndex;\n        return this.ciphers[nextIndex];\n    }\n}\n","export class TreeNode<T extends ITreeNodeObject> {\n    parent: T;\n    node: T;\n    children: TreeNode<T>[] = [];\n\n    constructor(node: T, name: string, parent: T) {\n        this.parent = parent;\n        this.node = node;\n        this.node.name = name;\n    }\n}\n\nexport interface ITreeNodeObject {\n    id: string;\n    name: string;\n}\n","import { SymmetricCryptoKey } from './symmetricCryptoKey';\n\nexport class EncryptedObject {\n    iv: ArrayBuffer;\n    data: ArrayBuffer;\n    mac: ArrayBuffer;\n    key: SymmetricCryptoKey;\n}\n","export class EnvironmentUrls {\n    base: string;\n    api: string;\n    identity: string;\n    events: string;\n}\n","import { FolderData } from '../data/folderData';\n\nimport { FolderView } from '../view/folderView';\n\nimport { CipherString } from './cipherString';\nimport Domain from './domainBase';\n\nexport class Folder extends Domain {\n    id: string;\n    name: CipherString;\n    revisionDate: Date;\n\n    constructor(obj?: FolderData, alreadyEncrypted: boolean = false) {\n        super();\n        if (obj == null) {\n            return;\n        }\n\n        this.buildDomainModel(this, obj, {\n            id: null,\n            name: null,\n        }, alreadyEncrypted, ['id']);\n\n        this.revisionDate = obj.revisionDate != null ? new Date(obj.revisionDate) : null;\n    }\n\n    decrypt(): Promise<FolderView> {\n        return this.decryptObj(new FolderView(this), {\n            name: null,\n        }, null);\n    }\n}\n","export class GeneratedPasswordHistory {\n    password: string;\n    date: number;\n\n    constructor(password: string, date: number) {\n        this.password = password;\n        this.date = date;\n    }\n}\n","import Domain from './domainBase';\n\nexport class PasswordGeneratorPolicyOptions extends Domain {\n    defaultType: string = '';\n    minLength: number = 0;\n    useUppercase: boolean = false;\n    useLowercase: boolean = false;\n    useNumbers: boolean = false;\n    numberCount: number = 0;\n    useSpecial: boolean = false;\n    specialCount: number = 0;\n    minNumberWords: number = 0;\n    capitalize: boolean = false;\n    includeNumber: boolean = false;\n\n    inEffect() {\n        return this.defaultType !== '' ||\n            this.minLength > 0 ||\n            this.numberCount > 0 ||\n            this.specialCount > 0 ||\n            this.useUppercase ||\n            this.useLowercase ||\n            this.useNumbers ||\n            this.useSpecial ||\n            this.minNumberWords > 0 ||\n            this.capitalize ||\n            this.includeNumber;\n    }\n}\n","import { ProfileOrganizationResponse } from '../response/profileOrganizationResponse';\n\nimport { OrganizationUserStatusType } from '../../enums/organizationUserStatusType';\nimport { OrganizationUserType } from '../../enums/organizationUserType';\n\nexport class OrganizationData {\n    id: string;\n    name: string;\n    status: OrganizationUserStatusType;\n    type: OrganizationUserType;\n    enabled: boolean;\n    usePolicies: boolean;\n    useGroups: boolean;\n    useDirectory: boolean;\n    useEvents: boolean;\n    useTotp: boolean;\n    use2fa: boolean;\n    useApi: boolean;\n    useBusinessPortal: boolean;\n    useSso: boolean;\n    selfHost: boolean;\n    usersGetPremium: boolean;\n    seats: number;\n    maxCollections: number;\n    maxStorageGb?: number;\n    ssoBound: boolean;\n    identifier: string;\n\n    constructor(response: ProfileOrganizationResponse) {\n        this.id = response.id;\n        this.name = response.name;\n        this.status = response.status;\n        this.type = response.type;\n        this.enabled = response.enabled;\n        this.usePolicies = response.usePolicies;\n        this.useGroups = response.useGroups;\n        this.useDirectory = response.useDirectory;\n        this.useEvents = response.useEvents;\n        this.useTotp = response.useTotp;\n        this.use2fa = response.use2fa;\n        this.useApi = response.useApi;\n        this.useBusinessPortal = response.useBusinessPortal;\n        this.useSso = response.useSso;\n        this.selfHost = response.selfHost;\n        this.usersGetPremium = response.usersGetPremium;\n        this.seats = response.seats;\n        this.maxCollections = response.maxCollections;\n        this.maxStorageGb = response.maxStorageGb;\n        this.ssoBound = response.ssoBound;\n        this.identifier = response.identifier;\n    }\n}\n","import { I18nService as BaseI18nService } from 'jslib/services/i18n.service';\n\nexport class I18nService extends BaseI18nService {\n    constructor(systemLanguage: string, localesDirectory: string) {\n        super(systemLanguage || 'en-US', localesDirectory, async (formattedLocale: string) => {\n            const filePath = this.localesDirectory + '/' + formattedLocale + '/messages.json?cache=' +\n                process.env.CACHE_TAG;\n            const localesResult = await fetch(filePath);\n            const locales = await localesResult.json();\n            return locales;\n        });\n\n        this.supportedTranslationLocales = [\n            'en', 'ca', 'cs', 'da', 'de', 'el', 'en-GB', 'es', 'et', 'fr', 'he', 'it', 'ja', 'ko', 'lv', 'ml', 'nb',\n            'nl', 'pl', 'pt-PT', 'pt-BR', 'ru', 'sk', 'sv', 'uk', 'zh-CN', 'zh-TW',\n        ];\n    }\n}\n","import { StorageService } from 'jslib/abstractions/storage.service';\n\nexport class MemoryStorageService implements StorageService {\n    private store = new Map<string, any>();\n\n    get<T>(key: string): Promise<T> {\n        if (this.store.has(key)) {\n            const obj = this.store.get(key);\n            return Promise.resolve(obj as T);\n        }\n        return Promise.resolve(null);\n    }\n\n    save(key: string, obj: any): Promise<any> {\n        if (obj == null) {\n            return this.remove(key);\n        }\n        this.store.set(key, obj);\n        return Promise.resolve();\n    }\n\n    remove(key: string): Promise<any> {\n        this.store.delete(key);\n        return Promise.resolve();\n    }\n}\n","import Swal, { SweetAlertIcon } from 'sweetalert2/src/sweetalert2.js';\n\nimport { DeviceType } from 'jslib/enums/deviceType';\n\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { MessagingService } from 'jslib/abstractions/messaging.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\n\nimport { Utils } from 'jslib/misc/utils';\n\nexport class WebPlatformUtilsService implements PlatformUtilsService {\n    identityClientId: string = 'web';\n\n    private browserCache: DeviceType = null;\n\n    constructor(private i18nService: I18nService, private messagingService: MessagingService) { }\n\n    getDevice(): DeviceType {\n        if (this.browserCache != null) {\n            return this.browserCache;\n        }\n\n        if (navigator.userAgent.indexOf(' Firefox/') !== -1 || navigator.userAgent.indexOf(' Gecko/') !== -1) {\n            this.browserCache = DeviceType.FirefoxBrowser;\n        } else if (navigator.userAgent.indexOf(' OPR/') >= 0) {\n            this.browserCache = DeviceType.OperaBrowser;\n        } else if (navigator.userAgent.indexOf(' Edg/') !== -1) {\n            this.browserCache = DeviceType.EdgeBrowser;\n        } else if (navigator.userAgent.indexOf(' Vivaldi/') !== -1) {\n            this.browserCache = DeviceType.VivaldiBrowser;\n        } else if (navigator.userAgent.indexOf(' Safari/') !== -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n            this.browserCache = DeviceType.SafariBrowser;\n        } else if ((window as any).chrome && navigator.userAgent.indexOf(' Chrome/') !== -1) {\n            this.browserCache = DeviceType.ChromeBrowser;\n        } else if (navigator.userAgent.indexOf(' Trident/') !== -1) {\n            this.browserCache = DeviceType.IEBrowser;\n        } else {\n            this.browserCache = DeviceType.UnknownBrowser;\n        }\n\n        return this.browserCache;\n    }\n\n    getDeviceString(): string {\n        const device = DeviceType[this.getDevice()].toLowerCase();\n        return device.replace('browser', '');\n    }\n\n    isFirefox(): boolean {\n        return this.getDevice() === DeviceType.FirefoxBrowser;\n    }\n\n    isChrome(): boolean {\n        return this.getDevice() === DeviceType.ChromeBrowser;\n    }\n\n    isEdge(): boolean {\n        return this.getDevice() === DeviceType.EdgeBrowser;\n    }\n\n    isOpera(): boolean {\n        return this.getDevice() === DeviceType.OperaBrowser;\n    }\n\n    isVivaldi(): boolean {\n        return this.getDevice() === DeviceType.VivaldiBrowser;\n    }\n\n    isSafari(): boolean {\n        return this.getDevice() === DeviceType.SafariBrowser;\n    }\n\n    isIE(): boolean {\n        return this.getDevice() === DeviceType.IEBrowser;\n    }\n\n    isMacAppStore(): boolean {\n        return false;\n    }\n\n    analyticsId(): string {\n        return 'UA-81915606-3';\n    }\n\n    isViewOpen(): Promise<boolean> {\n        return Promise.resolve(false);\n    }\n\n    lockTimeout(): number {\n        return null;\n    }\n\n    launchUri(uri: string, options?: any): void {\n        const a = document.createElement('a');\n        a.href = uri;\n        if (options == null || !options.sameWindow) {\n            a.target = '_blank';\n            a.rel = 'noreferrer noopener';\n        }\n        a.classList.add('d-none');\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    }\n\n    saveFile(win: Window, blobData: any, blobOptions: any, fileName: string): void {\n        let blob: Blob = null;\n        let type: string = null;\n        const fileNameLower = fileName.toLowerCase();\n        let doDownload = true;\n        if (fileNameLower.endsWith('.pdf')) {\n            type = 'application/pdf';\n            doDownload = false;\n        } else if (fileNameLower.endsWith('.xlsx')) {\n            type = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        } else if (fileNameLower.endsWith('.docx')) {\n            type = 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';\n        } else if (fileNameLower.endsWith('.pptx')) {\n            type = 'application/vnd.openxmlformats-officedocument.presentationml.presentation';\n        } else if (fileNameLower.endsWith('.csv')) {\n            type = 'text/csv';\n        } else if (fileNameLower.endsWith('.png')) {\n            type = 'image/png';\n        } else if (fileNameLower.endsWith('.jpg') || fileNameLower.endsWith('.jpeg')) {\n            type = 'image/jpeg';\n        } else if (fileNameLower.endsWith('.gif')) {\n            type = 'image/gif';\n        }\n        if (type != null) {\n            blobOptions = blobOptions || {};\n            if (blobOptions.type == null) {\n                blobOptions.type = type;\n            }\n        }\n        if (blobOptions != null && !this.isIE()) {\n            blob = new Blob([blobData], blobOptions);\n        } else {\n            blob = new Blob([blobData]);\n        }\n        if (navigator.msSaveOrOpenBlob) {\n            navigator.msSaveBlob(blob, fileName);\n        } else {\n            const a = win.document.createElement('a');\n            if (doDownload) {\n                a.download = fileName;\n            } else {\n                a.target = '_blank';\n            }\n            a.href = URL.createObjectURL(blob);\n            a.style.position = 'fixed';\n            win.document.body.appendChild(a);\n            a.click();\n            win.document.body.removeChild(a);\n        }\n    }\n\n    getApplicationVersion(): string {\n        return process.env.APPLICATION_VERSION || '-';\n    }\n\n    supportsU2f(win: Window): boolean {\n        if (win != null && (win as any).u2f != null) {\n            return true;\n        }\n        return this.isChrome() || ((this.isOpera() || this.isVivaldi()) && !Utils.isMobileBrowser);\n    }\n\n    supportsDuo(): boolean {\n        return true;\n    }\n\n    showToast(type: 'error' | 'success' | 'warning' | 'info', title: string, text: string | string[],\n        options?: any): void {\n        this.messagingService.send('showToast', {\n            text: text,\n            title: title,\n            type: type,\n            options: options,\n        });\n    }\n\n    async showDialog(text: string, title?: string, confirmText?: string, cancelText?: string, type?: string) {\n        let iconClasses: string = null;\n        if (type != null) {\n            // If you add custom types to this part, the type to SweetAlertIcon cast below needs to be changed.\n            switch (type) {\n                case 'success':\n                    iconClasses = 'fa-check text-success';\n                    break;\n                case 'warning':\n                    iconClasses = 'fa-warning text-warning';\n                    break;\n                case 'error':\n                    iconClasses = 'fa-bolt text-danger';\n                    break;\n                case 'info':\n                    iconClasses = 'fa-info-circle text-info';\n                    break;\n                default:\n                    break;\n            }\n        }\n\n        const iconHtmlStr = iconClasses != null ? `<i class=\"swal-custom-icon fa ${iconClasses}\"></i>` : undefined;\n        const confirmed = await Swal.fire({\n            heightAuto: false,\n            buttonsStyling: false,\n            icon: type as SweetAlertIcon, // required to be any of the SweetAlertIcons to output the iconHtml.\n            iconHtml: iconHtmlStr,\n            text: text,\n            title: title,\n            showCancelButton: (cancelText != null),\n            cancelButtonText: cancelText,\n            showConfirmButton: true,\n            confirmButtonText: confirmText == null ? this.i18nService.t('ok') : confirmText,\n        });\n\n        return confirmed.value;\n    }\n\n    eventTrack(action: string, label?: string, options?: any) {\n        this.messagingService.send('analyticsEventTrack', {\n            action: action,\n            label: label,\n            options: options,\n        });\n    }\n\n    isDev(): boolean {\n        return process.env.ENV === 'development';\n    }\n\n    isSelfHost(): boolean {\n        return process.env.SELF_HOST.toString() === 'true';\n    }\n\n    copyToClipboard(text: string, options?: any): void {\n        let win = window;\n        let doc = window.document;\n        if (options && (options.window || options.win)) {\n            win = options.window || options.win;\n            doc = win.document;\n        } else if (options && options.doc) {\n            doc = options.doc;\n        }\n        if ((win as any).clipboardData && (win as any).clipboardData.setData) {\n            // IE specific code path to prevent textarea being shown while dialog is visible.\n            (win as any).clipboardData.setData('Text', text);\n        } else if (doc.queryCommandSupported && doc.queryCommandSupported('copy')) {\n            const textarea = doc.createElement('textarea');\n            textarea.textContent = text;\n            // Prevent scrolling to bottom of page in MS Edge.\n            textarea.style.position = 'fixed';\n            let copyEl = doc.body;\n            // For some reason copy command won't work when modal is open if appending to body\n            if (doc.body.classList.contains('modal-open')) {\n                copyEl = doc.body.querySelector<HTMLElement>('.modal');\n            }\n            copyEl.appendChild(textarea);\n            textarea.select();\n            try {\n                // Security exception may be thrown by some browsers.\n                doc.execCommand('copy');\n            } catch (e) {\n                // tslint:disable-next-line\n                console.warn('Copy to clipboard failed.', e);\n            } finally {\n                copyEl.removeChild(textarea);\n            }\n        }\n    }\n\n    readFromClipboard(options?: any): Promise<string> {\n        throw new Error('Cannot read from clipboard on web.');\n    }\n\n    supportsBiometric() {\n        return Promise.resolve(false);\n    }\n\n    authenticateBiometric() {\n        return Promise.resolve(false);\n    }\n}\n","import { AppIdService } from '../abstractions/appId.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\nimport { StorageService } from '../abstractions/storage.service';\n\nimport { ConstantsService } from '../services/constants.service';\n\nimport { DeviceType } from '../enums/deviceType';\n\nconst GaObj = 'ga';\n\nexport const AnalyticsIds = {\n    [DeviceType.ChromeExtension]: 'UA-81915606-6',\n    [DeviceType.FirefoxExtension]: 'UA-81915606-7',\n    [DeviceType.OperaExtension]: 'UA-81915606-8',\n    [DeviceType.EdgeExtension]: 'UA-81915606-9',\n    [DeviceType.VivaldiExtension]: 'UA-81915606-15',\n    [DeviceType.SafariExtension]: 'UA-81915606-16',\n    [DeviceType.WindowsDesktop]: 'UA-81915606-17',\n    [DeviceType.LinuxDesktop]: 'UA-81915606-19',\n    [DeviceType.MacOsDesktop]: 'UA-81915606-18',\n};\n\nexport class Analytics {\n    private gaTrackingId: string = null;\n    private defaultDisabled = false;\n    private appVersion: string;\n\n    constructor(win: Window, private gaFilter?: () => boolean,\n        private platformUtilsService?: PlatformUtilsService, private storageService?: StorageService,\n        private appIdService?: AppIdService, private dependencyResolver?: () => any) {\n        if (dependencyResolver != null) {\n            const deps = dependencyResolver();\n            if (platformUtilsService == null && deps.platformUtilsService) {\n                this.platformUtilsService = deps.platformUtilsService as PlatformUtilsService;\n            }\n            if (storageService == null && deps.storageService) {\n                this.storageService = deps.storageService as StorageService;\n            }\n            if (appIdService == null && deps.appIdService) {\n                this.appIdService = deps.appIdService as AppIdService;\n            }\n        }\n\n        this.appVersion = this.platformUtilsService.getApplicationVersion();\n        this.defaultDisabled = this.platformUtilsService.getDevice() === DeviceType.FirefoxExtension ||\n            this.platformUtilsService.isMacAppStore();\n        this.gaTrackingId = this.platformUtilsService.analyticsId();\n\n        (win as any).GoogleAnalyticsObject = GaObj;\n        (win as any)[GaObj] = async (action: string, param1: any, param2?: any) => {\n            await this.ga(action, param1, param2);\n        };\n    }\n\n    async ga(action: string, param1: any, param2?: any) {\n        return;\n\n        if (this.gaFilter != null && this.gaFilter()) {\n            return;\n        }\n\n        const disabled = await this.storageService.get<boolean>(ConstantsService.disableGaKey);\n        if ((this.defaultDisabled && disabled == null) || disabled != null && disabled) {\n            return;\n        }\n\n        if (action !== 'send' || !param1) {\n            return;\n        }\n\n        const gaAnonAppId = await this.appIdService.getAnonymousAppId();\n        const version = encodeURIComponent(this.appVersion);\n        let message = 'v=1&tid=' + this.gaTrackingId + '&cid=' + gaAnonAppId + '&cd1=' + version;\n\n        if (param1 === 'pageview' && param2) {\n            message += this.gaTrackPageView(param2);\n        } else if (typeof param1 === 'object' && param1.hitType === 'pageview') {\n            message += this.gaTrackPageView(param1.page);\n        } else if (param1 === 'event' && param2) {\n            message += this.gaTrackEvent(param2);\n        } else if (typeof param1 === 'object' && param1.hitType === 'event') {\n            message += this.gaTrackEvent(param1);\n        }\n\n        const request = new XMLHttpRequest();\n        request.open('POST', 'https://www.google-analytics.com/collect', true);\n        request.send(message);\n    }\n\n    private gaTrackEvent(options: any) {\n        return '&t=event&ec=' + (options.eventCategory ? encodeURIComponent(options.eventCategory) : 'Event') +\n            '&ea=' + encodeURIComponent(options.eventAction) +\n            (options.eventLabel ? '&el=' + encodeURIComponent(options.eventLabel) : '') +\n            (options.eventValue ? '&ev=' + encodeURIComponent(options.eventValue) : '') +\n            (options.page ? '&dp=' + this.cleanPagePath(options.page) : '');\n    }\n\n    private gaTrackPageView(pagePath: string) {\n        return '&t=pageview&dp=' + this.cleanPagePath(pagePath);\n    }\n\n    private cleanPagePath(pagePath: string) {\n        const paramIndex = pagePath.indexOf('?');\n        if (paramIndex > -1) {\n            pagePath = pagePath.substring(0, paramIndex);\n        }\n        if (pagePath.indexOf('!/') === 0 || pagePath.indexOf('#/') === 0) {\n            pagePath = pagePath.substring(1);\n        }\n        const pathParts = pagePath.split('/');\n        const newPathParts: string[] = [];\n        pathParts.forEach((p) => {\n            if (p.match(/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i)) {\n                newPathParts.push('__guid__');\n            } else {\n                newPathParts.push(p);\n            }\n        });\n        return encodeURIComponent(newPathParts.join('/'));\n    }\n}\n","import { EventType } from '../enums/eventType';\n\nimport { EventData } from '../models/data/eventData';\n\nimport { EventRequest } from '../models/request/eventRequest';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { EventService as EventServiceAbstraction } from '../abstractions/event.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { ConstantsService } from './constants.service';\n\nexport class EventService implements EventServiceAbstraction {\n    private inited = false;\n\n    constructor(private storageService: StorageService, private apiService: ApiService,\n        private userService: UserService, private cipherService: CipherService) { }\n\n    init(checkOnInterval: boolean) {\n        if (this.inited) {\n            return;\n        }\n\n        this.inited = true;\n        if (checkOnInterval) {\n            this.uploadEvents();\n            setInterval(() => this.uploadEvents(), 60 * 1000); // check every 60 seconds\n        }\n    }\n\n    async collect(eventType: EventType, cipherId: string = null, uploadImmediately = false): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const organizations = await this.userService.getAllOrganizations();\n        if (organizations == null) {\n            return;\n        }\n        const orgIds = new Set<string>(organizations.filter((o) => o.useEvents).map((o) => o.id));\n        if (orgIds.size === 0) {\n            return;\n        }\n        if (cipherId != null) {\n            const cipher = await this.cipherService.get(cipherId);\n            if (cipher == null || cipher.organizationId == null || !orgIds.has(cipher.organizationId)) {\n                return;\n            }\n        }\n        let eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null) {\n            eventCollection = [];\n        }\n        const event = new EventData();\n        event.type = eventType;\n        event.cipherId = cipherId;\n        event.date = new Date().toISOString();\n        eventCollection.push(event);\n        await this.storageService.save(ConstantsService.eventCollectionKey, eventCollection);\n        if (uploadImmediately) {\n            await this.uploadEvents();\n        }\n    }\n\n    async uploadEvents(): Promise<any> {\n        const authed = await this.userService.isAuthenticated();\n        if (!authed) {\n            return;\n        }\n        const eventCollection = await this.storageService.get<EventData[]>(ConstantsService.eventCollectionKey);\n        if (eventCollection == null || eventCollection.length === 0) {\n            return;\n        }\n        const request = eventCollection.map((e) => {\n            const req = new EventRequest();\n            req.type = e.type;\n            req.cipherId = e.cipherId;\n            req.date = e.date;\n            return req;\n        });\n        try {\n            await this.apiService.postEventsCollect(request);\n            this.clearEvents();\n        } catch { }\n    }\n\n    async clearEvents(): Promise<any> {\n        await this.storageService.remove(ConstantsService.eventCollectionKey);\n    }\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventData {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import { EventType } from '../../enums/eventType';\n\nexport class EventRequest {\n    type: EventType;\n    cipherId: string;\n    date: string;\n}\n","import * as papa from 'papaparse';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { ExportService as ExportServiceAbstraction } from '../abstractions/export.service';\nimport { FolderService } from '../abstractions/folder.service';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { Cipher } from '../models/domain/cipher';\nimport { Collection } from '../models/domain/collection';\n\nimport { CipherData } from '../models/data/cipherData';\nimport { CollectionData } from '../models/data/collectionData';\nimport { CollectionDetailsResponse } from '../models/response/collectionResponse';\n\nimport { CipherWithIds as CipherExport } from '../models/export/cipherWithIds';\nimport { CollectionWithId as CollectionExport } from '../models/export/collectionWithId';\nimport { FolderWithId as FolderExport } from '../models/export/folderWithId';\n\nexport class ExportService implements ExportServiceAbstraction {\n    constructor(private folderService: FolderService, private cipherService: CipherService,\n        private apiService: ApiService) { }\n\n    async getExport(format: 'csv' | 'json' = 'csv'): Promise<string> {\n        let decFolders: FolderView[] = [];\n        let decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.folderService.getAllDecrypted().then((folders) => {\n            decFolders = folders;\n        }));\n\n        promises.push(this.cipherService.getAllDecrypted().then((ciphers) => {\n            decCiphers = ciphers;\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const foldersMap = new Map<string, FolderView>();\n            decFolders.forEach((f) => {\n                if (f.id != null) {\n                    foldersMap.set(f.id, f);\n                }\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach((c) => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n                if (c.organizationId != null) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.folder = c.folderId != null && foldersMap.has(c.folderId) ?\n                    foldersMap.get(c.folderId).name : null;\n                cipher.favorite = c.favorite ? 1 : null;\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                folders: [],\n                items: [],\n            };\n\n            decFolders.forEach((f) => {\n                if (f.id == null) {\n                    return;\n                }\n                const folder = new FolderExport();\n                folder.build(f);\n                jsonDoc.folders.push(folder);\n            });\n\n            decCiphers.forEach((c) => {\n                if (c.organizationId != null) {\n                    return;\n                }\n                const cipher = new CipherExport();\n                cipher.build(c);\n                cipher.collectionIds = null;\n                jsonDoc.items.push(cipher);\n            });\n\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    async getOrganizationExport(organizationId: string, format: 'csv' | 'json' = 'csv'): Promise<string> {\n        const decCollections: CollectionView[] = [];\n        const decCiphers: CipherView[] = [];\n        const promises = [];\n\n        promises.push(this.apiService.getCollections(organizationId).then((collections) => {\n            const collectionPromises: any = [];\n            if (collections != null && collections.data != null && collections.data.length > 0) {\n                collections.data.forEach((c) => {\n                    const collection = new Collection(new CollectionData(c as CollectionDetailsResponse));\n                    collectionPromises.push(collection.decrypt().then((decCol) => {\n                        decCollections.push(decCol);\n                    }));\n                });\n            }\n            return Promise.all(collectionPromises);\n        }));\n\n        promises.push(this.apiService.getCiphersOrganization(organizationId).then((ciphers) => {\n            const cipherPromises: any = [];\n            if (ciphers != null && ciphers.data != null && ciphers.data.length > 0) {\n                ciphers.data.forEach((c) => {\n                    const cipher = new Cipher(new CipherData(c));\n                    cipherPromises.push(cipher.decrypt().then((decCipher) => {\n                        decCiphers.push(decCipher);\n                    }));\n                });\n            }\n            return Promise.all(cipherPromises);\n        }));\n\n        await Promise.all(promises);\n\n        if (format === 'csv') {\n            const collectionsMap = new Map<string, CollectionView>();\n            decCollections.forEach((c) => {\n                collectionsMap.set(c.id, c);\n            });\n\n            const exportCiphers: any[] = [];\n            decCiphers.forEach((c) => {\n                // only export logins and secure notes\n                if (c.type !== CipherType.Login && c.type !== CipherType.SecureNote) {\n                    return;\n                }\n\n                const cipher: any = {};\n                cipher.collections = [];\n                if (c.collectionIds != null) {\n                    cipher.collections = c.collectionIds.filter((id) => collectionsMap.has(id))\n                        .map((id) => collectionsMap.get(id).name);\n                }\n                this.buildCommonCipher(cipher, c);\n                exportCiphers.push(cipher);\n            });\n\n            return papa.unparse(exportCiphers);\n        } else {\n            const jsonDoc: any = {\n                collections: [],\n                items: [],\n            };\n\n            decCollections.forEach((c) => {\n                const collection = new CollectionExport();\n                collection.build(c);\n                jsonDoc.collections.push(collection);\n            });\n\n            decCiphers.forEach((c) => {\n                const cipher = new CipherExport();\n                cipher.build(c);\n                jsonDoc.items.push(cipher);\n            });\n            return JSON.stringify(jsonDoc, null, '  ');\n        }\n    }\n\n    getFileName(prefix: string = null, extension: string = 'csv'): string {\n        const now = new Date();\n        const dateString =\n            now.getFullYear() + '' + this.padNumber(now.getMonth() + 1, 2) + '' + this.padNumber(now.getDate(), 2) +\n            this.padNumber(now.getHours(), 2) + '' + this.padNumber(now.getMinutes(), 2) +\n            this.padNumber(now.getSeconds(), 2);\n\n        return 'bitwarden' + (prefix ? ('_' + prefix) : '') + '_export_' + dateString + '.' + extension;\n    }\n\n    private padNumber(num: number, width: number, padCharacter: string = '0'): string {\n        const numString = num.toString();\n        return numString.length >= width ? numString :\n            new Array(width - numString.length + 1).join(padCharacter) + numString;\n    }\n\n    private buildCommonCipher(cipher: any, c: CipherView) {\n        cipher.type = null;\n        cipher.name = c.name;\n        cipher.notes = c.notes;\n        cipher.fields = null;\n        // Login props\n        cipher.login_uri = null;\n        cipher.login_username = null;\n        cipher.login_password = null;\n        cipher.login_totp = null;\n\n        if (c.fields) {\n            c.fields.forEach((f: any) => {\n                if (!cipher.fields) {\n                    cipher.fields = '';\n                } else {\n                    cipher.fields += '\\n';\n                }\n\n                cipher.fields += ((f.name || '') + ': ' + f.value);\n            });\n        }\n\n        switch (c.type) {\n            case CipherType.Login:\n                cipher.type = 'login';\n                cipher.login_username = c.login.username;\n                cipher.login_password = c.login.password;\n                cipher.login_totp = c.login.totp;\n\n                if (c.login.uris) {\n                    cipher.login_uri = [];\n                    c.login.uris.forEach((u) => {\n                        cipher.login_uri.push(u.uri);\n                    });\n                }\n                break;\n            case CipherType.SecureNote:\n                cipher.type = 'note';\n                break;\n            default:\n                return;\n        }\n\n        return cipher;\n    }\n}\n","import { CipherType } from '../../enums/cipherType';\n\nimport { CipherView } from '../view/cipherView';\n\nimport { Card } from './card';\nimport { Field } from './field';\nimport { Identity } from './identity';\nimport { Login } from './login';\nimport { SecureNote } from './secureNote';\n\nexport class Cipher {\n    static template(): Cipher {\n        const req = new Cipher();\n        req.organizationId = null;\n        req.folderId = null;\n        req.type = CipherType.Login;\n        req.name = 'Item name';\n        req.notes = 'Some notes about this item.';\n        req.favorite = false;\n        req.fields = [];\n        req.login = null;\n        req.secureNote = null;\n        req.card = null;\n        req.identity = null;\n        return req;\n    }\n\n    static toView(req: Cipher, view = new CipherView()) {\n        view.type = req.type;\n        view.folderId = req.folderId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        view.name = req.name;\n        view.notes = req.notes;\n        view.favorite = req.favorite;\n\n        if (req.fields != null) {\n            view.fields = req.fields.map((f) => Field.toView(f));\n        }\n\n        switch (req.type) {\n            case CipherType.Login:\n                view.login = Login.toView(req.login);\n                break;\n            case CipherType.SecureNote:\n                view.secureNote = SecureNote.toView(req.secureNote);\n                break;\n            case CipherType.Card:\n                view.card = Card.toView(req.card);\n                break;\n            case CipherType.Identity:\n                view.identity = Identity.toView(req.identity);\n                break;\n        }\n\n        return view;\n    }\n\n    type: CipherType;\n    folderId: string;\n    organizationId: string;\n    name: string;\n    notes: string;\n    favorite: boolean;\n    fields: Field[];\n    login: Login;\n    secureNote: SecureNote;\n    card: Card;\n    identity: Identity;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CipherView) {\n        this.organizationId = o.organizationId;\n        this.folderId = o.folderId;\n        this.type = o.type;\n        this.name = o.name;\n        this.notes = o.notes;\n        this.favorite = o.favorite;\n\n        if (o.fields != null) {\n            this.fields = o.fields.map((f) => new Field(f));\n        }\n\n        switch (o.type) {\n            case CipherType.Login:\n                this.login = new Login(o.login);\n                break;\n            case CipherType.SecureNote:\n                this.secureNote = new SecureNote(o.secureNote);\n                break;\n            case CipherType.Card:\n                this.card = new Card(o.card);\n                break;\n            case CipherType.Identity:\n                this.identity = new Identity(o.identity);\n                break;\n        }\n    }\n}\n","import { CardView } from '../view/cardView';\n\nexport class Card {\n    static template(): Card {\n        const req = new Card();\n        req.cardholderName = 'John Doe';\n        req.brand = 'visa';\n        req.number = '4242424242424242';\n        req.expMonth = '04';\n        req.expYear = '2023';\n        req.code = '123';\n        return req;\n    }\n\n    static toView(req: Card, view = new CardView()) {\n        view.cardholderName = req.cardholderName;\n        view.brand = req.brand;\n        view.number = req.number;\n        view.expMonth = req.expMonth;\n        view.expYear = req.expYear;\n        view.code = req.code;\n        return view;\n    }\n\n    cardholderName: string;\n    brand: string;\n    number: string;\n    expMonth: string;\n    expYear: string;\n    code: string;\n\n    constructor(o?: CardView) {\n        if (o == null) {\n            return;\n        }\n\n        this.cardholderName = o.cardholderName;\n        this.brand = o.brand;\n        this.number = o.number;\n        this.expMonth = o.expMonth;\n        this.expYear = o.expYear;\n        this.code = o.code;\n    }\n}\n","import { FieldType } from '../../enums/fieldType';\n\nimport { FieldView } from '../view/fieldView';\n\nexport class Field {\n    static template(): Field {\n        const req = new Field();\n        req.name = 'Field name';\n        req.value = 'Some value';\n        req.type = FieldType.Text;\n        return req;\n    }\n\n    static toView(req: Field, view = new FieldView()) {\n        view.type = req.type;\n        view.value = req.value;\n        view.name = req.name;\n        return view;\n    }\n\n    name: string;\n    value: string;\n    type: FieldType;\n\n    constructor(o?: FieldView) {\n        if (o == null) {\n            return;\n        }\n\n        this.name = o.name;\n        this.value = o.value;\n        this.type = o.type;\n    }\n}\n","import { IdentityView } from '../view/identityView';\n\nexport class Identity {\n    static template(): Identity {\n        const req = new Identity();\n        req.title = 'Mr';\n        req.firstName = 'John';\n        req.middleName = 'William';\n        req.lastName = 'Doe';\n        req.address1 = '123 Any St';\n        req.address2 = 'Apt #123';\n        req.address3 = null;\n        req.city = 'New York';\n        req.state = 'NY';\n        req.postalCode = '10001';\n        req.country = 'US';\n        req.company = 'Acme Inc.';\n        req.email = 'john@company.com';\n        req.phone = '5555551234';\n        req.ssn = '000-123-4567';\n        req.username = 'jdoe';\n        req.passportNumber = 'US-123456789';\n        req.licenseNumber = 'D123-12-123-12333';\n        return req;\n    }\n\n    static toView(req: Identity, view = new IdentityView()) {\n        view.title = req.title;\n        view.firstName = req.firstName;\n        view.middleName = req.middleName;\n        view.lastName = req.lastName;\n        view.address1 = req.address1;\n        view.address2 = req.address2;\n        view.address3 = req.address3;\n        view.city = req.city;\n        view.state = req.state;\n        view.postalCode = req.postalCode;\n        view.country = req.country;\n        view.company = req.company;\n        view.email = req.email;\n        view.phone = req.phone;\n        view.ssn = req.ssn;\n        view.username = req.username;\n        view.passportNumber = req.passportNumber;\n        view.licenseNumber = req.licenseNumber;\n        return view;\n    }\n\n    title: string;\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    address1: string;\n    address2: string;\n    address3: string;\n    city: string;\n    state: string;\n    postalCode: string;\n    country: string;\n    company: string;\n    email: string;\n    phone: string;\n    ssn: string;\n    username: string;\n    passportNumber: string;\n    licenseNumber: string;\n\n    constructor(o?: IdentityView) {\n        if (o == null) {\n            return;\n        }\n\n        this.title = o.title;\n        this.firstName = o.firstName;\n        this.middleName = o.middleName;\n        this.lastName = o.lastName;\n        this.address1 = o.address1;\n        this.address2 = o.address2;\n        this.address3 = o.address3;\n        this.city = o.city;\n        this.state = o.state;\n        this.postalCode = o.postalCode;\n        this.country = o.country;\n        this.company = o.company;\n        this.email = o.email;\n        this.phone = o.phone;\n        this.ssn = o.ssn;\n        this.username = o.username;\n        this.passportNumber = o.passportNumber;\n        this.licenseNumber = o.licenseNumber;\n    }\n}\n","import { LoginUri } from './loginUri';\n\nimport { LoginView } from '../view/loginView';\n\nexport class Login {\n    static template(): Login {\n        const req = new Login();\n        req.uris = [];\n        req.username = 'jdoe';\n        req.password = 'myp@ssword123';\n        req.totp = 'JBSWY3DPEHPK3PXP';\n        return req;\n    }\n\n    static toView(req: Login, view = new LoginView()) {\n        if (req.uris != null) {\n            view.uris = req.uris.map((u) => LoginUri.toView(u));\n        }\n        view.username = req.username;\n        view.password = req.password;\n        view.totp = req.totp;\n        return view;\n    }\n\n    uris: LoginUri[];\n    username: string;\n    password: string;\n    totp: string;\n\n    constructor(o?: LoginView) {\n        if (o == null) {\n            return;\n        }\n\n        if (o.uris != null) {\n            this.uris = o.uris.map((u) => new LoginUri(u));\n        }\n\n        this.username = o.username;\n        this.password = o.password;\n        this.totp = o.totp;\n    }\n}\n","import { UriMatchType } from '../../enums/uriMatchType';\n\nimport { LoginUriView } from '../view/loginUriView';\n\nexport class LoginUri {\n    static template(): LoginUri {\n        const req = new LoginUri();\n        req.uri = 'https://google.com';\n        req.match = null;\n        return req;\n    }\n\n    static toView(req: LoginUri, view = new LoginUriView()) {\n        view.uri = req.uri;\n        view.match = req.match;\n        return view;\n    }\n\n    uri: string;\n    match: UriMatchType = null;\n\n    constructor(o?: LoginUriView) {\n        if (o == null) {\n            return;\n        }\n\n        this.uri = o.uri;\n        this.match = o.match;\n    }\n}\n","import { SecureNoteType } from '../../enums/secureNoteType';\n\nimport { SecureNoteView } from '../view/secureNoteView';\n\nexport class SecureNote {\n    static template(): SecureNote {\n        const req = new SecureNote();\n        req.type = SecureNoteType.Generic;\n        return req;\n    }\n\n    static toView(req: SecureNote, view = new SecureNoteView()) {\n        view.type = req.type;\n        return view;\n    }\n\n    type: SecureNoteType;\n\n    constructor(o?: SecureNoteView) {\n        if (o == null) {\n            return;\n        }\n\n        this.type = o.type;\n    }\n}\n","import { CollectionView } from '../view/collectionView';\n\nexport class Collection {\n    static template(): Collection {\n        const req = new Collection();\n        req.organizationId = '00000000-0000-0000-0000-000000000000';\n        req.name = 'Collection name';\n        req.externalId = null;\n        return req;\n    }\n\n    static toView(req: Collection, view = new CollectionView()) {\n        view.name = req.name;\n        view.externalId = req.externalId;\n        if (view.organizationId == null) {\n            view.organizationId = req.organizationId;\n        }\n        return view;\n    }\n\n    organizationId: string;\n    name: string;\n    externalId: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: CollectionView) {\n        this.organizationId = o.organizationId;\n        this.name = o.name;\n        this.externalId = o.externalId;\n    }\n}\n","import { FolderView } from '../view/folderView';\n\nexport class Folder {\n    static template(): Folder {\n        const req = new Folder();\n        req.name = 'Folder name';\n        return req;\n    }\n\n    static toView(req: Folder, view = new FolderView()) {\n        view.name = req.name;\n        return view;\n    }\n\n    name: string;\n\n    // Use build method instead of ctor so that we can control order of JSON stringify for pretty print\n    build(o: FolderView) {\n        this.name = o.name;\n    }\n}\n","import { ApiService } from '../abstractions/api.service';\nimport { CipherService } from '../abstractions/cipher.service';\nimport { CollectionService } from '../abstractions/collection.service';\nimport { FolderService } from '../abstractions/folder.service';\nimport { I18nService } from '../abstractions/i18n.service';\nimport {\n    ImportOption,\n    ImportService as ImportServiceAbstraction,\n} from '../abstractions/import.service';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { Utils } from '../misc/utils';\n\nimport { CipherRequest } from '../models/request/cipherRequest';\nimport { CollectionRequest } from '../models/request/collectionRequest';\nimport { FolderRequest } from '../models/request/folderRequest';\nimport { ImportCiphersRequest } from '../models/request/importCiphersRequest';\nimport { ImportOrganizationCiphersRequest } from '../models/request/importOrganizationCiphersRequest';\nimport { KvpRequest } from '../models/request/kvpRequest';\n\nimport { CipherView } from '../models/view/cipherView';\n\nimport { AscendoCsvImporter } from '../importers/ascendoCsvImporter';\nimport { AvastCsvImporter } from '../importers/avastCsvImporter';\nimport { AvastJsonImporter } from '../importers/avastJsonImporter';\nimport { AviraCsvImporter } from '../importers/aviraCsvImporter';\nimport { BitwardenCsvImporter } from '../importers/bitwardenCsvImporter';\nimport { BitwardenJsonImporter } from '../importers/bitwardenJsonImporter';\nimport { BlackBerryCsvImporter } from '../importers/blackBerryCsvImporter';\nimport { BlurCsvImporter } from '../importers/blurCsvImporter';\nimport { ButtercupCsvImporter } from '../importers/buttercupCsvImporter';\nimport { ChromeCsvImporter } from '../importers/chromeCsvImporter';\nimport { ClipperzHtmlImporter } from '../importers/clipperzHtmlImporter';\nimport { CodebookCsvImporter } from '../importers/codebookCsvImporter';\nimport { DashlaneJsonImporter } from '../importers/dashlaneJsonImporter';\nimport { EncryptrCsvImporter } from '../importers/encryptrCsvImporter';\nimport { EnpassCsvImporter } from '../importers/enpassCsvImporter';\nimport { EnpassJsonImporter } from '../importers/enpassJsonImporter';\nimport { FirefoxCsvImporter } from '../importers/firefoxCsvImporter';\nimport { FSecureFskImporter } from '../importers/fsecureFskImporter';\nimport { GnomeJsonImporter } from '../importers/gnomeJsonImporter';\nimport { Importer } from '../importers/importer';\nimport { KasperskyTxtImporter } from '../importers/kasperskyTxtImporter';\nimport { KeePass2XmlImporter } from '../importers/keepass2XmlImporter';\nimport { KeePassXCsvImporter } from '../importers/keepassxCsvImporter';\nimport { KeeperCsvImporter } from '../importers/keeperCsvImporter';\nimport { LastPassCsvImporter } from '../importers/lastpassCsvImporter';\nimport { LogMeOnceCsvImporter } from '../importers/logMeOnceCsvImporter';\nimport { MeldiumCsvImporter } from '../importers/meldiumCsvImporter';\nimport { MSecureCsvImporter } from '../importers/msecureCsvImporter';\nimport { MykiCsvImporter } from '../importers/mykiCsvImporter';\nimport { OnePassword1PifImporter } from '../importers/onepassword1PifImporter';\nimport { OnePasswordWinCsvImporter } from '../importers/onepasswordWinCsvImporter';\nimport { PadlockCsvImporter } from '../importers/padlockCsvImporter';\nimport { PassKeepCsvImporter } from '../importers/passkeepCsvImporter';\nimport { PassmanJsonImporter } from '../importers/passmanJsonImporter';\nimport { PasspackCsvImporter } from '../importers/passpackCsvImporter';\nimport { PasswordAgentCsvImporter } from '../importers/passwordAgentCsvImporter';\nimport { PasswordBossJsonImporter } from '../importers/passwordBossJsonImporter';\nimport { PasswordDragonXmlImporter } from '../importers/passwordDragonXmlImporter';\nimport { PasswordSafeXmlImporter } from '../importers/passwordSafeXmlImporter';\nimport { PasswordWalletTxtImporter } from '../importers/passwordWalletTxtImporter';\nimport { RememBearCsvImporter } from '../importers/rememBearCsvImporter';\nimport { RoboFormCsvImporter } from '../importers/roboformCsvImporter';\nimport { SafeInCloudXmlImporter } from '../importers/safeInCloudXmlImporter';\nimport { SaferPassCsvImporter } from '../importers/saferpassCsvImport';\nimport { SecureSafeCsvImporter } from '../importers/secureSafeCsvImporter';\nimport { SplashIdCsvImporter } from '../importers/splashIdCsvImporter';\nimport { StickyPasswordXmlImporter } from '../importers/stickyPasswordXmlImporter';\nimport { TrueKeyCsvImporter } from '../importers/truekeyCsvImporter';\nimport { UpmCsvImporter } from '../importers/upmCsvImporter';\nimport { YotiCsvImporter } from '../importers/yotiCsvImporter';\nimport { ZohoVaultCsvImporter } from '../importers/zohoVaultCsvImporter';\n\nexport class ImportService implements ImportServiceAbstraction {\n    featuredImportOptions = [\n        { id: 'bitwardenjson', name: 'Bitwarden (json)' },\n        { id: 'bitwardencsv', name: 'Bitwarden (csv)' },\n        { id: 'lastpasscsv', name: 'LastPass (csv)' },\n        { id: 'chromecsv', name: 'Chrome (csv)' },\n        { id: 'firefoxcsv', name: 'Firefox (csv)' },\n        { id: 'keepass2xml', name: 'KeePass 2 (xml)' },\n        { id: '1password1pif', name: '1Password (1pif)' },\n        { id: 'dashlanejson', name: 'Dashlane (json)' },\n    ];\n\n    regularImportOptions: ImportOption[] = [\n        { id: 'keepassxcsv', name: 'KeePassX (csv)' },\n        { id: '1passwordwincsv', name: '1Password 6 and 7 Windows (csv)' },\n        { id: 'roboformcsv', name: 'RoboForm (csv)' },\n        { id: 'keepercsv', name: 'Keeper (csv)' },\n        { id: 'enpasscsv', name: 'Enpass (csv)' },\n        { id: 'enpassjson', name: 'Enpass (json)' },\n        { id: 'safeincloudxml', name: 'SafeInCloud (xml)' },\n        { id: 'pwsafexml', name: 'Password Safe (xml)' },\n        { id: 'stickypasswordxml', name: 'Sticky Password (xml)' },\n        { id: 'msecurecsv', name: 'mSecure (csv)' },\n        { id: 'truekeycsv', name: 'True Key (csv)' },\n        { id: 'passwordbossjson', name: 'Password Boss (json)' },\n        { id: 'zohovaultcsv', name: 'Zoho Vault (csv)' },\n        { id: 'splashidcsv', name: 'SplashID (csv)' },\n        { id: 'passworddragonxml', name: 'Password Dragon (xml)' },\n        { id: 'padlockcsv', name: 'Padlock (csv)' },\n        { id: 'passboltcsv', name: 'Passbolt (csv)' },\n        { id: 'clipperzhtml', name: 'Clipperz (html)' },\n        { id: 'aviracsv', name: 'Avira (csv)' },\n        { id: 'saferpasscsv', name: 'SaferPass (csv)' },\n        { id: 'upmcsv', name: 'Universal Password Manager (csv)' },\n        { id: 'ascendocsv', name: 'Ascendo DataVault (csv)' },\n        { id: 'meldiumcsv', name: 'Meldium (csv)' },\n        { id: 'passkeepcsv', name: 'PassKeep (csv)' },\n        { id: 'operacsv', name: 'Opera (csv)' },\n        { id: 'vivaldicsv', name: 'Vivaldi (csv)' },\n        { id: 'gnomejson', name: 'GNOME Passwords and Keys/Seahorse (json)' },\n        { id: 'blurcsv', name: 'Blur (csv)' },\n        { id: 'passwordagentcsv', name: 'Password Agent (csv)' },\n        { id: 'passpackcsv', name: 'Passpack (csv)' },\n        { id: 'passmanjson', name: 'Passman (json)' },\n        { id: 'avastcsv', name: 'Avast Passwords (csv)' },\n        { id: 'avastjson', name: 'Avast Passwords (json)' },\n        { id: 'fsecurefsk', name: 'F-Secure KEY (fsk)' },\n        { id: 'kasperskytxt', name: 'Kaspersky Password Manager (txt)' },\n        { id: 'remembearcsv', name: 'RememBear (csv)' },\n        { id: 'passwordwallettxt', name: 'PasswordWallet (txt)' },\n        { id: 'mykicsv', name: 'Myki (csv)' },\n        { id: 'securesafecsv', name: 'SecureSafe (csv)' },\n        { id: 'logmeoncecsv', name: 'LogMeOnce (csv)' },\n        { id: 'blackberrycsv', name: 'BlackBerry Password Keeper (csv)' },\n        { id: 'buttercupcsv', name: 'Buttercup (csv)' },\n        { id: 'codebookcsv', name: 'Codebook (csv)' },\n        { id: 'encryptrcsv', name: 'Encryptr (csv)' },\n        { id: 'yoticsv', name: 'Yoti (csv)' },\n    ];\n\n    constructor(private cipherService: CipherService, private folderService: FolderService,\n        private apiService: ApiService, private i18nService: I18nService,\n        private collectionService: CollectionService) { }\n\n    getImportOptions(): ImportOption[] {\n        return this.featuredImportOptions.concat(this.regularImportOptions);\n    }\n\n    async import(importer: Importer, fileContents: string, organizationId: string = null): Promise<Error> {\n        const importResult = await importer.parse(fileContents);\n        if (importResult.success) {\n            if (importResult.folders.length === 0 && importResult.ciphers.length === 0) {\n                return new Error(this.i18nService.t('importNothingError'));\n            } else if (importResult.ciphers.length > 0) {\n                const halfway = Math.floor(importResult.ciphers.length / 2);\n                const last = importResult.ciphers.length - 1;\n\n                if (this.badData(importResult.ciphers[0]) &&\n                    this.badData(importResult.ciphers[halfway]) &&\n                    this.badData(importResult.ciphers[last])) {\n                    return new Error(this.i18nService.t('importFormatError'));\n                }\n            }\n            await this.postImport(importResult, organizationId);\n            return null;\n        } else {\n            return new Error(this.i18nService.t('importFormatError'));\n        }\n    }\n\n    getImporter(format: string, organization = false): Importer {\n        const importer = this.getImporterInstance(format);\n        if (importer == null) {\n            return null;\n        }\n        importer.organization = organization;\n        return importer;\n    }\n\n    private getImporterInstance(format: string) {\n        if (format == null || format === '') {\n            return null;\n        }\n\n        switch (format) {\n            case 'bitwardencsv':\n                return new BitwardenCsvImporter();\n            case 'bitwardenjson':\n                return new BitwardenJsonImporter();\n            case 'lastpasscsv':\n            case 'passboltcsv':\n                return new LastPassCsvImporter();\n            case 'keepassxcsv':\n                return new KeePassXCsvImporter();\n            case 'aviracsv':\n                return new AviraCsvImporter();\n            case 'blurcsv':\n                return new BlurCsvImporter();\n            case 'safeincloudxml':\n                return new SafeInCloudXmlImporter();\n            case 'padlockcsv':\n                return new PadlockCsvImporter();\n            case 'keepass2xml':\n                return new KeePass2XmlImporter();\n            case 'chromecsv':\n            case 'operacsv':\n            case 'vivaldicsv':\n                return new ChromeCsvImporter();\n            case 'firefoxcsv':\n                return new FirefoxCsvImporter();\n            case 'upmcsv':\n                return new UpmCsvImporter();\n            case 'saferpasscsv':\n                return new SaferPassCsvImporter();\n            case 'meldiumcsv':\n                return new MeldiumCsvImporter();\n            case '1password1pif':\n                return new OnePassword1PifImporter();\n            case '1passwordwincsv':\n                return new OnePasswordWinCsvImporter();\n            case 'keepercsv':\n                return new KeeperCsvImporter();\n            case 'passworddragonxml':\n                return new PasswordDragonXmlImporter();\n            case 'enpasscsv':\n                return new EnpassCsvImporter();\n            case 'enpassjson':\n                return new EnpassJsonImporter();\n            case 'pwsafexml':\n                return new PasswordSafeXmlImporter();\n            case 'dashlanejson':\n                return new DashlaneJsonImporter();\n            case 'msecurecsv':\n                return new MSecureCsvImporter();\n            case 'stickypasswordxml':\n                return new StickyPasswordXmlImporter();\n            case 'truekeycsv':\n                return new TrueKeyCsvImporter();\n            case 'clipperzhtml':\n                return new ClipperzHtmlImporter();\n            case 'roboformcsv':\n                return new RoboFormCsvImporter();\n            case 'ascendocsv':\n                return new AscendoCsvImporter();\n            case 'passwordbossjson':\n                return new PasswordBossJsonImporter();\n            case 'zohovaultcsv':\n                return new ZohoVaultCsvImporter();\n            case 'splashidcsv':\n                return new SplashIdCsvImporter();\n            case 'passkeepcsv':\n                return new PassKeepCsvImporter();\n            case 'gnomejson':\n                return new GnomeJsonImporter();\n            case 'passwordagentcsv':\n                return new PasswordAgentCsvImporter();\n            case 'passpackcsv':\n                return new PasspackCsvImporter();\n            case 'passmanjson':\n                return new PassmanJsonImporter();\n            case 'avastcsv':\n                return new AvastCsvImporter();\n            case 'avastjson':\n                return new AvastJsonImporter();\n            case 'fsecurefsk':\n                return new FSecureFskImporter();\n            case 'kasperskytxt':\n                return new KasperskyTxtImporter();\n            case 'remembearcsv':\n                return new RememBearCsvImporter();\n            case 'passwordwallettxt':\n                return new PasswordWalletTxtImporter();\n            case 'mykicsv':\n                return new MykiCsvImporter();\n            case 'securesafecsv':\n                return new SecureSafeCsvImporter();\n            case 'logmeoncecsv':\n                return new LogMeOnceCsvImporter();\n            case 'blackberrycsv':\n                return new BlackBerryCsvImporter();\n            case 'buttercupcsv':\n                return new ButtercupCsvImporter();\n            case 'codebookcsv':\n                return new CodebookCsvImporter();\n            case 'encryptrcsv':\n                return new EncryptrCsvImporter();\n            case 'yoticsv':\n                return new YotiCsvImporter();\n            default:\n                return null;\n        }\n    }\n\n    private async postImport(importResult: ImportResult, organizationId: string = null) {\n        if (organizationId == null) {\n            const request = new ImportCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.folders != null) {\n                for (let i = 0; i < importResult.folders.length; i++) {\n                    const f = await this.folderService.encrypt(importResult.folders[i]);\n                    request.folders.push(new FolderRequest(f));\n                }\n            }\n            if (importResult.folderRelationships != null) {\n                importResult.folderRelationships.forEach((r) =>\n                    request.folderRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportCiphers(request);\n        } else {\n            const request = new ImportOrganizationCiphersRequest();\n            for (let i = 0; i < importResult.ciphers.length; i++) {\n                importResult.ciphers[i].organizationId = organizationId;\n                const c = await this.cipherService.encrypt(importResult.ciphers[i]);\n                request.ciphers.push(new CipherRequest(c));\n            }\n            if (importResult.collections != null) {\n                for (let i = 0; i < importResult.collections.length; i++) {\n                    importResult.collections[i].organizationId = organizationId;\n                    const c = await this.collectionService.encrypt(importResult.collections[i]);\n                    request.collections.push(new CollectionRequest(c));\n                }\n            }\n            if (importResult.collectionRelationships != null) {\n                importResult.collectionRelationships.forEach((r) =>\n                    request.collectionRelationships.push(new KvpRequest(r[0], r[1])));\n            }\n            return await this.apiService.postImportOrganizationCiphers(organizationId, request);\n        }\n    }\n\n    private badData(c: CipherView) {\n        return (c.name == null || c.name === '--') &&\n            (c.type === CipherType.Login && c.login != null && Utils.isNullOrWhitespace(c.login.password));\n    }\n}\n","import { CipherRequest } from './cipherRequest';\nimport { FolderRequest } from './folderRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    folders: FolderRequest[] = [];\n    folderRelationships: KvpRequest<number, number>[] = [];\n}\n","import { CipherRequest } from './cipherRequest';\nimport { CollectionRequest } from './collectionRequest';\nimport { KvpRequest } from './kvpRequest';\n\nexport class ImportOrganizationCiphersRequest {\n    ciphers: CipherRequest[] = [];\n    collections: CollectionRequest[] = [];\n    collectionRelationships: KvpRequest<number, number>[] = [];\n}\n","export class KvpRequest<TK, TV> {\n    key: TK;\n    value: TV;\n\n    constructor(key: TK, value: TV) {\n        this.key = key;\n        this.value = value;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AscendoCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 2) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const val: string = value[i + 2];\n                    const field: string = value[i + 1];\n                    if (this.isNullOrWhitespace(val) || this.isNullOrWhitespace(field)) {\n                        continue;\n                    }\n\n                    const fieldLower = field.toLowerCase();\n                    if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.password = this.getValueOrDefault(val);\n                    } else if (cipher.login.username == null &&\n                        this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.username = this.getValueOrDefault(val);\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(fieldLower) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                    } else {\n                        this.processKvp(cipher, field, val);\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AvastCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.login.uris = this.makeUriArray(value.web);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.username = this.getValueOrDefault(value.login);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class AvastJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        if (results.logins != null) {\n            results.logins.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.pwd);\n                cipher.login.username = this.getValueOrDefault(value.loginName);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.notes != null) {\n            results.notes.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.label);\n                cipher.notes = this.getValueOrDefault(value.text);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (results.cards != null) {\n            results.cards.forEach((value: any) => {\n                const cipher = this.initLoginCipher();\n                cipher.type = CipherType.Card;\n                cipher.name = this.getValueOrDefault(value.custName);\n                cipher.notes = this.getValueOrDefault(value.note);\n                cipher.card.cardholderName = this.getValueOrDefault(value.holderName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (value.expirationDate != null) {\n                    if (value.expirationDate.month != null) {\n                        cipher.card.expMonth = value.expirationDate.month + '';\n                    }\n                    if (value.expirationDate.year != null) {\n                        cipher.card.expYear = value.expirationDate.year + '';\n                    }\n                }\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class AviraCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name,\n                this.getValueOrDefault(this.nameFromUrl(value.website), '--'));\n            cipher.login.uris = this.makeUriArray(value.website);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.username) && !this.isNullOrWhitespace(value.secondary_username)) {\n                cipher.login.username = value.secondary_username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.notes = this.getValueOrDefault(value.secondary_username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherView } from '../models/view/cipherView';\nimport { CollectionView } from '../models/view/collectionView';\nimport { FieldView } from '../models/view/fieldView';\nimport { FolderView } from '../models/view/folderView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class BitwardenCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.organization && !this.isNullOrWhitespace(value.collections)) {\n                const collections = (value.collections as string).split(',');\n                collections.forEach((col) => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === col) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = col;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization) {\n                this.processFolder(result, value.folder);\n            }\n\n            const cipher = new CipherView();\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.favorite, '0') !== '0' ? true : false;\n            cipher.type = CipherType.Login;\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.name = this.getValueOrDefault(value.name, '--');\n\n            if (!this.isNullOrWhitespace(value.fields)) {\n                const fields = this.splitNewLine(value.fields);\n                for (let i = 0; i < fields.length; i++) {\n                    if (this.isNullOrWhitespace(fields[i])) {\n                        continue;\n                    }\n\n                    const delimPosition = fields[i].lastIndexOf(': ');\n                    if (delimPosition === -1) {\n                        continue;\n                    }\n\n                    if (cipher.fields == null) {\n                        cipher.fields = [];\n                    }\n\n                    const field = new FieldView();\n                    field.name = fields[i].substr(0, delimPosition);\n                    field.value = null;\n                    field.type = FieldType.Text;\n                    if (fields[i].length > (delimPosition + 2)) {\n                        field.value = fields[i].substr(delimPosition + 2);\n                    }\n                    cipher.fields.push(field);\n                }\n            }\n\n            const valueType = value.type != null ? value.type.toLowerCase() : null;\n            switch (valueType) {\n                case 'note':\n                    cipher.type = CipherType.SecureNote;\n                    cipher.secureNote = new SecureNoteView();\n                    cipher.secureNote.type = SecureNoteType.Generic;\n                    break;\n                default:\n                    cipher.type = CipherType.Login;\n                    cipher.login = new LoginView();\n                    cipher.login.totp = this.getValueOrDefault(value.login_totp || value.totp);\n                    cipher.login.username = this.getValueOrDefault(value.login_username || value.username);\n                    cipher.login.password = this.getValueOrDefault(value.login_password || value.password);\n                    const uris = this.parseSingleRowCsv(value.login_uri || value.uri);\n                    cipher.login.uris = this.makeUriArray(uris);\n                    break;\n            }\n\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherWithIds } from '../models/export/cipherWithIds';\nimport { CollectionWithId } from '../models/export/collectionWithId';\nimport { FolderWithId } from '../models/export/folderWithId';\n\nexport class BitwardenJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null || results.items.length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        const groupingsMap = new Map<string, number>();\n        if (this.organization && results.collections != null) {\n            results.collections.forEach((c: CollectionWithId) => {\n                const collection = CollectionWithId.toView(c);\n                if (collection != null) {\n                    collection.id = null;\n                    collection.organizationId = null;\n                    groupingsMap.set(c.id, result.collections.length);\n                    result.collections.push(collection);\n                }\n            });\n        } else if (!this.organization && results.folders != null) {\n            results.folders.forEach((f: FolderWithId) => {\n                const folder = FolderWithId.toView(f);\n                if (folder != null) {\n                    folder.id = null;\n                    groupingsMap.set(f.id, result.folders.length);\n                    result.folders.push(folder);\n                }\n            });\n        }\n\n        results.items.forEach((c: CipherWithIds) => {\n            const cipher = CipherWithIds.toView(c);\n            // reset ids incase they were set for some reason\n            cipher.id = null;\n            cipher.folderId = null;\n            cipher.organizationId = null;\n            cipher.collectionIds = null;\n\n            // make sure password history is limited\n            if (cipher.passwordHistory != null && cipher.passwordHistory.length > 5) {\n                cipher.passwordHistory = cipher.passwordHistory.slice(0, 5);\n            }\n\n            if (!this.organization && c.folderId != null && groupingsMap.has(c.folderId)) {\n                result.folderRelationships.push([result.ciphers.length, groupingsMap.get(c.folderId)]);\n            } else if (this.organization && c.collectionIds != null) {\n                c.collectionIds.forEach((cId) => {\n                    if (groupingsMap.has(cId)) {\n                        result.collectionRelationships.push([result.ciphers.length, groupingsMap.get(cId)]);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlackBerryCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.grouping === 'list') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.favorite = value.fav === '1';\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.extra);\n            if (value.grouping !== 'note') {\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class BlurCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.label === 'null') {\n                value.label = null;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.label,\n                this.getValueOrDefault(this.nameFromUrl(value.domain), '--'));\n            cipher.login.uris = this.makeUriArray(value.domain);\n            cipher.login.password = this.getValueOrDefault(value.password);\n\n            if (this.isNullOrWhitespace(value.email) && !this.isNullOrWhitespace(value.username)) {\n                cipher.login.username = value.username;\n            } else {\n                cipher.login.username = this.getValueOrDefault(value.email);\n                cipher.notes = this.getValueOrDefault(value.username);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst OfficialProps = [\n    '!group_id', '!group_name', 'title', 'username', 'password', 'URL', 'id',\n];\n\nexport class ButtercupCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            this.processFolder(result, this.getValueOrDefault(value['!group_name']));\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.title, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            let processingCustomFields = false;\n            for (const prop in value) {\n                if (value.hasOwnProperty(prop)) {\n                    if (!processingCustomFields && OfficialProps.indexOf(prop) === -1) {\n                        processingCustomFields = true;\n                    }\n                    if (processingCustomFields) {\n                        this.processKvp(cipher, prop, value[prop]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ChromeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class ClipperzHtmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const textarea = doc.querySelector('textarea');\n        if (textarea == null || this.isNullOrWhitespace(textarea.textContent)) {\n            result.errorMessage = 'Missing textarea.';\n            result.success = false;\n            return result;\n        }\n\n        const entries = JSON.parse(textarea.textContent);\n        entries.forEach((entry: any) => {\n            const cipher = this.initLoginCipher();\n            if (!this.isNullOrWhitespace(entry.label)) {\n                cipher.name = entry.label.split(' ')[0];\n            }\n            if (entry.data != null && !this.isNullOrWhitespace(entry.data.notes)) {\n                cipher.notes = entry.data.notes.split('\\\\n').join('\\n');\n            }\n\n            if (entry.currentVersion != null && entry.currentVersion.fields != null) {\n                for (const property in entry.currentVersion.fields) {\n                    if (!entry.currentVersion.fields.hasOwnProperty(property)) {\n                        continue;\n                    }\n\n                    const field = entry.currentVersion.fields[property];\n                    const actionType = field.actionType != null ? field.actionType.toLowerCase() : null;\n                    switch (actionType) {\n                        case 'password':\n                            cipher.login.password = this.getValueOrDefault(field.value);\n                            break;\n                        case 'email':\n                        case 'username':\n                        case 'user':\n                        case 'name':\n                            cipher.login.username = this.getValueOrDefault(field.value);\n                            break;\n                        case 'url':\n                            cipher.login.uris = this.makeUriArray(field.value);\n                            break;\n                        default:\n                            const labelLower = field.label != null ? field.label.toLowerCase() : null;\n                            if (cipher.login.password == null && this.passwordFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.password = this.getValueOrDefault(field.value);\n                            } else if (cipher.login.username == null &&\n                                this.usernameFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.username = this.getValueOrDefault(field.value);\n                            } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                                this.uriFieldNames.indexOf(labelLower) > -1) {\n                                cipher.login.uris = this.makeUriArray(field.value);\n                            } else {\n                                this.processKvp(cipher, field.label, field.value);\n                            }\n                            break;\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class CodebookCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            this.processFolder(result, this.getValueOrDefault(value.Category));\n\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite) === 'True';\n            cipher.name = this.getValueOrDefault(value.Entry, '--');\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.login.username = this.getValueOrDefault(value.Username, value.Email);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.totp = this.getValueOrDefault(value.TOTP);\n            cipher.login.uris = this.makeUriArray(value.Website);\n\n            if (!this.isNullOrWhitespace(value.Username)) {\n                this.processKvp(cipher, 'Email', value.Email);\n            }\n            this.processKvp(cipher, 'Phone', value.Phone);\n            this.processKvp(cipher, 'PIN', value.PIN);\n            this.processKvp(cipher, 'Account', value.Account);\n            this.processKvp(cipher, 'Date', value.Date);\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst HandledResults = new Set(['ADDRESS', 'AUTHENTIFIANT', 'BANKSTATEMENT', 'IDCARD', 'IDENTITY',\n    'PAYMENTMEANS_CREDITCARD', 'PAYMENTMEAN_PAYPAL', 'EMAIL']);\n\nexport class DashlaneJsonImporter extends BaseImporter implements Importer {\n    private result: ImportResult;\n\n    parse(data: string): ImportResult {\n        this.result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        if (results.ADDRESS != null) {\n            this.processAddress(results.ADDRESS);\n        }\n        if (results.AUTHENTIFIANT != null) {\n            this.processAuth(results.AUTHENTIFIANT);\n        }\n        if (results.BANKSTATEMENT != null) {\n            this.processNote(results.BANKSTATEMENT, 'BankAccountName');\n        }\n        if (results.IDCARD != null) {\n            this.processNote(results.IDCARD, 'Fullname');\n        }\n        if (results.PAYMENTMEANS_CREDITCARD != null) {\n            this.processCard(results.PAYMENTMEANS_CREDITCARD);\n        }\n        if (results.IDENTITY != null) {\n            this.processIdentity(results.IDENTITY);\n        }\n\n        for (const key in results) {\n            if (results.hasOwnProperty(key) && !HandledResults.has(key)) {\n                this.processNote(results[key], null, 'Generic Note');\n            }\n        }\n\n        this.result.success = true;\n        return this.result;\n    }\n\n    private processAuth(results: any[]) {\n        results.forEach((credential: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(credential.title);\n\n            cipher.login.username = this.getValueOrDefault(credential.login,\n                this.getValueOrDefault(credential.secondaryLogin));\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.domain);\n            cipher.notes += this.getValueOrDefault(credential.note, '');\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processIdentity(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.fullName, '');\n            const nameParts = cipher.name.split(' ');\n            if (nameParts.length > 0) {\n                cipher.identity.firstName = this.getValueOrDefault(nameParts[0]);\n            }\n            if (nameParts.length === 2) {\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[1]);\n            } else if (nameParts.length === 3) {\n                cipher.identity.middleName = this.getValueOrDefault(nameParts[1]);\n                cipher.identity.lastName = this.getValueOrDefault(nameParts[2]);\n            }\n            cipher.identity.username = this.getValueOrDefault(obj.pseudo);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processAddress(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.identity = new IdentityView();\n            cipher.type = CipherType.Identity;\n            cipher.name = this.getValueOrDefault(obj.addressName);\n            cipher.identity.address1 = this.getValueOrDefault(obj.addressFull);\n            cipher.identity.city = this.getValueOrDefault(obj.city);\n            cipher.identity.state = this.getValueOrDefault(obj.state);\n            cipher.identity.postalCode = this.getValueOrDefault(obj.zipcode);\n            cipher.identity.country = this.getValueOrDefault(obj.country);\n            if (cipher.identity.country != null) {\n                cipher.identity.country = cipher.identity.country.toUpperCase();\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processCard(results: any[]) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.card = new CardView();\n            cipher.type = CipherType.Card;\n            cipher.name = this.getValueOrDefault(obj.bank);\n            cipher.card.number = this.getValueOrDefault(obj.cardNumber);\n            cipher.card.brand = this.getCardBrand(cipher.card.number);\n            cipher.card.cardholderName = this.getValueOrDefault(obj.owner);\n            if (!this.isNullOrWhitespace(cipher.card.brand)) {\n                if (this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name = cipher.card.brand;\n                } else {\n                    cipher.name += (' - ' + cipher.card.brand);\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n\n    private processNote(results: any[], nameProperty: string, name: string = null) {\n        results.forEach((obj: any) => {\n            const cipher = new CipherView();\n            cipher.secureNote = new SecureNoteView();\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote.type = SecureNoteType.Generic;\n            if (name != null) {\n                cipher.name = name;\n            } else {\n                cipher.name = this.getValueOrDefault(obj[nameProperty]);\n            }\n            for (const key in obj) {\n                if (obj.hasOwnProperty(key) && key !== nameProperty) {\n                    this.processKvp(cipher, key, obj[key].toString());\n                }\n            }\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class EncryptrCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Label, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            const text = this.getValueOrDefault(value.Text);\n            if (!this.isNullOrWhitespace(text)) {\n                if (this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = text;\n                } else {\n                    cipher.notes += ('\\n\\n' + text);\n                }\n            }\n\n            const type = value['Entry Type'];\n            if (type === 'Password') {\n                cipher.login.username = this.getValueOrDefault(value.Username);\n                cipher.login.password = this.getValueOrDefault(value.Password);\n                cipher.login.uris = this.makeUriArray(value['Site URL']);\n            } else if (type === 'Credit Card') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value['Name on card']);\n                cipher.card.number = this.getValueOrDefault(value['Card Number']);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.CVV);\n                const expiry = this.getValueOrDefault(value.Expiry);\n                if (!this.isNullOrWhitespace(expiry)) {\n                    const expParts = expiry.split('/');\n                    if (expParts.length > 1) {\n                        cipher.card.expMonth = parseInt(expParts[0], null).toString();\n                        cipher.card.expYear = (2000 + parseInt(expParts[1], null)).toString();\n                    }\n                }\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class EnpassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let firstRow = true;\n        results.forEach((value) => {\n            if (value.length < 2 || (firstRow && (value[0] === 'Title' || value[0] === 'title'))) {\n                firstRow = false;\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 1]);\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            if (value.length === 2 || (!this.containsField(value, 'username') &&\n                !this.containsField(value, 'password') && !this.containsField(value, 'email') &&\n                !this.containsField(value, 'url'))) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            }\n\n            if (this.containsField(value, 'cardholder') && this.containsField(value, 'number') &&\n                this.containsField(value, 'expiry date')) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            if (value.length > 2 && (value.length % 2) === 0) {\n                for (let i = 0; i < value.length - 2; i += 2) {\n                    const fieldValue: string = value[i + 2];\n                    if (this.isNullOrWhitespace(fieldValue)) {\n                        continue;\n                    }\n\n                    const fieldName: string = value[i + 1];\n                    const fieldNameLower = fieldName.toLowerCase();\n\n                    if (cipher.type === CipherType.Login) {\n                        if (fieldNameLower === 'url' && (cipher.login.uris == null || cipher.login.uris.length === 0)) {\n                            cipher.login.uris = this.makeUriArray(fieldValue);\n                            continue;\n                        } else if ((fieldNameLower === 'username' || fieldNameLower === 'email') &&\n                            this.isNullOrWhitespace(cipher.login.username)) {\n                            cipher.login.username = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                            cipher.login.password = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                            cipher.login.totp = fieldValue;\n                            continue;\n                        }\n                    } else if (cipher.type === CipherType.Card) {\n                        if (fieldNameLower === 'cardholder' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                            cipher.card.cardholderName = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'number' && this.isNullOrWhitespace(cipher.card.number)) {\n                            cipher.card.number = fieldValue;\n                            cipher.card.brand = this.getCardBrand(fieldValue);\n                            continue;\n                        } else if (fieldNameLower === 'cvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                            cipher.card.code = fieldValue;\n                            continue;\n                        } else if (fieldNameLower === 'expiry date' && this.isNullOrWhitespace(cipher.card.expMonth) &&\n                            this.isNullOrWhitespace(cipher.card.expYear)) {\n                            if (this.setCardExpiration(cipher, fieldValue)) {\n                                continue;\n                            }\n                        } else if (fieldNameLower === 'type') {\n                            // Skip since brand was determined from number above\n                            continue;\n                        }\n                    }\n\n                    this.processKvp(cipher, fieldName, fieldValue);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n\n    private containsField(fields: any[], name: string) {\n        if (fields == null || name == null) {\n            return false;\n        }\n        return fields.filter((f) => !this.isNullOrWhitespace(f) &&\n            f.toLowerCase() === name.toLowerCase()).length > 0;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\n\nexport class EnpassJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null || results.items.length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        const foldersMap = new Map<string, string>();\n        const foldersIndexMap = new Map<string, number>();\n        const folderTree = this.buildFolderTree(results.folders);\n        this.flattenFolderTree(null, folderTree, foldersMap);\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((item: any) => {\n            if (item.folders != null && item.folders.length > 0 && foldersIndexMap.has(item.folders[0])) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(item.folders[0])]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(item.title);\n            cipher.favorite = item.favorite > 0;\n\n            if (item.template_type != null && item.fields != null && item.fields.length > 0) {\n                if (item.template_type.indexOf('login.') === 0 || item.template_type.indexOf('password.') === 0) {\n                    this.processLogin(cipher, item.fields);\n                } else if (item.template_type.indexOf('creditcard.') === 0) {\n                    this.processCard(cipher, item.fields);\n                } else if (item.template_type.indexOf('identity.') < 0 &&\n                    item.fields.some((f: any) => f.type === 'password' && !this.isNullOrWhitespace(f.value))) {\n                    this.processLogin(cipher, item.fields);\n                } else {\n                    this.processNote(cipher, item.fields);\n                }\n            }\n\n            cipher.notes += ('\\n' + this.getValueOrDefault(item.note, ''));\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n\n    private processLogin(cipher: CipherView, fields: any[]) {\n        const urls: string[] = [];\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n\n            if ((field.type === 'username' || field.type === 'email') &&\n                this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = field.value;\n            } else if (field.type === 'password' && this.isNullOrWhitespace(cipher.login.password)) {\n                cipher.login.password = field.value;\n            } else if (field.type === 'totp' && this.isNullOrWhitespace(cipher.login.totp)) {\n                cipher.login.totp = field.value;\n            } else if (field.type === 'url') {\n                urls.push(field.value);\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n        cipher.login.uris = this.makeUriArray(urls);\n    }\n\n    private processCard(cipher: CipherView, fields: any[]) {\n        cipher.card = new CardView();\n        cipher.type = CipherType.Card;\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section' || field.type === 'ccType') {\n                return;\n            }\n\n            if (field.type === 'ccName' && this.isNullOrWhitespace(cipher.card.cardholderName)) {\n                cipher.card.cardholderName = field.value;\n            } else if (field.type === 'ccNumber' && this.isNullOrWhitespace(cipher.card.number)) {\n                cipher.card.number = field.value;\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n            } else if (field.type === 'ccCvc' && this.isNullOrWhitespace(cipher.card.code)) {\n                cipher.card.code = field.value;\n            } else if (field.type === 'ccExpiry' && this.isNullOrWhitespace(cipher.card.expYear)) {\n                if (!this.setCardExpiration(cipher, field.value)) {\n                    this.processKvp(cipher, field.label, field.value,\n                        field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n                }\n            } else {\n                this.processKvp(cipher, field.label, field.value,\n                    field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n            }\n        });\n    }\n\n    private processNote(cipher: CipherView, fields: any[]) {\n        fields.forEach((field: any) => {\n            if (this.isNullOrWhitespace(field.value) || field.type === 'section') {\n                return;\n            }\n            this.processKvp(cipher, field.label, field.value,\n                field.sensitive === 1 ? FieldType.Hidden : FieldType.Text);\n        });\n    }\n\n    private buildFolderTree(folders: any[]): any[] {\n        if (folders == null) {\n            return [];\n        }\n        const folderTree: any[] = [];\n        const map = new Map<string, any>([]);\n        folders.forEach((obj: any) => {\n            map.set(obj.uuid, obj);\n            obj.children = [];\n        });\n        folders.forEach((obj: any) => {\n            if (obj.parent_uuid != null && obj.parent_uuid !== '' && map.has(obj.parent_uuid)) {\n                map.get(obj.parent_uuid).children.push(obj);\n            } else {\n                folderTree.push(obj);\n            }\n        });\n        return folderTree;\n    }\n\n    private flattenFolderTree(titlePrefix: string, tree: any[], map: Map<string, string>) {\n        if (tree == null) {\n            return;\n        }\n        tree.forEach((f: any) => {\n            if (f.title != null && f.title.trim() !== '') {\n                let title = f.title.trim();\n                if (titlePrefix != null && titlePrefix.trim() !== '') {\n                    title = titlePrefix + '/' + title;\n                }\n                map.set(f.uuid, title);\n                if (f.children != null && f.children.length !== 0) {\n                    this.flattenFolderTree(title, f.children, map);\n                }\n            }\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class FirefoxCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            const url = this.getValueOrDefault(value.url, this.getValueOrDefault(value.hostname));\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(url), '--');\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class FSecureFskImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.data == null) {\n            result.success = false;\n            return result;\n        }\n\n        for (const key in results.data) {\n            if (!results.data.hasOwnProperty(key)) {\n                continue;\n            }\n\n            const value = results.data[key];\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.service);\n            cipher.notes = this.getValueOrDefault(value.notes);\n\n            if (value.style === 'website') {\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.uris = this.makeUriArray(value.url);\n            } else if (value.style === 'creditcard') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.username);\n                cipher.card.number = this.getValueOrDefault(value.creditNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.creditCvv);\n                if (!this.isNullOrWhitespace(value.creditExpiry)) {\n                    if (!this.setCardExpiration(cipher, value.creditExpiry)) {\n                        this.processKvp(cipher, 'Expiration', value.creditExpiry);\n                    }\n                }\n                if (!this.isNullOrWhitespace(value.password)) {\n                    this.processKvp(cipher, 'PIN', value.password);\n                }\n            } else {\n                continue;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class GnomeJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || Object.keys(results).length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        for (const keyRing in results) {\n            if (!results.hasOwnProperty(keyRing) || this.isNullOrWhitespace(keyRing) ||\n                results[keyRing].length === 0) {\n                continue;\n            }\n\n            results[keyRing].forEach((value: any) => {\n                if (this.isNullOrWhitespace(value.display_name) || value.display_name.indexOf('http') !== 0) {\n                    return;\n                }\n\n                this.processFolder(result, keyRing);\n                const cipher = this.initLoginCipher();\n                cipher.name = value.display_name.replace('http://', '').replace('https://', '');\n                if (cipher.name.length > 30) {\n                    cipher.name = cipher.name.substring(0, 30);\n                }\n                cipher.login.password = this.getValueOrDefault(value.secret);\n                cipher.login.uris = this.makeUriArray(value.display_name);\n\n                if (value.attributes != null) {\n                    cipher.login.username = value.attributes != null ?\n                        this.getValueOrDefault(value.attributes.username_value) : null;\n                    for (const attr in value.attributes) {\n                        if (!value.attributes.hasOwnProperty(attr) || attr === 'username_value' ||\n                            attr === 'xdg:schema') {\n                            continue;\n                        }\n                        this.processKvp(cipher, attr, value.attributes[attr]);\n                    }\n                }\n\n                this.convertToNoteIfNeeded(cipher);\n                this.cleanupCipher(cipher);\n                result.ciphers.push(cipher);\n            });\n        }\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nconst NotesHeader = 'Notes\\n\\n';\nconst ApplicationsHeader = 'Applications\\n\\n';\nconst WebsitesHeader = 'Websites\\n\\n';\nconst Delimiter = '\\n---\\n';\n\nexport class KasperskyTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n\n        let notesData: string;\n        let applicationsData: string;\n        let websitesData: string;\n        let workingData = this.splitNewLine(data).join('\\n');\n\n        if (workingData.indexOf(NotesHeader) !== -1) {\n            const parts = workingData.split(NotesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                notesData = parts[1];\n            }\n        }\n        if (workingData.indexOf(ApplicationsHeader) !== -1) {\n            const parts = workingData.split(ApplicationsHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                applicationsData = parts[1];\n            }\n        }\n        if (workingData.indexOf(WebsitesHeader) === 0) {\n            const parts = workingData.split(WebsitesHeader);\n            if (parts.length > 1) {\n                workingData = parts[0];\n                websitesData = parts[1];\n            }\n        }\n\n        const notes = this.parseDataCategory(notesData);\n        const applications = this.parseDataCategory(applicationsData);\n        const websites = this.parseDataCategory(websitesData);\n\n        notes.forEach((n) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(n.get('Name'));\n            cipher.notes = this.getValueOrDefault(n.get('Text'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        websites.concat(applications).forEach((w) => {\n            const cipher = this.initLoginCipher();\n            const nameKey = w.has('Website name') ? 'Website name' : 'Application';\n            cipher.name = this.getValueOrDefault(w.get(nameKey), '');\n            if (!this.isNullOrWhitespace(w.get('Login name'))) {\n                if (!this.isNullOrWhitespace(cipher.name)) {\n                    cipher.name += ': ';\n                }\n                cipher.name += w.get('Login name');\n            }\n            cipher.notes = this.getValueOrDefault(w.get('Comment'));\n            if (w.has('Website URL')) {\n                cipher.login.uris = this.makeUriArray(w.get('Website URL'));\n            }\n            cipher.login.username = this.getValueOrDefault(w.get('Login'));\n            cipher.login.password = this.getValueOrDefault(w.get('Password'));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n\n    private parseDataCategory(data: string): Map<string, string>[] {\n        if (this.isNullOrWhitespace(data) || data.indexOf(Delimiter) === -1) {\n            return [];\n        }\n        const items: Map<string, string>[] = [];\n        data.split(Delimiter).forEach((p) => {\n            if (p.indexOf('\\n') === -1) {\n                return;\n            }\n            const item = new Map<string, string>();\n            let itemComment: string;\n            let itemCommentKey: string;\n            p.split('\\n').forEach((l) => {\n                if (itemComment != null) {\n                    itemComment += ('\\n' + l);\n                    return;\n                }\n                const colonIndex = l.indexOf(':');\n                let key: string;\n                let val: string;\n                if (colonIndex === -1) {\n                    return;\n                } else {\n                    key = l.substring(0, colonIndex);\n                    if (l.length > colonIndex + 1) {\n                        val = l.substring(colonIndex + 2);\n                    }\n                }\n                if (key != null) {\n                    item.set(key, val);\n                }\n                if (key === 'Comment' || key === 'Text') {\n                    itemComment = val;\n                    itemCommentKey = key;\n                }\n            });\n            if (itemComment != null && itemCommentKey != null) {\n                item.set(itemCommentKey, itemComment);\n            }\n            if (item.size === 0) {\n                return;\n            }\n            items.push(item);\n        });\n        return items;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { FieldType } from '../enums/fieldType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeePass2XmlImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): ImportResult {\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            this.result.success = false;\n            return this.result;\n        }\n\n        const rootGroup = doc.querySelector('KeePassFile > Root > Group');\n        if (rootGroup == null) {\n            this.result.errorMessage = 'Missing `KeePassFile > Root > Group` node.';\n            this.result.success = false;\n            return this.result;\n        }\n\n        this.traverse(rootGroup, true, '');\n\n        if (this.organization) {\n            this.moveFoldersToCollections(this.result);\n        }\n\n        this.result.success = true;\n        return this.result;\n    }\n\n    traverse(node: Element, isRootNode: boolean, groupPrefixName: string) {\n        const folderIndex = this.result.folders.length;\n        let groupName = groupPrefixName;\n\n        if (!isRootNode) {\n            if (groupName !== '') {\n                groupName += '/';\n            }\n            const nameEl = this.querySelectorDirectChild(node, 'Name');\n            groupName += nameEl == null ? '-' : nameEl.textContent;\n            const folder = new FolderView();\n            folder.name = groupName;\n            this.result.folders.push(folder);\n        }\n\n        this.querySelectorAllDirectChild(node, 'Entry').forEach((entry) => {\n            const cipherIndex = this.result.ciphers.length;\n\n            const cipher = this.initLoginCipher();\n            this.querySelectorAllDirectChild(entry, 'String').forEach((entryString) => {\n                const valueEl = this.querySelectorDirectChild(entryString, 'Value');\n                const value = valueEl != null ? valueEl.textContent : null;\n                if (this.isNullOrWhitespace(value)) {\n                    return;\n                }\n                const keyEl = this.querySelectorDirectChild(entryString, 'Key');\n                const key = keyEl != null ? keyEl.textContent : null;\n\n                if (key === 'URL') {\n                    cipher.login.uris = this.makeUriArray(value);\n                } else if (key === 'UserName') {\n                    cipher.login.username = value;\n                } else if (key === 'Password') {\n                    cipher.login.password = value;\n                }  else if (key === 'otp') {\n                    cipher.login.totp = value.replace('key=', '');\n                } else if (key === 'Title') {\n                    cipher.name = value;\n                } else if (key === 'Notes') {\n                    cipher.notes += (value + '\\n');\n                } else {\n                    let type = FieldType.Text;\n                    const attrs = (valueEl.attributes as any);\n                    if (attrs.length > 0 && attrs.ProtectInMemory != null &&\n                        attrs.ProtectInMemory.value === 'True') {\n                        type = FieldType.Hidden;\n                    }\n                    this.processKvp(cipher, key, value, type);\n                }\n            });\n\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n\n            if (!isRootNode) {\n                this.result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        this.querySelectorAllDirectChild(node, 'Group').forEach((group) => {\n            this.traverse(group, false, groupName);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class KeePassXCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(value.Title)) {\n                return;\n            }\n\n            value.Group = !this.isNullOrWhitespace(value.Group) && value.Group.startsWith('Root/') ?\n                value.Group.replace('Root/', '') : value.Group;\n            const groupName = !this.isNullOrWhitespace(value.Group) ? value.Group : null;\n            this.processFolder(result, groupName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(value.Title, '--');\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\n\nexport class KeeperCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 6) {\n                return;\n            }\n\n            this.processFolder(result, value[0]);\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[5]) + '\\n';\n            cipher.name = this.getValueOrDefault(value[1], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[4]);\n\n            if (value.length > 7) {\n                // we have some custom fields.\n                for (let i = 7; i < value.length; i = i + 2) {\n                    this.processKvp(cipher, value[i], value[i + 1]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { FolderView } from '../models/view/folderView';\nimport { IdentityView } from '../models/view/identityView';\nimport { LoginView } from '../models/view/loginView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class LastPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value, index) => {\n            const cipherIndex = result.ciphers.length;\n            let folderIndex = result.folders.length;\n            let grouping = value.grouping;\n            if (grouping != null) {\n                grouping = grouping.replace(/\\\\/g, '/').replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, '');\n            }\n            const hasFolder = this.getValueOrDefault(grouping, '(none)') !== '(none)';\n            let addFolder = hasFolder;\n\n            if (hasFolder) {\n                for (let i = 0; i < result.folders.length; i++) {\n                    if (result.folders[i].name === grouping) {\n                        addFolder = false;\n                        folderIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            const cipher = this.buildBaseCipher(value);\n            if (cipher.type === CipherType.Login) {\n                cipher.notes = this.getValueOrDefault(value.extra);\n                cipher.login = new LoginView();\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n            } else if (cipher.type === CipherType.SecureNote) {\n                this.parseSecureNote(value, cipher);\n            } else if (cipher.type === CipherType.Card) {\n                cipher.card = this.parseCard(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n            } else if (cipher.type === CipherType.Identity) {\n                cipher.identity = this.parseIdentity(value);\n                cipher.notes = this.getValueOrDefault(value.notes);\n                if (!this.isNullOrWhitespace(value.ccnum)) {\n                    // there is a card on this identity too\n                    const cardCipher = this.buildBaseCipher(value);\n                    cardCipher.identity = null;\n                    cardCipher.type = CipherType.Card;\n                    cardCipher.card = this.parseCard(value);\n                    result.ciphers.push(cardCipher);\n                }\n            }\n\n            result.ciphers.push(cipher);\n\n            if (addFolder) {\n                const f = new FolderView();\n                f.name = grouping;\n                result.folders.push(f);\n            }\n            if (hasFolder) {\n                result.folderRelationships.push([cipherIndex, folderIndex]);\n            }\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private buildBaseCipher(value: any) {\n        const cipher = new CipherView();\n        if (value.hasOwnProperty('profilename') && value.hasOwnProperty('profilelanguage')) {\n            // form fill\n            cipher.favorite = false;\n            cipher.name = this.getValueOrDefault(value.profilename, '--');\n            cipher.type = CipherType.Card;\n\n            if (!this.isNullOrWhitespace(value.title) || !this.isNullOrWhitespace(value.firstname) ||\n                !this.isNullOrWhitespace(value.lastname) || !this.isNullOrWhitespace(value.address1) ||\n                !this.isNullOrWhitespace(value.phone) || !this.isNullOrWhitespace(value.username) ||\n                !this.isNullOrWhitespace(value.email)) {\n                cipher.type = CipherType.Identity;\n            }\n        } else {\n            // site or secure note\n            cipher.favorite = !this.organization && this.getValueOrDefault(value.fav, '0') === '1';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.type = value.url === 'http://sn' ? CipherType.SecureNote : CipherType.Login;\n        }\n        return cipher;\n    }\n\n    private parseCard(value: any): CardView {\n        const card = new CardView();\n        card.cardholderName = this.getValueOrDefault(value.ccname);\n        card.number = this.getValueOrDefault(value.ccnum);\n        card.code = this.getValueOrDefault(value.cccsc);\n        card.brand = this.getCardBrand(value.ccnum);\n\n        if (!this.isNullOrWhitespace(value.ccexp) && value.ccexp.indexOf('-') > -1) {\n            const ccexpParts = (value.ccexp as string).split('-');\n            if (ccexpParts.length > 1) {\n                card.expYear = ccexpParts[0];\n                card.expMonth = ccexpParts[1];\n                if (card.expMonth.length === 2 && card.expMonth[0] === '0') {\n                    card.expMonth = card.expMonth[1];\n                }\n            }\n        }\n\n        return card;\n    }\n\n    private parseIdentity(value: any): IdentityView {\n        const identity = new IdentityView();\n        identity.title = this.getValueOrDefault(value.title);\n        identity.firstName = this.getValueOrDefault(value.firstname);\n        identity.middleName = this.getValueOrDefault(value.middlename);\n        identity.lastName = this.getValueOrDefault(value.lastname);\n        identity.username = this.getValueOrDefault(value.username);\n        identity.company = this.getValueOrDefault(value.company);\n        identity.ssn = this.getValueOrDefault(value.ssn);\n        identity.address1 = this.getValueOrDefault(value.address1);\n        identity.address2 = this.getValueOrDefault(value.address2);\n        identity.address3 = this.getValueOrDefault(value.address3);\n        identity.city = this.getValueOrDefault(value.city);\n        identity.state = this.getValueOrDefault(value.state);\n        identity.postalCode = this.getValueOrDefault(value.zip);\n        identity.country = this.getValueOrDefault(value.country);\n        identity.email = this.getValueOrDefault(value.email);\n        identity.phone = this.getValueOrDefault(value.phone);\n\n        if (!this.isNullOrWhitespace(identity.title)) {\n            identity.title = identity.title.charAt(0).toUpperCase() + identity.title.slice(1);\n        }\n\n        return identity;\n    }\n\n    private parseSecureNote(value: any, cipher: CipherView) {\n        const extraParts = this.splitNewLine(value.extra);\n        let processedNote = false;\n\n        if (extraParts.length) {\n            const typeParts = extraParts[0].split(':');\n            if (typeParts.length > 1 && typeParts[0] === 'NoteType' &&\n                (typeParts[1] === 'Credit Card' || typeParts[1] === 'Address')) {\n                if (typeParts[1] === 'Credit Card') {\n                    const mappedData = this.parseSecureNoteMapping<CardView>(cipher, extraParts, {\n                        'Number': 'number',\n                        'Name on Card': 'cardholderName',\n                        'Security Code': 'code',\n                        // LP provides date in a format like 'June,2020'\n                        // Store in expMonth, then parse and modify\n                        'Expiration Date': 'expMonth',\n                    });\n\n                    if (this.isNullOrWhitespace(mappedData.expMonth) || mappedData.expMonth === ',') {\n                        // No expiration data\n                        mappedData.expMonth = undefined;\n                    } else {\n                        const [monthString, year] = mappedData.expMonth.split(',');\n                        // Parse month name into number\n                        if (!this.isNullOrWhitespace(monthString)) {\n                            const month = new Date(Date.parse(monthString.trim() + ' 1, 2012')).getMonth() + 1;\n                            if (isNaN(month)) {\n                                mappedData.expMonth = undefined;\n                            } else {\n                                mappedData.expMonth = month.toString();\n                            }\n                        } else {\n                            mappedData.expMonth = undefined;\n                        }\n                        if (!this.isNullOrWhitespace(year)) {\n                            mappedData.expYear = year;\n                        }\n                    }\n\n                    cipher.type = CipherType.Card;\n                    cipher.card = mappedData;\n                } else if (typeParts[1] === 'Address') {\n                    const mappedData = this.parseSecureNoteMapping<IdentityView>(cipher, extraParts, {\n                        'Title': 'title',\n                        'First Name': 'firstName',\n                        'Last Name': 'lastName',\n                        'Middle Name': 'middleName',\n                        'Company': 'company',\n                        'Address 1': 'address1',\n                        'Address 2': 'address2',\n                        'Address 3': 'address3',\n                        'City / Town': 'city',\n                        'State': 'state',\n                        'Zip / Postal Code': 'postalCode',\n                        'Country': 'country',\n                        'Email Address': 'email',\n                        'Username': 'username',\n                    });\n                    cipher.type = CipherType.Identity;\n                    cipher.identity = mappedData;\n                }\n                processedNote = true;\n            }\n        }\n\n        if (!processedNote) {\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n            cipher.notes = this.getValueOrDefault(value.extra);\n        }\n    }\n\n    private parseSecureNoteMapping<T>(cipher: CipherView, extraParts: string[], map: any): T {\n        const dataObj: any = {};\n\n        let processingNotes = false;\n        extraParts.forEach((extraPart) => {\n            let key: string = null;\n            let val: string = null;\n            if (!processingNotes) {\n                if (this.isNullOrWhitespace(extraPart)) {\n                    return;\n                }\n                const colonIndex = extraPart.indexOf(':');\n                if (colonIndex === -1) {\n                    key = extraPart;\n                } else {\n                    key = extraPart.substring(0, colonIndex);\n                    if (extraPart.length > colonIndex) {\n                        val = extraPart.substring(colonIndex + 1);\n                    }\n                }\n                if (this.isNullOrWhitespace(key) || this.isNullOrWhitespace(val) || key === 'NoteType') {\n                    return;\n                }\n            }\n\n            if (processingNotes) {\n                cipher.notes += ('\\n' + extraPart);\n            } else if (key === 'Notes') {\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes += ('\\n' + val);\n                } else {\n                    cipher.notes = val;\n                }\n                processingNotes = true;\n            } else if (map.hasOwnProperty(key)) {\n                dataObj[map[key]] = val;\n            } else {\n                this.processKvp(cipher, key, val);\n            }\n        });\n\n        return dataObj;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class LogMeOnceCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 4) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.login.username = this.getValueOrDefault(value[2]);\n            cipher.login.password = this.getValueOrDefault(value[3]);\n            cipher.login.uris = this.makeUriArray(value[1]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MeldiumCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.DisplayName, '--');\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.login.username = this.getValueOrDefault(value.UserName);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nexport class MSecureCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 3) {\n                return;\n            }\n\n            const folderName = this.getValueOrDefault(value[0], 'Unassigned') !== 'Unassigned' ? value[0] : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[2], '--');\n\n            if (value[1] === 'Web Logins' || value[1] === 'Login') {\n                cipher.login.uris = this.makeUriArray(value[4]);\n                cipher.login.username = this.getValueOrDefault(value[5]);\n                cipher.login.password = this.getValueOrDefault(value[6]);\n                cipher.notes = !this.isNullOrWhitespace(value[3]) ? value[3].split('\\\\n').join('\\n') : null;\n            } else if (value.length > 3) {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                for (let i = 3; i < value.length; i++) {\n                    if (!this.isNullOrWhitespace(value[i])) {\n                        cipher.notes += (value[i] + '\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(value[1]) && cipher.type !== CipherType.Login) {\n                cipher.name = value[1] + ': ' + cipher.name;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nimport { CardView } from '../models/view/cardView';\nimport { IdentityView } from '../models/view/identityView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class MykiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.nickname, '--');\n            cipher.notes = this.getValueOrDefault(value.additionalInfo);\n\n            if (value.url !== undefined) {\n                // Accounts\n                cipher.login.uris = this.makeUriArray(value.url);\n                cipher.login.username = this.getValueOrDefault(value.username);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.totp = this.getValueOrDefault(value.twoFactAuthToken);\n            } else if (value.cardNumber !== undefined) {\n                // Cards\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardName);\n                cipher.card.number = this.getValueOrDefault(value.cardNumber);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.expMonth = this.getValueOrDefault(value.exp_month);\n                cipher.card.expYear = this.getValueOrDefault(value.exp_year);\n                cipher.card.code = this.getValueOrDefault(value.cvv);\n            } else if (value.firstName !== undefined) {\n                // Identities\n                cipher.identity = new IdentityView();\n                cipher.type = CipherType.Identity;\n                cipher.identity.title = this.getValueOrDefault(value.title);\n                cipher.identity.firstName = this.getValueOrDefault(value.firstName);\n                cipher.identity.middleName = this.getValueOrDefault(value.middleName);\n                cipher.identity.lastName = this.getValueOrDefault(value.lastName);\n                cipher.identity.phone = this.getValueOrDefault(value.number);\n                cipher.identity.email = this.getValueOrDefault(value.email);\n                cipher.identity.address1 = this.getValueOrDefault(value.firstAddressLine);\n                cipher.identity.address2 = this.getValueOrDefault(value.secondAddressLine);\n                cipher.identity.city = this.getValueOrDefault(value.city);\n                cipher.identity.country = this.getValueOrDefault(value.country);\n                cipher.identity.postalCode = this.getValueOrDefault(value.zipCode);\n            } else if (value.content !== undefined) {\n                // Notes\n                cipher.secureNote = new SecureNoteView();\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote.type = SecureNoteType.Generic;\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.content);\n            } else {\n                return;\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { CipherView } from '../models/view/cipherView';\nimport { IdentityView } from '../models/view/identityView';\nimport { PasswordHistoryView } from '../models/view/passwordHistoryView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class OnePassword1PifImporter extends BaseImporter implements Importer {\n    result = new ImportResult();\n\n    parse(data: string): ImportResult {\n        data.split(this.newLineRegex).forEach((line) => {\n            if (this.isNullOrWhitespace(line) || line[0] !== '{') {\n                return;\n            }\n            const item = JSON.parse(line);\n            if (item.trashed === true) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n\n            if (this.isNullOrWhitespace(item.hmac)) {\n                this.processStandardItem(item, cipher);\n            } else {\n                this.processWinOpVaultItem(item, cipher);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            this.result.ciphers.push(cipher);\n        });\n\n        this.result.success = true;\n        return this.result;\n    }\n\n    private processWinOpVaultItem(item: any, cipher: CipherView) {\n        if (item.overview != null) {\n            cipher.name = this.getValueOrDefault(item.overview.title);\n            if (item.overview.URLs != null) {\n                const urls: string[] = [];\n                item.overview.URLs.forEach((url: any) => {\n                    if (!this.isNullOrWhitespace(url.u)) {\n                        urls.push(url.u);\n                    }\n                });\n                cipher.login.uris = this.makeUriArray(urls);\n            }\n        }\n\n        if (item.details != null) {\n            if (item.details.passwordHistory != null) {\n                this.parsePasswordHistory(item.details.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.details.ccnum) || !this.isNullOrWhitespace(item.details.cvv)) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            } else if (!this.isNullOrWhitespace(item.details.firstname) ||\n                !this.isNullOrWhitespace(item.details.address1)) {\n                cipher.type = CipherType.Identity;\n                cipher.identity = new IdentityView();\n            }\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(item.details.password)) {\n                cipher.login.password = item.details.password;\n            }\n            if (!this.isNullOrWhitespace(item.details.notesPlain)) {\n                cipher.notes = item.details.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (item.details.fields != null) {\n                this.parseFields(item.details.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.details.sections != null) {\n                item.details.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private processStandardItem(item: any, cipher: CipherView) {\n        cipher.favorite = item.openContents && item.openContents.faveIndex ? true : false;\n        cipher.name = this.getValueOrDefault(item.title);\n\n        if (item.typeName === 'securenotes.SecureNote') {\n            cipher.type = CipherType.SecureNote;\n            cipher.secureNote = new SecureNoteView();\n            cipher.secureNote.type = SecureNoteType.Generic;\n        } else if (item.typeName === 'wallet.financial.CreditCard') {\n            cipher.type = CipherType.Card;\n            cipher.card = new CardView();\n        } else if (item.typeName === 'identities.Identity') {\n            cipher.type = CipherType.Identity;\n            cipher.identity = new IdentityView();\n        } else {\n            cipher.login.uris = this.makeUriArray(item.location);\n        }\n\n        if (item.secureContents != null) {\n            if (item.secureContents.passwordHistory != null) {\n                this.parsePasswordHistory(item.secureContents.passwordHistory, cipher);\n            }\n            if (!this.isNullOrWhitespace(item.secureContents.notesPlain)) {\n                cipher.notes = item.secureContents.notesPlain.split(this.newLineRegex).join('\\n') + '\\n';\n            }\n            if (cipher.type === CipherType.Login) {\n                if (!this.isNullOrWhitespace(item.secureContents.password)) {\n                    cipher.login.password = item.secureContents.password;\n                }\n                if (item.secureContents.URLs != null) {\n                    const urls: string[] = [];\n                    item.secureContents.URLs.forEach((u: any) => {\n                        if (!this.isNullOrWhitespace(u.url)) {\n                            urls.push(u.url);\n                        }\n                    });\n                    if (urls.length > 0) {\n                        cipher.login.uris = this.makeUriArray(urls);\n                    }\n                }\n            }\n            if (item.secureContents.fields != null) {\n                this.parseFields(item.secureContents.fields, cipher, 'designation', 'value', 'name');\n            }\n            if (item.secureContents.sections != null) {\n                item.secureContents.sections.forEach((section: any) => {\n                    if (section.fields != null) {\n                        this.parseFields(section.fields, cipher, 'n', 'v', 't');\n                    }\n                });\n            }\n        }\n    }\n\n    private parsePasswordHistory(items: any[], cipher: CipherView) {\n        const maxSize = items.length > 5 ? 5 : items.length;\n        cipher.passwordHistory = items\n            .filter((h: any) => !this.isNullOrWhitespace(h.value) && h.time != null)\n            .sort((a, b) => b.time - a.time)\n            .slice(0, maxSize)\n            .map((h: any) => {\n                const ph = new PasswordHistoryView();\n                ph.password = h.value;\n                ph.lastUsedDate = new Date(('' + h.time).length >= 13 ? h.time : h.time * 1000);\n                return ph;\n            });\n    }\n\n    private parseFields(fields: any[], cipher: CipherView, designationKey: string, valueKey: string, nameKey: string) {\n        fields.forEach((field: any) => {\n            if (field[valueKey] == null || field[valueKey].toString().trim() === '') {\n                return;\n            }\n\n            const fieldValue = field[valueKey].toString();\n            const fieldDesignation = field[designationKey] != null ? field[designationKey].toString() : null;\n\n            if (cipher.type === CipherType.Login) {\n                if (this.isNullOrWhitespace(cipher.login.username) && fieldDesignation === 'username') {\n                    cipher.login.username = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.password) && fieldDesignation === 'password') {\n                    cipher.login.password = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.login.totp) && fieldDesignation != null &&\n                    fieldDesignation.startsWith('TOTP_')) {\n                    cipher.login.totp = fieldValue;\n                    return;\n                }\n            } else if (cipher.type === CipherType.Card) {\n                if (this.isNullOrWhitespace(cipher.card.number) && fieldDesignation === 'ccnum') {\n                    cipher.card.number = fieldValue;\n                    cipher.card.brand = this.getCardBrand(fieldValue);\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.code) && fieldDesignation === 'cvv') {\n                    cipher.card.code = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && fieldDesignation === 'cardholder') {\n                    cipher.card.cardholderName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(cipher.card.expiration) && fieldDesignation === 'expiry' &&\n                    fieldValue.length === 6) {\n                    cipher.card.expMonth = (fieldValue as string).substr(4, 2);\n                    if (cipher.card.expMonth[0] === '0') {\n                        cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                    }\n                    cipher.card.expYear = (fieldValue as string).substr(0, 4);\n                    return;\n                } else if (fieldDesignation === 'type') {\n                    // Skip since brand was determined from number above\n                    return;\n                }\n            } else if (cipher.type === CipherType.Identity) {\n                const identity = cipher.identity;\n                if (this.isNullOrWhitespace(identity.firstName) && fieldDesignation === 'firstname') {\n                    identity.firstName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.lastName) && fieldDesignation === 'lastname') {\n                    identity.lastName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.middleName) && fieldDesignation === 'initial') {\n                    identity.middleName = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.phone) && fieldDesignation === 'defphone') {\n                    identity.phone = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.company) && fieldDesignation === 'company') {\n                    identity.company = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.email) && fieldDesignation === 'email') {\n                    identity.email = fieldValue;\n                    return;\n                } else if (this.isNullOrWhitespace(identity.username) && fieldDesignation === 'username') {\n                    identity.username = fieldValue;\n                    return;\n                } else if (fieldDesignation === 'address') {\n                    // fieldValue is an object casted into a string, so access the plain value instead\n                    const { street, city, country, zip } = field[valueKey];\n                    identity.address1 = this.getValueOrDefault(street);\n                    identity.city = this.getValueOrDefault(city);\n                    if (!this.isNullOrWhitespace(country)) {\n                        identity.country = country.toUpperCase();\n                    }\n                    identity.postalCode = this.getValueOrDefault(zip);\n                    return;\n                }\n            }\n\n            const fieldName = this.isNullOrWhitespace(field[nameKey]) ? 'no_name' : field[nameKey];\n            if (fieldName === 'password' && cipher.passwordHistory != null &&\n                cipher.passwordHistory.some((h) => h.password === fieldValue)) {\n                return;\n            }\n\n            const fieldType = field.k === 'concealed' ? FieldType.Hidden : FieldType.Text;\n            this.processKvp(cipher, fieldName, fieldValue, fieldType);\n        });\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CipherType } from '../enums/cipherType';\nimport { CardView } from '../models/view';\n\nconst IgnoredProperties = ['ainfo', 'autosubmit', 'notesplain', 'ps', 'scope', 'tags', 'title', 'uuid'];\n\nexport class OnePasswordWinCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(this.getProp(value, 'title'))) {\n                return;\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.getProp(value, 'title'), '--');\n            cipher.notes = this.getValueOrDefault(this.getProp(value, 'notesPlain'), '') + '\\n';\n\n            if (!this.isNullOrWhitespace(this.getProp(value, 'number')) &&\n                !this.isNullOrWhitespace(this.getProp(value, 'expiry date'))) {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n            }\n\n            let altUsername: string = null;\n            for (const property in value) {\n                if (!value.hasOwnProperty(property) || this.isNullOrWhitespace(value[property])) {\n                    continue;\n                }\n\n                const lowerProp = property.toLowerCase();\n                if (cipher.type === CipherType.Login) {\n                    if (this.isNullOrWhitespace(cipher.login.password) && lowerProp === 'password') {\n                        cipher.login.password = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.login.username) && lowerProp === 'username') {\n                        cipher.login.username = value[property];\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uri.length === 0) && lowerProp === 'urls') {\n                        const urls = value[property].split(this.newLineRegex);\n                        cipher.login.uris = this.makeUriArray(urls);\n                        continue;\n                    }\n                } else if (cipher.type === CipherType.Card) {\n                    if (this.isNullOrWhitespace(cipher.card.number) && lowerProp === 'number') {\n                        cipher.card.number = value[property];\n                        cipher.card.brand = this.getCardBrand(this.getProp(value, 'number'));\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.code) && lowerProp === 'verification number') {\n                        cipher.card.code = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.cardholderName) && lowerProp === 'cardholder name') {\n                        cipher.card.cardholderName = value[property];\n                        continue;\n                    } else if (this.isNullOrWhitespace(cipher.card.expiration) && lowerProp === 'expiry date' &&\n                        value[property].length === 6) {\n                        cipher.card.expMonth = (value[property] as string).substr(4, 2);\n                        if (cipher.card.expMonth[0] === '0') {\n                            cipher.card.expMonth = cipher.card.expMonth.substr(1, 1);\n                        }\n                        cipher.card.expYear = (value[property] as string).substr(0, 4);\n                        continue;\n                    } else if (lowerProp === 'type') {\n                        // Skip since brand was determined from number above\n                        continue;\n                    }\n                }\n\n                if (IgnoredProperties.indexOf(lowerProp) === -1 && !lowerProp.startsWith('section:') &&\n                    !lowerProp.startsWith('section ')) {\n                    if (altUsername == null && lowerProp === 'email') {\n                        altUsername = value[property];\n                    }\n                    this.processKvp(cipher, property, value[property]);\n                }\n            }\n\n            if (cipher.type === CipherType.Login && !this.isNullOrWhitespace(altUsername) &&\n                this.isNullOrWhitespace(cipher.login.username) && altUsername.indexOf('://') === -1) {\n                cipher.login.username = altUsername;\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n\n    private getProp(obj: any, name: string): any {\n        return obj[name] || obj[name.toUpperCase()];\n    }\n}\n","export { AttachmentView } from './attachmentView';\nexport { CardView } from './cardView';\nexport { CipherView } from './cipherView';\nexport { FieldView } from './fieldView';\nexport { IdentityView } from './identityView';\nexport { LoginUriView } from './loginUriView';\nexport { LoginView } from './loginView';\nexport { SecureNoteView } from './secureNoteView';\nexport { View } from './view';\n","export class View {\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\nimport { FolderView } from '../models/view/folderView';\n\nexport class PadlockCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let headers: string[] = null;\n        results.forEach((value) => {\n            if (headers == null) {\n                headers = value.map((v: string) => v);\n                return;\n            }\n\n            if (value.length < 2 || value.length !== headers.length) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value[1])) {\n                if (this.organization) {\n                    const tags = (value[1] as string).split(',');\n                    tags.forEach((tag) => {\n                        tag = tag.trim();\n                        let addCollection = true;\n                        let collectionIndex = result.collections.length;\n\n                        for (let i = 0; i < result.collections.length; i++) {\n                            if (result.collections[i].name === tag) {\n                                addCollection = false;\n                                collectionIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (addCollection) {\n                            const collection = new CollectionView();\n                            collection.name = tag;\n                            result.collections.push(collection);\n                        }\n\n                        result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                    });\n                } else {\n                    const tags = (value[1] as string).split(',');\n                    const tag = tags.length > 0 ? tags[0].trim() : null;\n                    this.processFolder(result, tag);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n\n            for (let i = 2; i < value.length; i++) {\n                const header = headers[i].trim().toLowerCase();\n                if (this.isNullOrWhitespace(value[i]) || this.isNullOrWhitespace(header)) {\n                    continue;\n                }\n\n                if (this.usernameFieldNames.indexOf(header) > -1) {\n                    cipher.login.username = value[i];\n                } else if (this.passwordFieldNames.indexOf(header) > -1) {\n                    cipher.login.password = value[i];\n                } else if (this.uriFieldNames.indexOf(header) > -1) {\n                    cipher.login.uris = this.makeUriArray(value[i]);\n                } else {\n                    this.processKvp(cipher, headers[i], value[i]);\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassKeepCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            this.processFolder(result, this.getValue('category', value));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValue('description', value);\n            cipher.name = this.getValueOrDefault(this.getValue('title', value), '--');\n            cipher.login.username = this.getValue('username', value);\n            cipher.login.password = this.getValue('password', value);\n            cipher.login.uris = this.makeUriArray(this.getValue('site', value));\n            this.processKvp(cipher, 'Password 2', this.getValue('password2', value));\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private getValue(key: string, value: any) {\n        return this.getValueOrDefault(value[key], this.getValueOrDefault(value[(' ' + key)]));\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PassmanJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.length === 0) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((credential: any) => {\n            if (credential.tags != null && credential.tags.length > 0) {\n                const folderName = credential.tags[0].text;\n                this.processFolder(result, folderName);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = credential.label;\n\n            cipher.login.username = this.getValueOrDefault(credential.username);\n            if (this.isNullOrWhitespace(cipher.login.username)) {\n                cipher.login.username = this.getValueOrDefault(credential.email);\n            } else if (!this.isNullOrWhitespace(credential.email)) {\n                cipher.notes = ('Email: ' + credential.email + '\\n');\n            }\n\n            cipher.login.password = this.getValueOrDefault(credential.password);\n            cipher.login.uris = this.makeUriArray(credential.url);\n            cipher.notes += this.getValueOrDefault(credential.description, '');\n            if (credential.otp != null) {\n                cipher.login.totp = this.getValueOrDefault(credential.otp.secret);\n            }\n\n            if (credential.custom_fields != null) {\n                credential.custom_fields.forEach((customField: any) => {\n                    switch (customField.field_type) {\n                        case 'text':\n                        case 'password':\n                            this.processKvp(cipher, customField.label, customField.value);\n                            break;\n                    }\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CollectionView } from '../models/view/collectionView';\n\nexport class PasspackCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const tagsJson = !this.isNullOrWhitespace(value.Tags) ? JSON.parse(value.Tags) : null;\n            const tags: string[] = tagsJson != null && tagsJson.tags != null && tagsJson.tags.length > 0 ?\n                tagsJson.tags.map((tagJson: string) => {\n                    try {\n                        const t = JSON.parse(tagJson);\n                        return this.getValueOrDefault(t.tag);\n                    } catch { }\n                    return null;\n                }).filter((t: string) => !this.isNullOrWhitespace(t)) : null;\n\n            if (this.organization && tags != null && tags.length > 0) {\n                tags.forEach((tag) => {\n                    let addCollection = true;\n                    let collectionIndex = result.collections.length;\n\n                    for (let i = 0; i < result.collections.length; i++) {\n                        if (result.collections[i].name === tag) {\n                            addCollection = false;\n                            collectionIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (addCollection) {\n                        const collection = new CollectionView();\n                        collection.name = tag;\n                        result.collections.push(collection);\n                    }\n\n                    result.collectionRelationships.push([result.ciphers.length, collectionIndex]);\n                });\n            } else if (!this.organization && tags != null && tags.length > 0) {\n                this.processFolder(result, tags[0]);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Notes, '');\n            cipher.notes += ('\\n\\n' + this.getValueOrDefault(value['Shared Notes'], '') + '\\n');\n            cipher.name = this.getValueOrDefault(value['Entry Name'], '--');\n            cipher.login.username = this.getValueOrDefault(value['User ID']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n\n            if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                value.__parsed_extra.forEach((extra: string) => {\n                    if (!this.isNullOrWhitespace(extra)) {\n                        cipher.notes += ('\\n' + extra);\n                    }\n                });\n            }\n\n            const fieldsJson = !this.isNullOrWhitespace(value['Extra Fields']) ?\n                JSON.parse(value['Extra Fields']) : null;\n            const fields = fieldsJson != null && fieldsJson.extraFields != null &&\n                fieldsJson.extraFields.length > 0 ? fieldsJson.extraFields.map((fieldJson: string) => {\n                    try {\n                        return JSON.parse(fieldJson);\n                    } catch { }\n                    return null;\n                }) : null;\n            if (fields != null) {\n                fields.forEach((f: any) => {\n                    if (f != null) {\n                        this.processKvp(cipher, f.name, f.data);\n                    }\n                });\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordAgentCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let newVersion = true;\n        results.forEach((value) => {\n            if (value.length !== 5 && value.length < 9) {\n                return;\n            }\n            const altFormat = value.length === 10 && value[0] === '0';\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[altFormat ? 1 : 0], '--');\n            cipher.login.username = this.getValueOrDefault(value[altFormat ? 2 : 1]);\n            cipher.login.password = this.getValueOrDefault(value[altFormat ? 3 : 2]);\n            if (value.length === 5) {\n                newVersion = false;\n                cipher.notes = this.getValueOrDefault(value[4]);\n                cipher.login.uris = this.makeUriArray(value[3]);\n            } else {\n                const folder = this.getValueOrDefault(value[altFormat ? 9 : 8], '(None)');\n                let folderName = folder !== '(None)' ? folder.split('\\\\').join('/') : null;\n                if (folderName != null) {\n                    folderName = folder.split(' > ').join('/');\n                    folderName = folder.split('>').join('/');\n                }\n                this.processFolder(result, folderName);\n                cipher.notes = this.getValueOrDefault(value[altFormat ? 5 : 3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n            }\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (newVersion && this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { FolderView } from '../models/view/folderView';\n\nimport { CipherType } from '../enums/cipherType';\n\nexport class PasswordBossJsonImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = JSON.parse(data);\n        if (results == null || results.items == null) {\n            result.success = false;\n            return result;\n        }\n\n        const foldersMap = new Map<string, string>();\n        results.folders.forEach((value: any) => {\n            foldersMap.set(value.id, value.name);\n        });\n        const foldersIndexMap = new Map<string, number>();\n        foldersMap.forEach((val, key) => {\n            foldersIndexMap.set(key, result.folders.length);\n            const f = new FolderView();\n            f.name = val;\n            result.folders.push(f);\n        });\n\n        results.items.forEach((value: any) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.login.uris = this.makeUriArray(value.login_url);\n\n            if (value.folder != null && foldersIndexMap.has(value.folder)) {\n                result.folderRelationships.push([result.ciphers.length, foldersIndexMap.get(value.folder)]);\n            }\n\n            if (value.identifiers == null) {\n                return;\n            }\n\n            if (!this.isNullOrWhitespace(value.identifiers.notes)) {\n                cipher.notes = value.identifiers.notes.split('\\\\r\\\\n').join('\\n').split('\\\\n').join('\\n');\n            }\n\n            if (value.type === 'CreditCard') {\n                cipher.card = new CardView();\n                cipher.type = CipherType.Card;\n            }\n\n            for (const property in value.identifiers) {\n                if (!value.identifiers.hasOwnProperty(property)) {\n                    continue;\n                }\n                const valObj = value.identifiers[property];\n                const val = valObj != null ? valObj.toString() : null;\n                if (this.isNullOrWhitespace(val) || property === 'notes' || property === 'ignoreItemInSecurityScore') {\n                    continue;\n                }\n\n                if (property === 'custom_fields') {\n                    valObj.forEach((cf: any) => {\n                        this.processKvp(cipher, cf.name, cf.value);\n                    });\n                    continue;\n                }\n\n                if (cipher.type === CipherType.Card) {\n                    if (property === 'cardNumber') {\n                        cipher.card.number = val;\n                        cipher.card.brand = this.getCardBrand(val);\n                        continue;\n                    } else if (property === 'nameOnCard') {\n                        cipher.card.cardholderName = val;\n                        continue;\n                    } else if (property === 'security_code') {\n                        cipher.card.code = val;\n                        continue;\n                    } else if (property === 'expires') {\n                        try {\n                            const expDate = new Date(val);\n                            cipher.card.expYear = expDate.getFullYear().toString();\n                            cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                        } catch { }\n                        continue;\n                    } else if (property === 'cardType') {\n                        continue;\n                    }\n                } else {\n                    if ((property === 'username' || property === 'email') &&\n                        this.isNullOrWhitespace(cipher.login.username)) {\n                        cipher.login.username = val;\n                        continue;\n                    } else if (property === 'password') {\n                        cipher.login.password = val;\n                        continue;\n                    } else if (property === 'totp') {\n                        cipher.login.totp = val;\n                        continue;\n                    } else if ((cipher.login.uris == null || cipher.login.uris.length === 0) &&\n                        this.uriFieldNames.indexOf(property) > -1) {\n                        cipher.login.uris = this.makeUriArray(val);\n                        continue;\n                    }\n                }\n\n                this.processKvp(cipher, property, val);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordDragonXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const records = doc.querySelectorAll('PasswordManager > record');\n        Array.from(records).forEach((record) => {\n            const category = this.querySelectorDirectChild(record, 'Category');\n            const categoryText = category != null && !this.isNullOrWhitespace(category.textContent) &&\n                category.textContent !== 'Unfiled' ? category.textContent : null;\n            this.processFolder(result, categoryText);\n\n            const accountName = this.querySelectorDirectChild(record, 'Account-Name');\n            const userId = this.querySelectorDirectChild(record, 'User-Id');\n            const password = this.querySelectorDirectChild(record, 'Password');\n            const url = this.querySelectorDirectChild(record, 'URL');\n            const notes = this.querySelectorDirectChild(record, 'Notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = accountName != null ? this.getValueOrDefault(accountName.textContent, '--') : '--';\n            cipher.notes = notes != null ? this.getValueOrDefault(notes.textContent) : '';\n            cipher.login.username = userId != null ? this.getValueOrDefault(userId.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            const attributes: string[] = [];\n            for (let i = 1; i <= 10; i++) {\n                attributes.push('Attribute-' + i);\n            }\n\n            this.querySelectorAllDirectChild(record, attributes.join(',')).forEach((attr) => {\n                if (this.isNullOrWhitespace(attr.textContent) || attr.textContent === 'null') {\n                    return;\n                }\n                this.processKvp(cipher, attr.tagName, attr.textContent);\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordSafeXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const passwordSafe = doc.querySelector('passwordsafe');\n        if (passwordSafe == null) {\n            result.errorMessage = 'Missing `passwordsafe` node.';\n            result.success = false;\n            return result;\n        }\n\n        const notesDelimiter = passwordSafe.getAttribute('delimiter');\n        const entries = doc.querySelectorAll('passwordsafe > entry');\n        Array.from(entries).forEach((entry) => {\n            const group = this.querySelectorDirectChild(entry, 'group');\n            const groupText = group != null && !this.isNullOrWhitespace(group.textContent) ?\n                group.textContent.split('.').join('/') : null;\n            this.processFolder(result, groupText);\n\n            const title = this.querySelectorDirectChild(entry, 'title');\n            const username = this.querySelectorDirectChild(entry, 'username');\n            const email = this.querySelectorDirectChild(entry, 'email');\n            const password = this.querySelectorDirectChild(entry, 'password');\n            const url = this.querySelectorDirectChild(entry, 'url');\n            const notes = this.querySelectorDirectChild(entry, 'notes');\n            const cipher = this.initLoginCipher();\n            cipher.name = title != null ? this.getValueOrDefault(title.textContent, '--') : '--';\n            cipher.notes = notes != null ?\n                this.getValueOrDefault(notes.textContent, '').split(notesDelimiter).join('\\n') : null;\n            cipher.login.username = username != null ? this.getValueOrDefault(username.textContent) : null;\n            cipher.login.password = password != null ? this.getValueOrDefault(password.textContent) : null;\n            cipher.login.uris = url != null ? this.makeUriArray(url.textContent) : null;\n\n            if (this.isNullOrWhitespace(cipher.login.username) && email != null) {\n                cipher.login.username = this.getValueOrDefault(email.textContent);\n            } else if (email != null && !this.isNullOrWhitespace(email.textContent)) {\n                cipher.notes = this.isNullOrWhitespace(cipher.notes) ? 'Email: ' + email.textContent\n                    : (cipher.notes + '\\n' + 'Email: ' + email.textContent);\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class PasswordWalletTxtImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 1) {\n                return;\n            }\n            if (value.length > 5) {\n                this.processFolder(result, value[5]);\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            if (value.length > 4) {\n                cipher.notes = this.getValueOrDefault(value[4], '').split('¬').join('\\n');\n            }\n            if (value.length > 2) {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n            }\n            if (value.length > 3) {\n                cipher.login.password = this.getValueOrDefault(value[3]);\n            }\n            if (value.length > 1) {\n                cipher.login.uris = this.makeUriArray(value[1]);\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { CipherType } from '../enums/cipherType';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\n\nexport class RememBearCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.trash === 'true') {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.name);\n            cipher.notes = this.getValueOrDefault(value.notes);\n            if (value.type === 'LoginItem') {\n                cipher.login.uris = this.makeUriArray(value.website);\n                cipher.login.password = this.getValueOrDefault(value.password);\n                cipher.login.username = this.getValueOrDefault(value.username);\n            } else if (value.type === 'CreditCardItem') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                cipher.card.code = this.getValueOrDefault(value.verification);\n\n                try {\n                    const expMonth = this.getValueOrDefault(value.expiryMonth);\n                    if (expMonth != null) {\n                        const expMonthNumber = parseInt(expMonth, null);\n                        if (expMonthNumber != null && expMonthNumber >= 1 && expMonthNumber <= 12) {\n                            cipher.card.expMonth = expMonthNumber.toString();\n                        }\n                    }\n                } catch { }\n                try {\n                    const expYear = this.getValueOrDefault(value.expiryYear);\n                    if (expYear != null) {\n                        const expYearNumber = parseInt(expYear, null);\n                        if (expYearNumber != null) {\n                            cipher.card.expYear = expYearNumber.toString();\n                        }\n                    }\n                } catch { }\n\n                const pin = this.getValueOrDefault(value.pin);\n                if (pin != null) {\n                    this.processKvp(cipher, 'PIN', pin);\n                }\n                const zip = this.getValueOrDefault(value.zipCode);\n                if (zip != null) {\n                    this.processKvp(cipher, 'Zip Code', zip);\n                }\n            }\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class RoboFormCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        let i = 1;\n        results.forEach((value) => {\n            const folder = !this.isNullOrWhitespace(value.Folder) && value.Folder.startsWith('/') ?\n                value.Folder.replace('/', '') : value.Folder;\n            const folderName = !this.isNullOrWhitespace(folder) ? folder : null;\n            this.processFolder(result, folderName);\n\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value.Note);\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value.Login);\n            cipher.login.password = this.getValueOrDefault(value.Pwd);\n            cipher.login.uris = this.makeUriArray(value.Url);\n\n            if (!this.isNullOrWhitespace(value.Rf_fields)) {\n                let fields: string[] = [value.Rf_fields];\n                if (value.__parsed_extra != null && value.__parsed_extra.length > 0) {\n                    fields = fields.concat(value.__parsed_extra);\n                }\n                fields.forEach((field: string) => {\n                    const parts = field.split(':');\n                    if (parts.length < 3) {\n                        return;\n                    }\n                    const key = parts[0] === '-no-name-' ? null : parts[0];\n                    const val = parts.length === 4 && parts[2] === 'rck' ? parts[1] : parts[2];\n                    this.processKvp(cipher, key, val);\n                });\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n\n            if (i === results.length && cipher.name === '--' && this.isNullOrWhitespace(cipher.login.password)) {\n                return;\n            }\n\n            result.ciphers.push(cipher);\n            i++;\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { FolderView } from '../models/view/folderView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nexport class SafeInCloudXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const db = doc.querySelector('database');\n        if (db == null) {\n            result.errorMessage = 'Missing `database` node.';\n            result.success = false;\n            return result;\n        }\n\n        const foldersMap = new Map<string, number>();\n\n        Array.from(doc.querySelectorAll('database > label')).forEach((labelEl) => {\n            const name = labelEl.getAttribute('name');\n            const id = labelEl.getAttribute('id');\n            if (!this.isNullOrWhitespace(name) && !this.isNullOrWhitespace(id)) {\n                foldersMap.set(id, result.folders.length);\n                const folder = new FolderView();\n                folder.name = name;\n                result.folders.push(folder);\n            }\n        });\n\n        Array.from(doc.querySelectorAll('database > card')).forEach((cardEl) => {\n            if (cardEl.getAttribute('template') === 'true') {\n                return;\n            }\n\n            const labelIdEl = this.querySelectorDirectChild(cardEl, 'label_id');\n            if (labelIdEl != null) {\n                const labelId = labelIdEl.textContent;\n                if (!this.isNullOrWhitespace(labelId) && foldersMap.has(labelId)) {\n                    result.folderRelationships.push([result.ciphers.length, foldersMap.get(labelId)]);\n                }\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(cardEl.getAttribute('title'), '--');\n\n            const cardType = cardEl.getAttribute('type');\n            if (cardType === 'note') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n            } else {\n                Array.from(this.querySelectorAllDirectChild(cardEl, 'field')).forEach((fieldEl) => {\n                    const text = fieldEl.textContent;\n                    if (this.isNullOrWhitespace(text)) {\n                        return;\n                    }\n                    const name = fieldEl.getAttribute('name');\n                    const fieldType = this.getValueOrDefault(fieldEl.getAttribute('type'), '').toLowerCase();\n                    if (fieldType === 'login') {\n                        cipher.login.username = text;\n                    } else if (fieldType === 'password') {\n                        cipher.login.password = text;\n                    } else if (fieldType === 'one_time_password') {\n                        cipher.login.totp = text;\n                    } else if (fieldType === 'notes') {\n                        cipher.notes += (text + '\\n');\n                    } else if (fieldType === 'weblogin' || fieldType === 'website') {\n                        cipher.login.uris = this.makeUriArray(text);\n                    } else {\n                        this.processKvp(cipher, name, text);\n                    }\n                });\n            }\n\n            Array.from(this.querySelectorAllDirectChild(cardEl, 'notes')).forEach((notesEl) => {\n                cipher.notes += (notesEl.textContent + '\\n');\n            });\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SaferPassCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(this.nameFromUrl(value.url), '--');\n            cipher.notes = this.getValueOrDefault(value.notes);\n            cipher.login.username = this.getValueOrDefault(value.username);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class SecureSafeCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Title);\n            cipher.notes = this.getValueOrDefault(value.Comment);\n            cipher.login.uris = this.makeUriArray(value.Url);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.username = this.getValueOrDefault(value.Username);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view/cipherView';\n\nexport class SplashIdCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length < 3) {\n                return;\n            }\n\n            this.processFolder(result, this.getValueOrDefault(value[value.length - 1]));\n            const cipher = this.initLoginCipher();\n            cipher.notes = this.getValueOrDefault(value[value.length - 2], '');\n            cipher.name = this.getValueOrDefault(value[1], '--');\n\n            if (value[0] === 'Web Logins' || value[0] === 'Servers' || value[0] === 'Email Accounts') {\n                cipher.login.username = this.getValueOrDefault(value[2]);\n                cipher.login.password = this.getValueOrDefault(value[3]);\n                cipher.login.uris = this.makeUriArray(value[4]);\n                this.parseFieldsToNotes(cipher, 5, value);\n            } else {\n                this.parseFieldsToNotes(cipher, 2, value);\n            }\n\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private parseFieldsToNotes(cipher: CipherView, startIndex: number, value: any) {\n        // last 3 rows do not get parsed\n        for (let i = startIndex; i < value.length - 3; i++) {\n            if (this.isNullOrWhitespace(value[i])) {\n                continue;\n            }\n            cipher.notes += (value[i] + '\\n');\n        }\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class StickyPasswordXmlImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const doc = this.parseXml(data);\n        if (doc == null) {\n            result.success = false;\n            return result;\n        }\n\n        const loginNodes = doc.querySelectorAll('root > Database > Logins > Login');\n        Array.from(loginNodes).forEach((loginNode) => {\n            const accountId = loginNode.getAttribute('ID');\n            if (this.isNullOrWhitespace(accountId)) {\n                return;\n            }\n\n            const usernameText = loginNode.getAttribute('Name');\n            const passwordText = loginNode.getAttribute('Password');\n            let titleText: string = null;\n            let linkText: string = null;\n            let notesText: string = null;\n            let groupId: string = null;\n            let groupText: string = null;\n\n            const accountLogin = doc.querySelector('root > Database > Accounts > Account > ' +\n                'LoginLinks > Login[SourceLoginID=\"' + accountId + '\"]');\n            if (accountLogin != null) {\n                const account = accountLogin.parentElement.parentElement;\n                if (account != null) {\n                    titleText = account.getAttribute('Name');\n                    linkText = account.getAttribute('Link');\n                    groupId = account.getAttribute('ParentID');\n                    notesText = account.getAttribute('Comments');\n                    if (!this.isNullOrWhitespace(notesText)) {\n                        notesText = notesText.split('/n').join('\\n');\n                    }\n                }\n            }\n\n            if (!this.isNullOrWhitespace(groupId)) {\n                groupText = this.buildGroupText(doc, groupId, '');\n                this.processFolder(result, groupText);\n            }\n\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(titleText, '--');\n            cipher.notes = this.getValueOrDefault(notesText);\n            cipher.login.username = this.getValueOrDefault(usernameText);\n            cipher.login.password = this.getValueOrDefault(passwordText);\n            cipher.login.uris = this.makeUriArray(linkText);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    buildGroupText(doc: Document, groupId: string, groupText: string): string {\n        const group = doc.querySelector('root > Database > Groups > Group[ID=\"' + groupId + '\"]');\n        if (group == null) {\n            return groupText;\n        }\n        if (!this.isNullOrWhitespace(groupText)) {\n            groupText = '/' + groupText;\n        }\n        groupText = group.getAttribute('Name') + groupText;\n        return this.buildGroupText(doc, group.getAttribute('ParentID'), groupText);\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nimport { CardView } from '../models/view/cardView';\nimport { SecureNoteView } from '../models/view/secureNoteView';\n\nimport { CipherType } from '../enums/cipherType';\nimport { SecureNoteType } from '../enums/secureNoteType';\n\nconst PropertiesToIgnore = ['kind', 'autologin', 'favorite', 'hexcolor', 'protectedwithpassword', 'subdomainonly',\n    'type', 'tk_export_version', 'note', 'title', 'document_content',\n];\n\nexport class TrueKeyCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.favorite, '').toLowerCase() === 'true';\n            cipher.name = this.getValueOrDefault(value.name, '--');\n            cipher.notes = this.getValueOrDefault(value.memo, '');\n            cipher.login.username = this.getValueOrDefault(value.login);\n            cipher.login.password = this.getValueOrDefault(value.password);\n            cipher.login.uris = this.makeUriArray(value.url);\n\n            if (value.kind !== 'login') {\n                cipher.name = this.getValueOrDefault(value.title, '--');\n                cipher.notes = this.getValueOrDefault(value.note, '');\n            }\n\n            if (value.kind === 'cc') {\n                cipher.type = CipherType.Card;\n                cipher.card = new CardView();\n                cipher.card.cardholderName = this.getValueOrDefault(value.cardholder);\n                cipher.card.number = this.getValueOrDefault(value.number);\n                cipher.card.brand = this.getCardBrand(cipher.card.number);\n                if (!this.isNullOrWhitespace(value.expiryDate)) {\n                    try {\n                        const expDate = new Date(value.expiryDate);\n                        cipher.card.expYear = expDate.getFullYear().toString();\n                        cipher.card.expMonth = (expDate.getMonth() + 1).toString();\n                    } catch { }\n                }\n            } else if (value.kind !== 'login') {\n                cipher.type = CipherType.SecureNote;\n                cipher.secureNote = new SecureNoteView();\n                cipher.secureNote.type = SecureNoteType.Generic;\n                if (!this.isNullOrWhitespace(cipher.notes)) {\n                    cipher.notes = this.getValueOrDefault(value.document_content, '');\n                }\n                for (const property in value) {\n                    if (value.hasOwnProperty(property) && PropertiesToIgnore.indexOf(property.toLowerCase()) < 0 &&\n                        !this.isNullOrWhitespace(value[property])) {\n                        this.processKvp(cipher, property, value[property]);\n                    }\n                }\n            }\n\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class UpmCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, false);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (value.length !== 5) {\n                return;\n            }\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value[0], '--');\n            cipher.notes = this.getValueOrDefault(value[4]);\n            cipher.login.username = this.getValueOrDefault(value[1]);\n            cipher.login.password = this.getValueOrDefault(value[2]);\n            cipher.login.uris = this.makeUriArray(value[3]);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\n\nexport class YotiCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            const cipher = this.initLoginCipher();\n            cipher.name = this.getValueOrDefault(value.Name, '--');\n            cipher.login.username = this.getValueOrDefault(value['User name']);\n            cipher.login.password = this.getValueOrDefault(value.Password);\n            cipher.login.uris = this.makeUriArray(value.URL);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        result.success = true;\n        return result;\n    }\n}\n","import { BaseImporter } from './baseImporter';\nimport { Importer } from './importer';\n\nimport { ImportResult } from '../models/domain/importResult';\nimport { CipherView } from '../models/view';\n\nexport class ZohoVaultCsvImporter extends BaseImporter implements Importer {\n    parse(data: string): ImportResult {\n        const result = new ImportResult();\n        const results = this.parseCsv(data, true);\n        if (results == null) {\n            result.success = false;\n            return result;\n        }\n\n        results.forEach((value) => {\n            if (this.isNullOrWhitespace(value['Password Name']) && this.isNullOrWhitespace(value['Secret Name'])) {\n                return;\n            }\n            this.processFolder(result, this.getValueOrDefault(value.ChamberName));\n            const cipher = this.initLoginCipher();\n            cipher.favorite = this.getValueOrDefault(value.Favorite, '0') === '1';\n            cipher.notes = this.getValueOrDefault(value.Notes);\n            cipher.name = this.getValueOrDefault(\n                value['Password Name'], this.getValueOrDefault(value['Secret Name'], '--'));\n            cipher.login.uris = this.makeUriArray(\n                this.getValueOrDefault(value['Password URL'], this.getValueOrDefault(value['Secret URL'])));\n            this.parseData(cipher, value.SecretData);\n            this.parseData(cipher, value.CustomData);\n            this.convertToNoteIfNeeded(cipher);\n            this.cleanupCipher(cipher);\n            result.ciphers.push(cipher);\n        });\n\n        if (this.organization) {\n            this.moveFoldersToCollections(result);\n        }\n\n        result.success = true;\n        return result;\n    }\n\n    private parseData(cipher: CipherView, data: string) {\n        if (this.isNullOrWhitespace(data)) {\n            return;\n        }\n        const dataLines = this.splitNewLine(data);\n        dataLines.forEach((line) => {\n            const delimPosition = line.indexOf(':');\n            if (delimPosition < 0) {\n                return;\n            }\n            const field = line.substring(0, delimPosition);\n            const value = line.length > delimPosition ? line.substring(delimPosition + 1) : null;\n            if (this.isNullOrWhitespace(field) || this.isNullOrWhitespace(value) || field === 'SecretType') {\n                return;\n            }\n            const fieldLower = field.toLowerCase();\n            if (cipher.login.username == null && this.usernameFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.username = value;\n            } else if (cipher.login.password == null && this.passwordFieldNames.indexOf(fieldLower) > -1) {\n                cipher.login.password = value;\n            } else {\n                this.processKvp(cipher, field, value);\n            }\n        });\n    }\n}\n","import * as signalR from '@microsoft/signalr';\nimport * as signalRMsgPack from '@microsoft/signalr-protocol-msgpack';\n\nimport { NotificationType } from '../enums/notificationType';\n\nimport { ApiService } from '../abstractions/api.service';\nimport { AppIdService } from '../abstractions/appId.service';\nimport { EnvironmentService } from '../abstractions/environment.service';\nimport { NotificationsService as NotificationsServiceAbstraction } from '../abstractions/notifications.service';\nimport { SyncService } from '../abstractions/sync.service';\nimport { UserService } from '../abstractions/user.service';\nimport { VaultTimeoutService } from '../abstractions/vaultTimeout.service';\n\nimport {\n    NotificationResponse,\n    SyncCipherNotification,\n    SyncFolderNotification,\n} from '../models/response/notificationResponse';\n\nexport class NotificationsService implements NotificationsServiceAbstraction {\n    private signalrConnection: signalR.HubConnection;\n    private url: string;\n    private connected = false;\n    private inited = false;\n    private inactive = false;\n    private reconnectTimer: any = null;\n\n    constructor(private userService: UserService, private syncService: SyncService,\n        private appIdService: AppIdService, private apiService: ApiService,\n        private vaultTimeoutService: VaultTimeoutService, private logoutCallback: () => Promise<void>) { }\n\n    async init(environmentService: EnvironmentService): Promise<void> {\n        this.inited = false;\n        this.url = 'https://notifications.bitwarden.com';\n        if (environmentService.notificationsUrl != null) {\n            this.url = environmentService.notificationsUrl;\n        } else if (environmentService.baseUrl != null) {\n            this.url = environmentService.baseUrl + '/notifications';\n        }\n\n        // Set notifications server URL to `https://-` to effectively disable communication\n        // with the notifications server from the client app\n        if (this.url === 'https://-') {\n            return;\n        }\n\n        if (this.signalrConnection != null) {\n            this.signalrConnection.off('ReceiveMessage');\n            this.signalrConnection.off('Heartbeat');\n            await this.signalrConnection.stop();\n            this.connected = false;\n            this.signalrConnection = null;\n        }\n\n        this.signalrConnection = new signalR.HubConnectionBuilder()\n            .withUrl(this.url + '/hub', {\n                accessTokenFactory: () => this.apiService.getActiveBearerToken(),\n                skipNegotiation: true,\n                transport: signalR.HttpTransportType.WebSockets,\n            })\n            .withHubProtocol(new signalRMsgPack.MessagePackHubProtocol())\n            // .configureLogging(signalR.LogLevel.Trace)\n            .build();\n\n        this.signalrConnection.on('ReceiveMessage',\n            (data: any) => this.processNotification(new NotificationResponse(data)));\n        this.signalrConnection.on('Heartbeat',\n            (data: any) => { /*console.log('Heartbeat!');*/ });\n        this.signalrConnection.onclose(() => {\n            this.connected = false;\n            this.reconnect(true);\n        });\n        this.inited = true;\n        if (await this.isAuthedAndUnlocked()) {\n            await this.reconnect(false);\n        }\n    }\n\n    async updateConnection(sync = false): Promise<void> {\n        if (!this.inited) {\n            return;\n        }\n        try {\n            if (await this.isAuthedAndUnlocked()) {\n                await this.reconnect(sync);\n            } else {\n                await this.signalrConnection.stop();\n            }\n        } catch (e) {\n            // tslint:disable-next-line\n            console.error(e.toString());\n        }\n    }\n\n    async reconnectFromActivity(): Promise<void> {\n        this.inactive = false;\n        if (this.inited && !this.connected) {\n            await this.reconnect(true);\n        }\n    }\n\n    async disconnectFromInactivity(): Promise<void> {\n        this.inactive = true;\n        if (this.inited && this.connected) {\n            await this.signalrConnection.stop();\n        }\n    }\n\n    private async processNotification(notification: NotificationResponse) {\n        const appId = await this.appIdService.getAppId();\n        if (notification == null || notification.contextId === appId) {\n            return;\n        }\n\n        const isAuthenticated = await this.userService.isAuthenticated();\n        const payloadUserId = notification.payload.userId || notification.payload.UserId;\n        const myUserId = await this.userService.getUserId();\n        if (isAuthenticated && payloadUserId != null && payloadUserId !== myUserId) {\n            return;\n        }\n\n        switch (notification.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherUpdate:\n                await this.syncService.syncUpsertCipher(notification.payload as SyncCipherNotification,\n                    notification.type === NotificationType.SyncCipherUpdate);\n                break;\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncLoginDelete:\n                await this.syncService.syncDeleteCipher(notification.payload as SyncCipherNotification);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderUpdate:\n                await this.syncService.syncUpsertFolder(notification.payload as SyncFolderNotification,\n                    notification.type === NotificationType.SyncFolderUpdate);\n                break;\n            case NotificationType.SyncFolderDelete:\n                await this.syncService.syncDeleteFolder(notification.payload as SyncFolderNotification);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncSettings:\n                if (isAuthenticated) {\n                    await this.syncService.fullSync(false);\n                }\n                break;\n            case NotificationType.SyncOrgKeys:\n                if (isAuthenticated) {\n                    await this.apiService.refreshIdentityToken();\n                    await this.syncService.fullSync(true);\n                    // Stop so a reconnect can be made\n                    await this.signalrConnection.stop();\n                }\n                break;\n            case NotificationType.LogOut:\n                if (isAuthenticated) {\n                    this.logoutCallback();\n                }\n                break;\n            default:\n                break;\n        }\n    }\n\n    private async reconnect(sync: boolean) {\n        if (this.reconnectTimer != null) {\n            clearTimeout(this.reconnectTimer);\n            this.reconnectTimer = null;\n        }\n        if (this.connected || !this.inited || this.inactive) {\n            return;\n        }\n        const authedAndUnlocked = await this.isAuthedAndUnlocked();\n        if (!authedAndUnlocked) {\n            return;\n        }\n\n        try {\n            await this.signalrConnection.start();\n            this.connected = true;\n            if (sync) {\n                await this.syncService.fullSync(false);\n            }\n        } catch { }\n\n        if (!this.connected) {\n            this.reconnectTimer = setTimeout(() => this.reconnect(sync), this.random(120000, 300000));\n        }\n    }\n\n    private async isAuthedAndUnlocked() {\n        if (await this.userService.isAuthenticated()) {\n            const locked = await this.vaultTimeoutService.isLocked();\n            return !locked;\n        }\n        return false;\n    }\n\n    private random(min: number, max: number) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n}\n","import { BaseResponse } from './baseResponse';\n\nimport { NotificationType } from '../../enums/notificationType';\n\nexport class NotificationResponse extends BaseResponse {\n    contextId: string;\n    type: NotificationType;\n    payload: any;\n\n    constructor(response: any) {\n        super(response);\n        this.contextId = this.getResponseProperty('ContextId');\n        this.type = this.getResponseProperty('Type');\n\n        const payload = this.getResponseProperty('Payload');\n        switch (this.type) {\n            case NotificationType.SyncCipherCreate:\n            case NotificationType.SyncCipherDelete:\n            case NotificationType.SyncCipherUpdate:\n            case NotificationType.SyncLoginDelete:\n                this.payload = new SyncCipherNotification(payload);\n                break;\n            case NotificationType.SyncFolderCreate:\n            case NotificationType.SyncFolderDelete:\n            case NotificationType.SyncFolderUpdate:\n                this.payload = new SyncFolderNotification(payload);\n                break;\n            case NotificationType.SyncVault:\n            case NotificationType.SyncCiphers:\n            case NotificationType.SyncOrgKeys:\n            case NotificationType.SyncSettings:\n            case NotificationType.LogOut:\n                this.payload = new UserNotification(payload);\n                break;\n            default:\n                break;\n        }\n    }\n}\n\nexport class SyncCipherNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    organizationId: string;\n    collectionIds: string[];\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.organizationId = this.getResponseProperty('OrganizationId');\n        this.collectionIds = this.getResponseProperty('CollectionIds');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class SyncFolderNotification extends BaseResponse {\n    id: string;\n    userId: string;\n    revisionDate: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.id = this.getResponseProperty('Id');\n        this.userId = this.getResponseProperty('UserId');\n        this.revisionDate = new Date(this.getResponseProperty('RevisionDate'));\n    }\n}\n\nexport class UserNotification extends BaseResponse {\n    userId: string;\n    date: Date;\n\n    constructor(response: any) {\n        super(response);\n        this.userId = this.getResponseProperty('UserId');\n        this.date = new Date(this.getResponseProperty('Date'));\n    }\n}\n","import { PolicyService as PolicyServiceAbstraction } from '../abstractions/policy.service';\nimport { StorageService } from '../abstractions/storage.service';\nimport { UserService } from '../abstractions/user.service';\n\nimport { PolicyData } from '../models/data/policyData';\n\nimport { MasterPasswordPolicyOptions } from '../models/domain/masterPasswordPolicyOptions';\nimport { Policy } from '../models/domain/policy';\n\nimport { PolicyType } from '../enums/policyType';\n\nconst Keys = {\n    policiesPrefix: 'policies_',\n};\n\nexport class PolicyService implements PolicyServiceAbstraction {\n    policyCache: Policy[];\n\n    constructor(private userService: UserService, private storageService: StorageService) {\n    }\n\n    clearCache(): void {\n        this.policyCache = null;\n    }\n\n    async getAll(type?: PolicyType): Promise<Policy[]> {\n        if (this.policyCache == null) {\n            const userId = await this.userService.getUserId();\n            const policies = await this.storageService.get<{ [id: string]: PolicyData; }>(\n                Keys.policiesPrefix + userId);\n            const response: Policy[] = [];\n            for (const id in policies) {\n                if (policies.hasOwnProperty(id)) {\n                    response.push(new Policy(policies[id]));\n                }\n            }\n            this.policyCache = response;\n        }\n        if (type != null) {\n            return this.policyCache.filter((p) => p.type === type);\n        } else {\n            return this.policyCache;\n        }\n    }\n\n    async replace(policies: { [id: string]: PolicyData; }): Promise<any> {\n        const userId = await this.userService.getUserId();\n        await this.storageService.save(Keys.policiesPrefix + userId, policies);\n        this.policyCache = null;\n    }\n\n    async clear(userId: string): Promise<any> {\n        await this.storageService.remove(Keys.policiesPrefix + userId);\n        this.policyCache = null;\n    }\n\n    async getMasterPasswordPolicyOptions(policies?: Policy[]): Promise<MasterPasswordPolicyOptions> {\n        let enforcedOptions: MasterPasswordPolicyOptions = null;\n\n        if (policies == null) {\n            policies = await this.getAll(PolicyType.MasterPassword);\n        } else {\n            policies = policies.filter((p) => p.type === PolicyType.MasterPassword);\n        }\n\n        if (policies == null || policies.length === 0) {\n            return enforcedOptions;\n        }\n\n        policies.forEach((currentPolicy) => {\n            if (!currentPolicy.enabled || currentPolicy.data == null) {\n                return;\n            }\n\n            if (enforcedOptions == null) {\n                enforcedOptions = new MasterPasswordPolicyOptions();\n            }\n\n            if (currentPolicy.data.minComplexity != null\n                && currentPolicy.data.minComplexity > enforcedOptions.minComplexity) {\n                enforcedOptions.minComplexity = currentPolicy.data.minComplexity;\n            }\n\n            if (currentPolicy.data.minLength != null\n                && currentPolicy.data.minLength > enforcedOptions.minLength) {\n                enforcedOptions.minLength = currentPolicy.data.minLength;\n            }\n\n            if (currentPolicy.data.requireUpper) {\n                enforcedOptions.requireUpper = true;\n            }\n\n            if (currentPolicy.data.requireLower) {\n                enforcedOptions.requireLower = true;\n            }\n\n            if (currentPolicy.data.requireNumbers) {\n                enforcedOptions.requireNumbers = true;\n            }\n\n            if (currentPolicy.data.requireSpecial) {\n                enforcedOptions.requireSpecial = true;\n            }\n        });\n\n        return enforcedOptions;\n    }\n\n    evaluateMasterPassword(passwordStrength: number, newPassword: string,\n        enforcedPolicyOptions: MasterPasswordPolicyOptions): boolean {\n        if (enforcedPolicyOptions == null) {\n            return true;\n        }\n\n        if (enforcedPolicyOptions.minComplexity > 0 && enforcedPolicyOptions.minComplexity > passwordStrength) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.minLength > 0 && enforcedPolicyOptions.minLength > newPassword.length) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireUpper && newPassword.toLocaleLowerCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireLower && newPassword.toLocaleUpperCase() === newPassword) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireNumbers && !(/[0-9]/.test(newPassword))) {\n            return false;\n        }\n\n        if (enforcedPolicyOptions.requireSpecial && !(/[!@#$%\\^&*]/g.test(newPassword))) {\n            return false;\n        }\n\n        return true;\n    }\n}\n","import Domain from './domainBase';\n\nexport class MasterPasswordPolicyOptions extends Domain {\n    minComplexity: number = 0;\n    minLength: number = 0;\n    requireUpper: boolean = false;\n    requireLower: boolean = false;\n    requireNumbers: boolean = false;\n    requireSpecial: boolean = false;\n}\n","import * as lunr from 'lunr';\n\nimport { CipherView } from '../models/view/cipherView';\n\nimport { CipherService } from '../abstractions/cipher.service';\nimport { SearchService as SearchServiceAbstraction } from '../abstractions/search.service';\n\nimport { CipherType } from '../enums/cipherType';\nimport { FieldType } from '../enums/fieldType';\nimport { UriMatchType } from '../enums/uriMatchType';\n\nexport class SearchService implements SearchServiceAbstraction {\n    private indexing = false;\n    private index: lunr.Index = null;\n\n    constructor(private cipherService: CipherService) {\n    }\n\n    clearIndex(): void {\n        this.index = null;\n    }\n\n    isSearchable(query: string): boolean {\n        const notSearchable = query == null || (this.index == null && query.length < 2) ||\n            (this.index != null && query.length < 2 && query.indexOf('>') !== 0);\n        return !notSearchable;\n    }\n\n    async indexCiphers(): Promise<void> {\n        if (this.indexing) {\n            return;\n        }\n        // tslint:disable-next-line\n        console.time('search indexing');\n        this.indexing = true;\n        this.index = null;\n        const builder = new lunr.Builder();\n        builder.ref('id');\n        builder.field('shortid', { boost: 100, extractor: (c: CipherView) => c.id.substr(0, 8) });\n        builder.field('name', { boost: 10 });\n        builder.field('subtitle', {\n            boost: 5,\n            extractor: (c: CipherView) => {\n                if (c.subTitle != null && c.type === CipherType.Card) {\n                    return c.subTitle.replace(/\\*/g, '');\n                }\n                return c.subTitle;\n            },\n        });\n        builder.field('notes');\n        builder.field('login.username', {\n            extractor: (c: CipherView) => c.type === CipherType.Login && c.login != null ? c.login.username : null,\n        });\n        builder.field('login.uris', { boost: 2, extractor: (c: CipherView) => this.uriExtractor(c) });\n        builder.field('fields', { extractor: (c: CipherView) => this.fieldExtractor(c, false) });\n        builder.field('fields_joined', { extractor: (c: CipherView) => this.fieldExtractor(c, true) });\n        builder.field('attachments', { extractor: (c: CipherView) => this.attachmentExtractor(c, false) });\n        builder.field('attachments_joined',\n            { extractor: (c: CipherView) => this.attachmentExtractor(c, true) });\n        builder.field('organizationid', { extractor: (c: CipherView) => c.organizationId });\n        const ciphers = await this.cipherService.getAllDecrypted();\n        ciphers.forEach((c) => builder.add(c));\n        this.index = builder.build();\n        this.indexing = false;\n        // tslint:disable-next-line\n        console.timeEnd('search indexing');\n    }\n\n    async searchCiphers(query: string,\n        filter: (((cipher: CipherView) => boolean) | (((cipher: CipherView) => boolean)[])) = null,\n        ciphers: CipherView[] = null):\n        Promise<CipherView[]> {\n        const results: CipherView[] = [];\n        if (query != null) {\n            query = query.trim().toLowerCase();\n        }\n        if (query === '') {\n            query = null;\n        }\n\n        if (ciphers == null) {\n            ciphers = await this.cipherService.getAllDecrypted();\n        }\n\n        if (filter != null && Array.isArray(filter) && filter.length > 0) {\n            ciphers = ciphers.filter((c) => filter.every((f) => f == null || f(c)));\n        } else if (filter != null) {\n            ciphers = ciphers.filter(filter as (cipher: CipherView) => boolean);\n        }\n\n        if (!this.isSearchable(query)) {\n            return ciphers;\n        }\n\n        if (this.indexing) {\n            await new Promise((r) => setTimeout(r, 250));\n            if (this.indexing) {\n                await new Promise((r) => setTimeout(r, 500));\n            }\n        }\n\n        const index = this.getIndexForSearch();\n        if (index == null) {\n            // Fall back to basic search if index is not available\n            return this.searchCiphersBasic(ciphers, query);\n        }\n\n        const ciphersMap = new Map<string, CipherView>();\n        ciphers.forEach((c) => ciphersMap.set(c.id, c));\n\n        let searchResults: lunr.Index.Result[] = null;\n        const isQueryString = query != null && query.length > 1 && query.indexOf('>') === 0;\n        if (isQueryString) {\n            try {\n                searchResults = index.search(query.substr(1).trim());\n            } catch { }\n        } else {\n            // tslint:disable-next-line\n            const soWild = lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING;\n            searchResults = index.query((q) => {\n                lunr.tokenizer(query).forEach((token) => {\n                    const t = token.toString();\n                    q.term(t, { fields: ['name'], wildcard: soWild });\n                    q.term(t, { fields: ['subtitle'], wildcard: soWild });\n                    q.term(t, { fields: ['login.uris'], wildcard: soWild });\n                    q.term(t, {});\n                });\n            });\n        }\n\n        if (searchResults != null) {\n            searchResults.forEach((r) => {\n                if (ciphersMap.has(r.ref)) {\n                    results.push(ciphersMap.get(r.ref));\n                }\n            });\n        }\n        return results;\n    }\n\n    searchCiphersBasic(ciphers: CipherView[], query: string, deleted: boolean = false) {\n        query = query.trim().toLowerCase();\n        return ciphers.filter((c) => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (query.length >= 8 && c.id.startsWith(query)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(query) > -1) {\n                return true;\n            }\n            return false;\n        });\n    }\n\n    getIndexForSearch(): lunr.Index {\n        return this.index;\n    }\n\n    private fieldExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasFields) {\n            return null;\n        }\n        let fields: string[] = [];\n        c.fields.forEach((f) => {\n            if (f.name != null) {\n                fields.push(f.name);\n            }\n            if (f.type === FieldType.Text && f.value != null) {\n                fields.push(f.value);\n            }\n        });\n        fields = fields.filter((f) => f.trim() !== '');\n        if (fields.length === 0) {\n            return null;\n        }\n        return joined ? fields.join(' ') : fields;\n    }\n\n    private attachmentExtractor(c: CipherView, joined: boolean) {\n        if (!c.hasAttachments) {\n            return null;\n        }\n        let attachments: string[] = [];\n        c.attachments.forEach((a) => {\n            if (a != null && a.fileName != null) {\n                if (joined && a.fileName.indexOf('.') > -1) {\n                    attachments.push(a.fileName.substr(0, a.fileName.lastIndexOf('.')));\n                } else {\n                    attachments.push(a.fileName);\n                }\n            }\n        });\n        attachments = attachments.filter((f) => f.trim() !== '');\n        if (attachments.length === 0) {\n            return null;\n        }\n        return joined ? attachments.join(' ') : attachments;\n    }\n\n    private uriExtractor(c: CipherView) {\n        if (c.type !== CipherType.Login || c.login == null || !c.login.hasUris) {\n            return null;\n        }\n        const uris: string[] = [];\n        c.login.uris.forEach((u) => {\n            if (u.uri == null || u.uri === '') {\n                return;\n            }\n            if (u.hostname != null) {\n                uris.push(u.hostname);\n                return;\n            }\n            let uri = u.uri;\n            if (u.match !== UriMatchType.RegularExpression) {\n                const protocolIndex = uri.indexOf('://');\n                if (protocolIndex > -1) {\n                    uri = uri.substr(protocolIndex + 3);\n                }\n                const queryIndex = uri.search(/\\?|&|#/);\n                if (queryIndex > -1) {\n                    uri = uri.substring(0, queryIndex);\n                }\n            }\n            uris.push(uri);\n        });\n        return uris.length > 0 ? uris : null;\n    }\n}\n","import * as forge from 'node-forge';\n\nimport { CryptoFunctionService } from '../abstractions/cryptoFunction.service';\nimport { PlatformUtilsService } from '../abstractions/platformUtils.service';\n\nimport { Utils } from '../misc/utils';\n\nimport { DecryptParameters } from '../models/domain/decryptParameters';\nimport { SymmetricCryptoKey } from '../models/domain/symmetricCryptoKey';\n\nexport class WebCryptoFunctionService implements CryptoFunctionService {\n    private crypto: Crypto;\n    private subtle: SubtleCrypto;\n    private isIE: boolean;\n    private isOldSafari: boolean;\n\n    constructor(private win: Window, private platformUtilsService: PlatformUtilsService) {\n        this.crypto = typeof win.crypto !== 'undefined' ? win.crypto : null;\n        this.subtle = (!!this.crypto && typeof win.crypto.subtle !== 'undefined') ? win.crypto.subtle : null;\n        this.isIE = platformUtilsService.isIE();\n        const ua = win.navigator.userAgent;\n        this.isOldSafari = platformUtilsService.isSafari() &&\n            (ua.indexOf(' Version/10.') > -1 || ua.indexOf(' Version/9.') > -1);\n    }\n\n    async pbkdf2(password: string | ArrayBuffer, salt: string | ArrayBuffer, algorithm: 'sha256' | 'sha512',\n        iterations: number): Promise<ArrayBuffer> {\n        if (this.isIE || this.isOldSafari) {\n            const forgeLen = algorithm === 'sha256' ? 32 : 64;\n            const passwordBytes = this.toByteString(password);\n            const saltBytes = this.toByteString(salt);\n            const derivedKeyBytes = (forge as any).pbkdf2(passwordBytes, saltBytes, iterations, forgeLen, algorithm);\n            return Utils.fromByteStringToArray(derivedKeyBytes).buffer;\n        }\n\n        const wcLen = algorithm === 'sha256' ? 256 : 512;\n        const passwordBuf = this.toBuf(password);\n        const saltBuf = this.toBuf(salt);\n\n        const pbkdf2Params: Pbkdf2Params = {\n            name: 'PBKDF2',\n            salt: saltBuf,\n            iterations: iterations,\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', passwordBuf, { name: 'PBKDF2' } as any,\n            false, ['deriveBits']);\n        return await this.subtle.deriveBits(pbkdf2Params, impKey, wcLen);\n    }\n\n    async hash(value: string | ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): Promise<ArrayBuffer> {\n        if ((this.isIE && algorithm === 'sha1') || algorithm === 'md5') {\n            const md = algorithm === 'md5' ? forge.md.md5.create() : forge.md.sha1.create();\n            const valueBytes = this.toByteString(value);\n            md.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(md.digest().data).buffer;\n        }\n\n        const valueBuf = this.toBuf(value);\n        return await this.subtle.digest({ name: this.toWebCryptoAlgorithm(algorithm) }, valueBuf);\n    }\n\n    async hmac(value: ArrayBuffer, key: ArrayBuffer, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<ArrayBuffer> {\n        if (this.isIE && algorithm === 'sha512') {\n            const hmac = (forge as any).hmac.create();\n            const keyBytes = this.toByteString(key);\n            const valueBytes = this.toByteString(value);\n            hmac.start(algorithm, keyBytes);\n            hmac.update(valueBytes, 'raw');\n            return Utils.fromByteStringToArray(hmac.digest().data).buffer;\n        }\n\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n\n        const impKey = await this.subtle.importKey('raw', key, signingAlgorithm, false, ['sign']);\n        return await this.subtle.sign(signingAlgorithm, impKey, value);\n    }\n\n    // Safely compare two values in a way that protects against timing attacks (Double HMAC Verification).\n    // ref: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n    // ref: https://paragonie.com/blog/2015/11/preventing-timing-attacks-on-string-comparison-with-double-hmac-strategy\n    async compare(a: ArrayBuffer, b: ArrayBuffer): Promise<boolean> {\n        const macKey = await this.randomBytes(32);\n        const signingAlgorithm = {\n            name: 'HMAC',\n            hash: { name: 'SHA-256' },\n        };\n        const impKey = await this.subtle.importKey('raw', macKey, signingAlgorithm, false, ['sign']);\n        const mac1 = await this.subtle.sign(signingAlgorithm, impKey, a);\n        const mac2 = await this.subtle.sign(signingAlgorithm, impKey, b);\n\n        if (mac1.byteLength !== mac2.byteLength) {\n            return false;\n        }\n\n        const arr1 = new Uint8Array(mac1);\n        const arr2 = new Uint8Array(mac2);\n        for (let i = 0; i < arr2.length; i++) {\n            if (arr1[i] !== arr2[i]) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    hmacFast(value: string, key: string, algorithm: 'sha1' | 'sha256' | 'sha512'): Promise<string> {\n        const hmac = (forge as any).hmac.create();\n        hmac.start(algorithm, key);\n        hmac.update(value);\n        const bytes = hmac.digest().getBytes();\n        return Promise.resolve(bytes);\n    }\n\n    async compareFast(a: string, b: string): Promise<boolean> {\n        const rand = await this.randomBytes(32);\n        const bytes = new Uint32Array(rand);\n        const buffer = forge.util.createBuffer();\n        for (let i = 0; i < bytes.length; i++) {\n            buffer.putInt32(bytes[i]);\n        }\n        const macKey = buffer.getBytes();\n\n        const hmac = (forge as any).hmac.create();\n        hmac.start('sha256', macKey);\n        hmac.update(a);\n        const mac1 = hmac.digest().getBytes();\n\n        hmac.start(null, null);\n        hmac.update(b);\n        const mac2 = hmac.digest().getBytes();\n\n        const equals = mac1 === mac2;\n        return equals;\n    }\n\n    async aesEncrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['encrypt']);\n        return await this.subtle.encrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    aesDecryptFastParameters(data: string, iv: string, mac: string, key: SymmetricCryptoKey):\n        DecryptParameters<string> {\n        const p = new DecryptParameters<string>();\n        if (key.meta != null) {\n            p.encKey = key.meta.encKeyByteString;\n            p.macKey = key.meta.macKeyByteString;\n        }\n\n        if (p.encKey == null) {\n            p.encKey = forge.util.decode64(key.encKeyB64);\n        }\n        p.data = forge.util.decode64(data);\n        p.iv = forge.util.decode64(iv);\n        p.macData = p.iv + p.data;\n        if (p.macKey == null && key.macKeyB64 != null) {\n            p.macKey = forge.util.decode64(key.macKeyB64);\n        }\n        if (mac != null) {\n            p.mac = forge.util.decode64(mac);\n        }\n\n        // cache byte string keys for later\n        if (key.meta == null) {\n            key.meta = {};\n        }\n        if (key.meta.encKeyByteString == null) {\n            key.meta.encKeyByteString = p.encKey;\n        }\n        if (p.macKey != null && key.meta.macKeyByteString == null) {\n            key.meta.macKeyByteString = p.macKey;\n        }\n\n        return p;\n    }\n\n    aesDecryptFast(parameters: DecryptParameters<string>): Promise<string> {\n        const dataBuffer = (forge as any).util.createBuffer(parameters.data);\n        const decipher = (forge as any).cipher.createDecipher('AES-CBC', parameters.encKey);\n        decipher.start({ iv: parameters.iv });\n        decipher.update(dataBuffer);\n        decipher.finish();\n        const val = decipher.output.toString('utf8');\n        return Promise.resolve(val);\n    }\n\n    async aesDecrypt(data: ArrayBuffer, iv: ArrayBuffer, key: ArrayBuffer): Promise<ArrayBuffer> {\n        const impKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' } as any, false, ['decrypt']);\n        return await this.subtle.decrypt({ name: 'AES-CBC', iv: iv }, impKey, data);\n    }\n\n    async rsaEncrypt(data: ArrayBuffer, publicKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('spki', publicKey, rsaParams, false, ['encrypt']);\n        return await this.subtle.encrypt(rsaParams, impKey, data);\n    }\n\n    async rsaDecrypt(data: ArrayBuffer, privateKey: ArrayBuffer, algorithm: 'sha1' | 'sha256'): Promise<ArrayBuffer> {\n        // Note: Edge browser requires that we specify name and hash for both key import and decrypt.\n        // We cannot use the proper types here.\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            hash: { name: this.toWebCryptoAlgorithm(algorithm) },\n        };\n        const impKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, false, ['decrypt']);\n        return await this.subtle.decrypt(rsaParams, impKey, data);\n    }\n\n    async rsaExtractPublicKey(privateKey: ArrayBuffer): Promise<ArrayBuffer> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const impPrivateKey = await this.subtle.importKey('pkcs8', privateKey, rsaParams, true, ['decrypt']);\n        const jwkPrivateKey = await this.subtle.exportKey('jwk', impPrivateKey);\n        const jwkPublicKeyParams = {\n            kty: 'RSA',\n            e: jwkPrivateKey.e,\n            n: jwkPrivateKey.n,\n            alg: 'RSA-OAEP',\n            ext: true,\n        };\n        const impPublicKey = await this.subtle.importKey('jwk', jwkPublicKeyParams, rsaParams, true, ['encrypt']);\n        return await this.subtle.exportKey('spki', impPublicKey);\n    }\n\n    async rsaGenerateKeyPair(length: 1024 | 2048 | 4096): Promise<[ArrayBuffer, ArrayBuffer]> {\n        const rsaParams = {\n            name: 'RSA-OAEP',\n            modulusLength: length,\n            publicExponent: new Uint8Array([0x01, 0x00, 0x01]), // 65537\n            // Have to specify some algorithm\n            hash: { name: this.toWebCryptoAlgorithm('sha1') },\n        };\n        const keyPair = await this.subtle.generateKey(rsaParams, true, ['encrypt', 'decrypt']);\n        const publicKey = await this.subtle.exportKey('spki', keyPair.publicKey);\n        const privateKey = await this.subtle.exportKey('pkcs8', keyPair.privateKey);\n        return [publicKey, privateKey];\n    }\n\n    randomBytes(length: number): Promise<ArrayBuffer> {\n        const arr = new Uint8Array(length);\n        this.crypto.getRandomValues(arr);\n        return Promise.resolve(arr.buffer);\n    }\n\n    private toBuf(value: string | ArrayBuffer): ArrayBuffer {\n        let buf: ArrayBuffer;\n        if (typeof (value) === 'string') {\n            buf = Utils.fromUtf8ToArray(value).buffer;\n        } else {\n            buf = value;\n        }\n        return buf;\n    }\n\n    private toByteString(value: string | ArrayBuffer): string {\n        let bytes: string;\n        if (typeof (value) === 'string') {\n            bytes = forge.util.encodeUtf8(value);\n        } else {\n            bytes = Utils.fromBufferToByteString(value);\n        }\n        return bytes;\n    }\n\n    private toWebCryptoAlgorithm(algorithm: 'sha1' | 'sha256' | 'sha512' | 'md5'): string {\n        if (algorithm === 'md5') {\n            throw new Error('MD5 is not supported in WebCrypto.');\n        }\n        return algorithm === 'sha1' ? 'SHA-1' : algorithm === 'sha256' ? 'SHA-256' : 'SHA-512';\n    }\n}\n","export class DecryptParameters<T> {\n    encKey: T;\n    data: T;\n    iv: T;\n    macKey: T;\n    mac: T;\n    macData: T;\n}\n","import * as jq from 'jquery';\nimport Swal from 'sweetalert2/src/sweetalert2.js';\n\nimport {\n    BodyOutputType,\n    Toast,\n    ToasterConfig,\n    ToasterContainerComponent,\n    ToasterService,\n} from 'angular2-toaster';\nimport { Angulartics2 } from 'angulartics2';\nimport { Angulartics2GoogleAnalytics } from 'angulartics2/ga';\n\nimport {\n    Component,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport {\n    NavigationEnd,\n    Router,\n} from '@angular/router';\n\nimport { BroadcasterService } from 'jslib/angular/services/broadcaster.service';\n\nimport { StorageService } from 'jslib/abstractions/storage.service';\n\nimport { AuthService } from 'jslib/abstractions/auth.service';\nimport { CipherService } from 'jslib/abstractions/cipher.service';\nimport { CollectionService } from 'jslib/abstractions/collection.service';\nimport { CryptoService } from 'jslib/abstractions/crypto.service';\nimport { EventService } from 'jslib/abstractions/event.service';\nimport { FolderService } from 'jslib/abstractions/folder.service';\nimport { I18nService } from 'jslib/abstractions/i18n.service';\nimport { NotificationsService } from 'jslib/abstractions/notifications.service';\nimport { PasswordGenerationService } from 'jslib/abstractions/passwordGeneration.service';\nimport { PlatformUtilsService } from 'jslib/abstractions/platformUtils.service';\nimport { PolicyService } from 'jslib/abstractions/policy.service';\nimport { SearchService } from 'jslib/abstractions/search.service';\nimport { SettingsService } from 'jslib/abstractions/settings.service';\nimport { StateService } from 'jslib/abstractions/state.service';\nimport { SyncService } from 'jslib/abstractions/sync.service';\nimport { TokenService } from 'jslib/abstractions/token.service';\nimport { UserService } from 'jslib/abstractions/user.service';\nimport { VaultTimeoutService } from 'jslib/abstractions/vaultTimeout.service';\n\nimport { ConstantsService } from 'jslib/services/constants.service';\n\nimport { RouterService } from './services/router.service';\n\nconst BroadcasterSubscriptionId = 'AppComponent';\nconst IdleTimeout = 60000 * 10; // 10 minutes\n\n@Component({\n    selector: 'app-root',\n    templateUrl: 'app.component.html',\n})\nexport class AppComponent implements OnDestroy, OnInit {\n    toasterConfig: ToasterConfig = new ToasterConfig({\n        showCloseButton: true,\n        mouseoverTimerStop: true,\n        animation: 'flyRight',\n        limit: 5,\n    });\n\n    private lastActivity: number = null;\n    private idleTimer: number = null;\n    private isIdle = false;\n\n    constructor(private angulartics2GoogleAnalytics: Angulartics2GoogleAnalytics,\n        private broadcasterService: BroadcasterService, private userService: UserService,\n        private tokenService: TokenService, private folderService: FolderService,\n        private settingsService: SettingsService, private syncService: SyncService,\n        private passwordGenerationService: PasswordGenerationService, private cipherService: CipherService,\n        private authService: AuthService, private router: Router, private analytics: Angulartics2,\n        private toasterService: ToasterService, private i18nService: I18nService,\n        private platformUtilsService: PlatformUtilsService, private ngZone: NgZone,\n        private vaultTimeoutService: VaultTimeoutService, private storageService: StorageService,\n        private cryptoService: CryptoService, private collectionService: CollectionService,\n        private sanitizer: DomSanitizer, private searchService: SearchService,\n        private notificationsService: NotificationsService, private routerService: RouterService,\n        private stateService: StateService, private eventService: EventService,\n        private policyService: PolicyService) { }\n\n    ngOnInit() {\n        this.ngZone.runOutsideAngular(() => {\n            window.onmousemove = () => this.recordActivity();\n            window.onmousedown = () => this.recordActivity();\n            window.ontouchstart = () => this.recordActivity();\n            window.onclick = () => this.recordActivity();\n            window.onscroll = () => this.recordActivity();\n            window.onkeypress = () => this.recordActivity();\n        });\n\n        this.broadcasterService.subscribe(BroadcasterSubscriptionId, async (message: any) => {\n            this.ngZone.run(async () => {\n                switch (message.command) {\n                    case 'loggedIn':\n                    case 'loggedOut':\n                    case 'unlocked':\n                        this.notificationsService.updateConnection(false);\n                        break;\n                    case 'authBlocked':\n                        this.router.navigate(['/']);\n                        break;\n                    case 'logout':\n                        this.logOut(!!message.expired);\n                        break;\n                    case 'lockVault':\n                        await this.vaultTimeoutService.lock();\n                        break;\n                    case 'locked':\n                        this.notificationsService.updateConnection(false);\n                        this.router.navigate(['lock']);\n                        break;\n                    case 'lockedUrl':\n                        window.setTimeout(() => this.routerService.setPreviousUrl(message.url), 500);\n                        break;\n                    case 'syncStarted':\n                        break;\n                    case 'syncCompleted':\n                        break;\n                    case 'upgradeOrganization':\n                        const upgradeConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('upgradeOrganizationDesc'), this.i18nService.t('upgradeOrganization'),\n                            this.i18nService.t('upgradeOrganization'), this.i18nService.t('cancel'));\n                        if (upgradeConfirmed) {\n                            this.router.navigate(['organizations', message.organizationId, 'settings', 'billing']);\n                        }\n                        break;\n                    case 'premiumRequired':\n                        const premiumConfirmed = await this.platformUtilsService.showDialog(\n                            this.i18nService.t('premiumRequiredDesc'), this.i18nService.t('premiumRequired'),\n                            this.i18nService.t('learnMore'), this.i18nService.t('cancel'));\n                        if (premiumConfirmed) {\n                            this.router.navigate(['settings/premium']);\n                        }\n                        break;\n                    case 'showToast':\n                        if (typeof message.text === \"string\" && (message.text.indexOf(\"this.subtle\") != -1 || message.text.indexOf(\"importKey\") != -1)) {\n                            message.title=\"This browser requires HTTPS to use the web vault\";\n                            message.text=\"Check the bitwarden_rs wiki for details on how to enable it\";\n                        }\n                        this.showToast(message);\n                        break;\n                    case 'analyticsEventTrack':\n                        this.analytics.eventTrack.next({\n                            action: message.action,\n                            properties: { label: message.label },\n                        });\n                        break;\n                    case 'setFullWidth':\n                        this.setFullWidth();\n                        break;\n                    default:\n                        break;\n                }\n            });\n        });\n\n        this.router.events.subscribe((event) => {\n            if (event instanceof NavigationEnd) {\n                const modals = Array.from(document.querySelectorAll('.modal'));\n                for (const modal of modals) {\n                    (jq(modal) as any).modal('hide');\n                }\n\n                if (document.querySelector('.swal-modal') != null) {\n                    Swal.close(undefined);\n                }\n            }\n        });\n\n        this.setFullWidth();\n    }\n\n    ngOnDestroy() {\n        this.broadcasterService.unsubscribe(BroadcasterSubscriptionId);\n    }\n\n    private async logOut(expired: boolean) {\n        await this.eventService.uploadEvents();\n        const userId = await this.userService.getUserId();\n\n        await Promise.all([\n            this.eventService.clearEvents(),\n            this.syncService.setLastSync(new Date(0)),\n            this.tokenService.clearToken(),\n            this.cryptoService.clearKeys(),\n            this.userService.clear(),\n            this.settingsService.clear(userId),\n            this.cipherService.clear(userId),\n            this.folderService.clear(userId),\n            this.collectionService.clear(userId),\n            this.policyService.clear(userId),\n            this.passwordGenerationService.clear(),\n            this.stateService.purge(),\n        ]);\n\n        this.searchService.clearIndex();\n        this.authService.logOut(async () => {\n            this.analytics.eventTrack.next({ action: 'Logged Out' });\n            if (expired) {\n                this.toasterService.popAsync('warning', this.i18nService.t('loggedOut'),\n                    this.i18nService.t('loginExpired'));\n            }\n\n            Swal.close();\n            this.router.navigate(['/']);\n        });\n    }\n\n    private async recordActivity() {\n        const now = (new Date()).getTime();\n        if (this.lastActivity != null && now - this.lastActivity < 250) {\n            return;\n        }\n\n        this.lastActivity = now;\n        this.storageService.save(ConstantsService.lastActiveKey, now);\n\n        // Idle states\n        if (this.isIdle) {\n            this.isIdle = false;\n            this.idleStateChanged();\n        }\n        if (this.idleTimer != null) {\n            window.clearTimeout(this.idleTimer);\n            this.idleTimer = null;\n        }\n        this.idleTimer = window.setTimeout(() => {\n            if (!this.isIdle) {\n                this.isIdle = true;\n                this.idleStateChanged();\n            }\n        }, IdleTimeout);\n    }\n\n    private showToast(msg: any) {\n        const toast: Toast = {\n            type: msg.type,\n            title: msg.title,\n        };\n        if (typeof (msg.text) === 'string') {\n            toast.body = msg.text;\n        } else if (msg.text.length === 1) {\n            toast.body = msg.text[0];\n        } else {\n            let message = '';\n            msg.text.forEach((t: string) =>\n                message += ('<p>' + this.sanitizer.sanitize(SecurityContext.HTML, t) + '</p>'));\n            toast.body = message;\n            toast.bodyOutputType = BodyOutputType.TrustedHtml;\n        }\n        if (msg.options != null) {\n            if (msg.options.trustedHtml === true) {\n                toast.bodyOutputType = BodyOutputType.TrustedHtml;\n            }\n            if (msg.options.timeout != null && msg.options.timeout > 0) {\n                toast.timeout = msg.options.timeout;\n            }\n        }\n        this.toasterService.popAsync(toast);\n    }\n\n    private idleStateChanged() {\n        if (this.isIdle) {\n            this.notificationsService.disconnectFromInactivity();\n        } else {\n            this.notificationsService.reconnectFromActivity();\n        }\n    }\n\n    private async setFullWidth() {\n        const enableFullWidth = await this.storageService.get<boolean>('enableFullWidth');\n        if (enableFullWidth) {\n            document.body.classList.add('full-width');\n        } else {\n            document.body.classList.remove('full-width');\n        }\n    }\n}\n","<toaster-container [toasterconfig]=\"toasterConfig\" aria-live=\"polite\"></toaster-container>\n<router-outlet></router-outlet>\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBlurClick]',\n})\nexport class BlurClickDirective {\n    constructor(private el: ElementRef) {\n    }\n\n    @HostListener('click') onClick() {\n        this.el.nativeElement.blur();\n    }\n}\n","import {\n    Directive,\n    ElementRef,\n    HostListener,\n    OnInit,\n} from '@angular/core';\n\n@Directive({\n    selector: '[appBoxRow]',\n})\nexport class BoxRowDirective implements OnInit {\n    el: HTMLElement = null;\n    formEls: Element[];\n\n    constructor(private elRef: ElementRef) {\n        this.el = elRef.nativeElement;\n    }\n\n    ngOnInit(): void {\n        this.formEls = Array.from(this.el.querySelectorAll('input:not([type=\"hidden\"]), select, textarea'));\n        this.formEls.forEach((formEl) => {\n            formEl.addEventListener('focus', (event: Event) => {\n                this.el.classList.add('active');\n            }, false);\n\n            formEl.addEventListener('blur', (event: Event) => {\n                this.el.classList.remove('active');\n            }, false);\n        });\n    }\n\n    @HostListener('click', ['$event']) onClick(event: Event) {\n        const target = event.target as HTMLElement;\n        if (target !== this.el && !target.classList.contains('progress') &&\n            !target.classList.contains('progress-bar')) {\n            return;\n        }\n\n        if (this.formEls.length > 0) {\n            const formEl = (this.formEls[0] as HTMLElement);\n            if (formEl.tagName.toLowerCase() === 'input') {\n                const inputEl = (formEl as HTMLInputElement);\n                if (inputEl.type != null && inputEl.type.toLowerCase() === 'checkbox') {\n                    inputEl.click();\n                    return;\n                }\n            }\n            formEl.focus();\n        }\n    }\n}\n","import {\n    Pipe,\n    PipeTransform,\n} from '@angular/core';\n\nimport { CipherView } from '../../models/view/cipherView';\n\n@Pipe({\n    name: 'searchCiphers',\n})\nexport class SearchCiphersPipe implements PipeTransform {\n    transform(ciphers: CipherView[], searchText: string, deleted: boolean = false): CipherView[] {\n        if (ciphers == null || ciphers.length === 0) {\n            return [];\n        }\n\n        if (searchText == null || searchText.length < 2) {\n            return ciphers.filter((c) => {\n                return deleted !== c.isDeleted;\n            });\n        }\n\n        searchText = searchText.trim().toLowerCase();\n        return ciphers.filter((c) => {\n            if (deleted !== c.isDeleted) {\n                return false;\n            }\n            if (c.name != null && c.name.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (searchText.length >= 8 && c.id.startsWith(searchText)) {\n                return true;\n            }\n            if (c.subTitle != null && c.subTitle.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n            if (c.login && c.login.uri != null && c.login.uri.toLowerCase().indexOf(searchText) > -1) {\n                return true;\n            }\n\n            return false;\n        });\n    }\n}\n"],"sourceRoot":""}